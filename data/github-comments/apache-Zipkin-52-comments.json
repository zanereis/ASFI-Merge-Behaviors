[{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293839155","html_url":"https://github.com/openzipkin/zipkin/issues/1558#issuecomment-293839155","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1558","id":293839155,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzgzOTE1NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T09:27:08Z","updated_at":"2017-04-13T09:27:08Z","author_association":"MEMBER","body":"good question. honestly porting this code taught me a lot.\n\nSo discounted average is in play to give preference to certain types of\nnumbers.\n\nfor example, if your rate is 10000 spans/second and then you get an\naccidental reading of zero spans/second (because a machine malfunctioned\nbriefly), if would skew an average quite a bit.\n\nThe default used adjusts for this, which you can see in play in the unit\ntests. For example, small numbers don't impact the discounted average like\nthey would a normal average. This helps make the adaptive part less fickle,\nas it doesn't change the rate as wildly when things happen such as server\nrestarts.\n\n@Test public void discountedAverage() {\n  assertThat(SampleRateCalculator.discountedAverage(asList(10, 5, 0), 1.0f))\n      .isEqualTo(5); // normal average\n\n  assertThat(SampleRateCalculator.discountedAverage(asList(10, 5, 0), 0.09f))\n      .isEqualTo(9); // smaller discount rate prefers larger numbers\n\n  assertThat(SampleRateCalculator.discountedAverage(asList(1000, 5, 0), 0.09f))\n      .isEqualTo(911);\n}\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293839155/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293841741","html_url":"https://github.com/openzipkin/zipkin/pull/1560#issuecomment-293841741","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1560","id":293841741,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Mzg0MTc0MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T09:38:41Z","updated_at":"2017-04-13T09:38:41Z","author_association":"MEMBER","body":"I think the best way to backport is to sneak hidden feature into zipkin-dependencies (as it is already a spark job and can do everything)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293841741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293907274","html_url":"https://github.com/openzipkin/zipkin/pull/1562#issuecomment-293907274","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1562","id":293907274,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkwNzI3NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T14:13:28Z","updated_at":"2017-04-13T14:13:28Z","author_association":"MEMBER","body":"cc @openzipkin/elasticsearch @jcarres-mdsol ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293907274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293925272","html_url":"https://github.com/openzipkin/zipkin/pull/1555#issuecomment-293925272","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1555","id":293925272,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkyNTI3Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T15:15:26Z","updated_at":"2017-04-13T15:15:26Z","author_association":"MEMBER","body":"on my honor, I will add backfill a test later :)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293925272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930227","html_url":"https://github.com/openzipkin/zipkin/pull/1560#issuecomment-293930227","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1560","id":293930227,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkzMDIyNw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T15:32:22Z","updated_at":"2017-04-13T15:32:22Z","author_association":"MEMBER","body":"If someone wants to migrate old data, they'd need to do the following.\r\n\r\nFor each span in an index (ex zipkin-2017-02-14/span)\r\nIf span.name isn't empty, create a document like this for each service name in span.annotations[].endpoint.serviceName, span.binaryAnnotations[].endpoint.serviceName, \r\n\r\nid = myServiceName|mySpanName\r\n{ \"serviceName\":\"myServiceName\",  \"spanName\":\"mySpanName\", \r\n\r\nsave the unique set of documents to the \"servicespan\" type  in the same index (ex zipkin-2017-02-14/servicespan)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930394","html_url":"https://github.com/openzipkin/zipkin/pull/1560#issuecomment-293930394","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1560","id":293930394,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkzMDM5NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T15:32:58Z","updated_at":"2017-04-13T15:32:58Z","author_association":"MEMBER","body":"depends on #1562","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930620","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-293930620","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":293930620,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkzMDYyMA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-13T15:33:43Z","updated_at":"2017-04-13T15:33:43Z","author_association":"MEMBER","body":"If I can get a shipit or change requests on #1562 and #1560, I will release the newly optimized stuff tomorrow.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/293930620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294063446","html_url":"https://github.com/openzipkin/zipkin/issues/1558#issuecomment-294063446","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1558","id":294063446,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDA2MzQ0Ng==","user":{"login":"yzfshuijing","id":20573092,"node_id":"MDQ6VXNlcjIwNTczMDky","avatar_url":"https://avatars.githubusercontent.com/u/20573092?v=4","gravatar_id":"","url":"https://api.github.com/users/yzfshuijing","html_url":"https://github.com/yzfshuijing","followers_url":"https://api.github.com/users/yzfshuijing/followers","following_url":"https://api.github.com/users/yzfshuijing/following{/other_user}","gists_url":"https://api.github.com/users/yzfshuijing/gists{/gist_id}","starred_url":"https://api.github.com/users/yzfshuijing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzfshuijing/subscriptions","organizations_url":"https://api.github.com/users/yzfshuijing/orgs","repos_url":"https://api.github.com/users/yzfshuijing/repos","events_url":"https://api.github.com/users/yzfshuijing/events{/privacy}","received_events_url":"https://api.github.com/users/yzfshuijing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T01:33:07Z","updated_at":"2017-04-14T01:33:07Z","author_association":"NONE","body":"@adriancole \r\noh, i got it , it's a good way to solve the problem you mentioned above \r\nthanks for your help again!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294063446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294092434","html_url":"https://github.com/openzipkin/zipkin/pull/1560#issuecomment-294092434","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1560","id":294092434,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDA5MjQzNA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T05:22:20Z","updated_at":"2017-04-14T05:22:20Z","author_association":"MEMBER","body":"fixed a very silly test setup bug which consumed a lot of my last night.. will be ready to go on green\r\n\r\nPS ignoring circleci because it thinks the date is different than it is (a routine problem unrelated to this code)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294092434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294128925","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-294128925","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":294128925,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDEyODkyNQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T10:00:32Z","updated_at":"2017-04-14T10:22:23Z","author_association":"MEMBER","body":"@semyonslepov @tramchamploo @mansu @devinsba @jcarres-mdsol can any of you try zipkin 1.23? I'd like to get someone to use it in real life before propagating to other projects.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294128925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294132056","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-294132056","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":294132056,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDEzMjA1Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T10:24:14Z","updated_at":"2017-04-14T10:24:14Z","author_association":"MEMBER","body":"if any of you do get a chance, along with response time on /api/v1/services and /api/v1/spans please also report back any differences in storage usage, too. A lot of mapping options are now turned off, so it should be less though I don't know what percentage real life usage will end up as.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294132056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294154942","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-294154942","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":294154942,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDE1NDk0Mg==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T13:38:18Z","updated_at":"2017-04-14T14:20:04Z","author_association":"MEMBER","body":"I'll need to update the zipkin-aws image to be based off this in order for me to try it, gonna do a local build some time today","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294154942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294156867","html_url":"https://github.com/openzipkin/zipkin/pull/1537#issuecomment-294156867","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1537","id":294156867,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDE1Njg2Nw==","user":{"login":"Coalla","id":2087862,"node_id":"MDQ6VXNlcjIwODc4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/2087862?v=4","gravatar_id":"","url":"https://api.github.com/users/Coalla","html_url":"https://github.com/Coalla","followers_url":"https://api.github.com/users/Coalla/followers","following_url":"https://api.github.com/users/Coalla/following{/other_user}","gists_url":"https://api.github.com/users/Coalla/gists{/gist_id}","starred_url":"https://api.github.com/users/Coalla/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Coalla/subscriptions","organizations_url":"https://api.github.com/users/Coalla/orgs","repos_url":"https://api.github.com/users/Coalla/repos","events_url":"https://api.github.com/users/Coalla/events{/privacy}","received_events_url":"https://api.github.com/users/Coalla/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-14T13:50:48Z","updated_at":"2017-04-14T13:50:48Z","author_association":"NONE","body":"When do you suppose to merge this?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294156867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267165","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294267165","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294267165,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2NzE2NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T02:42:17Z","updated_at":"2017-06-29T14:52:22Z","author_association":"MEMBER","body":"Eventhough 5k sounds like a lot. This is deduping client side right? In\r\nyour site what is the amount of names returned vs unique?\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267434","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294267434","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294267434,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2NzQzNA==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T02:48:59Z","updated_at":"2017-04-15T02:48:59Z","author_association":"MEMBER","body":"The case where we hit this the most was on `getSpansByTraceIds`.  If we put a high number, sometimes even 1000, in the UI trace limit field it can trigger the error.  For other read paths such as `getSpanNames` we didn't hit this error.  Even though we didn't encounter this in other read paths, the pattern seemed easy enough to generalize that it could be applied to all areas and not just `getSpansByTraceIds`. ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267565","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294267565","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294267565,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2NzU2NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T02:52:30Z","updated_at":"2017-04-15T02:52:30Z","author_association":"MEMBER","body":">\n> The case where we hit this the most was on getSpansByTraceIds. If we put\n> a high number, sometimes even 1000, in the UI trace limit field it can\n> trigger the error. For other read paths such as getSpanNames we didn't\n> hit this error. Even though we didn't encounter this in other read paths,\n> the pattern seemed easy enough to generalize that it could be applied to\n> all areas and not just getSpansByTraceIds.\n>\nah thx for the insight. so basically we should be able to find some command\nthat creates this error, even if it is a sneaky test setup.\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294267565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268003","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294268003","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294268003,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2ODAwMw==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T03:02:27Z","updated_at":"2017-04-15T03:02:27Z","author_association":"MEMBER","body":"Testing this locally I was able to trigger it by increasing the trace count here: https://github.com/openzipkin/zipkin/blob/master/zipkin-storage/cassandra3/src/test/java/zipkin/storage/cassandra3/CassandraSpanStoreTest.java#L71\r\n\r\nI was hesitant to break 5000 traces just for the test.  Ideally we could set the default fetch size on the driver to a lower value and it will trigger this error as well.  Setting the fetch size for the tests will take some work though and possibly some changes to the Cassandra3Storage builder.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268316","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294268316","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294268316,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2ODMxNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T03:09:46Z","updated_at":"2017-04-15T03:09:46Z","author_association":"MEMBER","body":"Mind trying maybe with TestObjects.LOTS_OF_SPANS sliced at 5001\n(instead of the old code that replicates LOTS_OF_SPANS)? If it doesn't\ndramatically increase the test duration, should be fine.\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268594","html_url":"https://github.com/openzipkin/zipkin/pull/1564#issuecomment-294268594","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1564","id":294268594,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI2ODU5NA==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T03:16:15Z","updated_at":"2017-04-15T03:16:15Z","author_association":"MEMBER","body":"Sure i will try increasing that tomorrow.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294268594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294279459","html_url":"https://github.com/openzipkin/zipkin/pull/1537#issuecomment-294279459","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1537","id":294279459,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI3OTQ1OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T08:15:11Z","updated_at":"2017-04-15T08:15:11Z","author_association":"MEMBER","body":"I dont think anything has progressed. It is important we dont add\nspeculative features. For example, none of the open source zipkin reporters\nwould work out of the box as they dont expect to authenticate.\n\nBesides comments above and others made in the past, we need to make sure\nthis isnt a \"tease feature\" (looks neat but no one in the ecosystem\nsupports it)\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294279459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294283655","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-294283655","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":294283655,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDI4MzY1NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-15T09:56:59Z","updated_at":"2017-04-15T09:56:59Z","author_association":"MEMBER","body":"@devinsba try 0.2.2 :)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294283655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330344","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294330344","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294330344,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMDM0NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T02:56:17Z","updated_at":"2017-06-29T14:52:52Z","author_association":"MEMBER","body":"If this turns out to work without dogging the test time, lets comment on\r\n6000 that it intends to trigger pagination\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330471","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294330471","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294330471,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMDQ3MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T03:00:32Z","updated_at":"2017-06-29T14:53:00Z","author_association":"MEMBER","body":"Ps might end up wanting to chop this into slices ex maybe 100 accept\r\ncommands with 60 spans each (guessing at cardinality that is best). This\r\nimplies mild join on async work, but could considerably speed up test\r\nexecution.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330725","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294330725","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294330725,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMDcyNQ==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T03:09:30Z","updated_at":"2017-04-16T03:09:30Z","author_association":"MEMBER","body":"Was hoping that this would have triggered it.  Setting the fetch size to something lower immediately triggers it so I'm a bit puzzled why this didn't.\r\n\r\nI'm going to close this for now until I can trigger this in a local test.  Then I will tackle the accept async join bit.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294330725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332050","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294332050","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294332050,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMjA1MA==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T03:56:17Z","updated_at":"2017-04-16T03:56:17Z","author_association":"MEMBER","body":"Locally I've been able to trigger this error with as few as 2000 traces.  After some investigation I see that the Cassandra tests are skipped in the Travis PR builds which is why this PR didn't fail.\r\n\r\nAlso doubling the trace count didn't have a noticeable impact on test time so I'm wondering if its worth the effort to fan out the accept calls.  I can still add that if it seems valuable though.\r\n\r\nRight now I'm not sure how to trigger the failure in a pull request without merging it which will surely break the build :)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332765","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294332765","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294332765,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMjc2NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T04:21:19Z","updated_at":"2017-04-16T04:21:19Z","author_association":"MEMBER","body":"reopened as circleci was turned off for forks!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332798","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294332798","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294332798,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMjc5OA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T04:22:39Z","updated_at":"2017-04-16T04:22:39Z","author_association":"MEMBER","body":"so my advice would be to use the least amount to trip the test (document the count).\r\n\r\nThen, you can cherry-pick this commit into the one that fixes it (essentially this broken test doesn't merge until there's a fix)\r\n\r\nsg?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294332798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294333029","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294333029","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294333029,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMzAyOQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T04:30:49Z","updated_at":"2017-04-16T04:30:49Z","author_association":"MEMBER","body":"uh-oh.. passed circleci!!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294333029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294333134","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294333134","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294333134,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDMzMzEzNA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T04:33:44Z","updated_at":"2017-04-16T04:33:44Z","author_association":"MEMBER","body":"circle is running c* 3.10 iirc.. wonder if is version-specific, the\nparameter?\n\nOn Sun, Apr 16, 2017 at 11:56 AM, Lance Linder <notifications@github.com>\nwrote:\n\n> Locally I've been able to trigger this error with as few as 2000 traces.\n> After some investigation I see that the Cassandra tests are skipped in the\n> Travis PR builds which is why this PR didn't fail.\n>\n> Also doubling the trace count didn't have a noticeable impact on test time\n> so I'm wondering if its worth the effort to fan out the accept calls. I can\n> still add that if it seems valuable though.\n>\n> Right now I'm not sure how to trigger the failure in a pull request\n> without merging it which will surely break the build :)\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294332050>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD616gGXSMDLyn22XDku-bqzFws-Yx5ks5rwZFigaJpZM4M-hOf>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294333134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294376351","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294376351","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294376351,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDM3NjM1MQ==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-16T21:49:09Z","updated_at":"2017-04-16T21:50:51Z","author_association":"MEMBER","body":"Looks like CircleCI is skipping the C* tests as well.  My suspicion is that C* is failing to fully start.  When I get a chance I will SSH into the build machine and look at the logs.\r\n\r\n```\r\nRunning zipkin.storage.cassandra3.CassandraSpanStoreTest\r\n21:10:37.900 [main] INFO  c.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.\r\n21:10:37.952 [main] INFO  com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.\r\nTests run: 41, Failures: 0, Errors: 0, Skipped: 41, Time elapsed: 3.571 sec\r\n\r\nResults :\r\n\r\nTests run: 60, Failures: 0, Errors: 0, Skipped: 41\r\n```","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294376351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294385581","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294385581","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294385581,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDM4NTU4MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-17T01:11:59Z","updated_at":"2017-04-17T01:11:59Z","author_association":"MEMBER","body":"Thx for the tip. Makes sense\n\nOn 17 Apr 2017 05:49, \"Lance Linder\" <notifications@github.com> wrote:\n\n> Looks like CircleCI is skipping the C* tests as well. My suspicion is that\n> C* is failing to fully start. When I get a chance I will SSH into the build\n> machine and look at the logs.\n>\n> 21:10:37.900 [main] INFO  c.datastax.driver.core.ClockFactory - Using native clock to generate timestamps.\n> 21:10:37.952 [main] INFO  com.datastax.driver.core.NettyUtil - Did not find Netty's native epoll transport in the classpath, defaulting to NIO.\n> Tests run: 41, Failures: 0, Errors: 0, Skipped: 41, Time elapsed: 3.571 sec\n>\n> Results :\n>\n> Tests run: 60, Failures: 0, Errors: 0, Skipped: 41```\n>\n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294376351>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD61wb4Ol8HpNaWKMt4OZ1EfxYxmKxWks5rwozWgaJpZM4M-hOf>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294385581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294391072","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294391072","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294391072,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDM5MTA3Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-17T02:16:52Z","updated_at":"2017-04-17T02:16:52Z","author_association":"MEMBER","body":"trying this after noticing the process crash locally\n\nhttps://circleci.com/gh/openzipkin/zipkin/761\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294391072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294413281","html_url":"https://github.com/openzipkin/zipkin/pull/1565#issuecomment-294413281","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1565","id":294413281,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDQxMzI4MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-17T06:14:15Z","updated_at":"2017-04-17T06:14:15Z","author_association":"MEMBER","body":"ok I think this failure is legit. we probably need to dockerize\ncassandra tests and quit trying to run them in circleci (because\ncircle starts cassandra even if it is never used and it is really\nfragile)\n\nhttps://circleci.com/gh/openzipkin/zipkin/tree/cassandra-tests\n\nOn Mon, Apr 17, 2017 at 10:16 AM, Adrian Cole <adrian.f.cole@gmail.com> wrote:\n> trying this after noticing the process crash locally\n>\n> https://circleci.com/gh/openzipkin/zipkin/761\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294413281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294485233","html_url":"https://github.com/openzipkin/zipkin/issues/923#issuecomment-294485233","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/923","id":294485233,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDQ4NTIzMw==","user":{"login":"jakerobb","id":8182938,"node_id":"MDQ6VXNlcjgxODI5Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8182938?v=4","gravatar_id":"","url":"https://api.github.com/users/jakerobb","html_url":"https://github.com/jakerobb","followers_url":"https://api.github.com/users/jakerobb/followers","following_url":"https://api.github.com/users/jakerobb/following{/other_user}","gists_url":"https://api.github.com/users/jakerobb/gists{/gist_id}","starred_url":"https://api.github.com/users/jakerobb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakerobb/subscriptions","organizations_url":"https://api.github.com/users/jakerobb/orgs","repos_url":"https://api.github.com/users/jakerobb/repos","events_url":"https://api.github.com/users/jakerobb/events{/privacy}","received_events_url":"https://api.github.com/users/jakerobb/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-17T13:26:56Z","updated_at":"2017-04-17T13:26:56Z","author_association":"NONE","body":"A year later, I'm wondering if you came to a solution here.\r\n\r\nSeems to me that if you have a->haproxy->b, you could instrument haproxy differently. For example,  it could set specialized annotations on the a->b span instead of the standard cs/sr/ss/cr on its own span? Perhaps it could set proxy-receive and proxy-send? I think that would be sufficient to prevent the dependency graph from collapsing down as you've described.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294485233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294633712","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294633712","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294633712,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYzMzcxMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T00:20:14Z","updated_at":"2017-04-18T00:20:14Z","author_association":"MEMBER","body":"Can you anonymize the trace json? (Click json button on it)\nAlso note a screen grab of the ui when search works (or otherwise capture\nthe parameters the UI uses for the /api/v1/traces endpoint)\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294633712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294639070","html_url":"https://github.com/openzipkin/zipkin/issues/923#issuecomment-294639070","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/923","id":294639070,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYzOTA3MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T00:50:52Z","updated_at":"2017-04-18T00:50:52Z","author_association":"MEMBER","body":">\n> A year later, I'm wondering if you came to a solution here.\n>\nsolutions usually aren't a function of time, rather hands available and\ninterest. Ex. elasticsearch hung around until it was implemented w/in a\ncouple weeks. Features need a champion as otherwise they don't get done.\n\n> Seems to me that if you have a->haproxy->b, you could instrument haproxy\n> differently. For example, it could set specialized annotations on the a->b\n> span instead of the standard cs/sr/ss/cr on its own span? Perhaps it could\n> set proxy-receive and proxy-send? I think that would be sufficient to\n> prevent the dependency graph from collapsing down as you've described.\n>\nFirstly, I'm not sure if there is instrumentation for haproxy ... if there\nis, please tell! One approach is for proxies to be pass-through (though\nthat's really lack of approach) One of the more recent proxy-like things\nzipkinized is envoy which uses standard annotations. I think we have to\nassume that intermediaries will be instrumented, and changing their\ninstrumentation to fit the graph wouldn't help.\n\nOTOH, we could consider a code option. By the time the data gets to the UI\nor the api, it is too late I think. However, a dependency link job could\ncreating skip links based on a pattern like a service name. This wouldn't\nbe much code, and it doesn't require more data that is already pulled.\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294639070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294647961","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294647961","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294647961,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDY0Nzk2MQ==","user":{"login":"jakubhava","id":4374603,"node_id":"MDQ6VXNlcjQzNzQ2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/4374603?v=4","gravatar_id":"","url":"https://api.github.com/users/jakubhava","html_url":"https://github.com/jakubhava","followers_url":"https://api.github.com/users/jakubhava/followers","following_url":"https://api.github.com/users/jakubhava/following{/other_user}","gists_url":"https://api.github.com/users/jakubhava/gists{/gist_id}","starred_url":"https://api.github.com/users/jakubhava/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakubhava/subscriptions","organizations_url":"https://api.github.com/users/jakubhava/orgs","repos_url":"https://api.github.com/users/jakubhava/repos","events_url":"https://api.github.com/users/jakubhava/events{/privacy}","received_events_url":"https://api.github.com/users/jakubhava/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T01:42:47Z","updated_at":"2017-04-18T07:16:38Z","author_association":"CONTRIBUTOR","body":"Yup, here is the info:\r\n\r\nAfter I click find traces I get redirected here: http://localhost:9411/?serviceName=mrtask&startTs=1492475890038&endTs=1492479490038&minDuration=&limit=10&annotationQuery=&sortOrder=duration-desc\r\n\r\nAnd nothing shows up:\r\n<img width=\"1129\" alt=\"not_showing\" src=\"https://cloud.githubusercontent.com/assets/4374603/25111036/7293a500-239d-11e7-831a-d11a3ca1167d.png\">\r\n\r\nI specify the trace  in the right upper corner:\r\n<img width=\"1135\" alt=\"id\" src=\"https://cloud.githubusercontent.com/assets/4374603/25111040/7d4f5d54-239d-11e7-89f9-4b78ed31d379.png\">\r\n\r\nAnd I can see the trace:\r\n<img width=\"1373\" alt=\"showing\" src=\"https://cloud.githubusercontent.com/assets/4374603/25111048/893fee26-239d-11e7-9818-e1622bd744f8.png\">\r\n\r\nThe JSON is attached bellow: It's kind of long JSON but I didn't want to trim it:\r\n\r\n```json\r\n[\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"055a897f617fafe0\",\r\n    \"name\": \"h2o node0 - complete mrtask computation\",\r\n    \"parentId\": \"0000000000000000\",\r\n    \"timestamp\": 28395517671,\r\n    \"duration\": 28367750927,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395517671,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396146444,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.getResult(MRTask.java:482)\\\",\\\"water.MRTask.getResult(MRTask.java:486)\\\",\\\"water.MRTask.doAll(MRTask.java:390)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"ipPort\",\r\n        \"value\": \"172.18.0.3:54321\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.dfork(MRTask.java:449)\\\",\\\"water.MRTask.doAll(MRTask.java:389)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"44511e69a92b2d87\",\r\n    \"name\": \"h2o node0 - setting and splitting on 172.18.0.3:54321\",\r\n    \"parentId\": \"055a897f617fafe0\",\r\n    \"timestamp\": 28395520597,\r\n    \"duration\": 28367748237,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395520597,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396143757,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"caller\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@28237492\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"left\",\r\n        \"value\": \"local\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:512)\\\",\\\"water.MRTask.dfork(MRTask.java:456)\\\",\\\"water.MRTask.doAll(MRTask.java:389)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"right\",\r\n        \"value\": \"172.18.0.3:54323\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@4ee25d80\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@4ee25d80\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e5ea9cd0df6e7541\",\r\n    \"name\": \"h2o node0 - remote work - none\",\r\n    \"parentId\": \"44511e69a92b2d87\",\r\n    \"timestamp\": 28395521258,\r\n    \"duration\": 28367126411,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395521258,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395521932,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.remote_compute(MRTask.java:574)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:532)\\\",\\\"water.MRTask.dfork(MRTask.java:456)\\\",\\\"water.MRTask.doAll(MRTask.java:389)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.remote_compute(MRTask.java:557)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:532)\\\",\\\"water.MRTask.dfork(MRTask.java:456)\\\",\\\"water.MRTask.doAll(MRTask.java:389)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"2fa0bba490aa1d9a\",\r\n    \"name\": \"h2o node0 - remote work __try_complete called\",\r\n    \"parentId\": \"44511e69a92b2d87\",\r\n    \"timestamp\": 28395525339,\r\n    \"duration\": 28367737635,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395525339,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396133160,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"RPC Called\",\r\n        \"value\": \"28395525694\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.RPC.response(RPC.java:580)\\\",\\\"water.RPC.tcp_ack(RPC.java:553)\\\",\\\"water.TCPReceiverThread$TCPReaderThread.run(TCPReceiverThread.java:154)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"ipPort\",\r\n        \"value\": \"172.18.0.3:54321\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.RPC.call(RPC.java:170)\\\",\\\"water.MRTask.remote_compute(MRTask.java:572)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:534)\\\",\\\"water.MRTask.dfork(MRTask.java:456)\\\",\\\"water.MRTask.doAll(MRTask.java:389)\\\",\\\"water.MRTask.doAll(MRTask.java:385)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.startTask(MainWithTask.java:37)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.MainWithTask.main(MainWithTask.java:28)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54321\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e4687d928abde3da\",\r\n    \"name\": \"h2o node1 - setting and splitting on 172.18.0.3:54323\",\r\n    \"parentId\": \"2fa0bba490aa1d9a\",\r\n    \"timestamp\": 28395698903,\r\n    \"duration\": 28367716763,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395698903,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396112461,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"caller\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@149c3847\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"left\",\r\n        \"value\": \"local\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:512)\\\",\\\"water.MRTask.dinvoke(MRTask.java:501)\\\",\\\"water.RPC$RPCCall.compute2(RPC.java:339)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"right\",\r\n        \"value\": \"172.18.0.3:54325\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6585d43c\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6585d43c\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"5359602db381d625\",\r\n    \"name\": \"h2o node0 - local work - chunks : 2\",\r\n    \"parentId\": \"44511e69a92b2d87\",\r\n    \"timestamp\": 28395708322,\r\n    \"duration\": 28367746345,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395708322,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396142053,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@4ee25d80\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@4ee25d80\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"175014070d69dc9d\",\r\n    \"name\": \"h2o node0 - local work - chunks : 1 - forked\",\r\n    \"parentId\": \"5359602db381d625\",\r\n    \"timestamp\": 28395711679,\r\n    \"duration\": 28367317491,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395711679,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395713202,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@11dc80e8\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@11dc80e8\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e8971372571690b6\",\r\n    \"name\": \"h2o node0 - local work - chunks : 1\",\r\n    \"parentId\": \"5359602db381d625\",\r\n    \"timestamp\": 28395713642,\r\n    \"duration\": 28367328771,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395713642,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395724484,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@71f37fa7\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@71f37fa7\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e51c8c360d9ff4ff\",\r\n    \"name\": \"h2o node0 - mapping  - lasted - 20 ms\",\r\n    \"parentId\": \"e8971372571690b6\",\r\n    \"timestamp\": 28395717596,\r\n    \"duration\": 28367322446,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395717596,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395718163,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask.map(SumMRTask.java:21)\\\",\\\"water.MRTask.compute2(MRTask.java:637)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28395717844\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask.map(SumMRTask.java:18)\\\",\\\"water.MRTask.compute2(MRTask.java:637)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28395717824\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e76400a2dbe91958\",\r\n    \"name\": \"h2o node0 - mapping  - lasted - 28 ms\",\r\n    \"parentId\": \"e8971372571690b6\",\r\n    \"timestamp\": 28395718299,\r\n    \"duration\": 28367325252,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395718299,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395720970,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.map(MRTask.java:270)\\\",\\\"water.MRTask.compute2(MRTask.java:640)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28395718702\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.map(MRTask.java:270)\\\",\\\"water.MRTask.compute2(MRTask.java:640)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28395718674\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"71207960a92e12ed\",\r\n    \"name\": \"h2o node0 - mapping  - lasted - 12 ms\",\r\n    \"parentId\": \"e8971372571690b6\",\r\n    \"timestamp\": 28395721059,\r\n    \"duration\": 28367326336,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395721059,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395722057,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.map(MRTask.java:281)\\\",\\\"water.MRTask.compute2(MRTask.java:657)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28395721364\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.map(MRTask.java:281)\\\",\\\"water.MRTask.compute2(MRTask.java:657)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.popAndExecAll(ForkJoinPool.java:904)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:977)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28395721352\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"f5c6d86b5ca2ac3f\",\r\n    \"name\": \"h2o node1 - remote work - none\",\r\n    \"parentId\": \"e4687d928abde3da\",\r\n    \"timestamp\": 28395798021,\r\n    \"duration\": 28367405872,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395798021,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28395801670,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.remote_compute(MRTask.java:574)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:532)\\\",\\\"water.MRTask.dinvoke(MRTask.java:501)\\\",\\\"water.RPC$RPCCall.compute2(RPC.java:339)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.remote_compute(MRTask.java:557)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:532)\\\",\\\"water.MRTask.dinvoke(MRTask.java:501)\\\",\\\"water.RPC$RPCCall.compute2(RPC.java:339)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"7a19122b57219e12\",\r\n    \"name\": \"h2o node1 - remote work __try_complete called\",\r\n    \"parentId\": \"e4687d928abde3da\",\r\n    \"timestamp\": 28395816124,\r\n    \"duration\": 28367672931,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395816124,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396068747,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"RPC Called\",\r\n        \"value\": \"28395816514\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.RPC.response(RPC.java:580)\\\",\\\"water.RPC.tcp_ack(RPC.java:553)\\\",\\\"water.TCPReceiverThread$TCPReaderThread.run(TCPReceiverThread.java:154)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"ipPort\",\r\n        \"value\": \"172.18.0.3:54323\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.RPC.call(RPC.java:170)\\\",\\\"water.MRTask.remote_compute(MRTask.java:572)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:534)\\\",\\\"water.MRTask.dinvoke(MRTask.java:501)\\\",\\\"water.RPC$RPCCall.compute2(RPC.java:339)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\",\r\n          \"ipv4\": \"172.18.0.3\",\r\n          \"port\": 54323\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"f7727a878e2f6484\",\r\n    \"name\": \"h2o node2 - setting and splitting on 172.18.0.3:54325\",\r\n    \"parentId\": \"7a19122b57219e12\",\r\n    \"timestamp\": 28395965735,\r\n    \"duration\": 28367660202,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28395965735,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396056167,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"caller\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6534f4ed\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"left\",\r\n        \"value\": \"local\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.setupLocal0(MRTask.java:512)\\\",\\\"water.MRTask.dinvoke(MRTask.java:501)\\\",\\\"water.RPC$RPCCall.compute2(RPC.java:339)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"right\",\r\n        \"value\": \"local\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@361a5488\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"setupLocal0 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@361a5488\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"a31eb1cda495105d\",\r\n    \"name\": \"h2o node1 - local work - chunks : 2\",\r\n    \"parentId\": \"e4687d928abde3da\",\r\n    \"timestamp\": 28396014211,\r\n    \"duration\": 28367715689,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396014211,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396111703,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6585d43c\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6585d43c\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"e645ed2e5de43a4a\",\r\n    \"name\": \"h2o node1 - local work - chunks : 1 - forked\",\r\n    \"parentId\": \"a31eb1cda495105d\",\r\n    \"timestamp\": 28396016066,\r\n    \"duration\": 28367691343,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396016066,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396087359,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@149c3847\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@149c3847\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"7db8c43c6a8eb23c\",\r\n    \"name\": \"h2o node1 - local work - chunks : 1\",\r\n    \"parentId\": \"a31eb1cda495105d\",\r\n    \"timestamp\": 28396016351,\r\n    \"duration\": 28367622487,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396016351,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396018503,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@13a96ef2\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@13a96ef2\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"b095584de5a7741d\",\r\n    \"name\": \"h2o node2 - local work - chunks : 2\",\r\n    \"parentId\": \"f7727a878e2f6484\",\r\n    \"timestamp\": 28396028695,\r\n    \"duration\": 28367655524,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396028695,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396051552,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@361a5488\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@361a5488\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"9477295d6007b9aa\",\r\n    \"name\": \"h2o node2 - local work - chunks : 1 - forked\",\r\n    \"parentId\": \"b095584de5a7741d\",\r\n    \"timestamp\": 28396033123,\r\n    \"duration\": 28367640210,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396033123,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396036243,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6534f4ed\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@6534f4ed\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"ed30495099649f5c\",\r\n    \"name\": \"h2o node2 - local work - chunks : 1\",\r\n    \"parentId\": \"b095584de5a7741d\",\r\n    \"timestamp\": 28396033372,\r\n    \"duration\": 28367638873,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396033372,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396034906,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.onCompletion(MRTask.java:685)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 entry\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@423307ee\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"compute2 exit\",\r\n        \"value\": \"cz.cuni.mff.d3s.distrace.examples.SumMRTask@423307ee\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.compute2(MRTask.java:581)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"d725d1a213e10654\",\r\n    \"name\": \"h2o node2 - reducing left - lasted - 26 ms\",\r\n    \"parentId\": \"b095584de5a7741d\",\r\n    \"timestamp\": 28396045179,\r\n    \"duration\": 28367649720,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396045179,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396045765,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396045467\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396045441\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"c5fb751680ca922a\",\r\n    \"name\": \"h2o node2 - reducing right - lasted - 13 ms\",\r\n    \"parentId\": \"b095584de5a7741d\",\r\n    \"timestamp\": 28396045835,\r\n    \"duration\": 28367650263,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396045835,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396046308,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396046086\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396046073\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"b405d81a19cef4d9\",\r\n    \"name\": \"h2o node1 - mapping  - lasted - 22 ms\",\r\n    \"parentId\": \"e645ed2e5de43a4a\",\r\n    \"timestamp\": 28396075030,\r\n    \"duration\": 28367679332,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396075030,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396075407,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask.map(SumMRTask.java:21)\\\",\\\"water.MRTask.compute2(MRTask.java:637)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396075248\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask.map(SumMRTask.java:18)\\\",\\\"water.MRTask.compute2(MRTask.java:637)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396075226\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"48815e71f91b5b3f\",\r\n    \"name\": \"h2o node1 - mapping  - lasted - 10 ms\",\r\n    \"parentId\": \"e645ed2e5de43a4a\",\r\n    \"timestamp\": 28396075472,\r\n    \"duration\": 28367679700,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396075472,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396075775,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.map(MRTask.java:270)\\\",\\\"water.MRTask.compute2(MRTask.java:640)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396075624\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.map(MRTask.java:270)\\\",\\\"water.MRTask.compute2(MRTask.java:640)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396075614\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"9187c7d1a55a3986\",\r\n    \"name\": \"h2o node1 - mapping  - lasted - 7 ms\",\r\n    \"parentId\": \"e645ed2e5de43a4a\",\r\n    \"timestamp\": 28396076143,\r\n    \"duration\": 28367680403,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396076143,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396076479,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.map(MRTask.java:281)\\\",\\\"water.MRTask.compute2(MRTask.java:657)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396076305\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.map(MRTask.java:281)\\\",\\\"water.MRTask.compute2(MRTask.java:657)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396076298\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"313d784e53242df7\",\r\n    \"name\": \"h2o node1 - reducing left - lasted - 21 ms\",\r\n    \"parentId\": \"a31eb1cda495105d\",\r\n    \"timestamp\": 28396087462,\r\n    \"duration\": 28367704183,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396087462,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396100270,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396089118\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396089097\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"4df95ff49a9b6bb7\",\r\n    \"name\": \"h2o node1 - reducing right - lasted - 8 ms\",\r\n    \"parentId\": \"a31eb1cda495105d\",\r\n    \"timestamp\": 28396100342,\r\n    \"duration\": 28367714929,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396100342,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396111029,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396100527\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"jsr166y.CountedCompleter.tryComplete(CountedCompleter.java:383)\\\",\\\"water.MRTask.compute2(MRTask.java:669)\\\",\\\"water.MRTask.compute2(MRTask.java:591)\\\",\\\"water.H2O$H2OCountedCompleter.compute1(H2O.java:1196)\\\",\\\"cz.cuni.mff.d3s.distrace.examples.SumMRTask$Icer.compute1(SumMRTask$Icer.java)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1192)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396100519\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"68497e717e20c47e\",\r\n    \"name\": \"h2o node0 - reducing left - lasted - 12 ms\",\r\n    \"parentId\": \"5359602db381d625\",\r\n    \"timestamp\": 28396136921,\r\n    \"duration\": 28367741275,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396136921,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396137411,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396137177\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:679)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396137165\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"traceId\": \"92ef04f906050035001c0242ac120003\",\r\n    \"id\": \"fdaf05d88b117b9d\",\r\n    \"name\": \"h2o node0 - reducing right - lasted - 19 ms\",\r\n    \"parentId\": \"5359602db381d625\",\r\n    \"timestamp\": 28396138074,\r\n    \"duration\": 28367742407,\r\n    \"annotations\": [\r\n      {\r\n        \"timestamp\": 28396138074,\r\n        \"value\": \"cs\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"timestamp\": 28396138545,\r\n        \"value\": \"cr\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ],\r\n    \"binaryAnnotations\": [\r\n      {\r\n        \"key\": \"closing stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.closeCurrentSpan(TraceContext.java:69)\\\",\\\"water.MRTask.reduce2(MRTask.java:698)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"end\",\r\n        \"value\": \"28396138273\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"opening stacktrace\",\r\n        \"value\": \"[\\\"cz.cuni.mff.d3s.distrace.tracing.TraceContext.openNestedSpan(TraceContext.java:58)\\\",\\\"water.MRTask.reduce2(MRTask.java:691)\\\",\\\"water.MRTask.onCompletion(MRTask.java:680)\\\",\\\"jsr166y.CountedCompleter.__tryComplete(CountedCompleter.java:425)\\\",\\\"water.RPC$2.compute2(RPC.java:623)\\\",\\\"water.H2O$H2OCountedCompleter.compute(H2O.java:1193)\\\",\\\"jsr166y.CountedCompleter.exec(CountedCompleter.java:468)\\\",\\\"jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)\\\",\\\"jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)\\\",\\\"jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)\\\",\\\"jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)\\\"]\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      },\r\n      {\r\n        \"key\": \"start\",\r\n        \"value\": \"28396138254\",\r\n        \"endpoint\": {\r\n          \"serviceName\": \"mrtask\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n```","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294647961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294648419","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294648419","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294648419,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDY0ODQxOQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T01:46:03Z","updated_at":"2017-04-18T01:46:03Z","author_association":"MEMBER","body":"lol mrtask huh?\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294648419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294648735","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294648735","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294648735,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDY0ODczNQ==","user":{"login":"jakubhava","id":4374603,"node_id":"MDQ6VXNlcjQzNzQ2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/4374603?v=4","gravatar_id":"","url":"https://api.github.com/users/jakubhava","html_url":"https://github.com/jakubhava","followers_url":"https://api.github.com/users/jakubhava/followers","following_url":"https://api.github.com/users/jakubhava/following{/other_user}","gists_url":"https://api.github.com/users/jakubhava/gists{/gist_id}","starred_url":"https://api.github.com/users/jakubhava/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakubhava/subscriptions","organizations_url":"https://api.github.com/users/jakubhava/orgs","repos_url":"https://api.github.com/users/jakubhava/repos","events_url":"https://api.github.com/users/jakubhava/events{/privacy}","received_events_url":"https://api.github.com/users/jakubhava/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T01:48:09Z","updated_at":"2017-04-18T01:53:07Z","author_association":"CONTRIBUTOR","body":"Yup - I've written a cluster instrumentation & monitoring tool ( like Zipkin, but smaller and with different goals) for my thesis and I'm creating example based on instrumenting H2O's ( https://github.com/h2oai/h2o-3 ) map reduce tasks.\r\n\r\nAnd I'm using Zipkin  as user interface. Pretty cool stuff! Let me know if there's something I can do on my side to help debugging","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294648735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294651069","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294651069","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294651069,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDY1MTA2OQ==","user":{"login":"jakubhava","id":4374603,"node_id":"MDQ6VXNlcjQzNzQ2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/4374603?v=4","gravatar_id":"","url":"https://api.github.com/users/jakubhava","html_url":"https://github.com/jakubhava","followers_url":"https://api.github.com/users/jakubhava/followers","following_url":"https://api.github.com/users/jakubhava/following{/other_user}","gists_url":"https://api.github.com/users/jakubhava/gists{/gist_id}","starred_url":"https://api.github.com/users/jakubhava/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakubhava/subscriptions","organizations_url":"https://api.github.com/users/jakubhava/orgs","repos_url":"https://api.github.com/users/jakubhava/repos","events_url":"https://api.github.com/users/jakubhava/events{/privacy}","received_events_url":"https://api.github.com/users/jakubhava/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T02:04:56Z","updated_at":"2017-04-18T02:09:00Z","author_association":"CONTRIBUTOR","body":"Oh, I also didn't mention this -> I'm using zipkin docker with tag `latest` which should be `1.23` as of today","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294651069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294651482","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294651482","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294651482,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDY1MTQ4Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T02:08:08Z","updated_at":"2017-04-18T02:08:08Z","author_association":"MEMBER","body":"thx will look into this today\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294651482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294713064","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294713064","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294713064,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDcxMzA2NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T07:29:29Z","updated_at":"2017-04-18T07:29:29Z","author_association":"MEMBER","body":"first thing I noticed is the duration is invalid. 28367750927 is being stored as the duration (which is microsecond), which would be almost 8 hours. \r\n\r\nnext, the timestamps are odd ex. 28395517671 which isn't a valid epoch microsecond.\r\n\r\n28395517671 <- your data\r\n1492500435180000 <- current epoch microseconds\r\n\r\nSo, I'd look at the time and duration code, first. That will probably solve the search thing. There are tips here: http://zipkin.io/pages/instrumenting.html Alternatively, you could consider basing your custom instrumentation on brave's api instead, which handles timestamps etc https://github.com/openzipkin/brave/tree/master/brave","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294713064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294858541","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-294858541","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":294858541,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDg1ODU0MQ==","user":{"login":"semyonslepov","id":27204211,"node_id":"MDQ6VXNlcjI3MjA0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/27204211?v=4","gravatar_id":"","url":"https://api.github.com/users/semyonslepov","html_url":"https://github.com/semyonslepov","followers_url":"https://api.github.com/users/semyonslepov/followers","following_url":"https://api.github.com/users/semyonslepov/following{/other_user}","gists_url":"https://api.github.com/users/semyonslepov/gists{/gist_id}","starred_url":"https://api.github.com/users/semyonslepov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semyonslepov/subscriptions","organizations_url":"https://api.github.com/users/semyonslepov/orgs","repos_url":"https://api.github.com/users/semyonslepov/repos","events_url":"https://api.github.com/users/semyonslepov/events{/privacy}","received_events_url":"https://api.github.com/users/semyonslepov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T14:16:15Z","updated_at":"2017-04-18T14:16:47Z","author_association":"NONE","body":"There are some result from my tests:\r\n\r\n/api/v1/services (1 RPS):\r\n\r\nTest 1, ~1000000 documents in index, ~250 service names with 1 span name for each:\r\nzipkin 1.21.0:\r\n 98% - 200 ms\r\n 50% - 150 ms\r\n\r\nzipkin 1.23.0:\r\n 98% - 50 ms\r\n 50% - 20 ms\r\n\r\nTest 2, ~1500000 in index, ~450 service names with 1 span name for each:\r\n\r\nzipkin 1.21.0:\r\n 98% - 250 ms\r\n 50% - 200 ms\r\n\r\nzipkin 1.23.0: (same as Test 1)\r\n  98% - 50 ms\r\n  50% - 20 ms\r\n\r\nWhen data amount increases, this difference becomes more.\r\n\r\n/api/v1/spans (10 RPS):\r\n\r\n(one test, something about ~5000000 documents in index, ~250 service names, 1-2 span names for each service)\r\n\r\nzipkin 1.21.0:\r\n 98% - 150 ms\r\n 50% - 50 ms\r\n\r\nzipkin 1.23.0:\r\n 98% - 50 ms\r\n 50% - 20 ms\r\n\r\nI saw no significant difference in storage usage for these types of requests with my test conditions. \r\nBut there is significant change of CPU usage on Zipkin-hosts: I made two tests with writing 300 spans per second on free-tier AWS t2.micro instance and got ~25% CPU load with 1.21.0, with 1.23.0 at some point (after 3-4 minutes from test beginning) it was 100% with request dropping (ok, it's not correct enough - I set 10s timeout for requests, so my test-tool didn't get any answers after 10s).","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294858541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294891068","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-294891068","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":294891068,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NDg5MTA2OA==","user":{"login":"jakubhava","id":4374603,"node_id":"MDQ6VXNlcjQzNzQ2MDM=","avatar_url":"https://avatars.githubusercontent.com/u/4374603?v=4","gravatar_id":"","url":"https://api.github.com/users/jakubhava","html_url":"https://github.com/jakubhava","followers_url":"https://api.github.com/users/jakubhava/followers","following_url":"https://api.github.com/users/jakubhava/following{/other_user}","gists_url":"https://api.github.com/users/jakubhava/gists{/gist_id}","starred_url":"https://api.github.com/users/jakubhava/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakubhava/subscriptions","organizations_url":"https://api.github.com/users/jakubhava/orgs","repos_url":"https://api.github.com/users/jakubhava/repos","events_url":"https://api.github.com/users/jakubhava/events{/privacy}","received_events_url":"https://api.github.com/users/jakubhava/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-18T15:58:36Z","updated_at":"2017-04-18T15:58:36Z","author_association":"CONTRIBUTOR","body":"awesome, that worked!! I did a silly mistake and was using `System.nanoMsg()/1000` to get the timing information\r\n\r\nThanks for good catch and really appreciate your time!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/294891068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295044289","html_url":"https://github.com/openzipkin/zipkin/issues/1567#issuecomment-295044289","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1567","id":295044289,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTA0NDI4OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T02:27:17Z","updated_at":"2017-04-19T02:27:17Z","author_association":"MEMBER","body":"troubleshooting is a bit easier on gitter https://gitter.im/openzipkin/zipkin\r\n\r\nthat said, it is interesting this pattern only exists in mysql so far (you could also try aws elasticsearch, but still we should figure out what's up).\r\n\r\ntry setting `SELF_TRACING_ENABLED=true` and see if zipkin traces make it even if yours don't? This might help narrow things down","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295044289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295050097","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-295050097","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":295050097,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTA1MDA5Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T02:56:52Z","updated_at":"2017-04-19T02:56:52Z","author_association":"MEMBER","body":"@semyonslepov thanks for the feedback! fair to say overall better? :)\r\n\r\nyeah I wouldn't expect zipkin CPU to go down based on this change, though I would expect elasticsearch's CPU to go down. zipkin is actually doing slightly more, but if its CPU load when consuming becomes an issue we can probably profile a bit.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295050097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295061142","html_url":"https://github.com/openzipkin/zipkin/issues/1566#issuecomment-295061142","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1566","id":295061142,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTA2MTE0Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T03:31:15Z","updated_at":"2017-04-19T03:31:15Z","author_association":"MEMBER","body":"no worries\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295061142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295087085","html_url":"https://github.com/openzipkin/zipkin/issues/1567#issuecomment-295087085","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1567","id":295087085,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTA4NzA4NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T04:46:43Z","updated_at":"2017-04-19T04:46:43Z","author_association":"MEMBER","body":"here's an example query which might help, too https://github.com/openzipkin/zipkin/pull/1568","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295087085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295101357","html_url":"https://github.com/openzipkin/zipkin/pull/1554#issuecomment-295101357","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1554","id":295101357,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTEwMTM1Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T05:31:54Z","updated_at":"2017-04-19T05:31:54Z","author_association":"MEMBER","body":"@semyonslepov assuming w/current perf we might be able to close this?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295101357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295205595","html_url":"https://github.com/openzipkin/zipkin/issues/1544#issuecomment-295205595","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1544","id":295205595,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTIwNTU5NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T10:23:53Z","updated_at":"2017-04-19T10:23:53Z","author_association":"MEMBER","body":"this should be fixed now.. try latest (currently 1.23.0)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295205595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295324235","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-295324235","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":295324235,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTMyNDIzNQ==","user":{"login":"semyonslepov","id":27204211,"node_id":"MDQ6VXNlcjI3MjA0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/27204211?v=4","gravatar_id":"","url":"https://api.github.com/users/semyonslepov","html_url":"https://github.com/semyonslepov","followers_url":"https://api.github.com/users/semyonslepov/followers","following_url":"https://api.github.com/users/semyonslepov/following{/other_user}","gists_url":"https://api.github.com/users/semyonslepov/gists{/gist_id}","starred_url":"https://api.github.com/users/semyonslepov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semyonslepov/subscriptions","organizations_url":"https://api.github.com/users/semyonslepov/orgs","repos_url":"https://api.github.com/users/semyonslepov/repos","events_url":"https://api.github.com/users/semyonslepov/events{/privacy}","received_events_url":"https://api.github.com/users/semyonslepov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T16:04:11Z","updated_at":"2017-04-19T16:04:11Z","author_association":"NONE","body":"Made some more test today to prove earlier theories.\r\nYes, we can say that service names query is much better (span names query too, but not so significant). And it's awesome!\r\n(ES CPU goes to top on more than 3-4 /api/v1/services queries per second on our setup. Taking into account the fact of existing browser cache for service names, we don't have so many requests from our users to this API handler. But anyway we have to keep it in mind)\r\n\r\nRegarding ES CPU, I don't see that it's going down with 1.23.0 release. Even more, in my tests it's going up on the same workload (sending ~1500 spans per second) (I'm not sure about the cleanness of my tests, maybe there is a noise, but I have done them twice for each release. Will be fine to hear something from another users). On the same ES configuration I saw something about 50-55% load of ES CPU with 1.21.0 release and 70% on 1.23.0 (70% vs 95% on another test).\r\n\r\nActually, Zipkin CPU doesn't increase so fast on more powerful configurations (m3.large instance with 2 CPU cores and 7.5GB RAM) and  as it was in my yesterday tests (t2.micro instance with 1 CPU core and 1GB RAM, today CPUs are slighlty more powerful). So, this difference is not so critical.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295324235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295335223","html_url":"https://github.com/openzipkin/zipkin/pull/1554#issuecomment-295335223","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1554","id":295335223,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTMzNTIyMw==","user":{"login":"semyonslepov","id":27204211,"node_id":"MDQ6VXNlcjI3MjA0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/27204211?v=4","gravatar_id":"","url":"https://api.github.com/users/semyonslepov","html_url":"https://github.com/semyonslepov","followers_url":"https://api.github.com/users/semyonslepov/followers","following_url":"https://api.github.com/users/semyonslepov/following{/other_user}","gists_url":"https://api.github.com/users/semyonslepov/gists{/gist_id}","starred_url":"https://api.github.com/users/semyonslepov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/semyonslepov/subscriptions","organizations_url":"https://api.github.com/users/semyonslepov/orgs","repos_url":"https://api.github.com/users/semyonslepov/repos","events_url":"https://api.github.com/users/semyonslepov/events{/privacy}","received_events_url":"https://api.github.com/users/semyonslepov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T16:34:13Z","updated_at":"2017-04-19T16:34:13Z","author_association":"NONE","body":"So, results of the feature with new indexes are really good at response times. For our current setup and number of users, it's good enough. \r\nBut if there are tens/hundreds of users simultaneously opening Zipkin UI, it will be a disaster (because these requests are very expensive for ES). I wish it won't be the nearest future (:\r\nIf you see this type of machinery ugly for current architecture, we can close this PR now.\r\n\r\nWe will try to live with upstream version anyway (obviously it's much better than keep our local patches and synchronize them on new releases). In the bad case (I don't expect it now, but our setup is very young and we don't really know yet amount of our future users), we'll have to return to these patches or some similar machinery, because it doesn't depend on user count/RPS. (Or maybe there will be another better way to avoid such problems. For example, we thought about trying Cassandra instead of ES, haven't ever used it with Zipkin yet)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295335223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295346936","html_url":"https://github.com/openzipkin/zipkin/issues/1567#issuecomment-295346936","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1567","id":295346936,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTM0NjkzNg==","user":{"login":"strizhov","id":1817285,"node_id":"MDQ6VXNlcjE4MTcyODU=","avatar_url":"https://avatars.githubusercontent.com/u/1817285?v=4","gravatar_id":"","url":"https://api.github.com/users/strizhov","html_url":"https://github.com/strizhov","followers_url":"https://api.github.com/users/strizhov/followers","following_url":"https://api.github.com/users/strizhov/following{/other_user}","gists_url":"https://api.github.com/users/strizhov/gists{/gist_id}","starred_url":"https://api.github.com/users/strizhov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strizhov/subscriptions","organizations_url":"https://api.github.com/users/strizhov/orgs","repos_url":"https://api.github.com/users/strizhov/repos","events_url":"https://api.github.com/users/strizhov/events{/privacy}","received_events_url":"https://api.github.com/users/strizhov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T17:04:29Z","updated_at":"2017-04-19T17:06:03Z","author_association":"NONE","body":"thanks for response. \r\n\r\nI have tried `SELF_TRACING_ENABLED=true` and received internal traces, but UI stopped reporting any new traces after about 20 mins run.\r\n\r\nI also tried sql command from README file (after about 30 min zipkin collector run), but it didn't return anything. \r\n\r\nI am going to try cassandra storage at this point.\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295346936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295377348","html_url":"https://github.com/openzipkin/zipkin/issues/1544#issuecomment-295377348","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1544","id":295377348,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTM3NzM0OA==","user":{"login":"praveenbarli","id":22087406,"node_id":"MDQ6VXNlcjIyMDg3NDA2","avatar_url":"https://avatars.githubusercontent.com/u/22087406?v=4","gravatar_id":"","url":"https://api.github.com/users/praveenbarli","html_url":"https://github.com/praveenbarli","followers_url":"https://api.github.com/users/praveenbarli/followers","following_url":"https://api.github.com/users/praveenbarli/following{/other_user}","gists_url":"https://api.github.com/users/praveenbarli/gists{/gist_id}","starred_url":"https://api.github.com/users/praveenbarli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveenbarli/subscriptions","organizations_url":"https://api.github.com/users/praveenbarli/orgs","repos_url":"https://api.github.com/users/praveenbarli/repos","events_url":"https://api.github.com/users/praveenbarli/events{/privacy}","received_events_url":"https://api.github.com/users/praveenbarli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T18:22:23Z","updated_at":"2017-04-19T18:22:23Z","author_association":"NONE","body":"Thanks Adrian! I’ll pull latest.\r\n\r\nFrom: Adrian Cole [mailto:notifications@github.com]\r\nSent: Wednesday, April 19, 2017 3:24 AM\r\nTo: openzipkin/zipkin <zipkin@noreply.github.com>\r\nCc: Praveen Barli <prbarl@microsoft.com>; Mention <mention@noreply.github.com>\r\nSubject: Re: [openzipkin/zipkin] Span count of same trace is showing differently between Search page and trace details page in UI (#1544)\r\n\r\n\r\nthis should be fixed now.. try latest (currently 1.23.0)\r\n\r\n—\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenzipkin%2Fzipkin%2Fissues%2F1544%23issuecomment-295205595&data=02%7C01%7Cprbarl%40microsoft.com%7C3e47750fb3a342ca9b5a08d4870e338e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636281942450246989&sdata=pgN%2FcJ%2FS%2Ba7z3OplezrSy0wvoU%2Fcvv0FOA%2F4NLSSx8M%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAVEG7u5swmkX4o_m4MWC5gBj92yXTUqQks5rxeDCgaJpZM4MnyVZ&data=02%7C01%7Cprbarl%40microsoft.com%7C3e47750fb3a342ca9b5a08d4870e338e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636281942450256992&sdata=rY98XABtmlWtjW7CglQzGLL74C5BP9GoGnPO94uRqr8%3D&reserved=0>.\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295377348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295420378","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-295420378","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":295420378,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTQyMDM3OA==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-19T20:12:07Z","updated_at":"2017-04-19T20:19:12Z","author_association":"MEMBER","body":"For contrast, at ~800 RPS peak for our ES cluster I am seeing no discernible change in the CPU usage (maybe 1% increase, likely just increased load), our max CPU is only like 15% though because we have more instances than we need. And none on the app either.\r\n\r\nWe are ES 2.3 with 5 m3.large data nodes","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295420378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295509370","html_url":"https://github.com/openzipkin/zipkin/issues/1526#issuecomment-295509370","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1526","id":295509370,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTUwOTM3MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-20T00:27:11Z","updated_at":"2017-04-20T00:27:11Z","author_association":"MEMBER","body":"Ahh.. i think i know what might increase the load on ES. It is probably\nless about finer tuned indexing on spans, rather more about having to index\nservice and span name separately as it wasnt before. If this becomes an\nissue or we just want to sort it out.. we can employ a deduping approach\nused in cassandra. Essentially we dont write the same names twice from the\nsame node (rather than overwriting). If your tests are clean enough (as\nthey seem to be) we could test that deduping brings load back down..\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295509370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295512505","html_url":"https://github.com/openzipkin/zipkin/issues/1567#issuecomment-295512505","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1567","id":295512505,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTUxMjUwNQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-20T00:35:40Z","updated_at":"2017-04-20T00:35:40Z","author_association":"MEMBER","body":"Sorry about timezones making this troubleshooting more difficult. So are\nyou saying that you saw internal traces but not app ones after 30m or that\nyou saw no traces? Seems like none if the sql query returned none. You\ncould check the /metrics endpoint to ensure you are receiving messages.\n\nYep es or c* are better long term anyway although i would like to\nunderstand what you are bumping into.. guessing theres an error receiving\nor writing data which is somehow not in you logs. Seeing metrics will at\nleast show you spans incoming and if these are plotted with something you\nmight see a correlation between the incoming messages counted and the count\nin storage. If you look at the docker-zipkin repo theres a pull request\nregarding metrics and prometheus if you dont have a different tool (or just\ncalling /metrics isnt enough)\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295512505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295514987","html_url":"https://github.com/openzipkin/zipkin/pull/1554#issuecomment-295514987","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1554","id":295514987,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTUxNDk4Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-20T00:42:21Z","updated_at":"2017-04-20T00:42:21Z","author_association":"MEMBER","body":"I would love to hear if you end up with hundreds of users who all refresh\nbrowser cache/expire these headers :) would be a sign of a very effective\ndeployment.\n\nI do think we will get better and probably simplest might be an caching\nintermediary as it could be applied to all and invalidation isnt terribly\nimportant with service names. Simpler than changing storage (plus not\npositive of perf differences here or cassandra either). We could also\nconsider an optional caching decorator storagecomponent.\n\nI do think we will change the format stored in ES by year end though this\nwill likely only help with trace queries as service span are now simple as\npossible.\n\nMeanwhile thanks for all the feedback. You have been very helpful in this!\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/295514987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296179426","html_url":"https://github.com/openzipkin/zipkin/issues/1569#issuecomment-296179426","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1569","id":296179426,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjE3OTQyNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-21T12:38:09Z","updated_at":"2017-04-21T12:38:09Z","author_association":"MEMBER","body":"hmm that sql file isn't supposed to be executed automatically. what is\ncausing that?\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296179426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296180157","html_url":"https://github.com/openzipkin/zipkin/issues/1569#issuecomment-296180157","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1569","id":296180157,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjE4MDE1Nw==","user":{"login":"HaVonTe1","id":10447166,"node_id":"MDQ6VXNlcjEwNDQ3MTY2","avatar_url":"https://avatars.githubusercontent.com/u/10447166?v=4","gravatar_id":"","url":"https://api.github.com/users/HaVonTe1","html_url":"https://github.com/HaVonTe1","followers_url":"https://api.github.com/users/HaVonTe1/followers","following_url":"https://api.github.com/users/HaVonTe1/following{/other_user}","gists_url":"https://api.github.com/users/HaVonTe1/gists{/gist_id}","starred_url":"https://api.github.com/users/HaVonTe1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaVonTe1/subscriptions","organizations_url":"https://api.github.com/users/HaVonTe1/orgs","repos_url":"https://api.github.com/users/HaVonTe1/repos","events_url":"https://api.github.com/users/HaVonTe1/events{/privacy}","received_events_url":"https://api.github.com/users/HaVonTe1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-21T12:41:51Z","updated_at":"2017-04-21T12:41:51Z","author_association":"NONE","body":"i see. mayby the application.yml is misconfigured:\r\n\r\nspring:\r\n  datasource:\r\n    schema: classpath:/mysql.sql\r\n\r\nI copy/pasted that from an example....","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296180157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296182555","html_url":"https://github.com/openzipkin/zipkin/issues/1569#issuecomment-296182555","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1569","id":296182555,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjE4MjU1NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-21T12:53:43Z","updated_at":"2017-04-21T12:53:43Z","author_association":"MEMBER","body":">\n> I copy/pasted that from an example....\n>\nyeah sorry. maybe someone made an example to do that, but we haven't\nwritten it to do incremental updates. It is probably best to not rely on\nthat.\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296182555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296331437","html_url":"https://github.com/openzipkin/zipkin/issues/939#issuecomment-296331437","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/939","id":296331437,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjMzMTQzNw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-22T00:05:11Z","updated_at":"2017-04-22T00:05:11Z","author_association":"MEMBER","body":"A reminder that things are easier if we don't do mixed types for tags (ex map has value of type string or bool). Not only does this not work in elasticsearch mappings (first type wins), but also it is complex in json schema https://github.com/openzipkin/zipkin-api/issues/27","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296331437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296332879","html_url":"https://github.com/openzipkin/zipkin/pull/1571#issuecomment-296332879","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1571","id":296332879,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjMzMjg3OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-22T00:21:05Z","updated_at":"2017-04-22T00:21:05Z","author_association":"MEMBER","body":"thank you!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296332879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296869131","html_url":"https://github.com/openzipkin/zipkin/pull/1573#issuecomment-296869131","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1573","id":296869131,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Njg2OTEzMQ==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-25T01:53:06Z","updated_at":"2017-04-25T01:53:06Z","author_association":"MEMBER","body":"Looks like the tests are still being skipped on the CI server.  This has been working locally for me so my best guess is that the CI server is a bit slower and the container isn't completely ready so the health check fails and subsequently the tests are skipped.  Might need to work on a custom CassandraContainer implementation that executes a command as the container wait condition.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296869131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296876959","html_url":"https://github.com/openzipkin/zipkin/pull/1573#issuecomment-296876959","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1573","id":296876959,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Njg3Njk1OQ==","user":{"login":"llinder","id":99359,"node_id":"MDQ6VXNlcjk5MzU5","avatar_url":"https://avatars.githubusercontent.com/u/99359?v=4","gravatar_id":"","url":"https://api.github.com/users/llinder","html_url":"https://github.com/llinder","followers_url":"https://api.github.com/users/llinder/followers","following_url":"https://api.github.com/users/llinder/following{/other_user}","gists_url":"https://api.github.com/users/llinder/gists{/gist_id}","starred_url":"https://api.github.com/users/llinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/llinder/subscriptions","organizations_url":"https://api.github.com/users/llinder/orgs","repos_url":"https://api.github.com/users/llinder/repos","events_url":"https://api.github.com/users/llinder/events{/privacy}","received_events_url":"https://api.github.com/users/llinder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-25T02:47:01Z","updated_at":"2017-04-25T02:47:17Z","author_association":"MEMBER","body":"Success!  We now have 5 C* test failures in the CI build :-)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296876959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296916323","html_url":"https://github.com/openzipkin/zipkin/pull/1573#issuecomment-296916323","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1573","id":296916323,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjkxNjMyMw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-25T05:37:53Z","updated_at":"2017-04-25T05:37:53Z","author_association":"MEMBER","body":"Congrats on the new failures :) knowing is half the battle\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296916323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296924432","html_url":"https://github.com/openzipkin/zipkin/issues/1574#issuecomment-296924432","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1574","id":296924432,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjkyNDQzMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-25T06:15:53Z","updated_at":"2017-04-25T06:15:53Z","author_association":"MEMBER","body":"I think this was also noticed by @felixbarny","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296924432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296924812","html_url":"https://github.com/openzipkin/zipkin/issues/1574#issuecomment-296924812","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1574","id":296924812,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NjkyNDgxMg==","user":{"login":"felixbarny","id":2163464,"node_id":"MDQ6VXNlcjIxNjM0NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2163464?v=4","gravatar_id":"","url":"https://api.github.com/users/felixbarny","html_url":"https://github.com/felixbarny","followers_url":"https://api.github.com/users/felixbarny/followers","following_url":"https://api.github.com/users/felixbarny/following{/other_user}","gists_url":"https://api.github.com/users/felixbarny/gists{/gist_id}","starred_url":"https://api.github.com/users/felixbarny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felixbarny/subscriptions","organizations_url":"https://api.github.com/users/felixbarny/orgs","repos_url":"https://api.github.com/users/felixbarny/repos","events_url":"https://api.github.com/users/felixbarny/events{/privacy}","received_events_url":"https://api.github.com/users/felixbarny/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-25T06:17:39Z","updated_at":"2017-04-25T06:17:39Z","author_association":"NONE","body":"Right. The overflow should be handled just like in the JSON panel.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/296924812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297587366","html_url":"https://github.com/openzipkin/zipkin/issues/1576#issuecomment-297587366","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1576","id":297587366,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzU4NzM2Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-27T01:38:53Z","updated_at":"2017-04-27T01:38:53Z","author_association":"MEMBER","body":"You can verify that it is indeed storing in MySQL by looking at the /health\nendpoint. Also, maybe check /metrics to see if you are getting storage\nerrors?\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297587366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297676112","html_url":"https://github.com/openzipkin/zipkin/issues/1576#issuecomment-297676112","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1576","id":297676112,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY3NjExMg==","user":{"login":"txedo","id":520328,"node_id":"MDQ6VXNlcjUyMDMyOA==","avatar_url":"https://avatars.githubusercontent.com/u/520328?v=4","gravatar_id":"","url":"https://api.github.com/users/txedo","html_url":"https://github.com/txedo","followers_url":"https://api.github.com/users/txedo/followers","following_url":"https://api.github.com/users/txedo/following{/other_user}","gists_url":"https://api.github.com/users/txedo/gists{/gist_id}","starred_url":"https://api.github.com/users/txedo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/txedo/subscriptions","organizations_url":"https://api.github.com/users/txedo/orgs","repos_url":"https://api.github.com/users/txedo/repos","events_url":"https://api.github.com/users/txedo/events{/privacy}","received_events_url":"https://api.github.com/users/txedo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-27T10:28:54Z","updated_at":"2017-04-27T10:28:54Z","author_association":"NONE","body":"Please find below the output of /heath endpoint. /metrics doesn't reveal any error either, and it is actually storing in MySQL.\r\n\r\n`\r\n{  \r\n   status:\"UP\",\r\n   zipkin:{  \r\n      status:\"UP\",\r\n      MySQLStorage:{  \r\n         status:\"UP\"\r\n      }\r\n   },\r\n   diskSpace:{  \r\n      status:\"UP\",\r\n      total:10432581632,\r\n      free:8554635264,\r\n      threshold:10485760\r\n   }\r\n}\r\n`\r\n\r\nChecking the start_ts column I have noticed that spans are inserted at time at the beginning but after some minutes running they are inserted with an increasing delay. Currently it is 12:20 AM and the most recent span inserted is from 09:38 AM, which could explain the increasing memory leading to the OutOfMemoryError after a couple of hours.\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297676112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297677119","html_url":"https://github.com/openzipkin/zipkin/issues/1576#issuecomment-297677119","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1576","id":297677119,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY3NzExOQ==","user":{"login":"txedo","id":520328,"node_id":"MDQ6VXNlcjUyMDMyOA==","avatar_url":"https://avatars.githubusercontent.com/u/520328?v=4","gravatar_id":"","url":"https://api.github.com/users/txedo","html_url":"https://github.com/txedo","followers_url":"https://api.github.com/users/txedo/followers","following_url":"https://api.github.com/users/txedo/following{/other_user}","gists_url":"https://api.github.com/users/txedo/gists{/gist_id}","starred_url":"https://api.github.com/users/txedo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/txedo/subscriptions","organizations_url":"https://api.github.com/users/txedo/orgs","repos_url":"https://api.github.com/users/txedo/repos","events_url":"https://api.github.com/users/txedo/events{/privacy}","received_events_url":"https://api.github.com/users/txedo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-27T10:34:06Z","updated_at":"2017-04-27T10:34:06Z","author_association":"NONE","body":"Right now, the latest timestamp showing up on /trace is 1493289153403, and the latest on mysql is 1493285896646000.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297677119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297680219","html_url":"https://github.com/openzipkin/zipkin/issues/1576#issuecomment-297680219","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1576","id":297680219,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY4MDIxOQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-27T10:49:31Z","updated_at":"2017-04-27T10:49:31Z","author_association":"MEMBER","body":"ok if you have no errors and increasing memory it seems there is a queue backing up. you can look at threads to see if any are stuck. if pending spans are valuable you can add another zipkin server and stop routing traffic to the clogged one. otherwise bounce the clogged once you see which threads are stuck","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297680219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297681134","html_url":"https://github.com/openzipkin/zipkin/issues/1576#issuecomment-297681134","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1576","id":297681134,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NzY4MTEzNA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-27T10:54:16Z","updated_at":"2017-04-27T10:54:16Z","author_association":"MEMBER","body":"@shakuzen @devinsba @denyska so we seem to be accepting unbounded POSTs, and the memory eats up before the collector component gets involved (hence no drop metrics). wonder if theres a way to control in-flight accepts better.. ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297681134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297876694","html_url":"https://github.com/openzipkin/zipkin/issues/1577#issuecomment-297876694","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1577","id":297876694,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Nzg3NjY5NA==","user":{"login":"necolas","id":239676,"node_id":"MDQ6VXNlcjIzOTY3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/239676?v=4","gravatar_id":"","url":"https://api.github.com/users/necolas","html_url":"https://github.com/necolas","followers_url":"https://api.github.com/users/necolas/followers","following_url":"https://api.github.com/users/necolas/following{/other_user}","gists_url":"https://api.github.com/users/necolas/gists{/gist_id}","starred_url":"https://api.github.com/users/necolas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/necolas/subscriptions","organizations_url":"https://api.github.com/users/necolas/orgs","repos_url":"https://api.github.com/users/necolas/repos","events_url":"https://api.github.com/users/necolas/events{/privacy}","received_events_url":"https://api.github.com/users/necolas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-28T00:40:52Z","updated_at":"2017-04-28T00:40:52Z","author_association":"NONE","body":"Hi, as far as Twitter Lite goes, we didn't transition but started from scratch. @rondevera might know of some internal apps that are transitioning from FlightJS to React","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297876694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297897214","html_url":"https://github.com/openzipkin/zipkin/pull/1578#issuecomment-297897214","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1578","id":297897214,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Nzg5NzIxNA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-28T03:22:20Z","updated_at":"2017-04-28T03:22:20Z","author_association":"MEMBER","body":"cc @openzipkin/elasticsearch this is a pretty important bugfix, so will roll out immediately\r\n\r\nThanks to @sirtyro for noticing this!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297897214/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297898735","html_url":"https://github.com/openzipkin/zipkin/pull/1578#issuecomment-297898735","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1578","id":297898735,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Nzg5ODczNQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-28T03:35:31Z","updated_at":"2017-04-28T03:35:31Z","author_association":"MEMBER","body":"also cc @semyonslepov","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297898735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297969351","html_url":"https://github.com/openzipkin/zipkin/issues/1577#issuecomment-297969351","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1577","id":297969351,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Nzk2OTM1MQ==","user":{"login":"eirslett","id":1872593,"node_id":"MDQ6VXNlcjE4NzI1OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1872593?v=4","gravatar_id":"","url":"https://api.github.com/users/eirslett","html_url":"https://github.com/eirslett","followers_url":"https://api.github.com/users/eirslett/followers","following_url":"https://api.github.com/users/eirslett/following{/other_user}","gists_url":"https://api.github.com/users/eirslett/gists{/gist_id}","starred_url":"https://api.github.com/users/eirslett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eirslett/subscriptions","organizations_url":"https://api.github.com/users/eirslett/orgs","repos_url":"https://api.github.com/users/eirslett/repos","events_url":"https://api.github.com/users/eirslett/events{/privacy}","received_events_url":"https://api.github.com/users/eirslett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-28T10:55:49Z","updated_at":"2017-04-28T10:55:49Z","author_association":"CONTRIBUTOR","body":"I did an experiment a while ago, I ported the current UI to react/redux. Which worked pretty well, except I was only 50 % done (for the sake of the experiment) so I never finished it.\r\nStarting from scratch comes with the risk of never getting finished, like zipkin-ui... also I'm not sure if the Angular 2 + TypeScript stack is as familiar to general developers as React+Redux (or both might be inaccessible, I'm not sure).","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/297969351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298122733","html_url":"https://github.com/openzipkin/zipkin/issues/1528#issuecomment-298122733","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1528","id":298122733,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODEyMjczMw==","user":{"login":"harsharastogi","id":13515847,"node_id":"MDQ6VXNlcjEzNTE1ODQ3","avatar_url":"https://avatars.githubusercontent.com/u/13515847?v=4","gravatar_id":"","url":"https://api.github.com/users/harsharastogi","html_url":"https://github.com/harsharastogi","followers_url":"https://api.github.com/users/harsharastogi/followers","following_url":"https://api.github.com/users/harsharastogi/following{/other_user}","gists_url":"https://api.github.com/users/harsharastogi/gists{/gist_id}","starred_url":"https://api.github.com/users/harsharastogi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harsharastogi/subscriptions","organizations_url":"https://api.github.com/users/harsharastogi/orgs","repos_url":"https://api.github.com/users/harsharastogi/repos","events_url":"https://api.github.com/users/harsharastogi/events{/privacy}","received_events_url":"https://api.github.com/users/harsharastogi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-28T22:41:18Z","updated_at":"2017-04-28T22:41:18Z","author_association":"NONE","body":"+1","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298122733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298143122","html_url":"https://github.com/openzipkin/zipkin/issues/1577#issuecomment-298143122","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1577","id":298143122,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODE0MzEyMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-29T03:05:23Z","updated_at":"2017-04-29T03:05:23Z","author_association":"MEMBER","body":"@eirslett wonder if you still have a stash of some of it, or if it is possible to raise a partial migration (Ex the service/span name dropdown to react+dedux). I might be able to follow-the-leader from there (or at least try..)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298143122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298243080","html_url":"https://github.com/openzipkin/zipkin/pull/1579#issuecomment-298243080","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1579","id":298243080,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODI0MzA4MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-04-30T16:48:40Z","updated_at":"2017-04-30T16:48:40Z","author_association":"MEMBER","body":"thx for the start! I think it doesn't need to be configurable at the moment. we have many things that aren't configurable.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298243080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298679831","html_url":"https://github.com/openzipkin/zipkin/pull/1414#issuecomment-298679831","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1414","id":298679831,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODY3OTgzMQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-02T16:01:43Z","updated_at":"2017-05-02T16:01:43Z","author_association":"MEMBER","body":"shortly, brave will include SLF4J support which could integrate with this https://github.com/openzipkin/brave/pull/389","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298679831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298796517","html_url":"https://github.com/openzipkin/zipkin/pull/1581#issuecomment-298796517","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1581","id":298796517,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODc5NjUxNw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T00:18:47Z","updated_at":"2017-05-03T02:14:30Z","author_association":"MEMBER","body":"Thanks Gary. Of course this change is welcome for anyone I dont mind\r\nhogging it ;)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298796517/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810211","html_url":"https://github.com/openzipkin/zipkin/pull/1581#issuecomment-298810211","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1581","id":298810211,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODgxMDIxMQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T02:27:25Z","updated_at":"2017-05-03T02:27:25Z","author_association":"MEMBER","body":"ok this actually breaks for everything except mysql and mem","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810402","html_url":"https://github.com/openzipkin/zipkin/issues/1330#issuecomment-298810402","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1330","id":298810402,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODgxMDQwMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T02:29:07Z","updated_at":"2017-05-03T02:29:07Z","author_association":"MEMBER","body":"here's another https://github.com/whitemerry/phpkin","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810969","html_url":"https://github.com/openzipkin/zipkin/pull/1581#issuecomment-298810969","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1581","id":298810969,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODgxMDk2OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T02:35:04Z","updated_at":"2017-05-03T02:36:16Z","author_association":"MEMBER","body":"in cassandra, this seems to be related to the server not setting timestamp (which it shouldn't)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298810969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298811535","html_url":"https://github.com/openzipkin/zipkin/pull/1581#issuecomment-298811535","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1581","id":298811535,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODgxMTUzNQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T02:41:38Z","updated_at":"2017-05-03T02:41:38Z","author_association":"MEMBER","body":"nice find.. so far seems legit. I'll probably make sure this works for all or is understood why not.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298811535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298837298","html_url":"https://github.com/openzipkin/zipkin/pull/1581#issuecomment-298837298","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1581","id":298837298,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODgzNzI5OA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T07:06:42Z","updated_at":"2017-05-03T07:06:42Z","author_association":"MEMBER","body":"@garyd203 @sirtyro I added a commit to fix it","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298837298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298902047","html_url":"https://github.com/openzipkin/zipkin/pull/1582#issuecomment-298902047","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1582","id":298902047,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODkwMjA0Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T12:53:22Z","updated_at":"2017-05-03T12:53:22Z","author_association":"MEMBER","body":"cc @kellabyte @basvanbeek @fedj @garyd203 @sirtyro @semyonslepov ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298902047/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298920509","html_url":"https://github.com/openzipkin/zipkin/issues/1278#issuecomment-298920509","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1278","id":298920509,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODkyMDUwOQ==","user":{"login":"bkleef","id":1572800,"node_id":"MDQ6VXNlcjE1NzI4MDA=","avatar_url":"https://avatars.githubusercontent.com/u/1572800?v=4","gravatar_id":"","url":"https://api.github.com/users/bkleef","html_url":"https://github.com/bkleef","followers_url":"https://api.github.com/users/bkleef/followers","following_url":"https://api.github.com/users/bkleef/following{/other_user}","gists_url":"https://api.github.com/users/bkleef/gists{/gist_id}","starred_url":"https://api.github.com/users/bkleef/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkleef/subscriptions","organizations_url":"https://api.github.com/users/bkleef/orgs","repos_url":"https://api.github.com/users/bkleef/repos","events_url":"https://api.github.com/users/bkleef/events{/privacy}","received_events_url":"https://api.github.com/users/bkleef/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T14:04:01Z","updated_at":"2017-05-03T14:52:56Z","author_association":"NONE","body":"@adriancole this is still the case with version 1.23.3. As you can see we only set `binaryAnnotations` possibly because we use https://github.com/openzipkin/zipkin-go-opentracing.\r\n\r\nOn browser console we get a JS error:\r\n\r\n```\r\nEXCEPTION: this.root.annotations is undefined\r\n```\r\n\r\nResponse:\r\n\r\n```json\r\n[\r\n   [\r\n      {\r\n         \"traceId\":\"414e44fb181df47e6ec3273cd5e68c13\",\r\n         \"id\":\"48f69e22bceb3828\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493817271284756,\r\n         \"duration\":10181,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"414e44fb181df47e6ec3273cd5e68c13\",\r\n         \"id\":\"7b6b5f79a727456e\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"48f69e22bceb3828\",\r\n         \"timestamp\":1493817271292233,\r\n         \"duration\":1703,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         \"traceId\":\"6022cde94bff790803ccfec040a020d6\",\r\n         \"id\":\"62f37b8ddfb2c9d0\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493817222041547,\r\n         \"duration\":12139,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"6022cde94bff790803ccfec040a020d6\",\r\n         \"id\":\"735f5fdd1cf20628\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"62f37b8ddfb2c9d0\",\r\n         \"timestamp\":1493817222050620,\r\n         \"duration\":2124,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         \"traceId\":\"70cdb97b817d2d5069da6015f1b58242\",\r\n         \"id\":\"4824ed25b2ce7b68\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493817220184318,\r\n         \"duration\":10554,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"70cdb97b817d2d5069da6015f1b58242\",\r\n         \"id\":\"427c20a173159005\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"4824ed25b2ce7b68\",\r\n         \"timestamp\":1493817220191750,\r\n         \"duration\":2071,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         \"traceId\":\"4633b79f27358e0a4a668a87dd6db8f6\",\r\n         \"id\":\"5d0e401ceb6199b1\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493816987763840,\r\n         \"duration\":17246,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"4633b79f27358e0a4a668a87dd6db8f6\",\r\n         \"id\":\"099b6f99a3d302fc\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"5d0e401ceb6199b1\",\r\n         \"timestamp\":1493816987773581,\r\n         \"duration\":6534,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         \"traceId\":\"77bd870f0f9937eb1921da490b61a621\",\r\n         \"id\":\"42c74cfe6ff12b92\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493816987572696,\r\n         \"duration\":11595,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"77bd870f0f9937eb1921da490b61a621\",\r\n         \"id\":\"34de313496a58702\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"42c74cfe6ff12b92\",\r\n         \"timestamp\":1493816987580616,\r\n         \"duration\":2552,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ],\r\n   [\r\n      {\r\n         \"traceId\":\"12c36c4ed14fd71520afcc13d5d4afc3\",\r\n         \"id\":\"5351db552b8ef348\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"timestamp\":1493816984668362,\r\n         \"duration\":17917,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.api.v1.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.api.v1.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      },\r\n      {\r\n         \"traceId\":\"12c36c4ed14fd71520afcc13d5d4afc3\",\r\n         \"id\":\"4fa53a43d7320099\",\r\n         \"name\":\"com.example.srv.time.transport.getlist\",\r\n         \"parentId\":\"5351db552b8ef348\",\r\n         \"timestamp\":1493816984681105,\r\n         \"duration\":3786,\r\n         \"binaryAnnotations\":[\r\n            {\r\n               \"key\":\"lc\",\r\n               \"value\":\"com.example.srv.time\",\r\n               \"endpoint\":{\r\n                  \"serviceName\":\"com.example.srv.time\",\r\n                  \"ipv4\":\"127.0.0.1\"\r\n               }\r\n            }\r\n         ],\r\n         \"debug\":true\r\n      }\r\n   ]\r\n]\r\n```","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298920509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298927814","html_url":"https://github.com/openzipkin/zipkin/issues/1278#issuecomment-298927814","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1278","id":298927814,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODkyNzgxNA==","user":{"login":"basvanbeek","id":7205296,"node_id":"MDQ6VXNlcjcyMDUyOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7205296?v=4","gravatar_id":"","url":"https://api.github.com/users/basvanbeek","html_url":"https://github.com/basvanbeek","followers_url":"https://api.github.com/users/basvanbeek/followers","following_url":"https://api.github.com/users/basvanbeek/following{/other_user}","gists_url":"https://api.github.com/users/basvanbeek/gists{/gist_id}","starred_url":"https://api.github.com/users/basvanbeek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/basvanbeek/subscriptions","organizations_url":"https://api.github.com/users/basvanbeek/orgs","repos_url":"https://api.github.com/users/basvanbeek/repos","events_url":"https://api.github.com/users/basvanbeek/events{/privacy}","received_events_url":"https://api.github.com/users/basvanbeek/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T14:29:48Z","updated_at":"2017-05-03T14:31:56Z","author_association":"MEMBER","body":"`zipkin-go-opentracing` does not force you to do binary annotations only. \r\n\r\nIf you want to annotate a span as a RPC client node calling some service, you should use: `ext.SpanKindRPCClient.Set(span)` on the span.\r\n\r\nIf you want to annotate a span as a RPC server node receiving an incoming request, you should extract the B3 headers propagating the client side span with `tracer.Extract()` after which you create the server side span feeding it the received wirecontext `tracer.StartSpan(\"operationName\", ext.RPCServerOption(wireContext))` which can be seen in the example middleware:\r\nhttps://github.com/openzipkin/zipkin-go-opentracing/blob/master/examples/middleware/http.go#L74\r\n\r\nIf you are doing internal local component spans you can use the logic as seen here: https://github.com/openzipkin/zipkin-go-opentracing/blob/master/examples/cli_with_2_services/svc2/implementation.go#L53 where doing a timestamped LC annotation by invoking `ext.SpanKind.Set(span, \"resource\")` or do a `span.LogEvent(\"lc\") or span.LogEvent(zipkincore.LOCAL_COMPONENT)`  which is more native to Zipkin.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298927814/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298961247","html_url":"https://github.com/openzipkin/zipkin/issues/1278#issuecomment-298961247","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1278","id":298961247,"node_id":"MDEyOklzc3VlQ29tbWVudDI5ODk2MTI0Nw==","user":{"login":"bkleef","id":1572800,"node_id":"MDQ6VXNlcjE1NzI4MDA=","avatar_url":"https://avatars.githubusercontent.com/u/1572800?v=4","gravatar_id":"","url":"https://api.github.com/users/bkleef","html_url":"https://github.com/bkleef","followers_url":"https://api.github.com/users/bkleef/followers","following_url":"https://api.github.com/users/bkleef/following{/other_user}","gists_url":"https://api.github.com/users/bkleef/gists{/gist_id}","starred_url":"https://api.github.com/users/bkleef/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkleef/subscriptions","organizations_url":"https://api.github.com/users/bkleef/orgs","repos_url":"https://api.github.com/users/bkleef/repos","events_url":"https://api.github.com/users/bkleef/events{/privacy}","received_events_url":"https://api.github.com/users/bkleef/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-03T16:19:34Z","updated_at":"2017-05-03T16:34:00Z","author_association":"NONE","body":"@basvanbeek thanks a lot for your feedback. We will look into it.\r\n\r\nIMHO it's still a bad thing that the _new_ Zipkin UI _crashes_ (only services are displayed in \"Service\" dropdown but no traces are shown while they are visualized in _old_ UI) when `annotations` is missing in JSON response. Especially because _old_ UI can handle this.\r\n\r\n![](https://puu.sh/vEmKm/c68e6a623c.png)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/298961247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299069469","html_url":"https://github.com/openzipkin/zipkin/issues/1278#issuecomment-299069469","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1278","id":299069469,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA2OTQ2OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T00:09:51Z","updated_at":"2017-05-04T00:09:51Z","author_association":"MEMBER","body":"I was going to ask. Seems this issue wss opened on the wrong repository as\nthe new UI code is not here.\n\nMoreover, we are looking to renovate the \"old UI\" because no one is\ncontributing to the angular one. If you know anyone who can help, do\nmention.\n\nOn 4 May 2017 12:19 am, \"Bart van Kleef\" <notifications@github.com> wrote:\n\n> @basvanbeek <https://github.com/basvanbeek> thanks a lot for your\n> feedback. We will look into it.\n> IMHO it's still a bad thing that the new Zipkin UI *crashes* (only\n> services are displayed in \"Service\" dropdown but no traces are shown while\n> they are visualized in *old* UI) when annotations is missing in JSON\n> response. Especially because *old* UI can handle this.\n>\n>\n> <https://camo.githubusercontent.com/cdf93e1e6377f9d5892996e07f3a7b43d5a72934/68747470733a2f2f7075752e73682f76456d4b6d2f633638653661363233632e706e67>\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/1278#issuecomment-298961247>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD618RewGxvR9WIWGwZjtrAdGwJ4qjCks5r2KkZgaJpZM4J4ZR4>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299069469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299071258","html_url":"https://github.com/openzipkin/zipkin/issues/1405#issuecomment-299071258","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1405","id":299071258,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA3MTI1OA==","user":{"login":"StephenWithPH","id":2990492,"node_id":"MDQ6VXNlcjI5OTA0OTI=","avatar_url":"https://avatars.githubusercontent.com/u/2990492?v=4","gravatar_id":"","url":"https://api.github.com/users/StephenWithPH","html_url":"https://github.com/StephenWithPH","followers_url":"https://api.github.com/users/StephenWithPH/followers","following_url":"https://api.github.com/users/StephenWithPH/following{/other_user}","gists_url":"https://api.github.com/users/StephenWithPH/gists{/gist_id}","starred_url":"https://api.github.com/users/StephenWithPH/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StephenWithPH/subscriptions","organizations_url":"https://api.github.com/users/StephenWithPH/orgs","repos_url":"https://api.github.com/users/StephenWithPH/repos","events_url":"https://api.github.com/users/StephenWithPH/events{/privacy}","received_events_url":"https://api.github.com/users/StephenWithPH/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T00:23:34Z","updated_at":"2017-05-04T00:23:34Z","author_association":"NONE","body":"Thoughts on revisiting this? Using the 0.8 consumer brings with it a Zookeeper dependency; newer versions of the consumer library use Kafka itself for offset tracking.\r\n\r\nhttps://github.com/openzipkin/zipkin/pull/904 `sticks with 0.8.x clients until we either make a standalone 0.9 kafka collector or re-evaluate when 0.9 adoption is higher`... it's hard to gauge the pace of Kafka broker upgrades in the world at large. Anecdotally, half of the room at the last Kafka meetup was still on 0.8.\r\n\r\nThe standalone zipkin-kafka-connector approach sounds viable; it's similar to https://ci.apache.org/projects/flink/flink-docs-release-1.2/dev/connectors/kafka.html.\r\n\r\nWe've just started digging deep into this part of Zipkin to brainstorm how to carve out the pinned 0.8 consumer. If the above sounds viable, we'll come back with a more detailed sketch.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299071258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299074427","html_url":"https://github.com/openzipkin/zipkin/issues/1405#issuecomment-299074427","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1405","id":299074427,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA3NDQyNw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T00:49:54Z","updated_at":"2017-05-04T00:49:54Z","author_association":"MEMBER","body":"How does this impact you? Most of the time zipkin is a standalone server,\nso the library version conflict is of no concern (black box)\n\nAre you running a custom server, or is there some feature in 0.10 which you\nneed zipkin to use?\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299074427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299074964","html_url":"https://github.com/openzipkin/zipkin/issues/1405#issuecomment-299074964","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1405","id":299074964,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA3NDk2NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T00:54:36Z","updated_at":"2017-05-04T00:54:36Z","author_association":"MEMBER","body":"@StephenWithPH Sorry, you said \"newer versions of the consumer library use Kafka itself for offset tracking\" (still curious about custom build or not as that impacts the direction here)\r\n\r\nCan you elaborate on this? Is this an automatic feature or would we need to expose configuration for it. Code example would be best.\r\n\r\nAlso, are you saying that now brokers self-discover? so you pass a broker url and that's it?\r\n\r\nI'm also interested in progressing this, but need to pick your brain a bit. I think we'll need to do both 0.8 and 0.10, so this is the tricky part.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299074964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299075022","html_url":"https://github.com/openzipkin/zipkin/issues/1405#issuecomment-299075022","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1405","id":299075022,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA3NTAyMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T00:55:04Z","updated_at":"2017-05-04T00:55:04Z","author_association":"MEMBER","body":"pps are you using docker? If so, this gives us some more options on how to address this..","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299075022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299078580","html_url":"https://github.com/openzipkin/zipkin/issues/1278#issuecomment-299078580","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1278","id":299078580,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA3ODU4MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T01:28:45Z","updated_at":"2017-05-04T01:28:45Z","author_association":"MEMBER","body":"This issue was moved to openzipkin/zipkin-ui#40","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299078580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299080305","html_url":"https://github.com/openzipkin/zipkin/pull/1582#issuecomment-299080305","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1582","id":299080305,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA4MDMwNQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T01:46:08Z","updated_at":"2017-05-04T01:46:08Z","author_association":"MEMBER","body":"merging based on thumbs present!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299080305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299080346","html_url":"https://github.com/openzipkin/zipkin/pull/1582#issuecomment-299080346","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1582","id":299080346,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA4MDM0Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T01:46:36Z","updated_at":"2017-05-04T01:46:36Z","author_association":"MEMBER","body":"going out as 1.24","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299080346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299094254","html_url":"https://github.com/openzipkin/zipkin/issues/1405#issuecomment-299094254","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1405","id":299094254,"node_id":"MDEyOklzc3VlQ29tbWVudDI5OTA5NDI1NA==","user":{"login":"StephenWithPH","id":2990492,"node_id":"MDQ6VXNlcjI5OTA0OTI=","avatar_url":"https://avatars.githubusercontent.com/u/2990492?v=4","gravatar_id":"","url":"https://api.github.com/users/StephenWithPH","html_url":"https://github.com/StephenWithPH","followers_url":"https://api.github.com/users/StephenWithPH/followers","following_url":"https://api.github.com/users/StephenWithPH/following{/other_user}","gists_url":"https://api.github.com/users/StephenWithPH/gists{/gist_id}","starred_url":"https://api.github.com/users/StephenWithPH/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StephenWithPH/subscriptions","organizations_url":"https://api.github.com/users/StephenWithPH/orgs","repos_url":"https://api.github.com/users/StephenWithPH/repos","events_url":"https://api.github.com/users/StephenWithPH/events{/privacy}","received_events_url":"https://api.github.com/users/StephenWithPH/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-04T04:23:37Z","updated_at":"2017-05-04T04:23:37Z","author_association":"NONE","body":"I'll answer the questions before diving into the details:\r\n\r\n- we are using Docker in prod\r\n\r\n- we use the factory openzipkin Docker image :heart:\r\n\r\n- newer versions of the Kafka consumer library write to a consumer offsets topic in Kafka itself. That's automatic... I don't believe there's any way *not* to do that, and no user code is needed. This Confluent [blog post](https://www.confluent.io/blog/tutorial-getting-started-with-the-new-apache-kafka-0-9-consumer-client/) gives lots of details; note that the post is somewhat dated... this behavior is no longer in beta.\r\n\r\n- newer consumers do indeed discover all the brokers; see `bootstrap.servers` [here](http://kafka.apache.org/documentation/#consumerconfigs).\r\n\r\n\r\nFrom a high level, we strongly prefer to protect our Zookeeper from all of our various Kafka consumers. That's why we want to avoid indirectly using the old style consumer via Zipkin. Quoting some [docs](https://cwiki.apache.org/confluence/display/KAFKA/Committing+and+fetching+consumer+offsets+in+Kafka): `ZooKeeper does not scale extremely well (especially for writes) when there are a large number of offsets (i.e., consumer-count * partition-count).`\r\n\r\n\r\nI agree that maintaining support for 0.8.x is necessary so we don't break existing users whose brokers are 0.8.x. We'd like to add support for the 0.10.x consumer (since our brokers are 0.10.x). The consumer-to-broker version limitation is [still a thing](http://kafka.apache.org/documentation/#upgrade), but sounds marginally less painful with 0.10.x.\r\n\r\nIt's likely a matter of time until 0.9.x support is a feature request from other Zipkin users. This is what lead us to link to the Apache Flink manner of handling \"pluggable\" Kafka consumer (or producer) client versions.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/299094254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]