[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650921","html_url":"https://github.com/apache/storm/issues/5099#issuecomment-2612650921","issue_url":"https://api.github.com/repos/apache/storm/issues/5099","id":2612650921,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTA5MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T12:16:52Z","updated_at":"2025-01-24T14:22:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=longdafeng\">longdafeng</a>:</i>\n<p>Fixed by John Fang</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649190","html_url":"https://github.com/apache/storm/issues/5091#issuecomment-2612649190","issue_url":"https://api.github.com/repos/apache/storm/issues/5091","id":2612649190,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkxOTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T12:35:20Z","updated_at":"2025-01-24T14:22:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jark\">jark</a>:</i>\n<p>I'm translating helpers.clj to java, but I have some problems.</p>\n\n<p>In the \"config-filter\" function, using ring.util.servlet to create Servlet from a handle which confuse me how to do it in Java. In addition, we lose ring and hiccup for moving the UI/REST services to Java. If we use Jersey to build REST, it's another way to create Servlet.</p>\n\n<p>Another problem is I find that `defelem table` is never be called, so I want to remove it in `Helpers.java`.</p>\n\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a>  can you give me a hand?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873506","html_url":"https://github.com/apache/storm/issues/5391#issuecomment-2612873506","issue_url":"https://api.github.com/repos/apache/storm/issues/5391","id":2612873506,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzM1MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T12:52:57Z","updated_at":"2025-01-24T16:02:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user wuchong opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1121\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1121</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1556\" title=\"nimbus.clj/wait-for-desired-code-replication wrong reset for current-replication-count-jar in local mode\" class=\"issue-link\" data-issue-key=\"STORM-1556\"><del>STORM-1556</del></a>nimbus.clj/wait-for-desired-code-replication wrong reset for current-replication-count-jar in local mode</p>\n\n<p>    We do not go to count the number of jar-replication in local mode, but will count the number of conf-replication. </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/wuchong/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/wuchong/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1556\" title=\"nimbus.clj/wait-for-desired-code-replication wrong reset for current-replication-count-jar in local mode\" class=\"issue-link\" data-issue-key=\"STORM-1556\"><del>STORM-1556</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1121.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1121.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1121</p>\n\n<hr />\n<p>commit 8ef9ddd2696ec8a9474e8a0e0d600cd925804ca2<br/>\nAuthor: wuchong <cool1014@qq.com><br/>\nDate:   2016-02-18T12:47:19Z</p>\n\n<p>    nimbus.clj/wait-for-desired-code-replication wrong reset for current-replication-count-jar in local mode</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649196","html_url":"https://github.com/apache/storm/issues/5091#issuecomment-2612649196","issue_url":"https://api.github.com/repos/apache/storm/issues/5091","id":2612649196,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkxOTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T13:09:15Z","updated_at":"2025-01-24T14:22:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>You can move (ServletHolder. (ring.util.servlet/servlet handler)) call to the caller clojure files and in config-filter you can pass the ServletHolder rather than the handler. <br/>\ne.g. line 1292 in core.clj becomes</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>(config-filter server  (ring.util.servlet/servlet app) filters-confs))})) \n</pre>\n</div></div>\n<p>Same change will be made in logviewer.clj and drpc.clj</p>\n\n<p>config-filter signature changes to </p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>(defn config-filter [server ^ServletHolder holder filters-confs])\n</pre>\n</div></div>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649203","html_url":"https://github.com/apache/storm/issues/5091#issuecomment-2612649203","issue_url":"https://api.github.com/repos/apache/storm/issues/5091","id":2612649203,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkyMDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T13:15:21Z","updated_at":"2025-01-24T14:22:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jark\">jark</a>:</i>\n<p>That's great. Thanks for your suggestion!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185795272","html_url":"https://github.com/apache/storm/pull/1055#issuecomment-185795272","issue_url":"https://api.github.com/repos/apache/storm/issues/1055","id":185795272,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTc5NTI3Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:12:07Z","updated_at":"2016-02-18T16:12:07Z","author_association":"CONTRIBUTOR","body":"I am still +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185795272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650390","html_url":"https://github.com/apache/storm/issues/5095#issuecomment-2612650390","issue_url":"https://api.github.com/repos/apache/storm/issues/5095","id":2612650390,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAzOTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:13:30Z","updated_at":"2025-01-24T14:22:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sanket991\" class=\"user-hover\" rel=\"sanket991\">Sanket Reddy</a>,</p>\n\n<p>I merged this into master</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185798472","html_url":"https://github.com/apache/storm/pull/1098#issuecomment-185798472","issue_url":"https://api.github.com/repos/apache/storm/issues/1098","id":185798472,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTc5ODQ3Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:18:34Z","updated_at":"2016-02-18T16:18:34Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185798472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649020","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649020","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649020,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwMjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:18:36Z","updated_at":"2025-01-24T14:22:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#issuecomment-185798472\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#issuecomment-185798472</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185799741","html_url":"https://github.com/apache/storm/pull/1098#issuecomment-185799741","issue_url":"https://api.github.com/repos/apache/storm/issues/1098","id":185799741,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTc5OTc0MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:21:10Z","updated_at":"2016-02-18T16:21:10Z","author_association":"CONTRIBUTOR","body":"It looks like there is a minor merge conflict with some imports in two files.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185799741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649027","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649027","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649027,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:21:11Z","updated_at":"2025-01-24T14:22:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#issuecomment-185799741\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#issuecomment-185799741</a></p>\n\n<p>    It looks like there is a minor merge conflict with some imports in two files.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185800670","html_url":"https://github.com/apache/storm/pull/1119#issuecomment-185800670","issue_url":"https://api.github.com/repos/apache/storm/issues/1119","id":185800670,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgwMDY3MA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:23:51Z","updated_at":"2016-02-18T16:23:51Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185800670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873746","html_url":"https://github.com/apache/storm/issues/5393#issuecomment-2612873746","issue_url":"https://api.github.com/repos/apache/storm/issues/5393","id":2612873746,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzM3NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:23:52Z","updated_at":"2025-01-24T16:02:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1119#issuecomment-185800670\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1119#issuecomment-185800670</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185808479","html_url":"https://github.com/apache/storm/pull/1098#issuecomment-185808479","issue_url":"https://api.github.com/repos/apache/storm/issues/1098","id":185808479,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgwODQ3OQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:43:37Z","updated_at":"2016-02-18T16:43:37Z","author_association":"CONTRIBUTOR","body":"@revans2 I just upmerged\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185808479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649041","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649041","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649041,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwNDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:43:39Z","updated_at":"2025-01-24T14:22:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#issuecomment-185808479\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#issuecomment-185808479</a></p>\n\n<p>    @revans2 I just upmerged</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185813428","html_url":"https://github.com/apache/storm/pull/1054#issuecomment-185813428","issue_url":"https://api.github.com/repos/apache/storm/issues/1054","id":185813428,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgxMzQyOA==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T16:53:42Z","updated_at":"2016-02-18T16:53:42Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 thanks for the review.  I have fixed the type\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185813428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185815858","html_url":"https://github.com/apache/storm/pull/1122#issuecomment-185815858","issue_url":"https://api.github.com/repos/apache/storm/issues/1122","id":185815858,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgxNTg1OA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:01:05Z","updated_at":"2016-02-18T17:01:05Z","author_association":"CONTRIBUTOR","body":"+1 looks fine to me.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185815858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185818194","html_url":"https://github.com/apache/storm/pull/1098#issuecomment-185818194","issue_url":"https://api.github.com/repos/apache/storm/issues/1098","id":185818194,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgxODE5NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:09:13Z","updated_at":"2016-02-18T17:09:13Z","author_association":"CONTRIBUTOR","body":"Still +1 I built and ran the tests myself so I am not waiting for travis.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185818194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649055","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649055","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649055,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:09:15Z","updated_at":"2025-01-24T14:22:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#issuecomment-185818194\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#issuecomment-185818194</a></p>\n\n<p>    Still +1 I built and ran the tests myself so I am not waiting for travis.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649073","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649073","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649073,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwNzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:10:13Z","updated_at":"2025-01-24T14:22:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649079","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612649079","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612649079,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDkwNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:10:56Z","updated_at":"2025-01-24T14:22:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\" class=\"user-hover\" rel=\"jerrypeng\">Boyang Jerry Peng</a>,</p>\n\n<p>I merged this into master</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647370","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647370","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647370,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczNzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:14:38Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#discussion_r53347252\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#discussion_r53347252</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/local_state_converter.clj &#8212;<br/>\n    @@ -0,0 +1,25 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +(ns org.apache.storm.local-state-converter<br/>\n    +  (:use <span class=\"error\">&#91;org.apache.storm log util&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    this line does not look like it is used in this file</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647376","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647376","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647376,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczNzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:22:44Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#discussion_r53348402\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#discussion_r53348402</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/nimbus.clj &#8212;<br/>\n    @@ -46,11 +46,11 @@<br/>\n KillOptions RebalanceOptions ClusterSummary SupervisorSummary TopologySummary TopologyInfo TopologyHistoryInfo<br/>\n ExecutorSummary AuthorizationException GetInfoOptions NumErrorsChoice SettableBlobMeta ReadableBlobMeta<br/>\n BeginDownloadResult ListBlobsResult ComponentPageInfo TopologyPageInfo LogConfig LogLevel LogLevelAction</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ProfileRequest ProfileAction NodeInfo])<br/>\n    +    ProfileRequest ProfileAction NodeInfo LSTopoHistory])<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.daemon Shutdownable&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.validation ConfigValidation&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.cluster ClusterStateContext DaemonType&#93;</span>)</li>\n\t<li>(:use <span class=\"error\">&#91;org.apache.storm util config log timer zookeeper local-state&#93;</span>)<br/>\n    +  (:use <span class=\"error\">&#91;org.apache.storm util config log timer zookeeper local-state-converter&#93;</span>)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't think local-state-converter is used in this file.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185827194","html_url":"https://github.com/apache/storm/pull/1117#issuecomment-185827194","issue_url":"https://api.github.com/repos/apache/storm/issues/1117","id":185827194,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgyNzE5NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:34:04Z","updated_at":"2016-02-18T17:34:04Z","author_association":"CONTRIBUTOR","body":"A few minor comments about imports but it looks good.  +1.  Oh and please upmerge or rebase. There are some conflict on imports that are simple to fix.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185827194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647380","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647380","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647380,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:34:05Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#issuecomment-185827194\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#issuecomment-185827194</a></p>\n\n<p>    A few minor comments about imports but it looks good.  +1.  Oh and please upmerge or rebase. There are some conflict on imports that are simple to fix.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185828181","html_url":"https://github.com/apache/storm/pull/1115#issuecomment-185828181","issue_url":"https://api.github.com/repos/apache/storm/issues/1115","id":185828181,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgyODE4MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:37:08Z","updated_at":"2016-02-18T17:37:08Z","author_association":"CONTRIBUTOR","body":"+1 here too.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185828181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612869506","html_url":"https://github.com/apache/storm/issues/5367#issuecomment-2612869506","issue_url":"https://api.github.com/repos/apache/storm/issues/5367","id":2612869506,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njk1MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:37:09Z","updated_at":"2025-01-24T16:00:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1115#issuecomment-185828181\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1115#issuecomment-185828181</a></p>\n\n<p>    +1 here too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612869506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185828905","html_url":"https://github.com/apache/storm/pull/1122#issuecomment-185828905","issue_url":"https://api.github.com/repos/apache/storm/issues/1122","id":185828905,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTgyODkwNQ==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T17:39:44Z","updated_at":"2016-02-18T17:39:44Z","author_association":"CONTRIBUTOR","body":"Would there be a drawback to making all of the abstract methods protected if we want to support end user extensions?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185828905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649517","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649517","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649517,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:08:27Z","updated_at":"2025-01-24T14:22:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53354956\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53354956</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/UtilsTest.java &#8212;<br/>\n    @@ -0,0 +1,213 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.HashMap;<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +import org.apache.curator.ensemble.exhibitor.ExhibitorEnsembleProvider;<br/>\n    +import org.apache.curator.ensemble.fixed.FixedEnsembleProvider;<br/>\n    +import org.apache.curator.framework.AuthInfo;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.CuratorFrameworkFactory;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.thrift.transport.TTransportException;<br/>\n    +<br/>\n    +public class UtilsTest {<br/>\n    +    @Test<br/>\n    +    public void newCuratorUsesExponentialBackoffTest() throws InterruptedException </p>\n{\n    +final int expectedInterval = 2400;\n    +final int expectedRetries = 10;\n    +final int expectedCeiling = 3000;\n    +\n    +Map<String, Object> config = Utils.readDefaultConfig();\n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL, expectedInterval); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_TIMES, expectedRetries); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL_CEILING, expectedCeiling); \n    +\n    +CuratorFramework curator = Utils.newCurator(config, Arrays.asList(\"bogus_server\"), 42 /*port*/, \"\");\n    +StormBoundedExponentialBackoffRetry policy = \n    +    (StormBoundedExponentialBackoffRetry) curator.getZookeeperClient().getRetryPolicy();\n    +Assert.assertEquals(policy.getBaseSleepTimeMs(), expectedInterval);\n    +Assert.assertEquals(policy.getN(), expectedRetries);\n    +Assert.assertEquals(policy.getSleepTimeMs(10, 0), expectedCeiling);\n    +    }\n<p>    +<br/>\n    +    @Test(expected = RuntimeException.class)<br/>\n    +    public void getConfiguredClientThrowsRuntimeExceptionOnBadArgsTest () throws RuntimeException, TTransportException {<br/>\n    +Map config = ConfigUtils.readStormConfig();<br/>\n    +config.put(Config.STORM_NIMBUS_RETRY_TIMES, 0);<br/>\n    +new NimbusClient(config, \"\", 65535);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we change this to </p>\n\n<p>    ```<br/>\n    try </p>\n{\nnew NimbusClient(config, \"\", 65535);\nAssert.fail(\"Expected Exception to be thrown\");\n    }\n<p> catch (RuntimeException e) </p>\n{\nassertTrue(\"Cause is not TTransportException \"+e, Utils.exceptionCauseIsInstanceOf(TTransportException.class, e));\n    }\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649522","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649522","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649522,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:14:09Z","updated_at":"2025-01-24T14:22:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53355813\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53355813</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/UtilsTest.java &#8212;<br/>\n    @@ -0,0 +1,213 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.HashMap;<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +import org.apache.curator.ensemble.exhibitor.ExhibitorEnsembleProvider;<br/>\n    +import org.apache.curator.ensemble.fixed.FixedEnsembleProvider;<br/>\n    +import org.apache.curator.framework.AuthInfo;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.CuratorFrameworkFactory;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.thrift.transport.TTransportException;<br/>\n    +<br/>\n    +public class UtilsTest {<br/>\n    +    @Test<br/>\n    +    public void newCuratorUsesExponentialBackoffTest() throws InterruptedException </p>\n{\n    +final int expectedInterval = 2400;\n    +final int expectedRetries = 10;\n    +final int expectedCeiling = 3000;\n    +\n    +Map<String, Object> config = Utils.readDefaultConfig();\n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL, expectedInterval); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_TIMES, expectedRetries); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL_CEILING, expectedCeiling); \n    +\n    +CuratorFramework curator = Utils.newCurator(config, Arrays.asList(\"bogus_server\"), 42 /*port*/, \"\");\n    +StormBoundedExponentialBackoffRetry policy = \n    +    (StormBoundedExponentialBackoffRetry) curator.getZookeeperClient().getRetryPolicy();\n    +Assert.assertEquals(policy.getBaseSleepTimeMs(), expectedInterval);\n    +Assert.assertEquals(policy.getN(), expectedRetries);\n    +Assert.assertEquals(policy.getSleepTimeMs(10, 0), expectedCeiling);\n    +    }\n<p>    +<br/>\n    +    @Test(expected = RuntimeException.class)<br/>\n    +    public void getConfiguredClientThrowsRuntimeExceptionOnBadArgsTest () throws RuntimeException, TTransportException </p>\n{\n    +Map config = ConfigUtils.readStormConfig();\n    +config.put(Config.STORM_NIMBUS_RETRY_TIMES, 0);\n    +new NimbusClient(config, \"\", 65535);\n    +    }\n<p>    +<br/>\n    +    private Map mockMap(String key, String value) </p>\n{\n    +Map<String, Object> map = new HashMap<String, Object>();\n    +map.put(key, value);\n    +return map;\n    +    }\n<p>    +<br/>\n    +    private Map topologyMockMap(String value) </p>\n{\n    +return mockMap(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_SCHEME, value);\n    +    }\n<p>    +<br/>\n    +    private Map serverMockMap(String value) </p>\n{\n    +return mockMap(Config.STORM_ZOOKEEPER_AUTH_SCHEME, value);\n    +    }\n<p>    +<br/>\n    +    private Map emptyMockMap() </p>\n{\n    +return new HashMap<String, Object>();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredTopologyTest() </p>\n{\n    +Assert.assertFalse(\n    +    \"Returns null if given null config\", \n    +    Utils.isZkAuthenticationConfiguredTopology(null));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme key is missing\", \n    +    Utils.isZkAuthenticationConfiguredTopology(emptyMockMap()));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme value is null\", \n    +    Utils.isZkAuthenticationConfiguredTopology(topologyMockMap(null)));\n    +\n    +Assert.assertTrue(\n    +    \"Returns true if scheme value is string\", \n    +    Utils.isZkAuthenticationConfiguredTopology(topologyMockMap(\"foobar\")));\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredStormServerTest() </p>\n{\n    +Assert.assertFalse(\n    +    \"Returns false if given null config\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(null));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme key is missing\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(emptyMockMap()));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme value is null\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(serverMockMap(null)));\n    +\n    +Assert.assertTrue(\n    +    \"Returns true if scheme value is string\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(serverMockMap(\"foobar\")));\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredStormServerWithPropertyTest() {<br/>\n    +String key = \"java.security.auth.login.config\";<br/>\n    +String oldValue = System.getProperty(key);<br/>\n    +try </p>\n{\n    +    System.setProperty(\"java.security.auth.login.config\", \"anything\");\n    +    Assert.assertTrue(Utils.isZkAuthenticationConfiguredStormServer(emptyMockMap()));\n    +}\n<p> catch (Exception ignore) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We don't want to ignore this exception.  Let it fail the test if need be.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649525","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649525","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649525,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:16:57Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53356229\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53356229</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/TimeTest.java &#8212;<br/>\n    @@ -0,0 +1,98 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +public class TimeTest {<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void secsToMillisLongTest() </p>\n{\n    +Assert.assertEquals(Time.secsToMillisLong(0), 0);\n    +Assert.assertEquals(Time.secsToMillisLong(0.002), 2);\n    +Assert.assertEquals(Time.secsToMillisLong(1), 1000);\n    +Assert.assertEquals(Time.secsToMillisLong(1.08), 1080);\n    +Assert.assertEquals(Time.secsToMillisLong(10), 10000);\n    +Assert.assertEquals(Time.secsToMillisLong(10.1), 10100);\n    +    }\n<p>    +<br/>\n    +    @Test(expected=IllegalStateException.class)<br/>\n    +    public void ifNotSimulatingAdvanceTimeThrows() </p>\n{\n    +Time.advanceTime(1000);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isSimulatingReturnsTrueDuringSimulationTest() {<br/>\n    +Assert.assertFalse(Time.isSimulating());<br/>\n    +Time.startSimulating();<br/>\n    +Assert.assertTrue(Time.isSimulating());<br/>\n    +Time.stopSimulating();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Lets put this in a finally so we are sure we always stop simulating time.</p>\n\n<p>    ```<br/>\n    Assert.assertFalse(Time.isSimulating());<br/>\n     Time.startSimulating();<br/>\n     try </p>\n{\n Assert.assertTrue(Time.isSimulating());\n     }\n<p> finally </p>\n{\n Time.stopSimulating();\n     }\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649531","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649531","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649531,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:17:16Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53356278\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53356278</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/TimeTest.java &#8212;<br/>\n    @@ -0,0 +1,98 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +public class TimeTest {<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void secsToMillisLongTest() </p>\n{\n    +Assert.assertEquals(Time.secsToMillisLong(0), 0);\n    +Assert.assertEquals(Time.secsToMillisLong(0.002), 2);\n    +Assert.assertEquals(Time.secsToMillisLong(1), 1000);\n    +Assert.assertEquals(Time.secsToMillisLong(1.08), 1080);\n    +Assert.assertEquals(Time.secsToMillisLong(10), 10000);\n    +Assert.assertEquals(Time.secsToMillisLong(10.1), 10100);\n    +    }\n<p>    +<br/>\n    +    @Test(expected=IllegalStateException.class)<br/>\n    +    public void ifNotSimulatingAdvanceTimeThrows() </p>\n{\n    +Time.advanceTime(1000);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isSimulatingReturnsTrueDuringSimulationTest() {<br/>\n    +Assert.assertFalse(Time.isSimulating());<br/>\n    +Time.startSimulating();<br/>\n    +Assert.assertTrue(Time.isSimulating());<br/>\n    +Time.stopSimulating();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    and do it everywhere in this file</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649537","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649537","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649537,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:19:39Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53356679\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53356679</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/TimeTest.java &#8212;<br/>\n    @@ -0,0 +1,98 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +public class TimeTest {<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void secsToMillisLongTest() </p>\n{\n    +Assert.assertEquals(Time.secsToMillisLong(0), 0);\n    +Assert.assertEquals(Time.secsToMillisLong(0.002), 2);\n    +Assert.assertEquals(Time.secsToMillisLong(1), 1000);\n    +Assert.assertEquals(Time.secsToMillisLong(1.08), 1080);\n    +Assert.assertEquals(Time.secsToMillisLong(10), 10000);\n    +Assert.assertEquals(Time.secsToMillisLong(10.1), 10100);\n    +    }\n<p>    +<br/>\n    +    @Test(expected=IllegalStateException.class)<br/>\n    +    public void ifNotSimulatingAdvanceTimeThrows() </p>\n{\n    +Time.advanceTime(1000);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isSimulatingReturnsTrueDuringSimulationTest() </p>\n{\n    +Assert.assertFalse(Time.isSimulating());\n    +Time.startSimulating();\n    +Assert.assertTrue(Time.isSimulating());\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldNotAdvanceTimeTest() </p>\n{\n    +Time.startSimulating();\n    +long current = Time.currentTimeMillis();\n    +Time.advanceTime(0);\n    +Assert.assertEquals(Time.deltaMs(current), 0);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldAdvanceForwardTest() </p>\n{\n    +Time.startSimulating();\n    +long current = Time.currentTimeMillis();\n    +Time.advanceTime(1000);\n    +Assert.assertEquals(Time.deltaMs(current), 1000);\n    +Time.advanceTime(500);\n    +Assert.assertEquals(Time.deltaMs(current), 1500);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldAdvanceBackwardsTest() {<br/>\n    +Time.startSimulating();<br/>\n    +long current = Time.currentTimeMillis();<br/>\n    +Time.advanceTime(1000);<br/>\n    +Assert.assertEquals(Time.deltaMs(current), 1000);<br/>\n    +Time.advanceTime(-1500);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I don't think we want time to actually go backwards.  Could you either remove this test or make the code fail for negative numbers.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649544","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649544","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649544,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:22:06Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53357061\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53357061</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/UtilsTest.java &#8212;<br/>\n    @@ -0,0 +1,213 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.HashMap;<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +import org.apache.curator.ensemble.exhibitor.ExhibitorEnsembleProvider;<br/>\n    +import org.apache.curator.ensemble.fixed.FixedEnsembleProvider;<br/>\n    +import org.apache.curator.framework.AuthInfo;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.CuratorFrameworkFactory;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.thrift.transport.TTransportException;<br/>\n    +<br/>\n    +public class UtilsTest {<br/>\n    +    @Test<br/>\n    +    public void newCuratorUsesExponentialBackoffTest() throws InterruptedException </p>\n{\n    +final int expectedInterval = 2400;\n    +final int expectedRetries = 10;\n    +final int expectedCeiling = 3000;\n    +\n    +Map<String, Object> config = Utils.readDefaultConfig();\n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL, expectedInterval); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_TIMES, expectedRetries); \n    +config.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL_CEILING, expectedCeiling); \n    +\n    +CuratorFramework curator = Utils.newCurator(config, Arrays.asList(\"bogus_server\"), 42 /*port*/, \"\");\n    +StormBoundedExponentialBackoffRetry policy = \n    +    (StormBoundedExponentialBackoffRetry) curator.getZookeeperClient().getRetryPolicy();\n    +Assert.assertEquals(policy.getBaseSleepTimeMs(), expectedInterval);\n    +Assert.assertEquals(policy.getN(), expectedRetries);\n    +Assert.assertEquals(policy.getSleepTimeMs(10, 0), expectedCeiling);\n    +    }\n<p>    +<br/>\n    +    @Test(expected = RuntimeException.class)<br/>\n    +    public void getConfiguredClientThrowsRuntimeExceptionOnBadArgsTest () throws RuntimeException, TTransportException </p>\n{\n    +Map config = ConfigUtils.readStormConfig();\n    +config.put(Config.STORM_NIMBUS_RETRY_TIMES, 0);\n    +new NimbusClient(config, \"\", 65535);\n    +    }\n<p>    +<br/>\n    +    private Map mockMap(String key, String value) </p>\n{\n    +Map<String, Object> map = new HashMap<String, Object>();\n    +map.put(key, value);\n    +return map;\n    +    }\n<p>    +<br/>\n    +    private Map topologyMockMap(String value) </p>\n{\n    +return mockMap(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_SCHEME, value);\n    +    }\n<p>    +<br/>\n    +    private Map serverMockMap(String value) </p>\n{\n    +return mockMap(Config.STORM_ZOOKEEPER_AUTH_SCHEME, value);\n    +    }\n<p>    +<br/>\n    +    private Map emptyMockMap() </p>\n{\n    +return new HashMap<String, Object>();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredTopologyTest() </p>\n{\n    +Assert.assertFalse(\n    +    \"Returns null if given null config\", \n    +    Utils.isZkAuthenticationConfiguredTopology(null));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme key is missing\", \n    +    Utils.isZkAuthenticationConfiguredTopology(emptyMockMap()));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme value is null\", \n    +    Utils.isZkAuthenticationConfiguredTopology(topologyMockMap(null)));\n    +\n    +Assert.assertTrue(\n    +    \"Returns true if scheme value is string\", \n    +    Utils.isZkAuthenticationConfiguredTopology(topologyMockMap(\"foobar\")));\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredStormServerTest() </p>\n{\n    +Assert.assertFalse(\n    +    \"Returns false if given null config\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(null));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme key is missing\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(emptyMockMap()));\n    +\n    +Assert.assertFalse(\n    +    \"Returns false if scheme value is null\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(serverMockMap(null)));\n    +\n    +Assert.assertTrue(\n    +    \"Returns true if scheme value is string\",\n    +    Utils.isZkAuthenticationConfiguredStormServer(serverMockMap(\"foobar\")));\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isZkAuthenticationConfiguredStormServerWithPropertyTest() {<br/>\n    +String key = \"java.security.auth.login.config\";<br/>\n    +String oldValue = System.getProperty(key);<br/>\n    +try </p>\n{\n    +    System.setProperty(\"java.security.auth.login.config\", \"anything\");\n    +    Assert.assertTrue(Utils.isZkAuthenticationConfiguredStormServer(emptyMockMap()));\n    +}\n<p> catch (Exception ignore) </p>\n{\n    +}\n<p> finally {<br/>\n    +    // reset property<br/>\n    +    if (oldValue == null) </p>\n{\n    +System.clearProperty(key);\n    +    }\n<p> else </p>\n{\n    +System.setProperty(key, oldValue);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private CuratorFrameworkFactory.Builder setupBuilder(boolean withExhibitor) </p>\n{\n    +return setupBuilder(withExhibitor, false /*without Auth*/);\n    +    }\n<p>    +<br/>\n    +    private CuratorFrameworkFactory.Builder setupBuilder(boolean withExhibitor, boolean withAuth) {<br/>\n    +CuratorFrameworkFactory.Builder builder = CuratorFrameworkFactory.builder();<br/>\n    +Map<String, Object> conf = new HashMap<String, Object>();<br/>\n    +if (withExhibitor) </p>\n{\n    +    conf.put(Config.STORM_EXHIBITOR_SERVERS,\"foo\");\n    +    conf.put(Config.STORM_EXHIBITOR_PORT, 0);\n    +    conf.put(Config.STORM_EXHIBITOR_URIPATH, \"/exhibitor\");\n    +    conf.put(Config.STORM_EXHIBITOR_POLL, 0);\n    +    conf.put(Config.STORM_EXHIBITOR_RETRY_INTERVAL, 0);\n    +    conf.put(Config.STORM_EXHIBITOR_RETRY_INTERVAL_CEILING, 0);\n    +    conf.put(Config.STORM_EXHIBITOR_RETRY_TIMES, 0);\n    +}\n<p>    +conf.put(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT, 0);<br/>\n    +conf.put(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT, 0);<br/>\n    +conf.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL, 0);<br/>\n    +conf.put(Config.STORM_ZOOKEEPER_RETRY_INTERVAL_CEILING, 0);<br/>\n    +conf.put(Config.STORM_ZOOKEEPER_RETRY_TIMES, 0);<br/>\n    +String zkStr = new String(\"zk_connection_string\");<br/>\n    +ZookeeperAuthInfo auth = null;<br/>\n    +if (withAuth) </p>\n{\n    +    auth = new ZookeeperAuthInfo(\"scheme\", \"abc\".getBytes());\n    +}\n<p>    +Utils.testSetupBuilder(builder, zkStr, conf, auth);<br/>\n    +return builder;<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void givenExhibitorServersBuilderUsesExhibitorProviderTest() </p>\n{\n    +CuratorFrameworkFactory.Builder builder = setupBuilder(true /*with exhibitor*/);\n    +Assert.assertEquals(builder.getEnsembleProvider().getConnectionString(), \"\");\n    +Assert.assertEquals(builder.getEnsembleProvider().getClass(), ExhibitorEnsembleProvider.class);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void givenNoExhibitorServersBuilderUsesFixedProviderTest() </p>\n{\n    +CuratorFrameworkFactory.Builder builder = setupBuilder(false /*without exhibitor*/);\n    +Assert.assertEquals(builder.getEnsembleProvider().getConnectionString(), \"zk_connection_string\");\n    +Assert.assertEquals(builder.getEnsembleProvider().getClass(), FixedEnsembleProvider.class);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void givenSchemeAndPayloadBuilderUsesAuthTest() </p>\n{\n    +CuratorFrameworkFactory.Builder builder = setupBuilder(false /*without exhibitor*/, true /*with auth*/);\n    +List<AuthInfo> authInfos = builder.getAuthInfos();\n    +AuthInfo authInfo = authInfos.get(0);\n    +Assert.assertEquals(authInfo.getScheme(), \"scheme\"); \n    +Assert.assertArrayEquals(authInfo.getAuth(), \"abc\".getBytes());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void parseJvmHeapMemByChildOptsTest() {<br/>\n    +Assert.assertEquals(<br/>\n    +    \"1024K results in 1 MB\",<br/>\n    +    Utils.parseJvmHeapMemByChildOpts(\"Xmx1024K\", 0.0).doubleValue(), 1.0, 0); <br/>\n    +<br/>\n    +Assert.assertEquals(<br/>\n    +    \"100M results in 100 MB\",<br/>\n    +    Utils.parseJvmHeapMemByChildOpts(\"Xmx100M\", 0.0).doubleValue(), 100.0, 0); <br/>\n    +<br/>\n    +Assert.assertEquals(<br/>\n    +    \"1G results in 1024 MB\",<br/>\n    +    Utils.parseJvmHeapMemByChildOpts(\"Xmx1G\", 0.0).doubleValue(), 1024.0, 0); <br/>\n    +<br/>\n    +Assert.assertEquals(<br/>\n    +    \"Unmatched value results in default\",<br/>\n    +    Utils.parseJvmHeapMemByChildOpts(\"Xmx1T\", 123.0).doubleValue(), 123.0, 0); <br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I guess we don't need to support 1TB of Heap just yet <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185845912","html_url":"https://github.com/apache/storm/pull/1114#issuecomment-185845912","issue_url":"https://api.github.com/repos/apache/storm/issues/1114","id":185845912,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg0NTkxMg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:22:24Z","updated_at":"2016-02-18T18:22:24Z","author_association":"CONTRIBUTOR","body":"Just a few comments nothing too big.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185845912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649550","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649550","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649550,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:22:26Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#issuecomment-185845912\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#issuecomment-185845912</a></p>\n\n<p>    Just a few comments nothing too big.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185849836","html_url":"https://github.com/apache/storm/pull/1111#issuecomment-185849836","issue_url":"https://api.github.com/repos/apache/storm/issues/1111","id":185849836,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg0OTgzNg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:30:51Z","updated_at":"2016-02-18T18:30:51Z","author_association":"CONTRIBUTOR","body":"+1.  The code needs to be upmerged, but it is a minor issue in supervisor.clj\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185849836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646612","html_url":"https://github.com/apache/storm/issues/5080#issuecomment-2612646612","issue_url":"https://api.github.com/repos/apache/storm/issues/5080","id":2612646612,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY2MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:30:52Z","updated_at":"2025-01-24T14:21:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111#issuecomment-185849836\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111#issuecomment-185849836</a></p>\n\n<p>    +1.  The code needs to be upmerged, but it is a minor issue in supervisor.clj</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871710","html_url":"https://github.com/apache/storm/issues/5380#issuecomment-2612871710","issue_url":"https://api.github.com/repos/apache/storm/issues/5380","id":2612871710,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzE3MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:32:47Z","updated_at":"2025-01-24T16:01:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user mproch opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1123\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1123</a></p>\n\n<p>    closes <a href=\"https://issues.apache.org/jira/browse/STORM-1545\" title=\"Topology Debug Event Log in Wrong Location\" class=\"issue-link\" data-issue-key=\"STORM-1545\"><del>STORM-1545</del></a></p>\n\n<p>    Use ConfigUtils.workerArtifactsRoot to determine correct path</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/mproch/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/mproch/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1545\" title=\"Topology Debug Event Log in Wrong Location\" class=\"issue-link\" data-issue-key=\"STORM-1545\"><del>STORM-1545</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1123.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1123.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1123</p>\n\n<hr />\n<p>commit dca0e8476f5e55e5b8f8f064e9e47cfd8c3e27c5<br/>\nAuthor: Maciek Próchniak <mpr@touk.pl><br/>\nDate:   2016-02-18T18:16:12Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1545\" title=\"Topology Debug Event Log in Wrong Location\" class=\"issue-link\" data-issue-key=\"STORM-1545\"><del>STORM-1545</del></a></p>\n\n<p>commit 02ae42ebe8e42da7a567c2a49309dd6ca4aa5155<br/>\nAuthor: Maciek Próchniak <mpr@touk.pl><br/>\nDate:   2016-02-18T18:32:18Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1545\" title=\"Topology Debug Event Log in Wrong Location\" class=\"issue-link\" data-issue-key=\"STORM-1545\"><del>STORM-1545</del></a> - more common code</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873032","html_url":"https://github.com/apache/storm/issues/5388#issuecomment-2612873032","issue_url":"https://api.github.com/repos/apache/storm/issues/5388","id":2612873032,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzMwMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:35:10Z","updated_at":"2025-01-24T16:02:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1110#discussion_r53359219\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1110#discussion_r53359219</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/event/EventManager.java &#8212;<br/>\n    @@ -0,0 +1,26 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.event;<br/>\n    +<br/>\n    +public interface EventManager {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we make this extend AutoClosable and change shutdown to close?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185853831","html_url":"https://github.com/apache/storm/pull/1110#issuecomment-185853831","issue_url":"https://api.github.com/repos/apache/storm/issues/1110","id":185853831,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg1MzgzMQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:42:27Z","updated_at":"2016-02-18T18:42:27Z","author_association":"CONTRIBUTOR","body":"Just one minor request, but I am +1 either way.  It would also be nice to file a JIRA to replace this with an ExecutorService.  It is probably too complex to do that here, as we need to figure out how to be able to check simulatedTime is waiting on this.\n\nAnd you need to upmerge\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185853831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873037","html_url":"https://github.com/apache/storm/issues/5388#issuecomment-2612873037","issue_url":"https://api.github.com/repos/apache/storm/issues/5388","id":2612873037,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzMwMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T18:42:28Z","updated_at":"2025-01-24T16:02:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1110#issuecomment-185853831\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1110#issuecomment-185853831</a></p>\n\n<p>    Just one minor request, but I am +1 either way.  It would also be nice to file a JIRA to replace this with an ExecutorService.  It is probably too complex to do that here, as we need to figure out how to be able to check simulatedTime is waiting on this.</p>\n\n<p>    And you need to upmerge</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185860822","html_url":"https://github.com/apache/storm/pull/1117#issuecomment-185860822","issue_url":"https://api.github.com/repos/apache/storm/issues/1117","id":185860822,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg2MDgyMg==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:00:34Z","updated_at":"2016-02-18T19:00:34Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 can you please squash multiple commits into single one.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185860822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647387","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647387","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647387,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:00:36Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#issuecomment-185860822\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#issuecomment-185860822</a></p>\n\n<p>    @abhishekagarwal87 can you please squash multiple commits into single one.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185861158","html_url":"https://github.com/apache/storm/pull/1117#issuecomment-185861158","issue_url":"https://api.github.com/repos/apache/storm/issues/1117","id":185861158,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg2MTE1OA==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:00:59Z","updated_at":"2016-02-18T19:00:59Z","author_association":"CONTRIBUTOR","body":"Thanks @revans2 - Up-merged and remove unused imports I found in my changes. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185861158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647390","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647390","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647390,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczOTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:01:00Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#issuecomment-185861158\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#issuecomment-185861158</a></p>\n\n<p>    Thanks @revans2 - Up-merged and remove unused imports I found in my changes. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653760","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653760","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653760,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:13:38Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53366140\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53366140</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj &#8212;<br/>\n    @@ -1183,7 +1184,8 @@<br/>\n   (.readBlobTo blob-store (ConfigUtils/masterStormConfKey storm-id) (FileOutputStream. (ConfigUtils/supervisorStormConfPath tmproot)) nil)<br/>\n   (finally<br/>\n     (.shutdown blob-store)))</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(FileUtils/moveDirectory (File. tmproot) (File. stormroot))<br/>\n    +    (try (FileUtils/moveDirectory (File. tmproot) (File. stormroot)) (catch Exception e))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Why are we ignoring this exception now?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653763","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653763","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653763,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:15:09Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53366400\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53366400</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/testing.clj &#8212;<br/>\n    @@ -447,8 +447,8 @@<br/>\n(select-keys component->tasks component-ids)<br/>\ncomponent->tasks)<br/>\n     task-ids (apply concat (vals component->tasks))</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>assignment (.assignment-info state storm-id nil)</li>\n\t<li>taskbeats (.taskbeats state storm-id (:task->node+port assignment))<br/>\n    +assignment (clojurify-assignment (.assignmentInfo state storm-id nil))<br/>\n    +taskbeats (.taskbeats state storm-id (:task->node+port assignment))  ;hava question?\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    What is your question here?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653770","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653770","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653770,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:17:17Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53366742\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53366742</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We should not depend on any clojure internals.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653776","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653776","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653776,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:18:07Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53366894\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53366894</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    These should just be maps, and if we need to clojurify them outside of this we can.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653783","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653783","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653783,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:18:46Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53366988\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53366988</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, APersistentMap> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +APersistentMap executorBeat =<br/>\n    +new PersistentArrayMap(new Object[] </p>\n{ RT.keyword(null, \"time-secs\"), workerHeartbeat.get_time_secs(), RT.keyword(null, \"uptime\"),\n    +workerHeartbeat.get_uptime_secs(), RT.keyword(null, \"stats\"), workerHeartbeat.get_executor_stats().get(executor) }\n<p>);<br/>\n    +executorWhb.put(executor, executorBeat);<br/>\n    +    }<br/>\n    +}<br/>\n    +return executorWhb;<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStormClusterState mkStormClusterStateImpl(Object stateStorage, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +if (stateStorage instanceof IStateStorage) </p>\n{\n    +    return new StormClusterStateImpl((IStateStorage) stateStorage, acls, context, false);\n    +}\n<p> else </p>\n{\n    +    IStateStorage Storage = _instance.mkStateStorageImpl((APersistentMap) stateStorage, (APersistentMap) stateStorage, acls, context);\n    +    return new StormClusterStateImpl(Storage, acls, context, true);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStateStorage mkStateStorageImpl(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    APersistentMap should just be Map here</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653788","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653788","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653788,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:19:00Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53367005\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53367005</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, APersistentMap> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +APersistentMap executorBeat =<br/>\n    +new PersistentArrayMap(new Object[] </p>\n{ RT.keyword(null, \"time-secs\"), workerHeartbeat.get_time_secs(), RT.keyword(null, \"uptime\"),\n    +workerHeartbeat.get_uptime_secs(), RT.keyword(null, \"stats\"), workerHeartbeat.get_executor_stats().get(executor) }\n<p>);<br/>\n    +executorWhb.put(executor, executorBeat);<br/>\n    +    }<br/>\n    +}<br/>\n    +return executorWhb;<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStormClusterState mkStormClusterStateImpl(Object stateStorage, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +if (stateStorage instanceof IStateStorage) </p>\n{\n    +    return new StormClusterStateImpl((IStateStorage) stateStorage, acls, context, false);\n    +}\n<p> else </p>\n{\n    +    IStateStorage Storage = _instance.mkStateStorageImpl((APersistentMap) stateStorage, (APersistentMap) stateStorage, acls, context);\n    +    return new StormClusterStateImpl(Storage, acls, context, true);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStateStorage mkStateStorageImpl(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +String className = null;<br/>\n    +IStateStorage stateStorage = null;<br/>\n    +if (config.get(Config.STORM_CLUSTER_STATE_STORE) != null) </p>\n{\n    +    className = (String) config.get(Config.STORM_CLUSTER_STATE_STORE);\n    +}\n<p> else </p>\n{\n    +    className = \"org.apache.storm.cluster.ZKStateStorageFactory\";\n    +}\n<p>    +Class clazz = Class.forName(className);<br/>\n    +StateStorageFactory storageFactory = (StateStorageFactory) clazz.newInstance();<br/>\n    +stateStorage = storageFactory.mkStore(config, auth_conf, acls, context);<br/>\n    +return stateStorage;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static IStateStorage mkStateStorage(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    APersistentMap should just be Map here</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653794","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653794","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653794,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:26:24Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53368270\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53368270</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Actually the return value should probably be something like Map<ExecutorInfo, ExecutorBeat> where ExecutorBeat is something like.</p>\n\n<p>    ```<br/>\n    public class ExecutorBeat </p>\n{\npublic final long timeSecs;\npublic final long uptime;\npublic final ExecutorStats stats;\n    }\n<p>    ```</p>\n\n<p>    Then you can have something translate it to the clojure map if needed</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653799","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653799","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653799,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:27:14Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53368387\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53368387</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, APersistentMap> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +APersistentMap executorBeat =<br/>\n    +new PersistentArrayMap(new Object[] </p>\n{ RT.keyword(null, \"time-secs\"), workerHeartbeat.get_time_secs(), RT.keyword(null, \"uptime\"),\n    +workerHeartbeat.get_uptime_secs(), RT.keyword(null, \"stats\"), workerHeartbeat.get_executor_stats().get(executor) }\n<p>);<br/>\n    +executorWhb.put(executor, executorBeat);<br/>\n    +    }<br/>\n    +}<br/>\n    +return executorWhb;<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStormClusterState mkStormClusterStateImpl(Object stateStorage, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +if (stateStorage instanceof IStateStorage) </p>\n{\n    +    return new StormClusterStateImpl((IStateStorage) stateStorage, acls, context, false);\n    +}\n<p> else </p>\n{\n    +    IStateStorage Storage = _instance.mkStateStorageImpl((APersistentMap) stateStorage, (APersistentMap) stateStorage, acls, context);\n    +    return new StormClusterStateImpl(Storage, acls, context, true);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStateStorage mkStateStorageImpl(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +String className = null;<br/>\n    +IStateStorage stateStorage = null;<br/>\n    +if (config.get(Config.STORM_CLUSTER_STATE_STORE) != null) </p>\n{\n    +    className = (String) config.get(Config.STORM_CLUSTER_STATE_STORE);\n    +}\n<p> else </p>\n{\n    +    className = \"org.apache.storm.cluster.ZKStateStorageFactory\";\n    +}\n<p>    +Class clazz = Class.forName(className);<br/>\n    +StateStorageFactory storageFactory = (StateStorageFactory) clazz.newInstance();<br/>\n    +stateStorage = storageFactory.mkStore(config, auth_conf, acls, context);<br/>\n    +return stateStorage;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static IStateStorage mkStateStorage(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception </p>\n{\n    +return _instance.mkStateStorageImpl(config, auth_conf, acls, context);\n    +    }\n<p>    +<br/>\n    +    public static IStormClusterState mkStormClusterState(Object StateStorage, List<ACL> acls, ClusterStateContext context) throws Exception </p>\n{\n    +return _instance.mkStormClusterStateImpl(StateStorage, acls, context);\n    +    }\n<p>    +<br/>\n    +    // TO be remove<br/>\n    +    public static <K, V> HashMap<V, List<K>> reverseMap(Map<K, V> map) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Please remove this there is a version in Utils already.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653807","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653807","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653807,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:27:57Z","updated_at":"2025-01-24T14:24:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53368510\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53368510</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, APersistentMap> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +APersistentMap executorBeat =<br/>\n    +new PersistentArrayMap(new Object[] </p>\n{ RT.keyword(null, \"time-secs\"), workerHeartbeat.get_time_secs(), RT.keyword(null, \"uptime\"),\n    +workerHeartbeat.get_uptime_secs(), RT.keyword(null, \"stats\"), workerHeartbeat.get_executor_stats().get(executor) }\n<p>);<br/>\n    +executorWhb.put(executor, executorBeat);<br/>\n    +    }<br/>\n    +}<br/>\n    +return executorWhb;<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStormClusterState mkStormClusterStateImpl(Object stateStorage, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +if (stateStorage instanceof IStateStorage) </p>\n{\n    +    return new StormClusterStateImpl((IStateStorage) stateStorage, acls, context, false);\n    +}\n<p> else </p>\n{\n    +    IStateStorage Storage = _instance.mkStateStorageImpl((APersistentMap) stateStorage, (APersistentMap) stateStorage, acls, context);\n    +    return new StormClusterStateImpl(Storage, acls, context, true);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public IStateStorage mkStateStorageImpl(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +String className = null;<br/>\n    +IStateStorage stateStorage = null;<br/>\n    +if (config.get(Config.STORM_CLUSTER_STATE_STORE) != null) </p>\n{\n    +    className = (String) config.get(Config.STORM_CLUSTER_STATE_STORE);\n    +}\n<p> else </p>\n{\n    +    className = \"org.apache.storm.cluster.ZKStateStorageFactory\";\n    +}\n<p>    +Class clazz = Class.forName(className);<br/>\n    +StateStorageFactory storageFactory = (StateStorageFactory) clazz.newInstance();<br/>\n    +stateStorage = storageFactory.mkStore(config, auth_conf, acls, context);<br/>\n    +return stateStorage;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static IStateStorage mkStateStorage(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context) throws Exception </p>\n{\n    +return _instance.mkStateStorageImpl(config, auth_conf, acls, context);\n    +    }\n<p>    +<br/>\n    +    public static IStormClusterState mkStormClusterState(Object StateStorage, List<ACL> acls, ClusterStateContext context) throws Exception </p>\n{\n    +return _instance.mkStormClusterStateImpl(StateStorage, acls, context);\n    +    }\n<p>    +<br/>\n    +    // TO be remove<br/>\n    +    public static <K, V> HashMap<V, List<K>> reverseMap(Map<K, V> map) {<br/>\n    +HashMap<V, List<K>> rtn = new HashMap<V, List<K>>();<br/>\n    +if (map == null) </p>\n{\n    +    return rtn;\n    +}\n<p>    +for (Map.Entry<K, V> entry : map.entrySet()) {<br/>\n    +    K key = entry.getKey();<br/>\n    +    V val = entry.getValue();<br/>\n    +    List<K> list = rtn.get(val);<br/>\n    +    if (list == null) </p>\n{\n    +list = new ArrayList<K>();\n    +rtn.put(entry.getValue(), list);\n    +    }\n<p>    +    list.add(key);<br/>\n    +}<br/>\n    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String StringifyError(Throwable error) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we make it be a lower case 's' so it follows the java naming convention.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653812","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653812","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653812,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:28:15Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53368561\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53368561</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/IStateStorage.java &#8212;<br/>\n    @@ -18,12 +18,14 @@<br/>\n     package org.apache.storm.cluster;</p>\n\n<p>     import clojure.lang.APersistentMap;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    No clojure internals here either please.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653819","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653819","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653819,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:29:06Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53368693\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53368693</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/IStateStorage.java &#8212;<br/>\n    @@ -18,12 +18,14 @@<br/>\n     package org.apache.storm.cluster;</p>\n\n<p>     import clojure.lang.APersistentMap;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Because you didn't add this, we can do it in a follow in JIRA if you want.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185880507","html_url":"https://github.com/apache/storm/pull/1117#issuecomment-185880507","issue_url":"https://api.github.com/repos/apache/storm/issues/1117","id":185880507,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg4MDUwNw==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:30:47Z","updated_at":"2016-02-18T19:30:47Z","author_association":"CONTRIBUTOR","body":"@harshach I am running into some issues with squashing so I am closing this PR and opening another with exactly same changes. The other PR has just one commit\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185880507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647396","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647396","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647396,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczOTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:30:49Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117#issuecomment-185880507\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117#issuecomment-185880507</a></p>\n\n<p>    @harshach I am running into some issues with squashing so I am closing this PR and opening another with exactly same changes. The other PR has just one commit</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647399","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647399","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647399,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDczOTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:30:49Z","updated_at":"2025-01-24T14:21:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1117\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1117</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647403","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647403","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647403,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc0MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:30:58Z","updated_at":"2025-01-24T14:21:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user abhishekagarwal87 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1124\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1124</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1246\" title=\"port backtype.storm.local-state to java\" class=\"issue-link\" data-issue-key=\"STORM-1246\"><del>STORM-1246</del></a>: port backtype.storm.local-state to java</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/abhishekagarwal87/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/abhishekagarwal87/storm</a> local-state2</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1124.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1124.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1124</p>\n\n<hr />\n<p>commit 4bf331d668c279f2f6e462c1bfcaebffa06082f1<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-02-18T19:27:40Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1246\" title=\"port backtype.storm.local-state to java\" class=\"issue-link\" data-issue-key=\"STORM-1246\"><del>STORM-1246</del></a>: port backtype.storm.local-state to java</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653828","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653828","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653828,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:31:50Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53369187\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53369187</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/StormClusterStateImpl.java &#8212;<br/>\n    @@ -0,0 +1,687 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.*;<br/>\n    +import org.apache.commons.lang.StringUtils;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.callback.ZKStateChangedCallback;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Time;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.*;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class StormClusterStateImpl implements IStormClusterState {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(StormClusterStateImpl.class);<br/>\n    +<br/>\n    +    private IStateStorage stateStorage;<br/>\n    +<br/>\n    +    private ConcurrentHashMap<String, IFn> assignmentInfoCallback;<br/>\n    +    private ConcurrentHashMap<String, IFn> assignmentInfoWithVersionCallback;<br/>\n    +    private ConcurrentHashMap<String, IFn> assignmentVersionCallback;<br/>\n    +    private AtomicReference<IFn> supervisorsCallback;<br/>\n    +    // we want to reigister a topo directory getChildren callback for all workers of this dir<br/>\n    +    private ConcurrentHashMap<String, IFn> backPressureCallback;<br/>\n    +    private AtomicReference<IFn> assignmentsCallback;<br/>\n    +    private ConcurrentHashMap<String, IFn> stormBaseCallback;<br/>\n    +    private AtomicReference<IFn> blobstoreCallback;<br/>\n    +    private ConcurrentHashMap<String, IFn> credentialsCallback;<br/>\n    +    private ConcurrentHashMap<String, IFn> logConfigCallback;<br/>\n    +<br/>\n    +    private List<ACL> acls;<br/>\n    +    private String stateId;<br/>\n    +    private boolean solo;<br/>\n    +<br/>\n    +    public StormClusterStateImpl(IStateStorage StateStorage, List<ACL> acls, ClusterStateContext context, boolean solo) throws Exception {<br/>\n    +<br/>\n    +this.stateStorage = StateStorage;<br/>\n    +this.solo = solo;<br/>\n    +this.acls = acls;<br/>\n    +<br/>\n    +assignmentInfoCallback = new ConcurrentHashMap<>();<br/>\n    +assignmentInfoWithVersionCallback = new ConcurrentHashMap<>();<br/>\n    +assignmentVersionCallback = new ConcurrentHashMap<>();<br/>\n    +supervisorsCallback = new AtomicReference<>();<br/>\n    +backPressureCallback = new ConcurrentHashMap<>();<br/>\n    +assignmentsCallback = new AtomicReference<>();<br/>\n    +stormBaseCallback = new ConcurrentHashMap<>();<br/>\n    +credentialsCallback = new ConcurrentHashMap<>();<br/>\n    +logConfigCallback = new ConcurrentHashMap<>();<br/>\n    +blobstoreCallback = new AtomicReference<>();<br/>\n    +<br/>\n    +stateId = this.stateStorage.register(new ZKStateChangedCallback() {<br/>\n    +<br/>\n    +    public void changed(Watcher.Event.EventType type, String path) {<br/>\n    +List<String> toks = Zookeeper.tokenizePath(path);<br/>\n    +int size = toks.size();<br/>\n    +if (size >= 1) {<br/>\n    +    String root = toks.get(0);<br/>\n    +    if (root.equals(ClusterUtils.ASSIGNMENTS_ROOT)) {<br/>\n    +if (size == 1) </p>\n{\n    +    // set null and get the old value\n    +    issueCallback(assignmentsCallback);\n    +}\n<p> else </p>\n{\n    +    issueMapCallback(assignmentInfoCallback, toks.get(1));\n    +    issueMapCallback(assignmentVersionCallback, toks.get(1));\n    +    issueMapCallback(assignmentInfoWithVersionCallback, toks.get(1));\n    +}\n<p>    +<br/>\n    +    } else if (root.equals(ClusterUtils.SUPERVISORS_ROOT)) </p>\n{\n    +issueCallback(supervisorsCallback);\n    +    }\n<p> else if (root.equals(ClusterUtils.BLOBSTORE_ROOT)) </p>\n{\n    +issueCallback(blobstoreCallback);\n    +    }\n<p> else if (root.equals(ClusterUtils.STORMS_ROOT) && size > 1) </p>\n{\n    +issueMapCallback(stormBaseCallback, toks.get(1));\n    +    }\n<p> else if (root.equals(ClusterUtils.CREDENTIALS_ROOT) && size > 1) </p>\n{\n    +issueMapCallback(credentialsCallback, toks.get(1));\n    +    }\n<p> else if (root.equals(ClusterUtils.LOGCONFIG_ROOT) && size > 1) </p>\n{\n    +issueMapCallback(logConfigCallback, toks.get(1));\n    +    } else if (root.equals(ClusterUtils.BACKPRESSURE_ROOT) && size > 1) {    +issueMapCallback(logConfigCallback, toks.get(1));    +    }\n<p> else {<br/>\n    +LOG.error(\"{} Unknown callback for subtree {}\", new RuntimeException(\"Unknown callback for this path\"), path);<br/>\n    +Runtime.getRuntime().exit(30);<br/>\n    +    }<br/>\n    +<br/>\n    +}<br/>\n    +<br/>\n    +return;<br/>\n    +    }<br/>\n    +<br/>\n    +});<br/>\n    +<br/>\n    +String[] pathlist = </p>\n{ ClusterUtils.ASSIGNMENTS_SUBTREE, ClusterUtils.STORMS_SUBTREE, ClusterUtils.SUPERVISORS_SUBTREE, ClusterUtils.WORKERBEATS_SUBTREE,\n    +ClusterUtils.ERRORS_SUBTREE, ClusterUtils.BLOBSTORE_SUBTREE, ClusterUtils.NIMBUSES_SUBTREE, ClusterUtils.LOGCONFIG_SUBTREE }\n<p>;<br/>\n    +for (String path : pathlist) </p>\n{\n    +    this.stateStorage.mkdirs(path, acls);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    protected void issueCallback(AtomicReference<IFn> cb) {<br/>\n    +IFn callback = cb.getAndSet(null);<br/>\n    +if (callback != null)<br/>\n    +    callback.invoke();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Anything that calls invoke with no parameters should be a Runnable not an IFn.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185885496","html_url":"https://github.com/apache/storm/pull/1081#issuecomment-185885496","issue_url":"https://api.github.com/repos/apache/storm/issues/1081","id":185885496,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTg4NTQ5Ng==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:41:00Z","updated_at":"2016-02-18T19:41:00Z","author_association":"CONTRIBUTOR","body":"This is a really big pull request and things are changing all of the time with others merging things in.  Perhaps we should break this up into smaller pieces.  Like just doing each state factory one at a time, and then some of the other pieces?  IF you want to keep this all together that is OK, but it is going to take longer to really review it and get it in.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185885496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653833","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653833","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653833,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T19:41:02Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#issuecomment-185885496\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#issuecomment-185885496</a></p>\n\n<p>    This is a really big pull request and things are changing all of the time with others merging things in.  Perhaps we should break this up into smaller pieces.  Like just doing each state factory one at a time, and then some of the other pieces?  IF you want to keep this all together that is OK, but it is going to take longer to really review it and get it in.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185907030","html_url":"https://github.com/apache/storm/pull/1124#issuecomment-185907030","issue_url":"https://api.github.com/repos/apache/storm/issues/1124","id":185907030,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkwNzAzMA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:37:56Z","updated_at":"2016-02-18T20:37:56Z","author_association":"CONTRIBUTOR","body":"+1. Thanks for the updated patch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185907030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647408","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647408","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647408,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc0MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:37:57Z","updated_at":"2025-01-24T14:21:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1124#issuecomment-185907030\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1124#issuecomment-185907030</a></p>\n\n<p>    +1. Thanks for the updated patch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185907734","html_url":"https://github.com/apache/storm/pull/1116#issuecomment-185907734","issue_url":"https://api.github.com/repos/apache/storm/issues/1116","id":185907734,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkwNzczNA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:38:41Z","updated_at":"2016-02-18T20:38:41Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185907734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867715","html_url":"https://github.com/apache/storm/issues/5357#issuecomment-2612867715","issue_url":"https://api.github.com/repos/apache/storm/issues/5357","id":2612867715,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc3MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:38:42Z","updated_at":"2025-01-24T16:00:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1116#issuecomment-185907734\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1116#issuecomment-185907734</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185908580","html_url":"https://github.com/apache/storm/pull/1084#issuecomment-185908580","issue_url":"https://api.github.com/repos/apache/storm/issues/1084","id":185908580,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkwODU4MA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:39:34Z","updated_at":"2016-02-18T20:39:34Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185908580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866808","html_url":"https://github.com/apache/storm/issues/5351#issuecomment-2612866808","issue_url":"https://api.github.com/repos/apache/storm/issues/5351","id":2612866808,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjY4MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:39:36Z","updated_at":"2025-01-24T15:59:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1084#issuecomment-185908580\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1084#issuecomment-185908580</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866814","html_url":"https://github.com/apache/storm/issues/5351#issuecomment-2612866814","issue_url":"https://api.github.com/repos/apache/storm/issues/5351","id":2612866814,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjY4MTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T20:56:43Z","updated_at":"2025-01-24T15:59:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1084\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1084</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185929123","html_url":"https://github.com/apache/storm/pull/1119#issuecomment-185929123","issue_url":"https://api.github.com/repos/apache/storm/issues/1119","id":185929123,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkyOTEyMw==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:24:44Z","updated_at":"2016-02-18T21:24:44Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185929123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873754","html_url":"https://github.com/apache/storm/issues/5393#issuecomment-2612873754","issue_url":"https://api.github.com/repos/apache/storm/issues/5393","id":2612873754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzM3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:24:47Z","updated_at":"2025-01-24T16:02:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1119#issuecomment-185929123\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1119#issuecomment-185929123</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649554","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649554","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649554,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:38:50Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53386858\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53386858</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/TimeTest.java &#8212;<br/>\n    @@ -0,0 +1,98 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +public class TimeTest {<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void secsToMillisLongTest() </p>\n{\n    +Assert.assertEquals(Time.secsToMillisLong(0), 0);\n    +Assert.assertEquals(Time.secsToMillisLong(0.002), 2);\n    +Assert.assertEquals(Time.secsToMillisLong(1), 1000);\n    +Assert.assertEquals(Time.secsToMillisLong(1.08), 1080);\n    +Assert.assertEquals(Time.secsToMillisLong(10), 10000);\n    +Assert.assertEquals(Time.secsToMillisLong(10.1), 10100);\n    +    }\n<p>    +<br/>\n    +    @Test(expected=IllegalStateException.class)<br/>\n    +    public void ifNotSimulatingAdvanceTimeThrows() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can we end this with test just make it consistent with other test names</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649558","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649558","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649558,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:39:19Z","updated_at":"2025-01-24T14:22:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#discussion_r53386906\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#discussion_r53386906</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/utils/TimeTest.java &#8212;<br/>\n    @@ -0,0 +1,98 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.Assert;<br/>\n    +<br/>\n    +public class TimeTest {<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void secsToMillisLongTest() </p>\n{\n    +Assert.assertEquals(Time.secsToMillisLong(0), 0);\n    +Assert.assertEquals(Time.secsToMillisLong(0.002), 2);\n    +Assert.assertEquals(Time.secsToMillisLong(1), 1000);\n    +Assert.assertEquals(Time.secsToMillisLong(1.08), 1080);\n    +Assert.assertEquals(Time.secsToMillisLong(10), 10000);\n    +Assert.assertEquals(Time.secsToMillisLong(10.1), 10100);\n    +    }\n<p>    +<br/>\n    +    @Test(expected=IllegalStateException.class)<br/>\n    +    public void ifNotSimulatingAdvanceTimeThrows() </p>\n{\n    +Time.advanceTime(1000);\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void isSimulatingReturnsTrueDuringSimulationTest() </p>\n{\n    +Assert.assertFalse(Time.isSimulating());\n    +Time.startSimulating();\n    +Assert.assertTrue(Time.isSimulating());\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldNotAdvanceTimeTest() </p>\n{\n    +Time.startSimulating();\n    +long current = Time.currentTimeMillis();\n    +Time.advanceTime(0);\n    +Assert.assertEquals(Time.deltaMs(current), 0);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldAdvanceForwardTest() </p>\n{\n    +Time.startSimulating();\n    +long current = Time.currentTimeMillis();\n    +Time.advanceTime(1000);\n    +Assert.assertEquals(Time.deltaMs(current), 1000);\n    +Time.advanceTime(500);\n    +Assert.assertEquals(Time.deltaMs(current), 1500);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void shouldAdvanceBackwardsTest() </p>\n{\n    +Time.startSimulating();\n    +long current = Time.currentTimeMillis();\n    +Time.advanceTime(1000);\n    +Assert.assertEquals(Time.deltaMs(current), 1000);\n    +Time.advanceTime(-1500);\n    +Assert.assertEquals(Time.deltaMs(current), -500);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void deltaSecsConvertsToSecondsTest() </p>\n{\n    +Time.startSimulating();\n    +int current = Time.currentTimeSecs();\n    +Time.advanceTime(1000);\n    +Assert.assertEquals(Time.deltaSecs(current), 1);\n    +Time.stopSimulating();\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void deltaSecsTruncatesFractionalSeconds() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    same here end with Test?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185934259","html_url":"https://github.com/apache/storm/pull/1114#issuecomment-185934259","issue_url":"https://api.github.com/repos/apache/storm/issues/1114","id":185934259,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkzNDI1OQ==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:40:09Z","updated_at":"2016-02-18T21:40:09Z","author_association":"NONE","body":"minor comments otherwise LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185934259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649563","html_url":"https://github.com/apache/storm/issues/5092#issuecomment-2612649563","issue_url":"https://api.github.com/repos/apache/storm/issues/5092","id":2612649563,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk1NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:40:12Z","updated_at":"2025-01-24T14:22:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1114#issuecomment-185934259\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1114#issuecomment-185934259</a></p>\n\n<p>    minor comments otherwise LGTM</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185935749","html_url":"https://github.com/apache/storm/pull/1121#issuecomment-185935749","issue_url":"https://api.github.com/repos/apache/storm/issues/1121","id":185935749,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTkzNTc0OQ==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:45:53Z","updated_at":"2016-02-18T21:45:53Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185935749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873511","html_url":"https://github.com/apache/storm/issues/5391#issuecomment-2612873511","issue_url":"https://api.github.com/repos/apache/storm/issues/5391","id":2612873511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzM1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T21:45:54Z","updated_at":"2025-01-24T16:02:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1121#issuecomment-185935749\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1121#issuecomment-185935749</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647413","html_url":"https://github.com/apache/storm/issues/5083#issuecomment-2612647413","issue_url":"https://api.github.com/repos/apache/storm/issues/5083","id":2612647413,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc0MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T22:03:26Z","updated_at":"2025-01-24T14:21:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1124\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1124</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/185945096","html_url":"https://github.com/apache/storm/pull/1096#issuecomment-185945096","issue_url":"https://api.github.com/repos/apache/storm/issues/1096","id":185945096,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NTk0NTA5Ng==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T22:12:11Z","updated_at":"2016-02-18T22:12:11Z","author_association":"NONE","body":"LGTM +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/185945096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874291","html_url":"https://github.com/apache/storm/issues/5396#issuecomment-2612874291","issue_url":"https://api.github.com/repos/apache/storm/issues/5396","id":2612874291,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzQyOTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-18T23:24:54Z","updated_at":"2025-01-24T16:03:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1125\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1125</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1561\" title=\"Supervisor should relaunch worker if assignments have changed\" class=\"issue-link\" data-issue-key=\"STORM-1561\"><del>STORM-1561</del></a> Supervisor should kill/restart if existing worker has changed assignments</p>\n\n<p>    Currently, supervisor validates new assignments against existing assignments by port. It should also check on the same port - if executors have changed. The new executors won't have any threads associated with them in the worker.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1561</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1125.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1125.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1125</p>\n\n<hr />\n<p>commit a26f81187c3ea54e05584d31b5eedb66d9600a17<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-18T19:25:17Z</p>\n\n<p>    Supervisor should kill/restart if existing worker has changed assignments</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/186005385","html_url":"https://github.com/apache/storm/pull/1111#issuecomment-186005385","issue_url":"https://api.github.com/repos/apache/storm/issues/1111","id":186005385,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjAwNTM4NQ==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T01:32:08Z","updated_at":"2016-02-19T01:32:08Z","author_association":"CONTRIBUTOR","body":"@longdafeng @revans2 @ppoulosk  thank you for your review! I have addressed all your comments.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/186005385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646621","html_url":"https://github.com/apache/storm/issues/5080#issuecomment-2612646621","issue_url":"https://api.github.com/repos/apache/storm/issues/5080","id":2612646621,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY2MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T01:32:10Z","updated_at":"2025-01-24T14:21:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111#issuecomment-186005385\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111#issuecomment-186005385</a></p>\n\n<p>    @longdafeng @revans2 @ppoulosk  thank you for your review! I have addressed all your comments.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873039","html_url":"https://github.com/apache/storm/issues/5388#issuecomment-2612873039","issue_url":"https://api.github.com/repos/apache/storm/issues/5388","id":2612873039,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzMwMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:12:26Z","updated_at":"2025-01-24T16:02:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1110#discussion_r53414672\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1110#discussion_r53414672</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/event/EventManager.java &#8212;<br/>\n    @@ -0,0 +1,26 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.event;<br/>\n    +<br/>\n    +public interface EventManager {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @revans2  thanks for your review, I have addressed your comments</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/186015740","html_url":"https://github.com/apache/storm/pull/1110#issuecomment-186015740","issue_url":"https://api.github.com/repos/apache/storm/issues/1110","id":186015740,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjAxNTc0MA==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:16:23Z","updated_at":"2016-02-19T02:16:23Z","author_association":"CONTRIBUTOR","body":"@revans2  It is nice to file a JIRA to replace this with an ExecutorService.  I am nice to follow up the JIRA.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/186015740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873045","html_url":"https://github.com/apache/storm/issues/5388#issuecomment-2612873045","issue_url":"https://api.github.com/repos/apache/storm/issues/5388","id":2612873045,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzMwNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:16:25Z","updated_at":"2025-01-24T16:02:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1110#issuecomment-186015740\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1110#issuecomment-186015740</a></p>\n\n<p>    @revans2  It is nice to file a JIRA to replace this with an ExecutorService.  I am nice to follow up the JIRA.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612873045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/186023847","html_url":"https://github.com/apache/storm/pull/1100#issuecomment-186023847","issue_url":"https://api.github.com/repos/apache/storm/issues/1100","id":186023847,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjAyMzg0Nw==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:56:08Z","updated_at":"2016-02-19T03:09:55Z","author_association":"NONE","body":"Hi @revans2, really appreciate your comments! I addressed your comment. And filed a JIRA - [Storm-1563](https://issues.apache.org/jira/browse/STORM-1563) to change all the Shutdownable to be AutoClosable in storm. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/186023847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644387","html_url":"https://github.com/apache/storm/issues/5067#issuecomment-2612644387","issue_url":"https://api.github.com/repos/apache/storm/issues/5067","id":2612644387,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQzODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:56:09Z","updated_at":"2025-01-24T14:20:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1100#issuecomment-186023847\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1100#issuecomment-186023847</a></p>\n\n<p>    Hi @revans2, really appreciate your comments! I addressed your comment in <span class=\"error\">&#91;Storm-1563&#93;</span>(<a href=\"https://issues.apache.org/jira/browse/STORM-1563\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1563</a>) to change all the Shutdownable to be AutoClosable in storm. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646625","html_url":"https://github.com/apache/storm/issues/5080#issuecomment-2612646625","issue_url":"https://api.github.com/repos/apache/storm/issues/5080","id":2612646625,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY2MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:58:16Z","updated_at":"2025-01-24T14:21:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646629","html_url":"https://github.com/apache/storm/issues/5080#issuecomment-2612646629","issue_url":"https://api.github.com/repos/apache/storm/issues/5080","id":2612646629,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY2Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T02:58:18Z","updated_at":"2025-01-24T14:21:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user hustfxj reopened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1243\" title=\"port backtype.storm.command.healthcheck to java\" class=\"issue-link\" data-issue-key=\"STORM-1243\"><del>STORM-1243</del></a> port HealthCheck to java</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/hustfxj/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/hustfxj/storm</a> health</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1111</p>\n\n<hr />\n<p>commit 0f4b7522dfeeae33fdadf6ec59ace97769b9ffe4<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-16T09:18:35Z</p>\n\n<p>    port HealthCheck to java</p>\n\n<p>commit f343b7d113fbbba2eef0f810f4f20dc955fb8b65<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-16T11:19:28Z</p>\n\n<p>    update storm.py</p>\n\n<p>commit 9635e391c380ca160cb408e28eb3364b42851a60<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-17T01:42:15Z</p>\n\n<p>    resolve a few very minor style issues</p>\n\n<p>commit 0803c484ebbf7d572aa3d31ca10794617e4d4bad<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-19T01:08:15Z</p>\n\n<p>    Merge remote-tracking branch 'remotes/origin/master' into health</p>\n\n<p>commit 4f2d3a96bc4cd19a66529665063b6e8ce406b448<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-19T01:32:28Z</p>\n\n<p>    Merge branch 'master' into health<br/>\n    using log, standard output (System.out.println) is likely to be redirect to null based on @longdafeng</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653840","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653840","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653840,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:01:53Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53417863\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53417863</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj &#8212;<br/>\n    @@ -1183,7 +1184,8 @@<br/>\n   (.readBlobTo blob-store (ConfigUtils/masterStormConfKey storm-id) (FileOutputStream. (ConfigUtils/supervisorStormConfPath tmproot)) nil)<br/>\n   (finally<br/>\n     (.shutdown blob-store)))</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(FileUtils/moveDirectory (File. tmproot) (File. stormroot))<br/>\n    +    (try (FileUtils/moveDirectory (File. tmproot) (File. stormroot)) (catch Exception e))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Sorry, I forget remove the “try”.   It can't pass testing at \"FileUtils/moveDirectory\" because the windows operating system. I will ignore this exception per test.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653849","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653849","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653849,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:05:12Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53418033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53418033</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/testing.clj &#8212;<br/>\n    @@ -447,8 +447,8 @@<br/>\n(select-keys component->tasks component-ids)<br/>\ncomponent->tasks)<br/>\n     task-ids (apply concat (vals component->tasks))</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>assignment (.assignment-info state storm-id nil)</li>\n\t<li>taskbeats (.taskbeats state storm-id (:task->node+port assignment))<br/>\n    +assignment (clojurify-assignment (.assignmentInfo state storm-id nil))<br/>\n    +taskbeats (.taskbeats state storm-id (:task->node+port assignment))  ;hava question?\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    forget remove the comments. Thanks for your reminder.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874380","html_url":"https://github.com/apache/storm/issues/5397#issuecomment-2612874380","issue_url":"https://api.github.com/repos/apache/storm/issues/5397","id":2612874380,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzQzODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:10:41Z","updated_at":"2025-01-24T16:03:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=longdafeng\">longdafeng</a>:</i>\n<p>Right now, ISubmitterHook is just for notify client. At the same time, the thrift api can also fetch metadata information of topology for client. <br/>\nBut add one plugin to Nimbus to hook some thrift RPC function make sense. it can do a lot of monitor actions. </p>\n\n<p>Welcome other opinion. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646637","html_url":"https://github.com/apache/storm/issues/5080#issuecomment-2612646637","issue_url":"https://api.github.com/repos/apache/storm/issues/5080","id":2612646637,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY2Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:12:15Z","updated_at":"2025-01-24T14:21:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1111\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1111</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/186030326","html_url":"https://github.com/apache/storm/pull/546#issuecomment-186030326","issue_url":"https://api.github.com/repos/apache/storm/issues/546","id":186030326,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjAzMDMyNg==","user":{"login":"gavinfish","id":6169722,"node_id":"MDQ6VXNlcjYxNjk3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/6169722?v=4","gravatar_id":"","url":"https://api.github.com/users/gavinfish","html_url":"https://github.com/gavinfish","followers_url":"https://api.github.com/users/gavinfish/followers","following_url":"https://api.github.com/users/gavinfish/following{/other_user}","gists_url":"https://api.github.com/users/gavinfish/gists{/gist_id}","starred_url":"https://api.github.com/users/gavinfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gavinfish/subscriptions","organizations_url":"https://api.github.com/users/gavinfish/orgs","repos_url":"https://api.github.com/users/gavinfish/repos","events_url":"https://api.github.com/users/gavinfish/events{/privacy}","received_events_url":"https://api.github.com/users/gavinfish/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:28:47Z","updated_at":"2016-02-19T03:28:47Z","author_association":"NONE","body":"Flux is a great job! \n\nI want to know how can I update my topology when the configuration has been changed without restarting it, something like hot deployment in tomcat?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/186030326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612511330","html_url":"https://github.com/apache/storm/issues/4402#issuecomment-2612511330","issue_url":"https://api.github.com/repos/apache/storm/issues/4402","id":2612511330,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTEzMzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T03:28:51Z","updated_at":"2025-01-24T13:17:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user gavinfish commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/546#issuecomment-186030326\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/546#issuecomment-186030326</a></p>\n\n<p>    Flux is a great job! </p>\n\n<p>    I want to know how can I update my topology when the configuration has been changed without restarting it, something like hot deployment in tomcat?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612511330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653856","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653856","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653856,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM4NTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T06:45:01Z","updated_at":"2025-01-24T14:24:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r53427670\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r53427670</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,282 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.PrintWriter;<br/>\n    +import java.io.StringWriter;<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +     * @param executors<br/>\n    +     * @param workerHeartbeat<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Map<ExecutorInfo, APersistentMap> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    should ExecutorBeat  be generated by thrift ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871715","html_url":"https://github.com/apache/storm/issues/5380#issuecomment-2612871715","issue_url":"https://api.github.com/repos/apache/storm/issues/5380","id":2612871715,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzE3MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T06:50:14Z","updated_at":"2025-01-24T16:01:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1123#discussion_r53427904\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1123#discussion_r53427904</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/metric/FileBasedEventLogger.java &#8212;<br/>\n    @@ -79,26 +80,18 @@ public void run() {</p>\n\n<p> @Override<br/>\n public void prepare(Map stormConf, TopologyContext context) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>String logDir; // storm local directory<br/>\n     String stormId = context.getStormId();<br/>\n     int port = context.getThisWorkerPort();</li>\n\t<li>if ((logDir = System.getProperty(\"storm.local.dir\")) == null &&</li>\n\t<li>(logDir = (String)stormConf.get(\"storm.local.dir\")) == null) \n{\n    -    String msg = \"Could not determine the directory to log events.\";\n    -    LOG.error(msg);\n    -    throw new RuntimeException(msg);\n    -}\n<p> else {</p></li>\n\t<li>LOG.info(\"FileBasedEventLogger log directory {}.\", logDir);</li>\n\t<li>}<br/>\n    +<br/>\n    +String workersArtifactRoot = ConfigUtils.workerArtifactsRoot(stormConf, stormId, port);</li>\n</ul>\n\n\n<p>     /*</p>\n<ul>\n\t<li>Include the topology name & worker port in the file name so that</li>\n\t<li>multiple event loggers can log independently.<br/>\n      */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Path path = Paths.get(logDir, \"workers-artifacts\", stormId, Integer.toString(port), \"events.log\");<br/>\n    +Path path = Paths.get(workersArtifactRoot, \"events.log\");<br/>\n     if (!path.isAbsolute()) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    <span class=\"error\">&#91;ConfigUtils&#93;</span>(<a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java#L407\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java#L407</a>) appears to take care of the relative path, so this check could be removed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/186090463","html_url":"https://github.com/apache/storm/pull/1123#issuecomment-186090463","issue_url":"https://api.github.com/repos/apache/storm/issues/1123","id":186090463,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NjA5MDQ2Mw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-19T06:57:11Z","updated_at":"2016-02-19T06:57:11Z","author_association":"CONTRIBUTOR","body":"Can you update the PR title ?\n\nTheres a PR https://github.com/apache/storm/pull/1109 for the same issue but it does not make use of the ConfigUtils since it had to be merged to 1.x as well. Since this PR is a better fix for 2.0, I will close https://github.com/apache/storm/pull/1109 and raise that against 1.x-branch.\n\n+1 to merge against master (not 1.x-branch) once review comment is addressed. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/186090463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]