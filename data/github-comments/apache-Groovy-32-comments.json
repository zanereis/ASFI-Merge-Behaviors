[{"url":"https://api.github.com/repos/apache/groovy/issues/comments/828824138","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-828824138","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":828824138,"node_id":"MDEyOklzc3VlQ29tbWVudDgyODgyNDEzOA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-28T22:31:51Z","updated_at":"2021-04-28T22:31:51Z","author_association":"CONTRIBUTOR","body":"One thing which we have found in the past when moving DGM methods is that some frameworks like Grails, Micronaut or Spock might use the DGM methods directly. They are public static methods after all even though we regard them as somewhat internal and expose them as methods \"only\" available through the runtime or when using @CS. So, we adopted the convention of marking old variants with @Deprecated which are ignored when loading DGM methods. Plugin DGM methods might be considered even slightly more internal since in theory they might not be activated on older JVM versions but they are still there as static methods, so it might pay to give them the same treatment. We tend to then delete those deprecated methods after a major version or two. For the same reason, I'd target only Groovy 4 for this change.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/828824138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/828865737","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-828865737","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":828865737,"node_id":"MDEyOklzc3VlQ29tbWVudDgyODg2NTczNw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-29T00:29:21Z","updated_at":"2021-04-29T00:29:21Z","author_association":"CONTRIBUTOR","body":"Actually, Groovy 4 might be a good time to refine how we deactivate extension methods. Re-purposing @Deprecated has always been a compromise. Perhaps we should add an @Inactive annotation and use that instead. I'll start a discussion on the mailing list, but either way, we'd put back the plugin DGM methods and indicate they are inactive. We often truncate the Javadoc when we make such DGM methods inactive.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/828865737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829281404","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-829281404","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":829281404,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTI4MTQwNA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-29T14:23:50Z","updated_at":"2021-04-29T14:23:50Z","author_association":"MEMBER","body":"I'm fine with deprecated as a way to disable as extension but leave for direct use.  I would be more on board with a way to add extension methods without having to make them public so that they cannot be used outside of the extension mechanism.\r\n\r\nSo when the v5-v7 vmplugins were combined, was binary compatibility not affected similarly? \r\n https://github.com/apache/groovy/commit/6e10c35b7fdc7c6b213372d7fa771f723ca5906a\r\n\r\nI could add the deprecated methods back to PluginDefaultGroovyMethods, if there was a string reason to do so.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829281404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829572937","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-829572937","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":829572937,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTU3MjkzNw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-29T20:27:09Z","updated_at":"2021-04-29T20:27:09Z","author_association":"MEMBER","body":"You can merge one or both commits","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829572937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829845890","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-829845890","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":829845890,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTg0NTg5MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-30T05:20:38Z","updated_at":"2021-04-30T06:59:58Z","author_association":"CONTRIBUTOR","body":"All of the v5-v7 classes exist (but aren't used and are deprecated) on the GROOVY_3_0_X branch but they are removed in master. I'd suggest we do the same thing for the stream-related deprecated methods once Groovy 4 is released and we prepare for Groovy 5.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829845890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829936353","html_url":"https://github.com/apache/groovy/pull/1573#issuecomment-829936353","issue_url":"https://api.github.com/repos/apache/groovy/issues/1573","id":829936353,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTkzNjM1Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-30T08:33:43Z","updated_at":"2021-04-30T08:33:43Z","author_association":"CONTRIBUTOR","body":"Merged, thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/829936353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/835606040","html_url":"https://github.com/apache/groovy/pull/1575#issuecomment-835606040","issue_url":"https://api.github.com/repos/apache/groovy/issues/1575","id":835606040,"node_id":"MDEyOklzc3VlQ29tbWVudDgzNTYwNjA0MA==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-09T01:02:23Z","updated_at":"2021-05-09T01:02:23Z","author_association":"CONTRIBUTOR","body":"I have some more findings in Console.groovy, you can look it up here:\r\nhttps://github.com/nineninesevenfour/groovy/commit/054c31f004c082c1877f7ee9ff658ecd863bfcb9#diff-df04d6a58a3b0f8933209588fc3f0c71ce976b595bd13d3ba52aa675c4a6c417\r\nI just did not want to clutter the PR with it. 😉\r\nIt's working fine as it is, but it could hamper future changes. ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/835606040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/836666458","html_url":"https://github.com/apache/groovy/pull/1576#issuecomment-836666458","issue_url":"https://api.github.com/repos/apache/groovy/issues/1576","id":836666458,"node_id":"MDEyOklzc3VlQ29tbWVudDgzNjY2NjQ1OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-10T12:57:02Z","updated_at":"2021-05-10T12:57:02Z","author_association":"CONTRIBUTOR","body":"Actually, looks like something I thought I fixed earlier is still not right. You should be able to build locally and try out examples in the groovyConsole but there is an issue running the test suite.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/836666458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/838319497","html_url":"https://github.com/apache/groovy/pull/1576#issuecomment-838319497","issue_url":"https://api.github.com/repos/apache/groovy/issues/1576","id":838319497,"node_id":"MDEyOklzc3VlQ29tbWVudDgzODMxOTQ5Nw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-11T11:36:59Z","updated_at":"2021-05-11T11:36:59Z","author_association":"CONTRIBUTOR","body":"I'll re-open a new PR once I have finished the re-work.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/838319497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/841612482","html_url":"https://github.com/apache/groovy/pull/1578#issuecomment-841612482","issue_url":"https://api.github.com/repos/apache/groovy/issues/1578","id":841612482,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MTYxMjQ4Mg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-15T07:02:33Z","updated_at":"2021-05-15T07:02:33Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/841612482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/841805112","html_url":"https://github.com/apache/groovy/pull/1578#issuecomment-841805112","issue_url":"https://api.github.com/repos/apache/groovy/issues/1578","id":841805112,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MTgwNTExMg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-16T11:36:42Z","updated_at":"2021-05-16T11:36:42Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/841805112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/842424913","html_url":"https://github.com/apache/groovy/pull/1577#issuecomment-842424913","issue_url":"https://api.github.com/repos/apache/groovy/issues/1577","id":842424913,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjQyNDkxMw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-17T15:36:17Z","updated_at":"2021-05-17T15:36:17Z","author_association":"MEMBER","body":"see also GROOVY-4610","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/842424913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/844674861","html_url":"https://github.com/apache/groovy/pull/1575#issuecomment-844674861","issue_url":"https://api.github.com/repos/apache/groovy/issues/1575","id":844674861,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDY3NDg2MQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-20T04:21:51Z","updated_at":"2021-05-20T04:21:51Z","author_association":"CONTRIBUTOR","body":"Merged, thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/844674861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/844697120","html_url":"https://github.com/apache/groovy/pull/1575#issuecomment-844697120","issue_url":"https://api.github.com/repos/apache/groovy/issues/1575","id":844697120,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDY5NzEyMA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-20T05:04:49Z","updated_at":"2021-05-20T05:04:49Z","author_association":"CONTRIBUTOR","body":"I also took some of the \"extra\" comments. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/844697120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/846544941","html_url":"https://github.com/apache/groovy/pull/1581#issuecomment-846544941","issue_url":"https://api.github.com/repos/apache/groovy/issues/1581","id":846544941,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NjU0NDk0MQ==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-23T11:08:11Z","updated_at":"2021-05-23T11:31:26Z","author_association":"CONTRIBUTOR","body":"@paulk-asert \r\nHello Paul,\r\nwhile working on tests, I stumbled once more over this method:\r\n```\r\n@Override\r\n    public void visitCatchStatement(final CatchStatement cs) {\r\n        resolveOrFail(cs.getExceptionType(), cs);\r\n        if (ClassHelper.isDynamicTyped(cs.getExceptionType())) {\r\n            cs.getVariable().setType(ClassHelper.make(Exception.class));\r\n        }\r\n        super.visitCatchStatement(cs);\r\n    }\r\n```\r\nsee https://github.com/nineninesevenfour/groovy/blob/93ad2a577c6facc3f5620fd4a6c8167daa43ee74/src/main/java/org/codehaus/groovy/control/ResolveVisitor.java#L1561\r\n\r\nAnd I asked myself if the type shouldn't rather be coerced to `Throwable.class` than `Exception.class` to catch ~unchecked exceptions~ `java.langError` and other Throwables, too? 🤔\r\nWhat do you think?\r\n\r\nThank you!\r\nHarald\r\n\r\ncc: @eric-milles ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/846544941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/846566527","html_url":"https://github.com/apache/groovy/pull/1581#issuecomment-846566527","issue_url":"https://api.github.com/repos/apache/groovy/issues/1581","id":846566527,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NjU2NjUyNw==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-23T13:51:05Z","updated_at":"2021-05-23T13:51:05Z","author_association":"CONTRIBUTOR","body":"> @paulk-asert\r\n> Hello Paul,\r\n> while working on tests, I stumbled once more over this method:\r\n> \r\n> ```\r\n> @Override\r\n>     public void visitCatchStatement(final CatchStatement cs) {\r\n>         resolveOrFail(cs.getExceptionType(), cs);\r\n>         if (ClassHelper.isDynamicTyped(cs.getExceptionType())) {\r\n>             cs.getVariable().setType(ClassHelper.make(Exception.class));\r\n>         }\r\n>         super.visitCatchStatement(cs);\r\n>     }\r\n> ```\r\n> \r\n> see https://github.com/nineninesevenfour/groovy/blob/93ad2a577c6facc3f5620fd4a6c8167daa43ee74/src/main/java/org/codehaus/groovy/control/ResolveVisitor.java#L1561\r\n> \r\n> And I asked myself if the type shouldn't rather be coerced to `Throwable.class` than `Exception.class` to catch ~unchecked exceptions~ `java.langError` and other Throwables, too? 🤔\r\n> What do you think?\r\n> \r\n> Thank you!\r\n> Harald\r\n> \r\n> cc: @eric-milles\r\n\r\nDiscussed on Slack and catching Throwable seems to be a typical anti-pattern. Question is answered. :-)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/846566527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847044502","html_url":"https://github.com/apache/groovy/pull/1581#issuecomment-847044502","issue_url":"https://api.github.com/repos/apache/groovy/issues/1581","id":847044502,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzA0NDUwMg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-24T13:31:18Z","updated_at":"2021-05-24T14:04:33Z","author_association":"MEMBER","body":"Thanks for the pull request.  I appreciate some additional eyes and hands on.\r\n\r\nOn the mailing list I suggested the possibility of deprecating `isDynamicTyped` in `FieldNode`, `Parameter`, etc.  And then removing their use from the compiler/runtime.  IMO there is only a very small bit of code in the compiler/editor that cares about the difference between \"Object name\" and \"def name\".\r\n\r\nTo be able to distinguish between those two, I have considered \"ClassNode DYNAMIC_TYPE = ClassHelper.make(Object.class); ClassNode OBJECT_TYPE = DYNAMIC_TYPE.getPlainNodeReference();\" so that referential equality is broken between the two constants.  However, I think there is probably a lot of code out there that checks \"type == OBJECT_TYPE\" or \"type.redirect() == OBJECT_TYPE\".  So this too would be a breaking change and possibly more impactful than the current condition of `isDynamicTyped`.\r\n\r\nWRT your pull request, I don't think adding more API to `ClassNode` is the answer.  I'm still hoping for a reduction in API in areas where a consistent answer cannot be provided.  And backwards compatibility should be maintained if at all possible.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847044502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847053528","html_url":"https://github.com/apache/groovy/pull/1580#issuecomment-847053528","issue_url":"https://api.github.com/repos/apache/groovy/issues/1580","id":847053528,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzA1MzUyOA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-24T13:46:33Z","updated_at":"2021-05-24T13:46:33Z","author_association":"MEMBER","body":"Looks good so far.  When using `callX` to create a method call to the closure, you should `setImplicitThis(false)` on the returned `MethodCallExpression`.\r\n\r\nAny idea of level of compatibility with the Java switch expression variants?  Does this cover them all or are there known limitations?  Is there any measure of performance impact versus current parser?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847053528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847080753","html_url":"https://github.com/apache/groovy/pull/1581#issuecomment-847080753","issue_url":"https://api.github.com/repos/apache/groovy/issues/1581","id":847080753,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzA4MDc1Mw==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-24T14:28:09Z","updated_at":"2021-05-24T14:28:09Z","author_association":"CONTRIBUTOR","body":"@eric-milles \r\nHello Eric,\r\nthank you very much for your feedback, it is very appreciated!\r\nIndependently from the way it is actually solved, I think one benefit of my proposed pull request would have been that through ClassHelper.makeDynamicType() the four relevant places in AstBuilder are very easy to determine.\r\nIMHO found it also more easy to read than just ClassHelper.OBJECT_TYPE.getPlainNodeReference();\r\nAnyway I agree that we have to come up with a better solution. \r\nI will close this pull request and keep the tests in my fork, they could be helpful later maybe.\r\nThank you and kind regards, Harald","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847080753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847103136","html_url":"https://github.com/apache/groovy/pull/1580#issuecomment-847103136","issue_url":"https://api.github.com/repos/apache/groovy/issues/1580","id":847103136,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzEwMzEzNg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-24T15:03:59Z","updated_at":"2021-05-25T01:52:11Z","author_association":"CONTRIBUTOR","body":"> Looks good so far. When using callX to create a method call to the closure, you should setImplicitThis(false) on the returned MethodCallExpression.\r\n\r\nTweaked. Thanks!\r\n\r\n> Any idea of level of compatibility with the Java switch expression variants?\r\n\r\nGroovy should be able to support all variants of switch expression of the latest JEP ( https://openjdk.java.net/jeps/361 )\r\n\r\n> Is there any measure of performance impact versus current parser?\r\n\r\nNo, it should be a bit impact because the build time does change obviously.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847103136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847160968","html_url":"https://github.com/apache/groovy/pull/1581#issuecomment-847160968","issue_url":"https://api.github.com/repos/apache/groovy/issues/1581","id":847160968,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzE2MDk2OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-24T16:23:35Z","updated_at":"2021-05-24T16:23:35Z","author_association":"CONTRIBUTOR","body":"I echo Eric's thanks for your efforts. Some parts of where I think we will end up could be quite similar to some parts of your PR, so nice work in your analysis! I am expecting we won't fully get rid of the dynamic type concept (at least not straight away), perhaps we'll use node metadata though instead of changing the API. I'd actually like to deprecate DYNAMIC_TYPE but we'll have to see how far we can get with that.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/847160968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/848545064","html_url":"https://github.com/apache/groovy/pull/1583#issuecomment-848545064","issue_url":"https://api.github.com/repos/apache/groovy/issues/1583","id":848545064,"node_id":"MDEyOklzc3VlQ29tbWVudDg0ODU0NTA2NA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-26T07:42:21Z","updated_at":"2021-05-26T07:42:21Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/848545064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/850810233","html_url":"https://github.com/apache/groovy/pull/1586#issuecomment-850810233","issue_url":"https://api.github.com/repos/apache/groovy/issues/1586","id":850810233,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MDgxMDIzMw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-29T10:26:01Z","updated_at":"2021-05-29T10:26:01Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/850810233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/851002228","html_url":"https://github.com/apache/groovy/pull/1585#issuecomment-851002228","issue_url":"https://api.github.com/repos/apache/groovy/issues/1585","id":851002228,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MTAwMjIyOA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-30T13:41:02Z","updated_at":"2021-05-30T13:41:02Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/851002228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/851002800","html_url":"https://github.com/apache/groovy/pull/1586#issuecomment-851002800","issue_url":"https://api.github.com/repos/apache/groovy/issues/1586","id":851002800,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MTAwMjgwMA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-30T13:45:08Z","updated_at":"2021-05-30T13:45:08Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/851002800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855239875","html_url":"https://github.com/apache/groovy/pull/1588#issuecomment-855239875","issue_url":"https://api.github.com/repos/apache/groovy/issues/1588","id":855239875,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTIzOTg3NQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-05T13:23:30Z","updated_at":"2021-06-05T13:23:30Z","author_association":"CONTRIBUTOR","body":"+1\r\n/cc @paulk-asert ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855239875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855240143","html_url":"https://github.com/apache/groovy/pull/1587#issuecomment-855240143","issue_url":"https://api.github.com/repos/apache/groovy/issues/1587","id":855240143,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTI0MDE0Mw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-05T13:25:28Z","updated_at":"2021-06-05T13:25:28Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855240143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855251171","html_url":"https://github.com/apache/groovy/pull/1589#issuecomment-855251171","issue_url":"https://api.github.com/repos/apache/groovy/issues/1589","id":855251171,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTI1MTE3MQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-05T14:53:00Z","updated_at":"2021-06-05T14:53:00Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855251171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855251632","html_url":"https://github.com/apache/groovy/pull/1589#issuecomment-855251632","issue_url":"https://api.github.com/repos/apache/groovy/issues/1589","id":855251632,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTI1MTYzMg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-05T14:56:29Z","updated_at":"2021-06-05T14:56:29Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855251632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855255467","html_url":"https://github.com/apache/groovy/pull/1589#issuecomment-855255467","issue_url":"https://api.github.com/repos/apache/groovy/issues/1589","id":855255467,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTI1NTQ2Nw==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-05T15:26:27Z","updated_at":"2021-06-05T15:26:27Z","author_association":"CONTRIBUTOR","body":"welcome :)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855255467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855462858","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-855462858","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":855462858,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTQ2Mjg1OA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-06T21:05:35Z","updated_at":"2021-06-06T21:05:35Z","author_association":"MEMBER","body":"There is a lot of discussion under GROOVY-10099 to unpack.  And then this commit presents quite a bit more in the comments and hundreds of lines of code to sift through.  Is it possible to break this down into smaller parts?  Like is there one test case that is the biggest source of confusion and is there a small change that can make a non-breaking improvement?\r\n\r\nI just don't see how we could accept a change of this size when the issue ticket itself was in dispute.  Best to pick up a smaller, non-controversial ticket to start with.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855462858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855562738","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-855562738","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":855562738,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTU2MjczOA==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-07T04:17:10Z","updated_at":"2021-06-07T04:17:10Z","author_association":"NONE","body":"small point of order as I'm new here (I'll get to the substantive points later): am i supposed to be doing something about that failed Distribute action in the checks? The same command succeeds here on my usual dev system (Mac OS Big Sur (intel)) and another Ubuntu 20.04 system (both using java 11.0.11+9). And besides it looks really nothing to do with any code changes, but rather maybe a transient issue fetching a couple of dependencies on the build box? (Also of course, noted the failure to find a hard-coded path but that doesn't seem to be triggering the failure)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855562738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855575380","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-855575380","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":855575380,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTU3NTM4MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-07T04:55:36Z","updated_at":"2021-06-07T04:55:36Z","author_association":"CONTRIBUTOR","body":"@StrangeNoises Don't worry about that intermittent build failure","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/855575380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/856682888","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-856682888","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":856682888,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NjY4Mjg4OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-08T11:27:58Z","updated_at":"2021-06-08T11:28:28Z","author_association":"CONTRIBUTOR","body":"Excellent work Rachel. You certainly dived deep for your first PR! As Eric said, it will take us some time to digest. I was at first expecting the following program to exhibit the same behavior under Java and Groovy (with your changes):\r\n```\r\nimport static org.codehaus.groovy.runtime.DefaultGroovyMethods.dump;\r\n\r\npublic class Main {\r\n    public static void method(Object... args) {\r\n        System.out.println(dump(args));\r\n        if (args != null) {\r\n            System.out.println(args.length);\r\n            if (args.length > 0) {\r\n                System.out.println(args[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        method(null);\r\n        method((Object) null);\r\n        method((Object[]) null);\r\n    }\r\n}\r\n```\r\nBut I see you aligned with statically compiled Groovy rather than Java for the no cast case and for that case we have different behavior. I will need to work through our precedence conventions and convince myself that we have that edge case right for statically compiled Groovy. There are a few spots where documentation also needs some finessing but we can cover that once we have sorted the behavior.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/856682888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/856956800","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-856956800","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":856956800,"node_id":"MDEyOklzc3VlQ29tbWVudDg1Njk1NjgwMA==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-08T17:28:58Z","updated_at":"2021-06-08T17:28:58Z","author_association":"NONE","body":"Yes, I'm afraid I wasn't trawling the issues list for something I thought I could handle. 😉 This was a reaction to a real problem I hit integrating Groovy scripting into our software, which we want to do so we can hire people who either have, or want, Groovy on their resumé rather than our obscure and older-than-groovy scripting language! So there's an acceptance issue when we start hitting NPEs caused by this, where the equivalent java version just works.\r\n\r\nYes, Java won't let you compile that with just the plain null constant; you have to choose: null object or null array. I noticed Groovy under @CompileStatic was behaving *as if* null constant was a non-array, and thought it sensible to make it do the same thing when dynamic.\r\n\r\nIt's also the thing I care the least about. 😀 I don't really care about the null constants, it's just nice to be consistent. And I'm not trying to affect what happens when the expression type is explicitly dynamic or otherwise can't be discovered at compile-time. I just want to fix it so when the expression type *is* known at compile-time - even if it's just because the coder put an explicit cast-or-coerce on an otherwise dynamic expression - it does the right thing. Because of course the absolute first thing I tried when I encountered the problem was to cast it, to push Groovy into doing the right thing, and it ignored me. Now it would work.\r\n\r\nI've been wondering how to make it smaller. The only bit that actually changes the generated code is:\r\n\r\n```\r\n                        arguments = ale.transformExpression(expr -> {\r\n                            if (expr == lastArg) {\r\n                                return new ArrayExpression(componentType, Collections.singletonList(expr));\r\n                            }\r\n                            return expr;\r\n                        });\r\n```\r\n\r\nAll the rest is just matching the fairly singular condition where we need to do it. I'm sure there's scope to make it more concise but actually reducing the checks it does would just give us false positives. It would probably actually be easier to make it do more: to do the array wrapping here for all cases where the argument isn't dynamic or already definitely an array. I was *trying* to make the footprint - in terms of how much behaviour it changes - smaller. 😀 \r\n\r\nThe risky bits, from my point of view, are where it tries to discover the matching real method for a MethodCallExpression that doesn't have a target MethodNode already set (for both identifying a method is varargs, and a method called as an argument *to* a varargs, to find its return type).\r\n\r\n(If the target is set it gets dealt with by writeDirectMethodCall, which works fine already.)\r\n\r\nI'm sure that process could be improved, because it *feels* a bit messy. Or perhaps there's some other way from earlier in the process to definitively set the appropriate MethodNode on a MethodCallExpression - the same one you'd set as the target when static compiling, but here not as the target, but just as information for compiling dynamic code, like this.\r\n\r\nI'm also aware that the methods we discover here might be intercepted or otherwise occluded by runtime metaprogramming. My *guess* is that, in order for such interceptions to even *intercept*, they'd have to be basically compatible with the methods they're intercepting, so using the originals to decide what to do about the varargs arguments seems a *reasonably* safe bet. But that's why it works by fiddling the argument list, rather than just converting it to a direct method call. (I did try that. It burnt the test suite to the ground!)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/856956800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/857264591","html_url":"https://github.com/apache/groovy/pull/1593#issuecomment-857264591","issue_url":"https://api.github.com/repos/apache/groovy/issues/1593","id":857264591,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NzI2NDU5MQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-08T23:44:33Z","updated_at":"2021-06-08T23:44:33Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/857264591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/857647278","html_url":"https://github.com/apache/groovy/pull/1592#issuecomment-857647278","issue_url":"https://api.github.com/repos/apache/groovy/issues/1592","id":857647278,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NzY0NzI3OA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-09T12:20:51Z","updated_at":"2021-06-09T12:20:51Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/857647278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859486264","html_url":"https://github.com/apache/groovy/pull/1588#issuecomment-859486264","issue_url":"https://api.github.com/repos/apache/groovy/issues/1588","id":859486264,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTQ4NjI2NA==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T10:35:32Z","updated_at":"2021-06-11T10:37:23Z","author_association":"CONTRIBUTOR","body":"I am very sorry, obviously I clicked the wrong thing 🙈 :)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859486264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859489803","html_url":"https://github.com/apache/groovy/pull/1588#issuecomment-859489803","issue_url":"https://api.github.com/repos/apache/groovy/issues/1588","id":859489803,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTQ4OTgwMw==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T10:40:25Z","updated_at":"2021-06-11T10:40:25Z","author_association":"CONTRIBUTOR","body":"It seems the requested changes are empty, I cannot accept them.\r\nIs there something open for me to do?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859489803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859493130","html_url":"https://github.com/apache/groovy/pull/1588#issuecomment-859493130","issue_url":"https://api.github.com/repos/apache/groovy/issues/1588","id":859493130,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTQ5MzEzMA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T10:46:42Z","updated_at":"2021-06-11T10:50:07Z","author_association":"CONTRIBUTOR","body":"Apologies, there was a glitch in my cut-n-paste and I didn't spot it straight away. Should be fixed now. There is just one line I was suggesting to add to doco plus see single line comment below.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859493130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859558852","html_url":"https://github.com/apache/groovy/pull/1594#issuecomment-859558852","issue_url":"https://api.github.com/repos/apache/groovy/issues/1594","id":859558852,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU1ODg1Mg==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T12:50:32Z","updated_at":"2021-06-11T12:50:32Z","author_association":"CONTRIBUTOR","body":"Haven't checked all of them, but some of these look like they are testing package specific aspects, so probably shouldn't change.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859558852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859559738","html_url":"https://github.com/apache/groovy/pull/1588#issuecomment-859559738","issue_url":"https://api.github.com/repos/apache/groovy/issues/1588","id":859559738,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU1OTczOA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T12:52:06Z","updated_at":"2021-06-11T12:52:06Z","author_association":"CONTRIBUTOR","body":"Merged, thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859559738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859563495","html_url":"https://github.com/apache/groovy/pull/1594#issuecomment-859563495","issue_url":"https://api.github.com/repos/apache/groovy/issues/1594","id":859563495,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU2MzQ5NQ==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T12:58:28Z","updated_at":"2021-06-11T13:01:56Z","author_association":"CONTRIBUTOR","body":"Have to check those errors anyway :)\r\nUnfortunately GitHub is missing a status \"unfinished\" or \"in progress\" or similar for a PR.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859563495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859756562","html_url":"https://github.com/apache/groovy/pull/1596#issuecomment-859756562","issue_url":"https://api.github.com/repos/apache/groovy/issues/1596","id":859756562,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTc1NjU2Mg==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T18:14:17Z","updated_at":"2021-06-11T18:14:17Z","author_association":"CONTRIBUTOR","body":"Apart from the actual change, I also encountered a problem with the dist build:\r\n\r\n> One artifact failed verification: testng-7.4.0.jar\r\n\r\nAfter checking the verification-metadata I thought on one box the Gradle cache might be broken, so I added the --refresh-dependencies option (the equivalent for -U in Maven).\r\nBut I am not sure, if we have to consider consumed resources on GH Actions and if we should rather add a \"Cache Gradle Repository\" step like in the tests. 🤔","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859756562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859954287","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-859954287","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":859954287,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTk1NDI4Nw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T23:22:44Z","updated_at":"2021-06-11T23:22:44Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859954287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859957210","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-859957210","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":859957210,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTk1NzIxMA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T23:34:26Z","updated_at":"2021-06-11T23:36:55Z","author_association":"CONTRIBUTOR","body":"It would be nice to make this consistent. It is a tricky area though. The JavaBean spec[1] seems to indicate that the \"is\" method should have precedence:\r\n\r\n> This “is\\<PropertyName\\>” method may be provided instead of a “get\\<PropertyName\\>” method, or it may be provided in addition to a “get\\<PropertyName>” method.\r\n> In either case, if the “is\\<PropertyName>” method is present for a boolean property then we will\r\n> use the “is\\<PropertyName>” method to read the property value.\r\n\r\nThat also seems to be how the JavBean Introspector behaves:\r\n```\r\nimport java.beans.Introspector\r\n\r\nclass Bean {\r\n    void setFlag(boolean flag) {}\r\n    boolean isFlag() {}\r\n    boolean getFlag() {}\r\n}\r\n\r\ndef props = Introspector.getBeanInfo(Bean).propertyDescriptors\r\nassert 'isFlag' == props.find{ it.baseName == 'Flag' }.readMethod.name\r\n```\r\n\r\nNote that strictly speaking, this is talking about primitive booleans only as per comments in GROOVY-9382.\r\n\r\n[1] https://download.oracle.com/otndocs/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859957210/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859958205","html_url":"https://github.com/apache/groovy/pull/1596#issuecomment-859958205","issue_url":"https://api.github.com/repos/apache/groovy/issues/1596","id":859958205,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTk1ODIwNQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T23:38:43Z","updated_at":"2021-06-11T23:38:43Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859958205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859978187","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-859978187","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":859978187,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTk3ODE4Nw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-12T01:34:12Z","updated_at":"2021-06-12T01:34:12Z","author_association":"MEMBER","body":"Please see the linked issue ticket.  The getter is being used in most cases today, including under static compilation.  The few cases that use the isser are outliers and cause confusion.  Trying to change it all to prefer the isser is a much bigger change.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/859978187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860041026","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-860041026","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":860041026,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDA0MTAyNg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-12T11:35:23Z","updated_at":"2021-06-12T11:35:23Z","author_association":"CONTRIBUTOR","body":"It's better for Groovy to align with Java's specification to make Java developers as less surprised as we could.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860041026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860615156","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-860615156","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":860615156,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDYxNTE1Ng==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T11:35:41Z","updated_at":"2021-06-14T11:35:41Z","author_association":"CONTRIBUTOR","body":"> Please see the linked issue ticket. The getter is being used in most cases today, including under static compilation. The few cases that use the isser are outliers and cause confusion. Trying to change it all to prefer the isser is a much bigger change.\r\n\r\nYes, I have seen the issue ticket and understand that it is more work.\r\n\r\nI guess there are lots of ways to look at this. We could say that for this edge case, that anyone that has different behavior between the isser and the getter deserves to experience pain since it makes no sense to make them different. And so our existing code is fine and we can take the smallest steps possible to make our existing code consistent. On the other hand, there is an existing (albeit old) spec which we try to adhere to in most other respects. If we don't like that spec, we could justify why we don't comply with the spec or we can define our own spec and justify why it is different and better than the official one but regardless, Groovy will still break when used with tools which adhere to the spec (for this rare edge case - which is why we haven't seen issues reported before).\r\n\r\nGiven that it's an edge case we hope never to see, I don't see the need to rush to make ourselves less compliant. Instead, I'd prefer to wait and see if any of us has time to explore going down the opposite path. If that does indeed turn out to be a horror path, then we can revisit with a well-informed reasoning behind making ourselves less compliant.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860615156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860747123","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-860747123","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":860747123,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDc0NzEyMw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T14:50:26Z","updated_at":"2021-06-14T14:50:26Z","author_association":"MEMBER","body":"So my understanding of compliance is that \"isPropName()\" is preferred over \"getPropName()\" for `boolean propName` and in all other cases the \"is\" variant is ignored.  Is that what you would be comfortable with?  There will be changes in MOP, STC, category methods and classgen.\r\n\r\nI can check this with:\r\n```groovy\r\n@Grab('commons-beanutils:commons-beanutils:1.9.4')\r\nimport org.apache.commons.beanutils.PropertyUtils;\r\n\r\nPojo pojo = new Pojo();\r\nObject value = PropertyUtils.getSimpleProperty(pojo, \"dualState\");\r\nSystem.out.println(\"boolean: \" + value);\r\nvalue = PropertyUtils.getSimpleProperty(pojo, \"triState\");\r\nSystem.out.println(\"Boolean: \" + value);\r\nvalue = PropertyUtils.getSimpleProperty(pojo, \"other\");\r\nSystem.out.println(\"Object : \" + value);\r\n\r\n  class Pojo {\r\n    public boolean isDualState() {\r\n      return true;\r\n    }\r\n    public boolean getDualState() {\r\n      return false;\r\n    }\r\n    public Boolean isTriState() {\r\n      return Boolean.TRUE;\r\n    }\r\n    public Boolean getTriState() {\r\n      return Boolean.FALSE;\r\n    }\r\n    public Object isOther() {\r\n      return Boolean.TRUE;\r\n    }\r\n    public Object getOther() {\r\n      return Boolean.FALSE;\r\n    }\r\n  }\r\n```\r\n\r\nSorry, not very groovy.  I checked from Java to be sure.  If I remove \"getDualState()\" it still works fine and switches as expected.  Removing \"getTriState()\" or \"getOther()\" does not make use of the is variant.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860747123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860949703","html_url":"https://github.com/apache/groovy/pull/1599#issuecomment-860949703","issue_url":"https://api.github.com/repos/apache/groovy/issues/1599","id":860949703,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDk0OTcwMw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T19:52:16Z","updated_at":"2021-06-14T19:52:16Z","author_association":"MEMBER","body":"One thing to watch out for in XML handling is Node has both \"getFirstChild()\" and \"isFirstChild()\".\r\n```\r\ncom.sun.org.apache.xerces.internal.dom.NodeImpl.isFirstChild()\r\ncom.sun.org.apache.xerces.internal.dom.ParentNode.getFirstChild()\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/860949703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861095446","html_url":"https://github.com/apache/groovy/pull/1599#issuecomment-861095446","issue_url":"https://api.github.com/repos/apache/groovy/issues/1599","id":861095446,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTA5NTQ0Ng==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T01:07:20Z","updated_at":"2021-06-15T01:07:20Z","author_association":"CONTRIBUTOR","body":"> Node has both \"getFirstChild()\" and \"isFirstChild()\"\r\n\r\nThat's unfortunate. The latter is package private and almost certainly not what folks would want but I can't see a workaround other than your change.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861095446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861128490","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-861128490","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":861128490,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTEyODQ5MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T02:48:58Z","updated_at":"2021-06-15T02:48:58Z","author_association":"CONTRIBUTOR","body":"Well, I think compliance is well-defined for primitive boolean and the spec says nothing about \"is\" ever being supported for the wrapper classes. We know of different frameworks which have made different choices about what the silence in the spec for wrapper classes means. Our past behavior has mostly been about trying not to get in the way of other framework/library choices which is somewhat short of fully clarifying our behavior.\r\n\r\nI don't know whether the strict interpretation that you propose is best or perhaps ignore the isser for Boolean unless there is an isser and no getter. That might be more backwards compatible.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861128490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861700522","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-861700522","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":861700522,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTcwMDUyMg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T17:36:39Z","updated_at":"2021-06-15T17:36:39Z","author_association":"MEMBER","body":"I'd prefer to see Boolean have the same treatment as boolean or have the same treatment as say Object.  My original tickets were along these lines.  Adding special rules for Boolean that do not apply to any other types requires more checks in the compiler and IDE.  To have it work like boolean only requires the method return value checks to include both types.  This would be inconsistent with Apache BeanUtils, but would be more compatible with the historic support for Boolean properties in Groovy.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/861700522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/863117275","html_url":"https://github.com/apache/groovy/pull/1600#issuecomment-863117275","issue_url":"https://api.github.com/repos/apache/groovy/issues/1600","id":863117275,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MzExNzI3NQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-17T10:17:05Z","updated_at":"2021-06-17T10:17:05Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/863117275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864390667","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-864390667","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":864390667,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDM5MDY2Nw==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-19T10:59:26Z","updated_at":"2021-06-19T10:59:26Z","author_association":"NONE","body":"Ah. I was actually trying to move the work for this PR into a new branch of my fork, rather than leaving it in master - just an attempted housekeeping/fixing-what-i-did-wrong change, to allow me to work on other issues, not trying to actually close the PR, but that seems to have been triggered anyway. Should I recreate it as a new PR or is there a way to fix/update this one?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864390667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864394094","html_url":"https://github.com/apache/groovy/pull/1591#issuecomment-864394094","issue_url":"https://api.github.com/repos/apache/groovy/issues/1591","id":864394094,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDM5NDA5NA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-19T11:32:02Z","updated_at":"2021-06-19T11:32:02Z","author_association":"CONTRIBUTOR","body":"You could create a new PR 😉","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864394094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864396649","html_url":"https://github.com/apache/groovy/pull/1600#issuecomment-864396649","issue_url":"https://api.github.com/repos/apache/groovy/issues/1600","id":864396649,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDM5NjY0OQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-19T11:57:06Z","updated_at":"2021-06-19T11:57:06Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/864396649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865331805","html_url":"https://github.com/apache/groovy/pull/1602#issuecomment-865331805","issue_url":"https://api.github.com/repos/apache/groovy/issues/1602","id":865331805,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTMzMTgwNQ==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-21T20:44:17Z","updated_at":"2021-06-21T20:44:17Z","author_association":"MEMBER","body":"For STC, there are a couple methods that check the compatibility of arguments and parameters or source and target types.  I would expect a change in one of these to allow `BigDecimal` as argument to `double` parameter.  I'm not sure of the reason for the change to make `BigDecimal` not convert as before.  It would be good to understand why this stopped working at some point.\r\n\r\nIn terms of tests, we are slowly migrating away from `GroovyTestCase` and `GroovyShell#evaluate` in favor of JUnit 4 and `GroovyAssert#assertScript`.  It appears you have taken us in the reverse direction.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865331805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865338972","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-865338972","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":865338972,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTMzODk3Mg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-21T20:57:53Z","updated_at":"2021-06-21T20:57:53Z","author_association":"MEMBER","body":"Would it be possible to summarize the different scenarios surrounding variadic method calling and show where dynamic, STC and SC are giving expected or unexpected results?  There is so much discussion under the issue and the previous pull request.  It is difficult to understand the scope of the problem and also the solution does not seem to fit the size of the problem IMO.\r\n\r\nWe have been using compile-time type information as part of static compilation to resolve issues such as these.  With that in mind, it can be expected that dynamic runtime behavior will not always match static compilation behaviors.  I cite [GROOVY-5438](https://issues.apache.org/jira/browse/GROOVY-5438) as one example.  We would need to apply the static compilation methodology to the dynamic case to make them work the same; there simply are not enough facilities available at runtime to provide total consistency.\r\n\r\nGroovy adds one additional complication to variadic method calling.  It treats `foo(String[])` the same as `foo(String...)` in most cases.  This means we cannot count on the varargs modifier at runtime as a signal.  And I had to file a bug related to the unreliability of the varargs modifier: [GROOVY-10140](https://issues.apache.org/jira/browse/GROOVY-10140)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865338972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865852378","html_url":"https://github.com/apache/groovy/pull/1597#issuecomment-865852378","issue_url":"https://api.github.com/repos/apache/groovy/issues/1597","id":865852378,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTg1MjM3OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-22T10:10:18Z","updated_at":"2021-06-22T10:10:18Z","author_association":"CONTRIBUTOR","body":"Yes, I think Boolean being the same as all other objects is the way to go. We could document some metaprogramming tricks for dynamic Groovy. I was hoping we could also write a type checking extension that might allow us to enable \"Lenient Boolean Properties\" through an extension but this scenario triggers the `unresolvedProperty` hook rather than the `methodNotFound` hook and I am unsure whether we can do this tweak from there. ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865852378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865912864","html_url":"https://github.com/apache/groovy/pull/1602#issuecomment-865912864","issue_url":"https://api.github.com/repos/apache/groovy/issues/1602","id":865912864,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTkxMjg2NA==","user":{"login":"YueZhikong","id":38202348,"node_id":"MDQ6VXNlcjM4MjAyMzQ4","avatar_url":"https://avatars.githubusercontent.com/u/38202348?v=4","gravatar_id":"","url":"https://api.github.com/users/YueZhikong","html_url":"https://github.com/YueZhikong","followers_url":"https://api.github.com/users/YueZhikong/followers","following_url":"https://api.github.com/users/YueZhikong/following{/other_user}","gists_url":"https://api.github.com/users/YueZhikong/gists{/gist_id}","starred_url":"https://api.github.com/users/YueZhikong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YueZhikong/subscriptions","organizations_url":"https://api.github.com/users/YueZhikong/orgs","repos_url":"https://api.github.com/users/YueZhikong/repos","events_url":"https://api.github.com/users/YueZhikong/events{/privacy}","received_events_url":"https://api.github.com/users/YueZhikong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-22T11:44:56Z","updated_at":"2021-06-22T11:44:56Z","author_association":"NONE","body":"> For STC, there are a couple methods that check the compatibility of arguments and parameters or source and target types. I would expect a change in one of these to allow `BigDecimal` as argument to `double` parameter. I'm not sure of the reason for the change to make `BigDecimal` not convert as before. It would be good to understand why this stopped working at some point.\r\n> \r\n> In terms of tests, we are slowly migrating away from `GroovyTestCase` and `GroovyShell#evaluate` in favor of JUnit 4 and `GroovyAssert#assertScript`. It appears you have taken us in the reverse direction.\r\n\r\n@eric-milles \r\nIs the method \"StaticTypeCheckingVisitor#findMethod\" designed to \"check the compatibility of arguments and parameters or source and target types\"?\r\n\r\nThat method returns empty mn in \"StaticTypeCheckingVistor:3479\",and causes \"GROOVY-9999\",\"GROOVY-8488\". And my idea is to write a new method \"StaticTypeCheckingVisitor#bigDecimalCast\" to “check the compatibility”。 Maybe I should integrate the logic of \"bigDecimalCast\" into \"findMethod\"?\r\n\r\nAnd could you tell me all \"methods that check the compatibility of arguments and parameters or source and target types\"? That may help to solve GROOVY-8168 which is possible caused by similar method like \"StaticTypeCheckingVisitorfindMethod\".","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/865912864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/868186242","html_url":"https://github.com/apache/groovy/pull/1598#issuecomment-868186242","issue_url":"https://api.github.com/repos/apache/groovy/issues/1598","id":868186242,"node_id":"MDEyOklzc3VlQ29tbWVudDg2ODE4NjI0Mg==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-25T04:04:24Z","updated_at":"2021-06-25T04:04:24Z","author_association":"CONTRIBUTOR","body":"Current PR LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/868186242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/869005097","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-869005097","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":869005097,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTAwNTA5Nw==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-26T13:44:38Z","updated_at":"2021-06-26T13:44:38Z","author_association":"NONE","body":"bit of churn from still trying to get the hang of rebasing onto upstream/master. Nothing really new so indifferent to the workflows running. tests still pass fwiw. shortened the commit message anyway... (did note feedback from eric in the week, but not yet ready to answer)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/869005097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/871932004","html_url":"https://github.com/apache/groovy/pull/1603#issuecomment-871932004","issue_url":"https://api.github.com/repos/apache/groovy/issues/1603","id":871932004,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTkzMjAwNA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T05:26:54Z","updated_at":"2021-07-01T05:26:54Z","author_association":"CONTRIBUTOR","body":"It's better to add a test.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/871932004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872036605","html_url":"https://github.com/apache/groovy/pull/1603#issuecomment-872036605","issue_url":"https://api.github.com/repos/apache/groovy/issues/1603","id":872036605,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjAzNjYwNQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T08:23:33Z","updated_at":"2021-07-01T08:23:33Z","author_association":"CONTRIBUTOR","body":"Or if you are struggling to re-create the test locally, if you can describe the circumstances in more detail, we might be able to help re-create.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872036605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872071661","html_url":"https://github.com/apache/groovy/pull/1595#issuecomment-872071661","issue_url":"https://api.github.com/repos/apache/groovy/issues/1595","id":872071661,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjA3MTY2MQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T09:10:45Z","updated_at":"2021-07-01T09:10:45Z","author_association":"CONTRIBUTOR","body":"Merged.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872071661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872595547","html_url":"https://github.com/apache/groovy/pull/1604#issuecomment-872595547","issue_url":"https://api.github.com/repos/apache/groovy/issues/1604","id":872595547,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjU5NTU0Nw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T22:50:14Z","updated_at":"2021-07-01T22:50:14Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/872595547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/873406970","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-873406970","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":873406970,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MzQwNjk3MA==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-03T13:17:27Z","updated_at":"2021-07-03T13:17:27Z","author_association":"NONE","body":"I've tried to make it less scary. 😀\r\n\r\nThe scope of the change is reduced to only apply in `@TypeChecked` code, and brings that into line with `@CompileStatic` behaviour relating to single varargs arguments that might be null. The code has been considerably simplified as a result, as it is no longer trying to identify the relevant methods and property types itself (which was the part *I* was least confident about), but using the metadata values for these left behind by a `@TypeChecked` compile.\r\n\r\nIn fact this change does not explicitly limit itself to `@TypeChecked` but is simply taking advantage of the metadata if present, however it got there earlier in the compile, but that does seem *primarily* to be from `StaticTypeCheckingVisitor` at present. Should in future dynamic compilation also helpfully leave that metadata lying around, it will take advantage then too.\r\n\r\nThe `VarargsMethodTest` test has been expanded (though reduced from earlier versions of this PR) to show it working as expected for `@TypeChecked` and also illustrating with \"shouldFails\" where the `@CompileDynamic` behaviour differs. Essentially it treats any single null as an array, and only the tests that are really giving it an array expression pass, but only by coincidence. The `@CompileStatic` tests have been removed as its behaviour has not changed, but it is the same (now) as `@TypeChecked`. No existing tests have had to be altered to make them pass with this code change.\r\n\r\nSo this keeps the \"purity\" of the fully dynamic mode, only depending on runtime information, and defers to the future any more considered discussion of whether that's desirable in this situation. But now the \"middle-ground\" of `@TypeChecked` can be used to correct the behaviour as well as `@CompileStatic`.\r\n\r\nThe code here still explicitly makes null constants behave as non-arrays, to be consistent with `@CompileStatic`, but I recall earlier in the discussion @paulk-asert queried whether that was the correct behaviour. If minds should change, it's a simple change from `true` to `false` here to make it follow suit. As I've said before, I'm pretty indifferent to the fate of null constants, and only really care about whether explicit types are being respected, where given.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/873406970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874758019","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-874758019","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":874758019,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc1ODAxOQ==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:25:25Z","updated_at":"2021-07-06T13:25:25Z","author_association":"MEMBER","body":"The change is definitely more palatable in size.  For expression type determination during classgen, I think the `TypeChooser` should always be used.  The sequence of checking expression class types and getting type or node metadata should already be provided through `TypeChooser`.\r\n\r\nTypically `TypeChecked` will provide extra checks but no changes to behavior.  In this case, you are using STC info to alter the call semantics.  Is there another example of this?  `StaticInvocationWriter` exists specifically to provide changes for `CompileStatic` that are not applied for `TypeChecked` or regular compilation.\r\n\r\nI have not read all the treatment for this issue.  Has the idea of a compiler warning been considered when you have STC on and you can detect that the argument is one of the edge cases that will not be wrapped by an array at runtime?  Such a warning could be implemented as a type checking extension.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874758019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874766107","html_url":"https://github.com/apache/groovy/pull/1590#issuecomment-874766107","issue_url":"https://api.github.com/repos/apache/groovy/issues/1590","id":874766107,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc2NjEwNw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:35:39Z","updated_at":"2021-07-06T13:35:39Z","author_association":"MEMBER","body":"Instead of stashing `ex` into `e` and then extracting in the `GroovyCastException` constructor, can you save the reference as a peer to the `nested` local variable and then call `addSuppressed` on the new cast exception instance?  I can't really say how many places make use of the `GroovyCastException` constructor.\r\n\r\nAlso, you don't need a package statement for your test scripts.  They should run just fine from the default package.  Usually we add that only if there is a need to check a scenario involving separate packages.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874766107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874767403","html_url":"https://github.com/apache/groovy/pull/1580#issuecomment-874767403","issue_url":"https://api.github.com/repos/apache/groovy/issues/1580","id":874767403,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc2NzQwMw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:37:18Z","updated_at":"2021-07-06T13:37:18Z","author_association":"MEMBER","body":"Is there any more coming for this change?  Or is the plan to wait until after 4.0b1?  I'd like to see it as part of the beta myself.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874767403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874770917","html_url":"https://github.com/apache/groovy/pull/1560#issuecomment-874770917","issue_url":"https://api.github.com/repos/apache/groovy/issues/1560","id":874770917,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc3MDkxNw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:41:47Z","updated_at":"2021-07-06T13:41:47Z","author_association":"MEMBER","body":"Are there any test cases that use `and`, `or`, `xor` and now `not` as extension methods?  I'd be interested to see if the style you seek is indeed supported.  Is there any concern about having \"not\" as a completion for pretty much any variable/property expression?  I don't think we have a way to say that the \"self\" parameter is intended for the \"implicit-this\" case only.\r\n\r\nOtherwise, the form of the change looks proper to me.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874770917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874852409","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-874852409","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":874852409,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDg1MjQwOQ==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T15:18:40Z","updated_at":"2021-07-06T15:18:40Z","author_association":"NONE","body":"I'll look at the TypeChooser thing, next time I get back to it (probably this weekend). The code there that digs for the type of method calls and properties is a partial hangover from trying to get it to work in a completely dynamic context, where it certainly wasn't working if I just left it to TypeChooser. I'll check what they do in typechecked. (I did already remove the special code for variables as I found that was unnecessary.)\r\n\r\nI still think casting to `Object` should be caught and interpreted as \"not an array\", in this context, as otherwise `OBJECT_TYPE = DYNAMIC_TYPE` (in ClassHelper) which gets us nowhere if the coder's weeping at his keyboard crying \"No, you moron, I'm telling you it's *not* an array!\"\r\n\r\nAs for just making it emit compiler warnings, no, it wasn't discussed. To discuss it now I would say:\r\n\r\nWhat would the coder be expected to do as a result of seeing such a warning? Maybe to put in a cast or coerce, or make sure a property/variable etc. was typed so they didn't need to... But this change is the change needed so that doing that would even work. At the moment, casting to a non-array type is completely ignored. Declared types are completely ignored. A null is always a null array no matter what you do to try to indicate otherwise. Your only recourse is to put it in an array yourself, like varargs was never invented. And of course if you, writing your code, knew for an absolute fact that a given expression would never return a null, and therefore you'd never hit this problem, those compiler warnings would get annoying real fast.\r\n\r\nThe expressions in question are known non-arrays. If they happen to evaluate to non-null values they will currently certainly be wrapped in an array at runtime (`ParameterTypes::fitToVargs` which is also where the \"null is always an array\" decision is enshrined). They'd have to or you'd be getting missing method exceptions when it tries to invoke the method with the bare non-array type. How is it not a bug that something else happens if *those expressions* happen to evaluate to null? I can't seem to stress or repeat enough that we're only doing *anything* to expressions whose types are known to be non-arrays to a high degree of confidence, where it simply cannot be right that they ever get passed straight to an array-typed parameter. Dynamically typed expressions, where it's *not* obvious whether it should be wrapped or not, are left well alone.\r\n\r\nIf anything there should be compiler warnings if they try to apply a dynamic-typed expression to a varargs method. But again, what are they going to do about it? Put a cast in to say \"it's an Object\" or \"It's an array\". Again: This is the change that means that doing that actually accomplishes anything at all.\r\n\r\n(And I still think this should be fixed for dynamic as well 😉 - It's still a crime that you can't push it the right way with an explicit cast at *least*. It's just harder to be sure you're even in a varargs context there.)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/874852409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/875151058","html_url":"https://github.com/apache/groovy/pull/1580#issuecomment-875151058","issue_url":"https://api.github.com/repos/apache/groovy/issues/1580","id":875151058,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTE1MTA1OA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T23:31:59Z","updated_at":"2021-07-06T23:31:59Z","author_association":"CONTRIBUTOR","body":"> Is there any more coming for this change? Or is the plan to wait until after 4.0b1? I'd like to see it as part of the beta myself.\r\n\r\nNo more changes for this PR, but I am waiting @paulk-asert to review it ;-)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/875151058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/875166173","html_url":"https://github.com/apache/groovy/pull/1580#issuecomment-875166173","issue_url":"https://api.github.com/repos/apache/groovy/issues/1580","id":875166173,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTE2NjE3Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-07T00:11:40Z","updated_at":"2021-07-07T00:11:40Z","author_association":"CONTRIBUTOR","body":"Yes, I've been busy on other things the last few weeks. I'm looking at it this week. I won't proceed with beta-1 until finished.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/875166173/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/877622623","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-877622623","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":877622623,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NzYyMjYyMw==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-10T11:31:31Z","updated_at":"2021-07-10T11:31:31Z","author_association":"NONE","body":"Checked: Using the `TypeChooser` doesn't work for `MethodCallExpression` or `PropertyExpression`. Therefore left my version in for now.\r\n\r\nReason appears to be that our `TypeChooser` is a `StatementMetaTypeChooser` and not, as you're presumably expecting because it looks like it might work, a `StaticTypesTypeChooser`.\r\n\r\nIn turn, our `WriterController` is a plain base-class `WriterController` and not, again as you were presumably expecting, a `StaticTypesWriterController`.\r\n\r\n(Both logged with `getClass().toString()`, not `instanceof` seeing as in each case the `StaticTypes` variant is a subtype of the other.)\r\n\r\nThis is when compiling the method `testVarargsOnlyTypeChecked` in `VarargsMethodTest.groovy`. That method is annotated `@groovy.transform.TypeChecked`, and the metadata is in place from earlier in the compilation process (that's how my code is working).\r\n\r\nI'll poke around and see if I can grok what's happening there, if it looks like a bug. Idly wondering if it's because only the method is annotated `@TypeChecked` and not the whole class... I wonder what else is quietly not working and not enough people are using it to notice. 😉\r\n\r\nAlso as I understand it the `StaticInvocationWriter` is for `@CompileStatic` only. not `@TypeChecked` - could it be simply that the others are only used for that too? Deliberately or not...\r\n\r\nNew push is just a forced rebase against upstream master, not that there's much new in the last week. I'm afraid I set that off before I actually identified the above.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/877622623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/877655321","html_url":"https://github.com/apache/groovy/pull/1590#issuecomment-877655321","issue_url":"https://api.github.com/repos/apache/groovy/issues/1590","id":877655321,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NzY1NTMyMQ==","user":{"login":"nineninesevenfour","id":75562299,"node_id":"MDQ6VXNlcjc1NTYyMjk5","avatar_url":"https://avatars.githubusercontent.com/u/75562299?v=4","gravatar_id":"","url":"https://api.github.com/users/nineninesevenfour","html_url":"https://github.com/nineninesevenfour","followers_url":"https://api.github.com/users/nineninesevenfour/followers","following_url":"https://api.github.com/users/nineninesevenfour/following{/other_user}","gists_url":"https://api.github.com/users/nineninesevenfour/gists{/gist_id}","starred_url":"https://api.github.com/users/nineninesevenfour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nineninesevenfour/subscriptions","organizations_url":"https://api.github.com/users/nineninesevenfour/orgs","repos_url":"https://api.github.com/users/nineninesevenfour/repos","events_url":"https://api.github.com/users/nineninesevenfour/events{/privacy}","received_events_url":"https://api.github.com/users/nineninesevenfour/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-10T15:25:29Z","updated_at":"2021-07-10T15:25:29Z","author_association":"CONTRIBUTOR","body":"@eric-milles \r\nThank you so much for your review! I did the requested changes. Honestly I have no idea why I made it unnecessarily complicated like this, it's much better now.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/877655321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/878195448","html_url":"https://github.com/apache/groovy/pull/1601#issuecomment-878195448","issue_url":"https://api.github.com/repos/apache/groovy/issues/1601","id":878195448,"node_id":"MDEyOklzc3VlQ29tbWVudDg3ODE5NTQ0OA==","user":{"login":"StrangeNoises","id":1295001,"node_id":"MDQ6VXNlcjEyOTUwMDE=","avatar_url":"https://avatars.githubusercontent.com/u/1295001?v=4","gravatar_id":"","url":"https://api.github.com/users/StrangeNoises","html_url":"https://github.com/StrangeNoises","followers_url":"https://api.github.com/users/StrangeNoises/followers","following_url":"https://api.github.com/users/StrangeNoises/following{/other_user}","gists_url":"https://api.github.com/users/StrangeNoises/gists{/gist_id}","starred_url":"https://api.github.com/users/StrangeNoises/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StrangeNoises/subscriptions","organizations_url":"https://api.github.com/users/StrangeNoises/orgs","repos_url":"https://api.github.com/users/StrangeNoises/repos","events_url":"https://api.github.com/users/StrangeNoises/events{/privacy}","received_events_url":"https://api.github.com/users/StrangeNoises/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-12T11:18:47Z","updated_at":"2021-07-12T11:24:29Z","author_association":"NONE","body":"It looks like you'd need the `StaticTypesTransformation::visit` method to take after its subclass `StaticCompileTransformation::visit` and actually set the `WriterControllerFactory` on the ClassNode, as well as a flag to say that this class/method is `@TypeChecked` (as per the subclass setting one indicating it's `@CompileStatic`).\r\n\r\nOf course you don't have this at the moment because, once the type-checking is done, you want the code to be actually generated in the same dynamic fashion as normal. But that's why we don't have the `StaticTypesTypeChooser` here. 😀\r\n\r\nThe hypothetical `StaticTypeCheckedWriterController` probably wants to be a superclass of the current `StaticTypesWriterController` (which maybe ought to be called `StaticCompileWriterController`, these `StaticTypes*` classes actually pertaining to static compile confused me for a while) so that the latter can still defer upwards through the former, so you can still have classes with some methods `@CompileStatic` and some methods `@TypeChecked`.\r\n\r\nThis `StaticTypeCheckedWriterController` wouldn't actually have much, just the `StaticTypesTypeChooser` and a `StaticTypeCheckedInvocationWriter`... which is where my varargs fix would actually go. And anything else we can think of where information known because we're in a `@TypeChecked` context actually wants to influence how code is generated.\r\n\r\n... if only we could think of one other thing to make all this refactoring worthwhile... 😉 My issue, generalised, is that we'd want to cover situations when the type of an argument expression is significant even if the expression yields a null value. But the only other use-case I've so far come up with for that is matching to the correct overloaded method with a null argument, and that would still need a static invocation to resolve... unless we can send the list of argument *types* into the callsite... 😅","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/878195448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/895005178","html_url":"https://github.com/apache/groovy/pull/1607#issuecomment-895005178","issue_url":"https://api.github.com/repos/apache/groovy/issues/1607","id":895005178,"node_id":"IC_kwDOAgdnis41WLH6","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-09T07:17:16Z","updated_at":"2021-08-09T07:17:16Z","author_association":"CONTRIBUTOR","body":"I merged with my suggested changes. Feel free to refine further if needed.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/895005178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897237803","html_url":"https://github.com/apache/groovy/pull/1608#issuecomment-897237803","issue_url":"https://api.github.com/repos/apache/groovy/issues/1608","id":897237803,"node_id":"IC_kwDOAgdnis41esMr","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-11T23:56:55Z","updated_at":"2021-08-11T23:56:55Z","author_association":"CONTRIBUTOR","body":"Paul, it looks good to me.\r\nI wonder if it is possible to merge the new `@Final` and the existing `@AutoFinal`:\r\nhttps://github.com/apache/groovy/blob/master/src/main/java/groovy/transform/AutoFinal.java","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897237803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897276712","html_url":"https://github.com/apache/groovy/pull/1608#issuecomment-897276712","issue_url":"https://api.github.com/repos/apache/groovy/issues/1608","id":897276712,"node_id":"IC_kwDOAgdnis41e1so","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T01:30:29Z","updated_at":"2021-08-12T01:30:29Z","author_association":"CONTRIBUTOR","body":"It would be possible to combine but I think would be more cumbersome. Instead of:\r\n```\r\nclass Foo {\r\n  @AutoFinal bar(param1, param2) { ... } // params will be final\r\n  @Final baz(param1, param2) { ... }    // baz will be final\r\n}\r\n```\r\nYou would need something like:\r\n```\r\nclass Foo {\r\n  @Final(enabled=false, autoParams=true) bar(param1, param2) { ... } // params will be final\r\n  @Final baz(param1, param2) { ... }    // baz will be final\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897276712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897949542","html_url":"https://github.com/apache/groovy/pull/1608#issuecomment-897949542","issue_url":"https://api.github.com/repos/apache/groovy/issues/1608","id":897949542,"node_id":"IC_kwDOAgdnis41hZ9m","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T20:34:37Z","updated_at":"2021-08-12T20:34:37Z","author_association":"MEMBER","body":"I find it confusing to try and sort out the purpose of `final` vs `@Final` vs `@AutoFinal`.  Is the concept of \"no extend\" or \"no override\" what is represented here?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/897949542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898049391","html_url":"https://github.com/apache/groovy/pull/1609#issuecomment-898049391","issue_url":"https://api.github.com/repos/apache/groovy/issues/1609","id":898049391,"node_id":"IC_kwDOAgdnis41hyVv","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T23:56:44Z","updated_at":"2021-08-12T23:56:44Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898049391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898378130","html_url":"https://github.com/apache/groovy/pull/1608#issuecomment-898378130","issue_url":"https://api.github.com/repos/apache/groovy/issues/1608","id":898378130,"node_id":"IC_kwDOAgdnis41jCmS","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-13T11:05:17Z","updated_at":"2021-08-13T11:22:56Z","author_association":"CONTRIBUTOR","body":"> I find it confusing to try and sort out the purpose of `final` vs `@Final` vs `@AutoFinal`. Is the concept of \"no extend\" or \"no override\" what is represented here?\r\n\r\nYou can think of `@Final` is just an alias for `final` but one that you would almost never use directly (since you can just use `final` after all). However, in meta-annotation scenarios, it can be useful to be able to \"mix in\" that functionality.\r\n\r\n`@AutoFinal` is about adding final to the parameters of (typically) a method or constructor. We also support closure params when such a closure is assigned to a field (where we have a node to add the annotation to).\r\n\r\nI updated the documentation, let me know if you think it is clearer.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898378130/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898906260","html_url":"https://github.com/apache/groovy/pull/1611#issuecomment-898906260","issue_url":"https://api.github.com/repos/apache/groovy/issues/1611","id":898906260,"node_id":"IC_kwDOAgdnis41lDiU","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-14T15:12:18Z","updated_at":"2021-08-14T15:12:18Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898906260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898906900","html_url":"https://github.com/apache/groovy/pull/1610#issuecomment-898906900","issue_url":"https://api.github.com/repos/apache/groovy/issues/1610","id":898906900,"node_id":"IC_kwDOAgdnis41lDsU","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-14T15:17:23Z","updated_at":"2021-08-14T15:17:23Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898906900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898911180","html_url":"https://github.com/apache/groovy/pull/1606#issuecomment-898911180","issue_url":"https://api.github.com/repos/apache/groovy/issues/1606","id":898911180,"node_id":"IC_kwDOAgdnis41lEvM","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-14T15:54:39Z","updated_at":"2021-08-14T15:54:39Z","author_association":"CONTRIBUTOR","body":"The PR has been merged: https://github.com/apache/groovy/commit/5fd04e30558d9154f53e005d6329698b3d65488b\r\nso close it now.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/898911180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/902460210","html_url":"https://github.com/apache/groovy/pull/1613#issuecomment-902460210","issue_url":"https://api.github.com/repos/apache/groovy/issues/1613","id":902460210,"node_id":"IC_kwDOAgdnis41ynMy","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-20T06:17:57Z","updated_at":"2021-08-20T06:17:57Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/902460210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/902679451","html_url":"https://github.com/apache/groovy/pull/1613#issuecomment-902679451","issue_url":"https://api.github.com/repos/apache/groovy/issues/1613","id":902679451,"node_id":"IC_kwDOAgdnis41zcub","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-20T13:06:16Z","updated_at":"2021-08-20T13:06:16Z","author_association":"CONTRIBUTOR","body":"Merged, thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/902679451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903338924","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-903338924","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":903338924,"node_id":"IC_kwDOAgdnis4119us","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-22T22:22:44Z","updated_at":"2021-08-22T22:22:44Z","author_association":"MEMBER","body":"I'm taking a look separately at simplifying or reorganizing the changes for GROOVY-4287/GROOVY-7812/GROOVY-9243 since they apply only to running through `GroovyMain` (aka runtime compilation).  Can the one regression for 9243 be accepted until then?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903338924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903465035","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-903465035","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":903465035,"node_id":"IC_kwDOAgdnis412chL","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-23T05:56:34Z","updated_at":"2021-08-23T05:56:34Z","author_association":"CONTRIBUTOR","body":"LGTM except for the regression.\r\n\r\n> Can the one regression for 9243 be accepted until then?\r\n\r\nCorrectness is more important than elegance IMO, so it's better not to introduce regression for refactoring.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903465035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903817142","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-903817142","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":903817142,"node_id":"IC_kwDOAgdnis413ye2","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-23T14:18:46Z","updated_at":"2021-08-23T14:18:46Z","author_association":"CONTRIBUTOR","body":"There are examples (like below) which work after the change - so that's good. I know you are working on a cleaner medium-term change but I don't know if we can find a short-term fix for the regression in the meantime.\r\n```\r\npublic class Main {\r\n    public class Foo {\r\n        public class Bar {\r\n            private String prop;\r\n            public Bar(String prop) { this.prop = prop; }\r\n            public String getProp() { return prop; }\r\n        }\r\n    }\r\n    public static void main(String[] args) {\r\n        System.out.println(new Main().new Foo().new Bar(\"bar\").getProp());\r\n    }\r\n}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903817142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903847576","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-903847576","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":903847576,"node_id":"IC_kwDOAgdnis41356Y","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-23T14:54:53Z","updated_at":"2021-08-23T14:54:53Z","author_association":"MEMBER","body":"@paulk-asert Is the new example a scenario that did not work previously?\r\n\r\nMy concern with all the GROOVY-4287/GROOVY-7812/GROOVY-9243 code is that it has increased the complexity of `ResolveVisitor` significantly only to benefit runtime compilation scenarios.  Eclipse tooling does not make use of runtime compilation so it is extra complexity for no benefit.  I carved off the 8947 rework because it applies to traditional compilation.  And my initial testing did not catch the 9243 regression.\r\n\r\nWhat got me going on this is the double execution of `VariableScopeVisitor` and `ResolveVisitor`[1][2].  I have a solution that runs these each once during normal compilation, but the change affects the inner class resolution for runtime compilation (aka 4287/7812/9243).\r\n\r\n[1] https://github.com/apache/groovy/blob/master/src/main/java/org/codehaus/groovy/control/CompilationUnit.java#L623\r\n[2] https://github.com/apache/groovy/blob/master/src/main/java/org/codehaus/groovy/control/CompilationUnit.java#L203","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903847576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903927029","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-903927029","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":903927029,"node_id":"IC_kwDOAgdnis414NT1","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-23T16:27:47Z","updated_at":"2021-08-23T16:27:47Z","author_association":"CONTRIBUTOR","body":"@eric-milles Correct, that example didn't work previously.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/903927029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/904696251","html_url":"https://github.com/apache/groovy/pull/1614#issuecomment-904696251","issue_url":"https://api.github.com/repos/apache/groovy/issues/1614","id":904696251,"node_id":"IC_kwDOAgdnis417JG7","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-24T14:32:23Z","updated_at":"2021-08-24T14:32:23Z","author_association":"CONTRIBUTOR","body":"I am inclined to hold off the change until 3.0.9 is out. There is already a lot in that release.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/904696251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/914980916","html_url":"https://github.com/apache/groovy/pull/1617#issuecomment-914980916","issue_url":"https://api.github.com/repos/apache/groovy/issues/1617","id":914980916,"node_id":"IC_kwDOAgdnis42iYA0","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-08T07:11:57Z","updated_at":"2021-09-08T07:11:57Z","author_association":"CONTRIBUTOR","body":"I merged your other PR onto the GROOVY_2_5_X, so we can close this one.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/914980916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/914981854","html_url":"https://github.com/apache/groovy/pull/1616#issuecomment-914981854","issue_url":"https://api.github.com/repos/apache/groovy/issues/1616","id":914981854,"node_id":"IC_kwDOAgdnis42iYPe","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-08T07:13:28Z","updated_at":"2021-09-08T07:13:28Z","author_association":"CONTRIBUTOR","body":"Merged onto the GROOVY_2_5_X branch - Thanks!\r\nWe wouldn't merge on to the GROOVY_2_4_X branch.\r\nGroovy 2.4.x has a minimum JDK of 6 whereas Ivy 2.5.0 requires minimum 7.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/914981854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/915046416","html_url":"https://github.com/apache/groovy/pull/1616#issuecomment-915046416","issue_url":"https://api.github.com/repos/apache/groovy/issues/1616","id":915046416,"node_id":"IC_kwDOAgdnis42ioAQ","user":{"login":"phang98","id":7575570,"node_id":"MDQ6VXNlcjc1NzU1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/7575570?v=4","gravatar_id":"","url":"https://api.github.com/users/phang98","html_url":"https://github.com/phang98","followers_url":"https://api.github.com/users/phang98/followers","following_url":"https://api.github.com/users/phang98/following{/other_user}","gists_url":"https://api.github.com/users/phang98/gists{/gist_id}","starred_url":"https://api.github.com/users/phang98/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phang98/subscriptions","organizations_url":"https://api.github.com/users/phang98/orgs","repos_url":"https://api.github.com/users/phang98/repos","events_url":"https://api.github.com/users/phang98/events{/privacy}","received_events_url":"https://api.github.com/users/phang98/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-08T08:53:07Z","updated_at":"2021-09-08T08:53:07Z","author_association":"NONE","body":"Great thanks for the quick response.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/915046416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]