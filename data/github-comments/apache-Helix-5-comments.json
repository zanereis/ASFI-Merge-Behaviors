[{"url":"https://api.github.com/repos/apache/helix/issues/comments/521517664","html_url":"https://github.com/apache/helix/pull/408#issuecomment-521517664","issue_url":"https://api.github.com/repos/apache/helix/issues/408","id":521517664,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTUxNzY2NA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T05:22:28Z","updated_at":"2019-08-15T05:22:28Z","author_association":"CONTRIBUTOR","body":"@lei-xia authored the original version of equals() for these config classes. Need his input.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521517664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521517784","html_url":"https://github.com/apache/helix/pull/393#issuecomment-521517784","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":521517784,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTUxNzc4NA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T05:23:13Z","updated_at":"2019-08-15T05:23:13Z","author_association":"CONTRIBUTOR","body":"I'm tracking. I'll run the tests when I get a minute and update this PR :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521517784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521530508","html_url":"https://github.com/apache/helix/pull/378#issuecomment-521530508","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":521530508,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTUzMDUwOA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T06:27:15Z","updated_at":"2019-08-15T06:27:15Z","author_association":"CONTRIBUTOR","body":"@chenboat @narendly I'm thinking about if there is a better way to test.\r\n\r\nMy major concern is that we make the protected method public just for testing.\r\nMoreover, it seems we can only verify if the system property is read correctly. We cannot verify if it has been applied to the Histogram as expected. The window field is private in the metrics lib. I haven't got a good idea now : (","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521530508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521754515","html_url":"https://github.com/apache/helix/pull/333#issuecomment-521754515","issue_url":"https://api.github.com/repos/apache/helix/issues/333","id":521754515,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTc1NDUxNQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T18:52:26Z","updated_at":"2019-08-15T18:52:26Z","author_association":"CONTRIBUTOR","body":"The PR is ready to merge into master, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521754515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521805099","html_url":"https://github.com/apache/helix/pull/388#issuecomment-521805099","issue_url":"https://api.github.com/repos/apache/helix/issues/388","id":521805099,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTgwNTA5OQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T21:31:55Z","updated_at":"2019-08-15T21:31:55Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @i3wangyi and @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521805099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521805240","html_url":"https://github.com/apache/helix/pull/388#issuecomment-521805240","issue_url":"https://api.github.com/repos/apache/helix/issues/388","id":521805240,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTgwNTI0MA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T21:32:22Z","updated_at":"2019-08-15T21:32:22Z","author_association":"CONTRIBUTOR","body":"Add ChangeDetector interface and ResourceChangeDetector implementation\r\n\r\nIn order to efficiently react to changes happening to the cluster in the new WAGED rebalancer, a new component called ChangeDetector was added.\r\n\r\nChangelist:\r\n\r\nAdd ChangeDetector interface\r\nImplement ResourceChangeDetector\r\nAdd ResourceChangeCache, a wrapper for critical cluster metadata","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521805240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521806487","html_url":"https://github.com/apache/helix/pull/388#issuecomment-521806487","issue_url":"https://api.github.com/repos/apache/helix/issues/388","id":521806487,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTgwNjQ4Nw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T21:36:49Z","updated_at":"2019-08-15T21:36:49Z","author_association":"CONTRIBUTOR","body":"Merge to wagedRebalancer branch as well?\r\n\r\nActually, I thought it would go to the branch only. But the master is also fine. Since we need it in the other components as well.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521806487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521818405","html_url":"https://github.com/apache/helix/pull/378#issuecomment-521818405","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":521818405,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTgxODQwNQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T22:23:05Z","updated_at":"2019-08-15T22:23:05Z","author_association":"CONTRIBUTOR","body":"> @chenboat @narendly I'm thinking about if there is a better way to test.\r\n> \r\n> My major concern is that we make the protected method public just for testing.\r\n> Moreover, it seems we can only verify if the system property is read correctly. We cannot verify if it has been applied to the Histogram as expected. The window field is private in the metrics lib. I haven't got a good idea now : (\r\n\r\nI got something. It could be a bad idea, but better than nothing.\r\nCan we add a test case that:\r\n1. set the time window to 2 seconds.\r\n2. create a monitor and update a histogram metric data once. Verify the expected data presents in the histogram metric.\r\n3. Wait for 3 seconds. Check the same histogram metric data, the data should be have been reset.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521818405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521825255","html_url":"https://github.com/apache/helix/pull/408#issuecomment-521825255","issue_url":"https://api.github.com/repos/apache/helix/issues/408","id":521825255,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTgyNTI1NQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-15T22:54:29Z","updated_at":"2019-08-15T22:54:29Z","author_association":"CONTRIBUTOR","body":"It'd be better to write some unit tests to justify \r\n- cases where original equals won't work but it should\r\n- cases with your change, the equals method works","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521825255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521848944","html_url":"https://github.com/apache/helix/pull/381#issuecomment-521848944","issue_url":"https://api.github.com/repos/apache/helix/issues/381","id":521848944,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTg0ODk0NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-16T01:10:15Z","updated_at":"2019-08-16T01:10:15Z","author_association":"CONTRIBUTOR","body":"@i3wangyi As we discussed offline, please focus on the algorithm in this PR. Let's improve the model in a separate PR.\r\n\r\nIn detail, please add OptimalAssignment as the output object only. During the calculation, please stick with the current design and use Cluster Model as the runtime tracking method.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521848944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/521888486","html_url":"https://github.com/apache/helix/pull/378#issuecomment-521888486","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":521888486,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMTg4ODQ4Ng==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-16T05:25:51Z","updated_at":"2019-08-16T05:25:51Z","author_association":"CONTRIBUTOR","body":"> @chenboat @narendly I'm thinking about if there is a better way to test.\r\n> \r\n> My major concern is that we make the protected method public just for testing.\r\n> Moreover, it seems we can only verify if the system property is read correctly. We cannot verify if it has been applied to the Histogram as expected. The window field is private in the metrics lib. I haven't got a good idea now : (\r\n\r\nWhile most of the logic about my diff is about loading system property to init the SlidingWindow, I do understand the need to check the histogram value. Most of the current Unit tests are not aiming for testing histogram values -- they passed even I change the window length -- my understanding is that this metrics is buried pretty deep in the code. Let me take a look at some tests which could verify the histograms.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/521888486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522284425","html_url":"https://github.com/apache/helix/pull/378#issuecomment-522284425","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":522284425,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjI4NDQyNQ==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-18T02:04:37Z","updated_at":"2019-08-18T02:04:59Z","author_association":"CONTRIBUTOR","body":"> > @chenboat @narendly I'm thinking about if there is a better way to test.\r\n> > My major concern is that we make the protected method public just for testing.\r\n> > Moreover, it seems we can only verify if the system property is read correctly. We cannot verify if it has been applied to the Histogram as expected. The window field is private in the metrics lib. I haven't got a good idea now : (\r\n> \r\n> I got something. It could be a bad idea, but better than nothing.\r\n> Can we add a test case that:\r\n> \r\n> 1. set the time window to 2 seconds.\r\n> 2. create a monitor and update a histogram metric data once. Verify the expected data presents in the histogram metric.\r\n> 3. Wait for 3 seconds. Check the same histogram metric data, the data should be have been reset.\r\n\r\nThanks for the suggestion. It makes sense. I added a test case using the same idea. Please check out my latest commit. @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522284425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522680174","html_url":"https://github.com/apache/helix/pull/413#issuecomment-522680174","issue_url":"https://api.github.com/repos/apache/helix/issues/413","id":522680174,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjY4MDE3NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-19T17:39:06Z","updated_at":"2019-08-19T17:39:06Z","author_association":"CONTRIBUTOR","body":"> Before checking it in, do you think we should leave a comment on what would happen if neither instance capacity nor default value is set?\r\n\r\nSure. Let me find a good place to comment on.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522680174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522684078","html_url":"https://github.com/apache/helix/pull/413#issuecomment-522684078","issue_url":"https://api.github.com/repos/apache/helix/issues/413","id":522684078,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjY4NDA3OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-19T17:48:51Z","updated_at":"2019-08-19T17:48:51Z","author_association":"CONTRIBUTOR","body":"Commented on the instance capacity.\r\n\r\nApproved by @narendly. I will merge the PR to the branch.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522684078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522772493","html_url":"https://github.com/apache/helix/pull/378#issuecomment-522772493","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":522772493,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjc3MjQ5Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-19T22:06:51Z","updated_at":"2019-08-19T22:06:51Z","author_association":"CONTRIBUTOR","body":"Please try to run \"mvn test\". ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522772493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522852156","html_url":"https://github.com/apache/helix/pull/378#issuecomment-522852156","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":522852156,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjg1MjE1Ng==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-20T04:52:12Z","updated_at":"2019-08-20T04:52:12Z","author_association":"CONTRIBUTOR","body":"> Please try to run \"mvn test\".\r\n\r\nI ran the mvn for helix-core. There are transient failures which can pass after re-run. The mbean tests are all good.  ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522852156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/522853075","html_url":"https://github.com/apache/helix/pull/378#issuecomment-522853075","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":522853075,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMjg1MzA3NQ==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-20T04:57:06Z","updated_at":"2019-08-20T04:57:06Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by [@jiajunwang].","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/522853075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523123260","html_url":"https://github.com/apache/helix/issues/401#issuecomment-523123260","issue_url":"https://api.github.com/repos/apache/helix/issues/401","id":523123260,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzEyMzI2MA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-20T17:48:38Z","updated_at":"2019-08-20T17:48:38Z","author_association":"CONTRIBUTOR","body":"Will take a look.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523123260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523221212","html_url":"https://github.com/apache/helix/pull/381#issuecomment-523221212","issue_url":"https://api.github.com/repos/apache/helix/issues/381","id":523221212,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzIyMTIxMg==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-20T22:34:32Z","updated_at":"2019-08-20T22:34:32Z","author_association":"CONTRIBUTOR","body":"Hey @i3wangyi  Not sure about the policy. But I think it might help track the reviews if we can avoid force push to a PR, because the reviews would be outdated/disappeared after a force push. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523221212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523250821","html_url":"https://github.com/apache/helix/pull/417#issuecomment-523250821","issue_url":"https://api.github.com/repos/apache/helix/issues/417","id":523250821,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzI1MDgyMQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-21T00:53:26Z","updated_at":"2019-08-21T00:53:26Z","author_association":"CONTRIBUTOR","body":"The PR is ready to merge into master, approved by @dasahcc ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523250821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523293720","html_url":"https://github.com/apache/helix/issues/424#issuecomment-523293720","issue_url":"https://api.github.com/repos/apache/helix/issues/424","id":523293720,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzI5MzcyMA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-21T04:46:34Z","updated_at":"2019-08-21T04:46:34Z","author_association":"CONTRIBUTOR","body":"Let's explain this further. I don't think the description fully reflects your findings? Because you won't remember this as well later when you revisit this...","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523293720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523569449","html_url":"https://github.com/apache/helix/pull/410#issuecomment-523569449","issue_url":"https://api.github.com/repos/apache/helix/issues/410","id":523569449,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzU2OTQ0OQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-21T17:37:36Z","updated_at":"2019-08-21T17:37:36Z","author_association":"NONE","body":"@narendly mvn test results have been updated in PR.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523569449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523569554","html_url":"https://github.com/apache/helix/pull/410#issuecomment-523569554","issue_url":"https://api.github.com/repos/apache/helix/issues/410","id":523569554,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzU2OTU1NA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-21T17:37:51Z","updated_at":"2019-08-21T17:37:51Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523569554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523745090","html_url":"https://github.com/apache/helix/pull/378#issuecomment-523745090","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":523745090,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzc0NTA5MA==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T04:41:58Z","updated_at":"2019-08-22T04:41:58Z","author_association":"CONTRIBUTOR","body":"> @chenboat If you want this code merged, please review https://github.com/apache/helix/wiki/Pull-Request-Merge-Steps\r\n\r\nDone.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523745090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523745879","html_url":"https://github.com/apache/helix/pull/378#issuecomment-523745879","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":523745879,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzc0NTg3OQ==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T04:46:06Z","updated_at":"2019-08-22T04:46:06Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by [@jiajunwang].","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523745879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/523969432","html_url":"https://github.com/apache/helix/pull/378#issuecomment-523969432","issue_url":"https://api.github.com/repos/apache/helix/issues/378","id":523969432,"node_id":"MDEyOklzc3VlQ29tbWVudDUyMzk2OTQzMg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T16:03:05Z","updated_at":"2019-08-22T16:03:05Z","author_association":"CONTRIBUTOR","body":"@chenboat Starting your next PR, if you have had multiple commits in the PR, please include one final commit message under which all of your commits should be squashed. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/523969432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/524040606","html_url":"https://github.com/apache/helix/pull/426#issuecomment-524040606","issue_url":"https://api.github.com/repos/apache/helix/issues/426","id":524040606,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDA0MDYwNg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T19:20:04Z","updated_at":"2019-08-22T19:20:04Z","author_association":"CONTRIBUTOR","body":"@narendly I had some discussion with Lei. We think it would be better if we can organize the bucket according to the resource information. In detail, the bucket may contain multiple resource assignments, but a single bucket can always be decompressed separately. This is different from the current implementation I believe. For now, we have to read all files to extract. So debugging would be difficult.\r\n\r\nIt won't change the interface. Just enhancing the znode structure and hopefully making SRE/Dev support easier. \r\n\r\nNote that in this case, we can put more information into the metadata file. For example, which bucket contains which resource's information.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/524040606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/524082346","html_url":"https://github.com/apache/helix/pull/426#issuecomment-524082346","issue_url":"https://api.github.com/repos/apache/helix/issues/426","id":524082346,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDA4MjM0Ng==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T21:20:41Z","updated_at":"2019-08-22T21:20:41Z","author_association":"CONTRIBUTOR","body":"@jiajunwang \r\nI have some concerns about that approach as well. We already discussed that alternative during the design stage. To reiterate the points that were raised then:\r\n\r\n1. It is more difficult to tackle the issue of extreme cases like a resource having too many partitions and too many resources having few partitions. This makes it harder to have a consistent bucketing policy.\r\n2. You cited the benefit of aligning the bucketing policy and Helix's resources (resource/partition) as the ease of debugging. But we could always provide a tool for viewing. So that's not a blocker with the current approach.\r\n\r\nLet's continue the discussion offline.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/524082346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/524083913","html_url":"https://github.com/apache/helix/pull/426#issuecomment-524083913","issue_url":"https://api.github.com/repos/apache/helix/issues/426","id":524083913,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDA4MzkxMw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-22T21:25:29Z","updated_at":"2019-08-22T21:25:29Z","author_association":"CONTRIBUTOR","body":"> @jiajunwang\r\n> I have some concerns about that approach as well. We already discussed that alternative during the design stage. To reiterate the points that were raised then:\r\n> \r\n> 1. It is more difficult to tackle the issue of extreme cases like a resource having too many partitions and too many resources having few partitions. This makes it harder to have a consistent bucketing policy.\r\n> 2. You cited the benefit of aligning the bucketing policy and Helix's resources (resource/partition) as the ease of debugging. But we could always provide a tool for viewing. So that's not a blocker with the current approach.\r\n> \r\n> Let's continue the discussion offline.\r\n\r\nI personally have no strong preference for this. But I think there is a difference between requiring a different tool to debug and using the system provided unzip command to debug directly. On my understanding, this is more about convenience.\r\n\r\nShall we have a short meeting to discuss it? These two designs are not compatible. So let's confirm before proceeding. Please include Lei.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/524083913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/524966522","html_url":"https://github.com/apache/helix/pull/422#issuecomment-524966522","issue_url":"https://api.github.com/repos/apache/helix/issues/422","id":524966522,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDk2NjUyMg==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-26T18:09:26Z","updated_at":"2019-08-26T18:09:26Z","author_association":"CONTRIBUTOR","body":"The PR is ready for merging into wagedRebalancer branch, approved by @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/524966522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/524976995","html_url":"https://github.com/apache/helix/issues/424#issuecomment-524976995","issue_url":"https://api.github.com/repos/apache/helix/issues/424","id":524976995,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNDk3Njk5NQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-26T18:36:19Z","updated_at":"2019-08-26T18:36:19Z","author_association":"CONTRIBUTOR","body":"Details for the fix are in the PR description.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/524976995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/525026022","html_url":"https://github.com/apache/helix/pull/432#issuecomment-525026022","issue_url":"https://api.github.com/repos/apache/helix/issues/432","id":525026022,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTAyNjAyMg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-26T20:47:55Z","updated_at":"2019-08-26T20:47:55Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc and @alirezazamani ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/525026022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/525435493","html_url":"https://github.com/apache/helix/issues/434#issuecomment-525435493","issue_url":"https://api.github.com/repos/apache/helix/issues/434","id":525435493,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTQzNTQ5Mw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-27T18:51:51Z","updated_at":"2019-08-27T18:51:51Z","author_association":"CONTRIBUTOR","body":"@alirezazamani Please fix the issue - job cannot be in INIT state","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/525435493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/525445521","html_url":"https://github.com/apache/helix/pull/435#issuecomment-525445521","issue_url":"https://api.github.com/repos/apache/helix/issues/435","id":525445521,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTQ0NTUyMQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-27T19:19:33Z","updated_at":"2019-08-27T19:19:33Z","author_association":"CONTRIBUTOR","body":"Can we think about a way to test this?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/525445521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/525587705","html_url":"https://github.com/apache/helix/pull/408#issuecomment-525587705","issue_url":"https://api.github.com/repos/apache/helix/issues/408","id":525587705,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNTU4NzcwNQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-28T05:15:13Z","updated_at":"2019-08-28T05:15:13Z","author_association":"CONTRIBUTOR","body":"Closing the PR since this is no longer required.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/525587705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526026253","html_url":"https://github.com/apache/helix/pull/431#issuecomment-526026253","issue_url":"https://api.github.com/repos/apache/helix/issues/431","id":526026253,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjAyNjI1Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-29T05:16:11Z","updated_at":"2019-08-29T05:16:11Z","author_association":"CONTRIBUTOR","body":"> Overall LGTM just minor comments. Do you want to add unit test later when adding the implementations?\r\n\r\nYes, that's the plan, this change does not contain real business logic. I just tested with existing test cases to ensure the modified stage is not broken.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526026253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526028288","html_url":"https://github.com/apache/helix/pull/431#issuecomment-526028288","issue_url":"https://api.github.com/repos/apache/helix/issues/431","id":526028288,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjAyODI4OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-29T05:26:10Z","updated_at":"2019-08-29T05:26:10Z","author_association":"CONTRIBUTOR","body":"Approved by Yi. I will merge to the branch.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526028288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526291300","html_url":"https://github.com/apache/helix/pull/438#issuecomment-526291300","issue_url":"https://api.github.com/repos/apache/helix/issues/438","id":526291300,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjI5MTMwMA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-29T17:47:48Z","updated_at":"2019-08-29T17:47:48Z","author_association":"CONTRIBUTOR","body":"Approved by Hunter, will merge soon.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526291300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526331134","html_url":"https://github.com/apache/helix/pull/438#issuecomment-526331134","issue_url":"https://api.github.com/repos/apache/helix/issues/438","id":526331134,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjMzMTEzNA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-29T19:38:47Z","updated_at":"2019-08-29T19:38:47Z","author_association":"CONTRIBUTOR","body":"Please follow the code merge guidelines word for word.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526331134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526331410","html_url":"https://github.com/apache/helix/pull/439#issuecomment-526331410","issue_url":"https://api.github.com/repos/apache/helix/issues/439","id":526331410,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjMzMTQxMA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-29T19:39:40Z","updated_at":"2019-08-29T19:39:40Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526331410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526408804","html_url":"https://github.com/apache/helix/pull/443#issuecomment-526408804","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":526408804,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQwODgwNA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T00:29:09Z","updated_at":"2019-08-30T00:29:09Z","author_association":"CONTRIBUTOR","body":"Test is not complete yet.\r\nAlso, I will refine the format before marking this PR ready for review. Please focus on the logic if you are reviewing the draft. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526408804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526414055","html_url":"https://github.com/apache/helix/pull/428#issuecomment-526414055","issue_url":"https://api.github.com/repos/apache/helix/issues/428","id":526414055,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQxNDA1NQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T01:01:00Z","updated_at":"2019-08-30T01:01:00Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526414055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526456444","html_url":"https://github.com/apache/helix/pull/438#issuecomment-526456444","issue_url":"https://api.github.com/repos/apache/helix/issues/438","id":526456444,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQ1NjQ0NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T05:03:22Z","updated_at":"2019-08-30T05:03:22Z","author_association":"CONTRIBUTOR","body":"> Please follow the code merge guidelines word for word.\r\n\r\nOpen the guideline wiki and copy the sentence is OK, but I personally think it's an overkill to do a \"word for word\" regulation. What's the benefit? We can all read English. \r\nThe required information is: 1. ready to merge. 2. The optional final commit description.\r\n\r\nActually, how about adding a checkbox in the PR description template, \"ready to merge\"? So we just need to copy-paste once.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526456444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526468901","html_url":"https://github.com/apache/helix/pull/428#issuecomment-526468901","issue_url":"https://api.github.com/repos/apache/helix/issues/428","id":526468901,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQ2ODkwMQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T05:59:45Z","updated_at":"2019-08-30T05:59:45Z","author_association":"CONTRIBUTOR","body":"@alirezazamani Thanks :) Make sure you follow the rest of the merge guidelines (in cases where you have multiple commits, you need to add the final commit message).","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526468901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526470139","html_url":"https://github.com/apache/helix/pull/438#issuecomment-526470139","issue_url":"https://api.github.com/repos/apache/helix/issues/438","id":526470139,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQ3MDEzOQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T06:04:55Z","updated_at":"2019-08-30T06:04:55Z","author_association":"CONTRIBUTOR","body":"There is value in following the template. Especially if you tag the person who approved it, then the approver gets a notification that the PR is ready for check-in. In your case, you just mentioned my name, and in some cases it would be difficult to match people up with their names (especially those who haven't been around the community long enough). And if we don't follow the rules closely ourselves, how should we expect newcomers to do the same to keep up the quality? :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526470139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526477531","html_url":"https://github.com/apache/helix/pull/438#issuecomment-526477531","issue_url":"https://api.github.com/repos/apache/helix/issues/438","id":526477531,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQ3NzUzMQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T06:34:44Z","updated_at":"2019-08-30T06:34:44Z","author_association":"CONTRIBUTOR","body":"> There is value in following the template. Especially if you tag the person who approved it, then the approver gets a notification that the PR is ready for check-in. In your case, you just mentioned my name, and in some cases it would be difficult to match people up with their names (especially those who haven't been around the community long enough). And if we don't follow the rules closely ourselves, how should we expect newcomers to do the same to keep up the quality? :)\r\n\r\nI'm not against the regulation. We shall have and follow it. But the rule is made by us for developing the project. The rule itself won't rebalance any resource. Let's try to simply it instead of making it more complicated. For instance, why a Helix committer needs to see who approved the PR from the comment? They are all listed on the top right corner (with approval state). Strictly speaking, if someone put a random name with @ in the comment, we still need to check the reviewer list that is maintained by Github, right?\r\n\r\nI don't have a strong preference on the formatting, but let's put it in the template in form of an additional checkbox. 2 benefits:\r\n1. We just do one copy-paste, done when we create the PR.\r\n2. If you notice in the PR list view, we have the checkbox count displayed. If we have this final checkbox, the committer would be easy to identify which PR can be merged.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526477531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526572455","html_url":"https://github.com/apache/helix/pull/393#issuecomment-526572455","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":526572455,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjU3MjQ1NQ==","user":{"login":"leesf","id":10128888,"node_id":"MDQ6VXNlcjEwMTI4ODg4","avatar_url":"https://avatars.githubusercontent.com/u/10128888?v=4","gravatar_id":"","url":"https://api.github.com/users/leesf","html_url":"https://github.com/leesf","followers_url":"https://api.github.com/users/leesf/followers","following_url":"https://api.github.com/users/leesf/following{/other_user}","gists_url":"https://api.github.com/users/leesf/gists{/gist_id}","starred_url":"https://api.github.com/users/leesf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leesf/subscriptions","organizations_url":"https://api.github.com/users/leesf/orgs","repos_url":"https://api.github.com/users/leesf/repos","events_url":"https://api.github.com/users/leesf/events{/privacy}","received_events_url":"https://api.github.com/users/leesf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T11:51:48Z","updated_at":"2019-08-30T11:51:48Z","author_association":"CONTRIBUTOR","body":"@narendly Sorry to bother you, could I ask what the progress of the PR?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526572455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526655012","html_url":"https://github.com/apache/helix/pull/428#issuecomment-526655012","issue_url":"https://api.github.com/repos/apache/helix/issues/428","id":526655012,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjY1NTAxMg==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T15:57:12Z","updated_at":"2019-08-30T16:43:30Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly.\r\n\r\nCommit message:\r\nTitle: \r\nAdd integration tests for workflow ForceDelete\r\n\r\nDescription:\r\nThis commit adds integration tests for ForceDelete.\r\ncheck the functionality of ForceDelete.\r\nAdd comment to ForceDelete that discourages users from using ForceDelete.\r\nSeveral workflow states have been considered and checked for ForceDelete.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526655012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526772076","html_url":"https://github.com/apache/helix/pull/393#issuecomment-526772076","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":526772076,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc3MjA3Ng==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T22:51:30Z","updated_at":"2019-08-30T22:51:30Z","author_association":"CONTRIBUTOR","body":"@leesf Thanks for the reminder! I'll run it today and update!","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526772076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526780538","html_url":"https://github.com/apache/helix/pull/393#issuecomment-526780538","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":526780538,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc4MDUzOA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-30T23:54:47Z","updated_at":"2019-08-30T23:54:47Z","author_association":"CONTRIBUTOR","body":"@leesf \r\nI checked out your remote branch and ran the test. See the following:\r\n\r\n[INFO] Tests run: 838, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3,086.43 s - in TestSuite\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 838, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  51:31 min\r\n[INFO] Finished at: 2019-08-30T16:52:13-07:00\r\n[INFO] ------------------------------------------------------------------------\r\n[hulee@hulee-ld1 helix-core]$ git branch\r\n  master\r\n* remove_import_hotfix\r\n[hulee@hulee-ld1 helix-core]$ \r\n\r\nLooks like it's all clean. Please follow the merge guidelines to if you want to proceed. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526780538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526785763","html_url":"https://github.com/apache/helix/pull/440#issuecomment-526785763","issue_url":"https://api.github.com/repos/apache/helix/issues/440","id":526785763,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc4NTc2Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-31T00:46:49Z","updated_at":"2019-08-31T00:46:49Z","author_association":"CONTRIBUTOR","body":"On my second thought, directly recording the replica instances would be easier. I have refactored the change, and tried to address the comments.\r\nFor the pending ones, please reply so I can ensure that my understanding is correct.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526785763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526786179","html_url":"https://github.com/apache/helix/pull/440#issuecomment-526786179","issue_url":"https://api.github.com/repos/apache/helix/issues/440","id":526786179,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc4NjE3OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-31T00:52:16Z","updated_at":"2019-08-31T00:52:16Z","author_association":"CONTRIBUTOR","body":"@i3wangyi Please take a look at this change, since you are working on the algorithm.\r\n\r\nBTW, it seems that I can only request @narendly for reviewing but not @i3wangyi. Probably because @i3wangyi is not a committer yet.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526786179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526788707","html_url":"https://github.com/apache/helix/pull/393#issuecomment-526788707","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":526788707,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc4ODcwNw==","user":{"login":"leesf","id":10128888,"node_id":"MDQ6VXNlcjEwMTI4ODg4","avatar_url":"https://avatars.githubusercontent.com/u/10128888?v=4","gravatar_id":"","url":"https://api.github.com/users/leesf","html_url":"https://github.com/leesf","followers_url":"https://api.github.com/users/leesf/followers","following_url":"https://api.github.com/users/leesf/following{/other_user}","gists_url":"https://api.github.com/users/leesf/gists{/gist_id}","starred_url":"https://api.github.com/users/leesf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leesf/subscriptions","organizations_url":"https://api.github.com/users/leesf/orgs","repos_url":"https://api.github.com/users/leesf/repos","events_url":"https://api.github.com/users/leesf/events{/privacy}","received_events_url":"https://api.github.com/users/leesf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-31T01:28:19Z","updated_at":"2019-08-31T01:28:19Z","author_association":"CONTRIBUTOR","body":"Thanks for your kindly help.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526788707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/526788734","html_url":"https://github.com/apache/helix/pull/393#issuecomment-526788734","issue_url":"https://api.github.com/repos/apache/helix/issues/393","id":526788734,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNjc4ODczNA==","user":{"login":"leesf","id":10128888,"node_id":"MDQ6VXNlcjEwMTI4ODg4","avatar_url":"https://avatars.githubusercontent.com/u/10128888?v=4","gravatar_id":"","url":"https://api.github.com/users/leesf","html_url":"https://github.com/leesf","followers_url":"https://api.github.com/users/leesf/followers","following_url":"https://api.github.com/users/leesf/following{/other_user}","gists_url":"https://api.github.com/users/leesf/gists{/gist_id}","starred_url":"https://api.github.com/users/leesf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leesf/subscriptions","organizations_url":"https://api.github.com/users/leesf/orgs","repos_url":"https://api.github.com/users/leesf/repos","events_url":"https://api.github.com/users/leesf/events{/privacy}","received_events_url":"https://api.github.com/users/leesf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-08-31T01:28:32Z","updated_at":"2019-08-31T01:28:32Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly .","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/526788734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527643453","html_url":"https://github.com/apache/helix/pull/446#issuecomment-527643453","issue_url":"https://api.github.com/repos/apache/helix/issues/446","id":527643453,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY0MzQ1Mw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T21:15:02Z","updated_at":"2019-09-03T21:15:02Z","author_association":"CONTRIBUTOR","body":"@alirezazamani Could you please paste the logs of failed test from now on so we have some logs to go off of when we fix tests?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527643453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527643944","html_url":"https://github.com/apache/helix/pull/446#issuecomment-527643944","issue_url":"https://api.github.com/repos/apache/helix/issues/446","id":527643944,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY0Mzk0NA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T21:16:24Z","updated_at":"2019-09-03T21:16:24Z","author_association":"NONE","body":"@narendly Sure.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527643944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527670255","html_url":"https://github.com/apache/helix/issues/447#issuecomment-527670255","issue_url":"https://api.github.com/repos/apache/helix/issues/447","id":527670255,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY3MDI1NQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T22:50:27Z","updated_at":"2019-09-03T22:52:02Z","author_association":"CONTRIBUTOR","body":"![cluster](https://user-images.githubusercontent.com/2618776/64213726-c2b0e300-ce62-11e9-8263-b3b19a0cf992.jpg)\r\n\r\nA visual illustration of the Trie structure that aligned with Helix settings.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527670255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527673611","html_url":"https://github.com/apache/helix/issues/447#issuecomment-527673611","issue_url":"https://api.github.com/repos/apache/helix/issues/447","id":527673611,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY3MzYxMQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T23:04:39Z","updated_at":"2019-09-03T23:04:39Z","author_association":"CONTRIBUTOR","body":"Could you please review the Topology.java class? I think that one is pretty much what you are trying to design here.\n\nTo me, what you proposed is an additional layer of fault zone nodes, right?\nThe reason we were not using that the Topology.java at the very beginning is for simplifying the algorithm. In short, does the constraint implementation need to understand the tree structure? I don't think so.\n\nMoreover, you won't need to replace the cluster model. Minor change the Assignable node and Topology.java would be enough. Basically you need to replace all the Nodes in the Topology.java with AssignableNode.\nAnd you won't need to change the optimal assignment either. Because we need the result to be a flat structure. If you return a tree, the rebalancer need to translate then return it anyway.\n\nOverall, I think this can help to clean up some code (cluster context for example). But it is not supposed to be a fundamental change. We can do this improvement anytime in the future. Eventually, whether the cluster model contains a tree or a list of nodes is transparent to the other components.\n\n\nCheers,\n-Jiajun\n\n________________________________\nFrom: Yi Wang <notifications@github.com>\nSent: Tuesday, September 3, 2019 3:50 PM\nTo: apache/helix <helix@noreply.github.com>\nCc: Jiajun Wang <jjwang@linkedin.com>; Mention <mention@noreply.github.com>\nSubject: Re: [apache/helix] Propose a Trie cluster structure to replace ClusterModel/ClusterContext/OptimalAssignment, etc (#447)\n\n\n[cluster]<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F2618776%2F64213610-74034900-ce62-11e9-94b8-8dc863a35fb2.jpg&data=02%7C01%7Cjjwang%40linkedin.com%7Cad9e6d2425084bc563f708d730c120d7%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637031478342742599&sdata=%2Byxx9L2fgAzczUMJWzGoJWkU2JS%2F%2FKYuj7bt5DNsIbw%3D&reserved=0>\nA visual illustration of the Trie structure that aligned with Helix settings.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fhelix%2Fissues%2F447%3Femail_source%3Dnotifications%26email_token%3DAANYM2CNU7TUD5FZQZ6CUE3QH3S3LA5CNFSM4ITLSD22YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5ZZX3Y%23issuecomment-527670255&data=02%7C01%7Cjjwang%40linkedin.com%7Cad9e6d2425084bc563f708d730c120d7%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637031478342742599&sdata=NbwKSjq9r6Md5DtFN2pc%2FWyr4V45KWx2Cx4ytu0TfUg%3D&reserved=0>, or mute the thread<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAANYM2B5LMXJTAN5B2AT7YLQH3S3LANCNFSM4ITLSD2Q&data=02%7C01%7Cjjwang%40linkedin.com%7Cad9e6d2425084bc563f708d730c120d7%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637031478342752596&sdata=a8YP7JgG%2BHGR1ApFvrw60VaeoobYnZ7Z8fn1U6TVgtQ%3D&reserved=0>.\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527673611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527676576","html_url":"https://github.com/apache/helix/issues/447#issuecomment-527676576","issue_url":"https://api.github.com/repos/apache/helix/issues/447","id":527676576,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY3NjU3Ng==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T23:18:47Z","updated_at":"2019-09-03T23:20:23Z","author_association":"CONTRIBUTOR","body":"> Could you please review the Topology.java class? I think that one is pretty much what you are trying to design here. To me, what you proposed is an additional layer of fault zone nodes, right? The reason we were not using that the Topology.java at the very beginning is for simplifying the algorithm. In short, does the constraint implementation need to understand the tree structure? I don't think so. Moreover, you won't need to replace the cluster model. Minor change the Assignable node and Topology.java would be enough. Basically you need to replace all the Nodes in the Topology.java with AssignableNode. And you won't need to change the optimal assignment either. Because we need the result to be a flat structure. If you return a tree, the rebalancer need to translate then return it anyway. Overall, I think this can help to clean up some code (cluster context for example). But it is not supposed to be a fundamental change. We can do this improvement anytime in the future. Eventually, whether the cluster model contains a tree or a list of nodes is transparent to the other components. Cheers, -Jiajun\r\n\r\nI've reviewed the Topology.java class and it's based on the same concept of using tree. However, modifying the exisiting one is kinda risky and touches more unnecessary places here and there. Re-writing a new one that fits the waged rebalanced job would be easier for our need.\r\n\r\nShould constraint understand tree structure? \r\nYes and No. If we go with our current design, the constraint accepts the `clustercontext` or `clustermodel` object, the constraint needs to understand and read the tree structure. \r\nIf we define constraint and init constraint inside Trie node, e.g ZoneNode, it only needs to understand if the assignment would conflict with the zone properties; For instance node, checks if the assignment would exceed the weight of instance.\r\n\r\nThe tree doesn't conflict with the result being flat since the we could implement the data conversion to flat map inside the cluster trie node (root). As long as rebalancer holds a reference to the root node, it can easily ask for data conversion.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527676576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527678588","html_url":"https://github.com/apache/helix/pull/440#issuecomment-527678588","issue_url":"https://api.github.com/repos/apache/helix/issues/440","id":527678588,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY3ODU4OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-03T23:28:23Z","updated_at":"2019-09-03T23:28:23Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527678588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/527696630","html_url":"https://github.com/apache/helix/issues/447#issuecomment-527696630","issue_url":"https://api.github.com/repos/apache/helix/issues/447","id":527696630,"node_id":"MDEyOklzc3VlQ29tbWVudDUyNzY5NjYzMA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T01:03:00Z","updated_at":"2019-09-04T01:03:00Z","author_association":"CONTRIBUTOR","body":"Interesting idea, but I think that at this stage, we could first get the overall functionality of the rebalancer up and running. Like @jiajunwang said, since we are trying to tread the path of least resistance (change), I think we could revisit this in the future for optimizations that could be worked into this thing.\r\n\r\nCool diagram though!! :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/527696630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528023830","html_url":"https://github.com/apache/helix/pull/433#issuecomment-528023830","issue_url":"https://api.github.com/repos/apache/helix/issues/433","id":528023830,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODAyMzgzMA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T18:21:15Z","updated_at":"2019-09-04T18:21:15Z","author_association":"CONTRIBUTOR","body":"Please resolve the conflicts.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528023830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528042874","html_url":"https://github.com/apache/helix/pull/446#issuecomment-528042874","issue_url":"https://api.github.com/repos/apache/helix/issues/446","id":528042874,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODA0Mjg3NA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T19:10:53Z","updated_at":"2019-09-04T19:10:53Z","author_association":"NONE","body":"This PR is ready to be merged. Approved by @narendly \r\n\r\nFinal Commit message:\r\n\r\nTitle: \r\nFix the order of workflow context update\r\n    \r\nDescription:\r\nIn this commit:\r\nThe order that workflow dispatcher updates the workflow status has been changed.\r\nIf execution delay is set and job is inflight, the context will get updated.\r\nAn integration test has been added.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528042874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528047787","html_url":"https://github.com/apache/helix/pull/448#issuecomment-528047787","issue_url":"https://api.github.com/repos/apache/helix/issues/448","id":528047787,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODA0Nzc4Nw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T19:25:16Z","updated_at":"2019-09-04T19:25:16Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani @dasahcc .","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528047787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528086542","html_url":"https://github.com/apache/helix/issues/436#issuecomment-528086542","issue_url":"https://api.github.com/repos/apache/helix/issues/436","id":528086542,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODA4NjU0Mg==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T21:04:38Z","updated_at":"2019-09-04T21:04:38Z","author_association":"NONE","body":"It is fixed in PR #446 ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528086542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528086795","html_url":"https://github.com/apache/helix/issues/447#issuecomment-528086795","issue_url":"https://api.github.com/repos/apache/helix/issues/447","id":528086795,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODA4Njc5NQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T21:05:25Z","updated_at":"2019-09-04T21:05:25Z","author_association":"CONTRIBUTOR","body":"@jiajunwang @narendly \r\nI understand the timeline constraint, the new data structure is not something we need to do right now. I'd just like to propose the idea and have everyone on the same page, think about the pros/cons of the new design, add/update the design when it makes sense, etc.\r\nIf I have some bandwidth, I could draft a PR of interfaces and dummy implementations only so you guys have a better idea and discuss further base on that.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528086795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528087241","html_url":"https://github.com/apache/helix/issues/409#issuecomment-528087241","issue_url":"https://api.github.com/repos/apache/helix/issues/409","id":528087241,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODA4NzI0MQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T21:06:43Z","updated_at":"2019-09-04T21:06:43Z","author_association":"NONE","body":"It is fixed in PR #410.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528087241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528129970","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528129970","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528129970,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODEyOTk3MA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T23:24:34Z","updated_at":"2019-09-04T23:24:34Z","author_association":"CONTRIBUTOR","body":"Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528129970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528133565","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528133565","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528133565,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODEzMzU2NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-04T23:41:10Z","updated_at":"2019-09-04T23:41:10Z","author_association":"CONTRIBUTOR","body":"> Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n\r\nThis mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528133565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528146361","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528146361","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528146361,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODE0NjM2MQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T00:37:21Z","updated_at":"2019-09-05T00:37:21Z","author_association":"CONTRIBUTOR","body":"> > Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n> \r\n> This mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.\r\n\r\nIt's strange for the unit test, you can simply use mockito.mock and mock any behavior without a real working class. A real working class is painful when future developers found the unit test is broken and he needs to understand what's going on inside the unit test helper. I would try avoiding such complicate coupled pattern in unit test as much as possible. \r\n\r\nIt makes sense if you want to have such a class for integration test","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528146361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528172606","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528172606","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528172606,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODE3MjYwNg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T02:46:35Z","updated_at":"2019-09-05T02:46:35Z","author_association":"CONTRIBUTOR","body":"> > > Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n> > \r\n> > \r\n> > This mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.\r\n> \r\n> It's strange for the unit test, you can simply use mockito.mock and mock any behavior without a real working class. A real working class is painful when future developers found the unit test is broken and he needs to understand what's going on inside the unit test helper. I would try avoiding such complicate coupled pattern in unit test as much as possible.\r\n> \r\n> It makes sense if you want to have such a class for integration test\r\n\r\nDid you mean if the test breaks, people won't need to understand the mockito class and the mocked methods definition for debugging? I don't think so. Actually, since the mock classes are not returning static maps or lists, we will need to keep the logic. So even they are mockito classes, I will need to \"implement\" the method using the same code. Given this, making them mockito classes is not a good option from my point of view.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528172606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528196193","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528196193","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528196193,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODE5NjE5Mw==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T04:53:02Z","updated_at":"2019-09-05T04:53:02Z","author_association":"CONTRIBUTOR","body":"> > > > Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n> > > \r\n> > > \r\n> > > This mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.\r\n> > \r\n> > \r\n> > It's strange for the unit test, you can simply use mockito.mock and mock any behavior without a real working class. A real working class is painful when future developers found the unit test is broken and he needs to understand what's going on inside the unit test helper. I would try avoiding such complicate coupled pattern in unit test as much as possible.\r\n> > It makes sense if you want to have such a class for integration test\r\n> \r\n> Did you mean if the test breaks, people won't need to understand the mockito class and the mocked methods definition for debugging? I don't think so. Actually, since the mock classes are not returning static maps or lists, we will need to keep the logic. So even they are mockito classes, I will need to \"implement\" the method using the same code. Given this, making them mockito classes is not a good option from my point of view.\r\n\r\nDuring any refactor works, the unit test could fail. If you're testing method A, it depends on dependency class B, do you want to mock object and control all behaviors of B or use a concrete \r\nB instance? If the test of method A fails, do you know is it because of the wrong implementations of B or your method has flaws? Adding a custom mock will certainly increase the complexity and break the \"unit test\" concept which means isolated test, regardless of dependencies.\r\n\r\nAn example:\r\n```\r\npublic void testMethodA() {\r\n   Service service = new Servcie(new MockB()) // MockB is a custom mock class you may or may not understand how it is implemented\r\n   boolean result = service.doSomething();\r\n}\r\n\r\npublic void testMethodA() {\r\n   B mock = Mockito.mock(B.class);\r\n   when(mock.runSomehing()).thenDoSomething(); // since B is a mockito mock, its behavior is totally under control by this test metho without understanding how B internally runs\r\n   Service service = new Service(mock);\r\n   boolean result = service.doSomething();\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528196193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528203897","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528203897","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528203897,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODIwMzg5Nw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T05:31:48Z","updated_at":"2019-09-05T05:36:15Z","author_association":"CONTRIBUTOR","body":"> > > > > Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n> > > > \r\n> > > > \r\n> > > > This mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.\r\n> > > \r\n> > > \r\n> > > It's strange for the unit test, you can simply use mockito.mock and mock any behavior without a real working class. A real working class is painful when future developers found the unit test is broken and he needs to understand what's going on inside the unit test helper. I would try avoiding such complicate coupled pattern in unit test as much as possible.\r\n> > > It makes sense if you want to have such a class for integration test\r\n> > \r\n> > \r\n> > Did you mean if the test breaks, people won't need to understand the mockito class and the mocked methods definition for debugging? I don't think so. Actually, since the mock classes are not returning static maps or lists, we will need to keep the logic. So even they are mockito classes, I will need to \"implement\" the method using the same code. Given this, making them mockito classes is not a good option from my point of view.\r\n> \r\n> During any refactor works, the unit test could fail. If you're testing method A, it depends on dependency class B, do you want to mock object and control all behaviors of B or use a concrete\r\n> B instance? If the test of method A fails, do you know is it because of the wrong implementations of B or your method has flaws? Adding a custom mock will certainly increase the complexity and break the \"unit test\" concept which means isolated test, regardless of dependencies.\r\n> \r\n> An example:\r\n> \r\n> ```\r\n> public void testMethodA() {\r\n>    Service service = new Servcie(new MockB()) // MockB is a custom mock class you may or may not understand how it is implemented\r\n>    boolean result = service.doSomething();\r\n> }\r\n> \r\n> public void testMethodA() {\r\n>    B mock = Mockito.mock(B.class);\r\n>    when(mock.runSomehing()).thenDoSomething(); // since B is a mockito mock, its behavior is totally under control by this test metho without understanding how B internally runs\r\n>    Service service = new Service(mock);\r\n>    boolean result = service.doSomething();\r\n> }\r\n> ```\r\n\r\nIn the example you mentioned, mock class or mockito class look exactly the same to me. Because the code in service.doSomething() and the code in when(mock.runSomehing()).thenDoSomething() will be exactly the same. In the 2nd case, you are just wrapping the code with when(...).thenDoSomething(). If the mockito thenDoSomething() method was done in the wrong way, the dev who is doing the refactor need to check mockito method the same, right? Mockito is not magic.\r\n\r\nHigh-levelly speaking, a dev needs to understand test logic. It is not an option. And the mock class here is considered to be part of the test case. Note the mock class files were in the test path. There is no way to get confused with a real class for production.\r\nMoreover, anyone who can understand the mockito class will be able to understand the mock class.\r\n\r\nSo I don't think what you said make sense.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528203897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528518668","html_url":"https://github.com/apache/helix/pull/450#issuecomment-528518668","issue_url":"https://api.github.com/repos/apache/helix/issues/450","id":528518668,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODUxODY2OA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T18:39:01Z","updated_at":"2019-09-05T18:39:01Z","author_association":"CONTRIBUTOR","body":"> Another question, by looking at this soft constraint impl, I am wondering if we just enforce all the soft constraint implementation to return an evaluation between (0.0 - 1.0), will that be easier? At least we don't need \"getScalerFunction\", right?\r\n\r\nHow do you want to enforce the constraint in code? Using comment? Comments will not always guarantee the correct behavior, only self explainable code does. I think scaler function is necessary and a reminder to have developers aware of the range without looking into comments","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528518668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/528528865","html_url":"https://github.com/apache/helix/pull/443#issuecomment-528528865","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":528528865,"node_id":"MDEyOklzc3VlQ29tbWVudDUyODUyODg2NQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-05T19:05:04Z","updated_at":"2019-09-05T19:05:04Z","author_association":"CONTRIBUTOR","body":"> > > > > > Will you wait for my algorithm implementation part to be checked in? I don't think creating a mock class is necessary\r\n> > > > > \r\n> > > > > \r\n> > > > > This mock class is for unit test. Even after your code is ready, I will keep it for the test purpose. Integration test will be done in a different style. We will include real components and turn on a ZK server for that.\r\n> > > > \r\n> > > > \r\n> > > > It's strange for the unit test, you can simply use mockito.mock and mock any behavior without a real working class. A real working class is painful when future developers found the unit test is broken and he needs to understand what's going on inside the unit test helper. I would try avoiding such complicate coupled pattern in unit test as much as possible.\r\n> > > > It makes sense if you want to have such a class for integration test\r\n> > > \r\n> > > \r\n> > > Did you mean if the test breaks, people won't need to understand the mockito class and the mocked methods definition for debugging? I don't think so. Actually, since the mock classes are not returning static maps or lists, we will need to keep the logic. So even they are mockito classes, I will need to \"implement\" the method using the same code. Given this, making them mockito classes is not a good option from my point of view.\r\n> > \r\n> > \r\n> > During any refactor works, the unit test could fail. If you're testing method A, it depends on dependency class B, do you want to mock object and control all behaviors of B or use a concrete\r\n> > B instance? If the test of method A fails, do you know is it because of the wrong implementations of B or your method has flaws? Adding a custom mock will certainly increase the complexity and break the \"unit test\" concept which means isolated test, regardless of dependencies.\r\n> > An example:\r\n> > ```\r\n> > public void testMethodA() {\r\n> >    Service service = new Servcie(new MockB()) // MockB is a custom mock class you may or may not understand how it is implemented\r\n> >    boolean result = service.doSomething();\r\n> > }\r\n> > \r\n> > public void testMethodA() {\r\n> >    B mock = Mockito.mock(B.class);\r\n> >    when(mock.runSomehing()).thenDoSomething(); // since B is a mockito mock, its behavior is totally under control by this test metho without understanding how B internally runs\r\n> >    Service service = new Service(mock);\r\n> >    boolean result = service.doSomething();\r\n> > }\r\n> > ```\r\n> \r\n> In the example you mentioned, mock class or mockito class look exactly the same to me. Because the code in service.doSomething() and the code in when(mock.runSomehing()).thenDoSomething() will be exactly the same. In the 2nd case, you are just wrapping the code with when(...).thenDoSomething(). If the mockito thenDoSomething() method was done in the wrong way, the dev who is doing the refactor need to check mockito method the same, right? Mockito is not magic.\r\n> \r\n> High-levelly speaking, a dev needs to understand test logic. It is not an option. And the mock class here is considered to be part of the test case. Note the mock class files were in the test path. There is no way to get confused with a real class for production.\r\n> Moreover, anyone who can understand the mockito class will be able to understand the mock class.\r\n> \r\n> So I don't think what you said make sense.\r\n\r\n```\r\npublic void testMethodA() {\r\n   Service service = new Servcie(new MockB()) // MockB is a custom mock class you may or may not understand how it is implemented\r\n   boolean result = service.doSomething();\r\n}\r\n\r\npublic void testMethodA() {\r\n   B mock = Mockito.mock(B.class);\r\n   when(mock.runSomehing()).thenDoSomething(); // since B is a mockito mock, its behavior is totally under control by this test method without understanding how B internally runs\r\n   Service service = new Service(mock);\r\n   boolean result = service.doSomething();\r\n}\r\n```\r\n\r\nIn the above first case, if the output result is not expected. It's probably for either 2 reasons:\r\n1. The MockB doesn't do it right, it's possible\r\n2. The MethodA is implemented wrong. \r\nThen the developer who writes the test has to dig out what's the real reason.\r\n\r\nHowever, in the 2nd case, the developer knows exactly what the mockito mock class will do (because he knows just by checking the line above). The 1st possible reason in case 1 is eliminated.\r\n\r\nIn addition,  with mockito mock, you can easily let the mock class behavior unusually. E.g,\r\n`when(mock.runSomehing()).thenThrowException();`\r\nWith a simple custom mock, probably you have to write the method again to test cases when the exception is thrown.\r\n\r\nThe reason behind it is natural with a trained eyes. Sometimes when the implementation of original class is very complex or not designed for easy unit testing, it will be difficult using mockito, I agree. In that case, a custom mock can take place.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/528528865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529005521","html_url":"https://github.com/apache/helix/pull/450#issuecomment-529005521","issue_url":"https://api.github.com/repos/apache/helix/issues/450","id":529005521,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTAwNTUyMQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-06T20:36:53Z","updated_at":"2019-09-06T20:36:53Z","author_association":"CONTRIBUTOR","body":"> > Another question, by looking at this soft constraint impl, I am wondering if we just enforce all the soft constraint implementation to return an evaluation between (0.0 - 1.0), will that be easier? At least we don't need \"getScalerFunction\", right?\r\n> \r\n> How do you want to enforce the constraint in code? Using comment? Comments will not always guarantee the correct behavior, only self explainable code does. I think scaler function is necessary and a reminder to have developers aware of the range without looking into comments\r\n\r\nFor now, if I am the developer, and I return a value out of the scope of (minScore, maxScore), what will happen?\r\nI think the max and min thresholds are also kind of comments, right?\r\n\r\nI guess we will need to add a check to validate. However, in that case, we can just enforce the minScore = 0.0, maxScore = 1.0. And my proposal will be equal to this solution, right?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529005521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529008180","html_url":"https://github.com/apache/helix/pull/450#issuecomment-529008180","issue_url":"https://api.github.com/repos/apache/helix/issues/450","id":529008180,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTAwODE4MA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-06T20:45:12Z","updated_at":"2019-09-06T20:45:12Z","author_association":"CONTRIBUTOR","body":"> > > Another question, by looking at this soft constraint impl, I am wondering if we just enforce all the soft constraint implementation to return an evaluation between (0.0 - 1.0), will that be easier? At least we don't need \"getScalerFunction\", right?\r\n> > \r\n> > \r\n> > How do you want to enforce the constraint in code? Using comment? Comments will not always guarantee the correct behavior, only self explainable code does. I think scaler function is necessary and a reminder to have developers aware of the range without looking into comments\r\n> \r\n> For now, if I am the developer, and I return a value out of the scope of (minScore, maxScore), what will happen?\r\n> I think the max and min thresholds are also kind of comments, right?\r\n> \r\n> I guess we will need to add a check to validate. However, in that case, we can just enforce the minScore = 0.0, maxScore = 1.0. And my proposal will be equal to this solution, right?\r\n\r\nWhoever develops the specific constraint needs to respect the (min, max) range, it's not a question. If you want to enforce such hardcoded min/max in constraint definition,  I think only exposing the constructor below will be sufficient and clean\r\n```\r\npublic LeastUsedPartitionsCount() {\r\n   super(0, 1);\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529008180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529045027","html_url":"https://github.com/apache/helix/pull/381#issuecomment-529045027","issue_url":"https://api.github.com/repos/apache/helix/issues/381","id":529045027,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA0NTAyNw==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-06T23:25:31Z","updated_at":"2019-09-06T23:25:31Z","author_association":"CONTRIBUTOR","body":"The PR is approved by @jiajunwang, ready to merge with wagedRebalancer branch","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529045027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529046617","html_url":"https://github.com/apache/helix/pull/426#issuecomment-529046617","issue_url":"https://api.github.com/repos/apache/helix/issues/426","id":529046617,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA0NjYxNw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-06T23:34:30Z","updated_at":"2019-09-06T23:34:30Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @i3wangyi @jiajunwang .\r\n\r\nAdd BucketDataAccessor for large writes\r\n    \r\n    For the new WAGED rebalancer, it's necessary to have a data accessor that will allow writes of data exceeding 1MB. ZooKeeper's ZNode size is capped at 1MB, so BucketDataAccessor interface and ZkBucketDataAccessor help us achieve this.\r\n    Changelist:\r\n    1. Add BucketDataAccessor and ZkBucketDataAccessor\r\n    2. Add necessary serializers\r\n    3. Add an integration test against ZK","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529046617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529049917","html_url":"https://github.com/apache/helix/pull/381#issuecomment-529049917","issue_url":"https://api.github.com/repos/apache/helix/issues/381","id":529049917,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA0OTkxNw==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-06T23:56:33Z","updated_at":"2019-09-06T23:56:33Z","author_association":"CONTRIBUTOR","body":"*Description*\r\nImplement basic constraint algorithm: Greedy based, each time it picks the best scores given each replica and assigns the replica to the node. It doesn't guarantee to achieve global optimal but local optimal result\r\n\r\nThe algorithm is based on a given set of constraints\r\n\r\nHardConstraint: Approve or deny the assignment given its condition, any assignment cannot bypass any \"hard constraint\" *\r\nSoftConstraint: Evaluate the assignment by points/rewards/scores, a higher point means a better assignment *\r\nThe goal is to avoid all \"hard constraints\" while accumulating the most points(rewards) from \"soft constraints\"","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529049917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529054416","html_url":"https://github.com/apache/helix/issues/349#issuecomment-529054416","issue_url":"https://api.github.com/repos/apache/helix/issues/349","id":529054416,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA1NDQxNg==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T00:31:04Z","updated_at":"2019-09-07T00:31:04Z","author_association":"CONTRIBUTOR","body":"How about we follow some rules of google java style: https://google.github.io/styleguide/javaguide.html?\r\nLike:\r\n- change Column limit to 100\r\n\r\nI will submit a PR to address some styles like imports order.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529054416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529063222","html_url":"https://github.com/apache/helix/pull/451#issuecomment-529063222","issue_url":"https://api.github.com/repos/apache/helix/issues/451","id":529063222,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA2MzIyMg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T02:17:05Z","updated_at":"2019-09-07T02:17:05Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529063222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529063659","html_url":"https://github.com/apache/helix/pull/435#issuecomment-529063659","issue_url":"https://api.github.com/repos/apache/helix/issues/435","id":529063659,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA2MzY1OQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T02:22:24Z","updated_at":"2019-09-07T02:22:24Z","author_association":"CONTRIBUTOR","body":"Reminder to go over the description and the comments to make sure there's no ambiguity :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529063659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529080273","html_url":"https://github.com/apache/helix/issues/349#issuecomment-529080273","issue_url":"https://api.github.com/repos/apache/helix/issues/349","id":529080273,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTA4MDI3Mw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T06:53:36Z","updated_at":"2019-09-07T06:53:36Z","author_association":"CONTRIBUTOR","body":"Column limit is already 100 in helix-style.xml. Do we consider just using an IntelliJ style file and importing the file, instead of using eclipse code format plugin ?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529080273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529118494","html_url":"https://github.com/apache/helix/issues/349#issuecomment-529118494","issue_url":"https://api.github.com/repos/apache/helix/issues/349","id":529118494,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTExODQ5NA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T15:36:34Z","updated_at":"2019-09-07T15:36:34Z","author_association":"CONTRIBUTOR","body":"Could we keep the change minimal? ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529118494/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529152751","html_url":"https://github.com/apache/helix/issues/349#issuecomment-529152751","issue_url":"https://api.github.com/repos/apache/helix/issues/349","id":529152751,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTE1Mjc1MQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-07T22:44:47Z","updated_at":"2019-09-07T22:44:47Z","author_association":"CONTRIBUTOR","body":"1. It seems avoiding wildcard imports cannot be set in the config file with eclipse code formatter plugin. It can be configured in Intellij.\r\n2. Override annotation wrap is already formatted in the current style, like below:\r\n```\r\n  @Override public boolean removeListener\r\n```\r\nCould be formatted:\r\n```\r\n  @Override\r\n  public boolean removeListener\r\n```\r\nWe'll find out any case I miss.\r\n\r\n3. Due to [Sun's convention](https://checkstyle.org/styleguides/sun-code-conventions-19990420/CodeConventions.doc2.html#a277), Apache License copyright comment should be added from the first line, before `package` statement. We are now having package statement at first line, which I think should be changed.\r\n\r\nIn summary, current style file seems good enough. For `imports` setting and Apache License, we might need to manually change the settings in Intellij -- how about creating a coding style wiki?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529152751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529308501","html_url":"https://github.com/apache/helix/issues/454#issuecomment-529308501","issue_url":"https://api.github.com/repos/apache/helix/issues/454","id":529308501,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTMwODUwMQ==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T05:43:54Z","updated_at":"2019-09-09T05:50:51Z","author_association":"CONTRIBUTOR","body":"@tinawenqiao . I think the disconnect waits for your piled up events queue to be cleared up, since HelixManager is trying to reset all handlers including callback handler. \r\n\r\nI dont think Helix can do anything more on this. Some of Helix supported app may need to deal with every in queue events and shutdown gracefully. Helix cannot just simply ignore the events can interrupt the thread.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529308501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529313416","html_url":"https://github.com/apache/helix/issues/454#issuecomment-529313416","issue_url":"https://api.github.com/repos/apache/helix/issues/454","id":529313416,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTMxMzQxNg==","user":{"login":"tinawenqiao","id":15771296,"node_id":"MDQ6VXNlcjE1NzcxMjk2","avatar_url":"https://avatars.githubusercontent.com/u/15771296?v=4","gravatar_id":"","url":"https://api.github.com/users/tinawenqiao","html_url":"https://github.com/tinawenqiao","followers_url":"https://api.github.com/users/tinawenqiao/followers","following_url":"https://api.github.com/users/tinawenqiao/following{/other_user}","gists_url":"https://api.github.com/users/tinawenqiao/gists{/gist_id}","starred_url":"https://api.github.com/users/tinawenqiao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tinawenqiao/subscriptions","organizations_url":"https://api.github.com/users/tinawenqiao/orgs","repos_url":"https://api.github.com/users/tinawenqiao/repos","events_url":"https://api.github.com/users/tinawenqiao/events{/privacy}","received_events_url":"https://api.github.com/users/tinawenqiao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T06:07:00Z","updated_at":"2019-09-09T06:07:33Z","author_association":"NONE","body":"@dasahcc, Yes, the manager has a callback handler:\r\n_manager.getMessagingService().sendAndWait(recipientCriteria, msg, callbackOnReply, 30000);_\r\nBut I need to end the program after that, then I call disconnect method. So what should I do? Is there another method to end the program which has a helix manger.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529313416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529586665","html_url":"https://github.com/apache/helix/pull/443#issuecomment-529586665","issue_url":"https://api.github.com/repos/apache/helix/issues/443","id":529586665,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTU4NjY2NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T17:34:56Z","updated_at":"2019-09-09T17:34:56Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529586665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529591509","html_url":"https://github.com/apache/helix/issues/454#issuecomment-529591509","issue_url":"https://api.github.com/repos/apache/helix/issues/454","id":529591509,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTU5MTUwOQ==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T17:47:29Z","updated_at":"2019-09-09T17:47:29Z","author_association":"CONTRIBUTOR","body":"@tinawenqiao Two options are here:\r\n1. You can reduce your message timeout and try to handle it with retry or some other logic. To make sure your message send is not a blocking call. Thus the disconnect can happen gracefully processed.\r\n2. If you think your hanging message is not that matter, you can shutdown service by killing the JVM.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529591509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529621858","html_url":"https://github.com/apache/helix/pull/433#issuecomment-529621858","issue_url":"https://api.github.com/repos/apache/helix/issues/433","id":529621858,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTYyMTg1OA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T19:05:34Z","updated_at":"2019-09-09T19:05:34Z","author_association":"CONTRIBUTOR","body":"The PR is ready to merge into wagedRebalancer branch, approved by @jiajunwang @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529621858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529646355","html_url":"https://github.com/apache/helix/pull/435#issuecomment-529646355","issue_url":"https://api.github.com/repos/apache/helix/issues/435","id":529646355,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTY0NjM1NQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T20:13:44Z","updated_at":"2019-09-09T20:13:44Z","author_association":"NONE","body":"@narendly Thank you for reminder. I fixed the code based on your comments. I am running mvn test just to make sure. I will push new commit soon :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529646355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529697229","html_url":"https://github.com/apache/helix/issues/343#issuecomment-529697229","issue_url":"https://api.github.com/repos/apache/helix/issues/343","id":529697229,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTY5NzIyOQ==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T22:51:35Z","updated_at":"2019-09-09T22:51:35Z","author_association":"CONTRIBUTOR","body":"We split the work into two phases:\r\n1. Respect the MIN_ACTIVE_REPLICA in per partition level throttling.\r\n2. Throttle per replica level state transition based on the message generated. This is because in the Intermediate stage, when we do the throttling, Helix does not understand the dependencies. For example, if we have  M -> host1, S -> host2, S -> host3 and final mapping is S -> host1, S -> host2 and M -> host3, once host1 state transition is throttled and host3 state transition is allowed, it will end upw with intermediate mapping with M -> host1, S -> host2 and M -> host3. Although message selection stage can guarantee the correctness, the double Master mapping can confuse user.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529697229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529707968","html_url":"https://github.com/apache/helix/pull/453#issuecomment-529707968","issue_url":"https://api.github.com/repos/apache/helix/issues/453","id":529707968,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTcwNzk2OA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-09T23:40:09Z","updated_at":"2019-09-09T23:40:09Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\n\r\nImplement AssignmentMetadataStore\r\n\r\n------\r\n\r\nAssignmentMetadataStore is a component for the new WAGED Rebalaner. It provides APIs that allows the rebalancer to read and write the baseline and best possible assignments using BucketDataAccessor.\r\n\r\nChangelist:\r\n\r\nAdd AssignmentMetadataStore\r\nAdd an integration test: TestAssignmentMetadataStore\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529707968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/529712607","html_url":"https://github.com/apache/helix/pull/456#issuecomment-529712607","issue_url":"https://api.github.com/repos/apache/helix/issues/456","id":529712607,"node_id":"MDEyOklzc3VlQ29tbWVudDUyOTcxMjYwNw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T00:02:41Z","updated_at":"2019-09-10T00:02:41Z","author_association":"CONTRIBUTOR","body":"Test to be added.\r\n@dasahcc , Please take a look at this draft to verify if I'm doing the delayed rebalance correctly.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/529712607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/530018644","html_url":"https://github.com/apache/helix/pull/435#issuecomment-530018644","issue_url":"https://api.github.com/repos/apache/helix/issues/435","id":530018644,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDAxODY0NA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T16:33:46Z","updated_at":"2019-09-10T16:33:46Z","author_association":"NONE","body":"@narendly new \"mvn test\" result:\r\n\r\nTest 1: mvn test:\r\n[ERROR] Tests run: 850, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 3,217.475 s <<< FAILURE! - in TestSuite\r\n[ERROR] testTaskPerformanceMetrics(org.apache.helix.monitoring.mbeans.TestTaskPerformanceMetrics)  Time elapsed: 2.226 s  <<< FAILURE!\r\njava.lang.AssertionError: expected:<true> but was:<false>\r\n\tat org.apache.helix.monitoring.mbeans.TestTaskPerformanceMetrics.testTaskPerformanceMetrics(TestTaskPerformanceMetrics.java:118)\r\n\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Failures: \r\n[ERROR]   TestTaskPerformanceMetrics.testTaskPerformanceMetrics:118 expected:<true> but was:<false>\r\n[INFO] \r\n[ERROR] Tests run: 850, Failures: 1, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  53:42 min\r\n[INFO] Finished at: 2019-09-09T22:40:58-07:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M3:test (default-test) on project helix-core: There are test failures.\r\n[ERROR] \r\n[ERROR] Please refer to /home/anajari/my_repos/helix/helix-core/target/surefire-reports for the individual test results.\r\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n\r\nTest 2: mvn test -Dtest=\"TestTaskPerformanceMetrics\"\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.3 s - in org.apache.helix.monitoring.mbeans.TestTaskPerformanceMetrics\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  20.723 s\r\n[INFO] Finished at: 2019-09-10T09:25:06-07:00\r\n[INFO] ------------------------------------------------------------------------\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/530018644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/530019106","html_url":"https://github.com/apache/helix/pull/435#issuecomment-530019106","issue_url":"https://api.github.com/repos/apache/helix/issues/435","id":530019106,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDAxOTEwNg==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T16:35:03Z","updated_at":"2019-09-10T16:35:03Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly.\r\n\r\nCommit message:\r\n\r\nTitle: \r\nFix the scenario where the context is not updated properly \r\n\r\nBody:\r\n1- A method has been added which extracts the \"prevInstanceToTaskAssignments\" information from the context.\r\n2- If it is confirmed that the currentstate is null:\r\nAn \"if statement\" is being utilized which sets the context using the target state information.\r\n3- An integration test is added.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/530019106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/530038394","html_url":"https://github.com/apache/helix/issues/457#issuecomment-530038394","issue_url":"https://api.github.com/repos/apache/helix/issues/457","id":530038394,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDAzODM5NA==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T17:23:53Z","updated_at":"2019-09-10T17:23:53Z","author_association":"CONTRIBUTOR","body":"Let's fix the description and make it more detailed.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/530038394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/530066843","html_url":"https://github.com/apache/helix/pull/460#issuecomment-530066843","issue_url":"https://api.github.com/repos/apache/helix/issues/460","id":530066843,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDA2Njg0Mw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T18:38:45Z","updated_at":"2019-09-10T18:38:45Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang .","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/530066843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/530118319","html_url":"https://github.com/apache/helix/pull/450#issuecomment-530118319","issue_url":"https://api.github.com/repos/apache/helix/issues/450","id":530118319,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMDExODMxOQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-10T21:02:55Z","updated_at":"2019-09-10T21:02:55Z","author_association":"CONTRIBUTOR","body":"The PR is ready to merge into wagedRebalancer, approved by @jiajunwang @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/530118319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]