[{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733857844","html_url":"https://github.com/apache/pinot/pull/6289#issuecomment-733857844","issue_url":"https://api.github.com/repos/apache/pinot/issues/6289","id":733857844,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg1Nzg0NA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T17:50:34Z","updated_at":"2020-11-25T22:11:17Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=h1) Report\n> Merging [#6289](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=desc) (10b6c52) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.67%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6289/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6289      +/-   ##\n==========================================\n+ Coverage   66.44%   74.11%   +7.67%     \n==========================================\n  Files        1075     1252     +177     \n  Lines       54773    61203    +6430     \n  Branches     8168     8864     +696     \n==========================================\n+ Hits        36396    45363    +8967     \n+ Misses      15700    12928    -2772     \n- Partials     2677     2912     +235     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `46.07% <52.01%> (?)` | |\n| unittests | `65.20% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1035 more](https://codecov.io/gh/apache/incubator-pinot/pull/6289/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=footer). Last update [50df5cb...10b6c52](https://codecov.io/gh/apache/incubator-pinot/pull/6289?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733857844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733861999","html_url":"https://github.com/apache/pinot/pull/6255#issuecomment-733861999","issue_url":"https://api.github.com/repos/apache/pinot/issues/6255","id":733861999,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg2MTk5OQ==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T17:58:47Z","updated_at":"2020-11-25T17:58:47Z","author_association":"CONTRIBUTOR","body":"@icefury71 , can we see how the RecommendationEngine (the rule engine that was recently implemented by @jasperjiaguo ) be plugged into this interface or at least we can identify if the abstractions are correct. IIUC, this PR provides a pluggable interface that can use a rule engine and the reommendations generated by the engine to modify the table config?\r\n\r\nThe existing rule engine takes a couple of inputs (at bare minimum the following) \r\n\r\n- Schema\r\n- Query pattern\r\n\r\nIt generates a series of recommendations on how to tune the table config.\r\n\r\nIt will be great to see if there is an impedance mismatch between the abstractions sooner and converge. cc @jasperjiaguo  @mcvsubbu ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733861999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733862418","html_url":"https://github.com/apache/pinot/pull/6255#issuecomment-733862418","issue_url":"https://api.github.com/repos/apache/pinot/issues/6255","id":733862418,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg2MjQxOA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T17:59:40Z","updated_at":"2020-11-25T17:59:40Z","author_association":"CONTRIBUTOR","body":"As pointed out by @siddharthteotia  we already have a rule engine in place.\r\nWe also have a realtime prov helper that accepts a sample segment.\r\n\r\nCan we follow the interface/factory pattern here, so that we can ingest whatever factory we want? That way, if a rule engine needs more information (sample segments, sample queries, etc) to make the decision, it can.\r\n\r\nAlso, we should be able to chain these (and each member of the chain should modify only those that are not already touched). ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733862418/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733895089","html_url":"https://github.com/apache/pinot/pull/6255#issuecomment-733895089","issue_url":"https://api.github.com/repos/apache/pinot/issues/6255","id":733895089,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg5NTA4OQ==","user":{"login":"icefury71","id":728023,"node_id":"MDQ6VXNlcjcyODAyMw==","avatar_url":"https://avatars.githubusercontent.com/u/728023?v=4","gravatar_id":"","url":"https://api.github.com/users/icefury71","html_url":"https://github.com/icefury71","followers_url":"https://api.github.com/users/icefury71/followers","following_url":"https://api.github.com/users/icefury71/following{/other_user}","gists_url":"https://api.github.com/users/icefury71/gists{/gist_id}","starred_url":"https://api.github.com/users/icefury71/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icefury71/subscriptions","organizations_url":"https://api.github.com/users/icefury71/orgs","repos_url":"https://api.github.com/users/icefury71/repos","events_url":"https://api.github.com/users/icefury71/events{/privacy}","received_events_url":"https://api.github.com/users/icefury71/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T19:01:01Z","updated_at":"2020-11-25T19:01:01Z","author_association":"CONTRIBUTOR","body":"@siddharthteotia @mcvsubbu since we're using an annotation type, there is no such fixed interface. The parameter and return type validations are all done via code which can be evolved over time. I'm happy to do that in this PR - but wanted to be clear. \r\n\r\n@mcvsubbu the annotation type was a recommendation from @kishoreg instead of the old interface / factory pattern. This approach definitely makes it easy to register tuners and is much more flexible. Let me know if this is an issue. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733895089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733897627","html_url":"https://github.com/apache/pinot/pull/6288#issuecomment-733897627","issue_url":"https://api.github.com/repos/apache/pinot/issues/6288","id":733897627,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg5NzYyNw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T19:06:23Z","updated_at":"2020-11-25T21:59:31Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=h1) Report\n> Merging [#6288](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=desc) (a6535ca) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.56%`.\n> The diff coverage is `68.27%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6288/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6288      +/-   ##\n==========================================\n+ Coverage   66.44%   74.01%   +7.56%     \n==========================================\n  Files        1075     1252     +177     \n  Lines       54773    61203    +6430     \n  Branches     8168     8864     +696     \n==========================================\n+ Hits        36396    45300    +8904     \n+ Misses      15700    12988    -2712     \n- Partials     2677     2915     +238     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.82% <51.88%> (?)` | |\n| unittests | `65.21% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1033 more](https://codecov.io/gh/apache/incubator-pinot/pull/6288/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=footer). Last update [4a6e094...a6535ca](https://codecov.io/gh/apache/incubator-pinot/pull/6288?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733897627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733897952","html_url":"https://github.com/apache/pinot/pull/6255#issuecomment-733897952","issue_url":"https://api.github.com/repos/apache/pinot/issues/6255","id":733897952,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzg5Nzk1Mg==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T19:07:05Z","updated_at":"2020-11-25T19:07:05Z","author_association":"CONTRIBUTOR","body":"> @siddharthteotia @mcvsubbu since we're using an annotation type, there is no such fixed interface. The parameter and return type validations are all done via code which can be evolved over time. I'm happy to do that in this PR - but wanted to be clear.\r\n> \r\n> @mcvsubbu the annotation type was a recommendation from @kishoreg instead of the old interface / factory pattern. This approach definitely makes it easy to register tuners and is much more flexible. Let me know if this is an issue.\r\n\r\nI am sure I am missing something.\r\n\r\nHow would I register a tuner that takes a URI for a sample segment, and an object with a query pattern in it (say, has queries, and percentages)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733897952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733948498","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-733948498","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":733948498,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk0ODQ5OA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T21:14:04Z","updated_at":"2020-11-25T21:14:04Z","author_association":"MEMBER","body":"will be better to not have `'sum(billed_expenses)'` in quotes but at a high level this looks good","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733948498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733950739","html_url":"https://github.com/apache/pinot/pull/6291#issuecomment-733950739","issue_url":"https://api.github.com/repos/apache/pinot/issues/6291","id":733950739,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk1MDczOQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T21:19:51Z","updated_at":"2021-01-21T21:41:34Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=h1) Report\n> Merging [#6291](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=desc) (747f1df) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `22.57%`.\n> The diff coverage is `51.95%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6291/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6291       +/-   ##\n===========================================\n- Coverage   66.44%   43.87%   -22.58%     \n===========================================\n  Files        1075     1333      +258     \n  Lines       54773    65355    +10582     \n  Branches     8168     9524     +1356     \n===========================================\n- Hits        36396    28675     -7721     \n- Misses      15700    34282    +18582     \n+ Partials     2677     2398      -279     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.87% <51.95%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `22.22% <0.00%> (-26.62%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `64.28% <ø> (-8.89%)` | :arrow_down: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| ... and [1349 more](https://codecov.io/gh/apache/incubator-pinot/pull/6291/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=footer). Last update [fe9d3c7...747f1df](https://codecov.io/gh/apache/incubator-pinot/pull/6291?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733950739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733963720","html_url":"https://github.com/apache/pinot/pull/6291#issuecomment-733963720","issue_url":"https://api.github.com/repos/apache/pinot/issues/6291","id":733963720,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk2MzcyMA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T21:57:11Z","updated_at":"2020-11-25T21:57:11Z","author_association":"CONTRIBUTOR","body":"Can you note in your checkin comments that what we are throttling is not really the consumption, but the _processing_ of messages. We will still consume as much as we can from the stream.\r\n\r\nIf we were to limit consumption, then the behavior will be somewhat like:\r\n\r\n```\r\nwhile (true) {\r\n  consumeMsgsAsPerSomeAllowedRate()\r\n  processAllMsgsConsumed()\r\n  sleepAsIndicatedByRateLimiter()\r\n}\r\n```\r\n\r\nWhereas by rate limiting the processing, we are doing the following:\r\n\r\n```\r\nwhile (true) {\r\n  consumeAllMsgsThatWeCan()\r\n  foreach(msg) {\r\n    processMsg()\r\n    sleepAsDictatedByRateLimiter()\r\n  }\r\n}\r\n```\r\n\r\nSo, we may be taking up more heap in the second case ?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733963720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733976765","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-733976765","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":733976765,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk3Njc2NQ==","user":{"login":"kkrugler","id":66217,"node_id":"MDQ6VXNlcjY2MjE3","avatar_url":"https://avatars.githubusercontent.com/u/66217?v=4","gravatar_id":"","url":"https://api.github.com/users/kkrugler","html_url":"https://github.com/kkrugler","followers_url":"https://api.github.com/users/kkrugler/followers","following_url":"https://api.github.com/users/kkrugler/following{/other_user}","gists_url":"https://api.github.com/users/kkrugler/gists{/gist_id}","starred_url":"https://api.github.com/users/kkrugler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkrugler/subscriptions","organizations_url":"https://api.github.com/users/kkrugler/orgs","repos_url":"https://api.github.com/users/kkrugler/repos","events_url":"https://api.github.com/users/kkrugler/events{/privacy}","received_events_url":"https://api.github.com/users/kkrugler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T22:39:57Z","updated_at":"2020-11-25T22:39:57Z","author_association":"CONTRIBUTOR","body":"Thanks, updated.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733976765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733989035","html_url":"https://github.com/apache/pinot/pull/6289#issuecomment-733989035","issue_url":"https://api.github.com/repos/apache/pinot/issues/6289","id":733989035,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk4OTAzNQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T23:25:33Z","updated_at":"2020-11-25T23:27:40Z","author_association":"CONTRIBUTOR","body":"> thanks.\r\n> \r\n> I guess you are going to add an ingestionMode (push/pull)?\r\n\r\nNot necessary, for pull-based mode, we should configure input dir, and let table config validator to check it.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733989035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733992332","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-733992332","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":733992332,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk5MjMzMg==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T23:38:34Z","updated_at":"2020-11-25T23:38:34Z","author_association":"CONTRIBUTOR","body":"Can you also put the expected output?\r\nI suspect it could be:\r\n```\r\n[\"male\", [[800, \"NY\"], ..., [200, \"IL\"]]],\r\n[\"female\", [[1000, \"NY\"], ..., [300, \"IL\"]]]\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733992332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733995748","html_url":"https://github.com/apache/pinot/pull/6291#issuecomment-733995748","issue_url":"https://api.github.com/repos/apache/pinot/issues/6291","id":733995748,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk5NTc0OA==","user":{"login":"sajjad-moradi","id":8548220,"node_id":"MDQ6VXNlcjg1NDgyMjA=","avatar_url":"https://avatars.githubusercontent.com/u/8548220?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjad-moradi","html_url":"https://github.com/sajjad-moradi","followers_url":"https://api.github.com/users/sajjad-moradi/followers","following_url":"https://api.github.com/users/sajjad-moradi/following{/other_user}","gists_url":"https://api.github.com/users/sajjad-moradi/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjad-moradi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjad-moradi/subscriptions","organizations_url":"https://api.github.com/users/sajjad-moradi/orgs","repos_url":"https://api.github.com/users/sajjad-moradi/repos","events_url":"https://api.github.com/users/sajjad-moradi/events{/privacy}","received_events_url":"https://api.github.com/users/sajjad-moradi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-25T23:52:33Z","updated_at":"2020-11-25T23:52:33Z","author_association":"CONTRIBUTOR","body":"> Can you note in your checkin comments that what we are throttling is not really the consumption, but the _processing_ of messages. We will still consume as much as we can from the stream.\r\n> \r\n> If we were to limit consumption, then the behavior will be somewhat like:\r\n> \r\n> ```\r\n> while (true) {\r\n>   consumeMsgsAsPerSomeAllowedRate()\r\n>   processAllMsgsConsumed()\r\n>   sleepAsIndicatedByRateLimiter()\r\n> }\r\n> ```\r\n> \r\n> Whereas by rate limiting the processing, we are doing the following:\r\n> \r\n> ```\r\n> while (true) {\r\n>   consumeAllMsgsThatWeCan()\r\n>   foreach(msg) {\r\n>     processMsg()\r\n>     sleepAsDictatedByRateLimiter()\r\n>   }\r\n> }\r\n> ```\r\n> \r\n> So, we may be taking up more heap in the second case ?\r\n\r\nI actually looked into that and Kafka doesn't provide an API to retrieve limited number of messages. IMO having a rate limit on processing will have similar effect as if we put the rate limit on the consumption because we synchronously process the messages after the messages are polled from Kafka. For example, let's assume for a bursty period, the incoming rate of Kafka messages is 100 msgs/sec and we have set the rate limit to 20 msgs/sec. That means for a period of 10 seconds, we only process 200 messages and while we're processing messages, we don't consume new messages. This effectively puts the consumption rate to 20msgs/sec while if there was no rate limit we would've consumed 1000 messages at rate 100 msgs/sec.\r\n\r\nSide note:\r\nKafka consumer has this configuration `max.partition.fetch.byte` that limits the count of consumed bytes. That is a bit hard to utilize as the intention here is to consume less number of messages than consumed bytes.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733995748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733998554","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-733998554","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":733998554,"node_id":"MDEyOklzc3VlQ29tbWVudDczMzk5ODU1NA==","user":{"login":"kkrugler","id":66217,"node_id":"MDQ6VXNlcjY2MjE3","avatar_url":"https://avatars.githubusercontent.com/u/66217?v=4","gravatar_id":"","url":"https://api.github.com/users/kkrugler","html_url":"https://github.com/kkrugler","followers_url":"https://api.github.com/users/kkrugler/followers","following_url":"https://api.github.com/users/kkrugler/following{/other_user}","gists_url":"https://api.github.com/users/kkrugler/gists{/gist_id}","starred_url":"https://api.github.com/users/kkrugler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkrugler/subscriptions","organizations_url":"https://api.github.com/users/kkrugler/orgs","repos_url":"https://api.github.com/users/kkrugler/repos","events_url":"https://api.github.com/users/kkrugler/events{/privacy}","received_events_url":"https://api.github.com/users/kkrugler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T00:03:19Z","updated_at":"2020-11-26T00:03:19Z","author_association":"CONTRIBUTOR","body":"@fx19880617 - good question re output format. With Elasticsearch it's a nested JSON response. I don't know what the standard is for Pinot, the above seems reasonable. You get additional details in the Elastic response for things like maximum error (due to how the top results from each shard get combined, and that could result in not actually getting the top N), etc.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/733998554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734017675","html_url":"https://github.com/apache/pinot/issues/6170#issuecomment-734017675","issue_url":"https://api.github.com/repos/apache/pinot/issues/6170","id":734017675,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDAxNzY3NQ==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T01:13:35Z","updated_at":"2020-11-26T01:13:35Z","author_association":"CONTRIBUTOR","body":"Correct. There are endpoints for both. This item was more with respect to the cluster manager. We wanted to avoid the cluster manager having to create a complex json on the UI. \r\nBut we have managed completing the UI without making it too complicated. So this item is not relevant anymore.\r\n\r\nAre you looking for issues to contribute to? Please ping me or @kishoreg and we can find you something :)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734017675/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734026302","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-734026302","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":734026302,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDAyNjMwMg==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T01:48:07Z","updated_at":"2020-11-26T02:02:59Z","author_association":"CONTRIBUTOR","body":"> @fx19880617 - good question re output format. With Elasticsearch it's a nested JSON response. I don't know what the standard is for Pinot, the above seems reasonable. You get additional details in the Elastic response for things like maximum error (due to how the top results from each shard get combined, and that could result in not actually getting the top N), etc.\r\n\r\nI see.\r\n\r\nThe output of `subBuckets(sum(billed_expenses), state, 10)` can be a map(JSON blob) if we need more info or stats per group.\r\n\r\nAlso not sure if this is the case, but maybe we can just define the order by clause in the function and have syntactic sugar for TOP_N queries.\r\n```\r\nsubBuckets(<aggregation operation>, <sub-bucket column>, <order-by operation>, <max_values>)\r\n``` \r\n\r\nOne example could be that I want to show metrics for 10 same states ordered alphabetically in each gender.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734026302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734196690","html_url":"https://github.com/apache/pinot/pull/6294#issuecomment-734196690","issue_url":"https://api.github.com/repos/apache/pinot/issues/6294","id":734196690,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDE5NjY5MA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T09:54:49Z","updated_at":"2020-11-26T09:54:49Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=h1) Report\n> Merging [#6294](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=desc) (76d9404) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `20.50%`.\n> The diff coverage is `51.88%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6294/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6294       +/-   ##\n===========================================\n- Coverage   66.44%   45.94%   -20.51%     \n===========================================\n  Files        1075     1252      +177     \n  Lines       54773    61203     +6430     \n  Branches     8168     8864      +696     \n===========================================\n- Hits        36396    28117     -8279     \n- Misses      15700    30814    +15114     \n+ Partials     2677     2272      -405     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.94% <51.88%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `22.22% <0.00%> (-26.62%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `64.28% <ø> (-8.89%)` | :arrow_down: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| ... and [1246 more](https://codecov.io/gh/apache/incubator-pinot/pull/6294/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=footer). Last update [318c107...76d9404](https://codecov.io/gh/apache/incubator-pinot/pull/6294?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734196690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734230974","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-734230974","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":734230974,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDIzMDk3NA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T11:00:58Z","updated_at":"2020-12-03T17:04:30Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=h1) Report\n> Merging [#6296](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=desc) (fb054d6) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `1.09%`.\n> The diff coverage is `45.12%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6296/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6296      +/-   ##\n==========================================\n- Coverage   66.44%   65.35%   -1.10%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61789    +7016     \n  Branches     8168     8979     +811     \n==========================================\n+ Hits        36396    40383    +3987     \n- Misses      15700    18521    +2821     \n- Partials     2677     2885     +208     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| unittests | `65.35% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...e/pinot/broker/api/resources/PinotBrokerDebug.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYXBpL3Jlc291cmNlcy9QaW5vdEJyb2tlckRlYnVnLmphdmE=) | `0.00% <0.00%> (-79.32%)` | :arrow_down: |\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `71.42% <ø> (-28.58%)` | :arrow_down: |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `33.96% <0.00%> (-32.71%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ava/org/apache/pinot/client/AbstractResultSet.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Fic3RyYWN0UmVzdWx0U2V0LmphdmE=) | `66.66% <0.00%> (+9.52%)` | :arrow_up: |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `35.55% <0.00%> (-13.29%)` | :arrow_down: |\n| [...inot/client/JsonAsyncHttpPinotClientTransport.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0pzb25Bc3luY0h0dHBQaW5vdENsaWVudFRyYW5zcG9ydC5qYXZh) | `10.90% <0.00%> (-51.10%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `73.80% <ø> (+0.63%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| ... and [1128 more](https://codecov.io/gh/apache/incubator-pinot/pull/6296/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=footer). Last update [318c107...fb054d6](https://codecov.io/gh/apache/incubator-pinot/pull/6296?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734230974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734411140","html_url":"https://github.com/apache/pinot/issues/6295#issuecomment-734411140","issue_url":"https://api.github.com/repos/apache/pinot/issues/6295","id":734411140,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDQxMTE0MA==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T17:13:07Z","updated_at":"2020-11-26T17:13:07Z","author_association":"NONE","body":"fixed it, the fieldConfigList was out of place, it should be the main attribute. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734411140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734411249","html_url":"https://github.com/apache/pinot/issues/6295#issuecomment-734411249","issue_url":"https://api.github.com/repos/apache/pinot/issues/6295","id":734411249,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDQxMTI0OQ==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T17:13:25Z","updated_at":"2020-11-26T17:13:25Z","author_association":"NONE","body":"is it possible to have both inverted Index and Text Index at the same time?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734411249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734419849","html_url":"https://github.com/apache/pinot/issues/6295#issuecomment-734419849","issue_url":"https://api.github.com/repos/apache/pinot/issues/6295","id":734419849,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDQxOTg0OQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T17:36:56Z","updated_at":"2020-11-26T17:36:56Z","author_association":"MEMBER","body":"Not as of now. Nothing in the design that prevents it but we have added some artificial checks. Why would you want this?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734419849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734422833","html_url":"https://github.com/apache/pinot/issues/6295#issuecomment-734422833","issue_url":"https://api.github.com/repos/apache/pinot/issues/6295","id":734422833,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDQyMjgzMw==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T17:44:50Z","updated_at":"2020-11-26T17:44:50Z","author_association":"NONE","body":"I am assuming regexp_like()  will not work for Text Index , it would be nice if we can use both. Also thinking of moving some fields into inverted index and others to TEXT. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734422833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734504185","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-734504185","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":734504185,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDUwNDE4NQ==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-26T23:12:41Z","updated_at":"2020-11-26T23:12:41Z","author_association":"CONTRIBUTOR","body":"Thanks @shahsank3t , this looks great!\r\n\r\nI’ve listed some of the things that didn’t work for me/ would be nice to change:\r\n\r\n1. Can we hide Multi value dropdown for METRIC and DATETIME?\r\n2. In Add Schema - for the mandatory fields, can we have some validation on UI itself? For example, if someone tries to save a Schema without entering a SchemaName or a field’s dataType, currently a call is made to the backend, which fails, and that message is shown back on the UI. Instead, can the UI itself flag it, just by highlighting the incomplete field (and a message, please enter all fields). I’ve seen this done commonly on UIs.\r\n3. Can we have separate starter json template for OFFLINE and REALTIME? In OFFLINE, we don’t want to show the streamConfigs, aggregateMetrics, tagOverrideConfig, peerSegmentDownloadSchema, completionConfig. Similarly, in REALTIME we don’t want to show segmentPushType, segmentPushFrequency and instanceAssignmentConfigMap\r\n4. If someone Enables partitioning, all the columns that show up should be marked mandatory.\r\n5. Same as 4 for Enable Replica Groups\r\n6. TransformConfig  did not get set in the IngestionConfig when I added transform functions . I think it is getting created inside filterConfig (instead of outside under ingestionConfig)\r\n7. PartitioningConfig is not getting set. Seeing an error. The json looks incorrect . I’ve added some comments in the doc about it\r\n8. ReplicaGroupConfig is also not getting set. Seeing an error. The json I had provided is incomplete. Added the extra part in the doc.\r\n9. In case of 7 & 8, the error is spilling out of the screen.\r\n10. In REALTIME table, there is an extra blob of “streamConfigs” at the end of the json.\r\n11. In REALTIME table, the changes I made to the stream config properties did not get reflected in the json (e.g. topic name, broker url, or editing the flush threshold time, or removing/adding any property). It is all getting set in that extra blob, as reported in 10.\r\n12. I couldn’t create a REALTIME table. I think it’s because of the properties \"stream.kafka.decoder.prop.schema.registry.schema.name\" and \"stream.kafka.decoder.prop.schema.registry.rest.url\". Please remove them from the list.\r\n13. Mark some of the stream config properties as Mandatory. I’ve updated the doc for which ones.\r\n14. In case of REALTIME, when someone enables the “Replica Group”, don’t add the instanceAssignmentConfigMap json. It’s creating an incorrect table config which does not get saved. Either remove it (preferable), or just put null.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734504185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734987649","html_url":"https://github.com/apache/pinot/issues/6292#issuecomment-734987649","issue_url":"https://api.github.com/repos/apache/pinot/issues/6292","id":734987649,"node_id":"MDEyOklzc3VlQ29tbWVudDczNDk4NzY0OQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-27T20:54:35Z","updated_at":"2020-11-27T20:54:35Z","author_association":"MEMBER","body":"its almost feels like its an nested query. in other words - it is a window udf ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/734987649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/735545157","html_url":"https://github.com/apache/pinot/pull/6299#issuecomment-735545157","issue_url":"https://api.github.com/repos/apache/pinot/issues/6299","id":735545157,"node_id":"MDEyOklzc3VlQ29tbWVudDczNTU0NTE1Nw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-30T04:59:32Z","updated_at":"2020-11-30T23:05:28Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=h1) Report\n> Merging [#6299](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=desc) (1e8393f) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `20.65%`.\n> The diff coverage is `51.88%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6299/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6299       +/-   ##\n===========================================\n- Coverage   66.44%   45.79%   -20.66%     \n===========================================\n  Files        1075     1252      +177     \n  Lines       54773    61233     +6460     \n  Branches     8168     8866      +698     \n===========================================\n- Hits        36396    28043     -8353     \n- Misses      15700    30897    +15197     \n+ Partials     2677     2293      -384     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.79% <51.88%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `22.22% <0.00%> (-26.62%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `64.28% <ø> (-8.89%)` | :arrow_down: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| ... and [1248 more](https://codecov.io/gh/apache/incubator-pinot/pull/6299/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=footer). Last update [318c107...1e8393f](https://codecov.io/gh/apache/incubator-pinot/pull/6299?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/735545157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/735817630","html_url":"https://github.com/apache/pinot/pull/5787#issuecomment-735817630","issue_url":"https://api.github.com/repos/apache/pinot/issues/5787","id":735817630,"node_id":"MDEyOklzc3VlQ29tbWVudDczNTgxNzYzMA==","user":{"login":"mangrrua","id":17813993,"node_id":"MDQ6VXNlcjE3ODEzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/17813993?v=4","gravatar_id":"","url":"https://api.github.com/users/mangrrua","html_url":"https://github.com/mangrrua","followers_url":"https://api.github.com/users/mangrrua/followers","following_url":"https://api.github.com/users/mangrrua/following{/other_user}","gists_url":"https://api.github.com/users/mangrrua/gists{/gist_id}","starred_url":"https://api.github.com/users/mangrrua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mangrrua/subscriptions","organizations_url":"https://api.github.com/users/mangrrua/orgs","repos_url":"https://api.github.com/users/mangrrua/repos","events_url":"https://api.github.com/users/mangrrua/events{/privacy}","received_events_url":"https://api.github.com/users/mangrrua/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-30T14:26:18Z","updated_at":"2020-11-30T14:26:18Z","author_association":"CONTRIBUTOR","body":"> @mangrrua any plans on implementing the write side of this? Seems very useful.\r\n\r\nWe are working on this.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/735817630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736193107","html_url":"https://github.com/apache/pinot/pull/6287#issuecomment-736193107","issue_url":"https://api.github.com/repos/apache/pinot/issues/6287","id":736193107,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjE5MzEwNw==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T03:26:39Z","updated_at":"2020-12-01T03:26:39Z","author_association":"CONTRIBUTOR","body":"@JohnTortugo can you elaborate on where you observed the performance problem? Was it during offline ingestion or in realtime pinot?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736193107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736215966","html_url":"https://github.com/apache/pinot/pull/6265#issuecomment-736215966","issue_url":"https://api.github.com/repos/apache/pinot/issues/6265","id":736215966,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjIxNTk2Ng==","user":{"login":"harleyjj","id":10106733,"node_id":"MDQ6VXNlcjEwMTA2NzMz","avatar_url":"https://avatars.githubusercontent.com/u/10106733?v=4","gravatar_id":"","url":"https://api.github.com/users/harleyjj","html_url":"https://github.com/harleyjj","followers_url":"https://api.github.com/users/harleyjj/followers","following_url":"https://api.github.com/users/harleyjj/following{/other_user}","gists_url":"https://api.github.com/users/harleyjj/gists{/gist_id}","starred_url":"https://api.github.com/users/harleyjj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harleyjj/subscriptions","organizations_url":"https://api.github.com/users/harleyjj/orgs","repos_url":"https://api.github.com/users/harleyjj/repos","events_url":"https://api.github.com/users/harleyjj/events{/privacy}","received_events_url":"https://api.github.com/users/harleyjj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T04:51:19Z","updated_at":"2020-12-01T04:51:19Z","author_association":"CONTRIBUTOR","body":"@jihaozh @bryantachen This one is passing tests after the rebase","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736215966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736216130","html_url":"https://github.com/apache/pinot/issues/6303#issuecomment-736216130","issue_url":"https://api.github.com/repos/apache/pinot/issues/6303","id":736216130,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjIxNjEzMA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T04:51:54Z","updated_at":"2020-12-01T04:51:54Z","author_association":"MEMBER","body":"@jackjlli there was some implementation on this right?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736216130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736216219","html_url":"https://github.com/apache/pinot/pull/6281#issuecomment-736216219","issue_url":"https://api.github.com/repos/apache/pinot/issues/6281","id":736216219,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjIxNjIxOQ==","user":{"login":"harleyjj","id":10106733,"node_id":"MDQ6VXNlcjEwMTA2NzMz","avatar_url":"https://avatars.githubusercontent.com/u/10106733?v=4","gravatar_id":"","url":"https://api.github.com/users/harleyjj","html_url":"https://github.com/harleyjj","followers_url":"https://api.github.com/users/harleyjj/followers","following_url":"https://api.github.com/users/harleyjj/following{/other_user}","gists_url":"https://api.github.com/users/harleyjj/gists{/gist_id}","starred_url":"https://api.github.com/users/harleyjj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harleyjj/subscriptions","organizations_url":"https://api.github.com/users/harleyjj/orgs","repos_url":"https://api.github.com/users/harleyjj/repos","events_url":"https://api.github.com/users/harleyjj/events{/privacy}","received_events_url":"https://api.github.com/users/harleyjj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T04:52:10Z","updated_at":"2020-12-01T04:52:10Z","author_association":"CONTRIBUTOR","body":"@vincentchenjl @jihaozh The PR is passing tests after the rebase","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736216219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736376514","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-736376514","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":736376514,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjM3NjUxNA==","user":{"login":"shahsank3t","id":6761317,"node_id":"MDQ6VXNlcjY3NjEzMTc=","avatar_url":"https://avatars.githubusercontent.com/u/6761317?v=4","gravatar_id":"","url":"https://api.github.com/users/shahsank3t","html_url":"https://github.com/shahsank3t","followers_url":"https://api.github.com/users/shahsank3t/followers","following_url":"https://api.github.com/users/shahsank3t/following{/other_user}","gists_url":"https://api.github.com/users/shahsank3t/gists{/gist_id}","starred_url":"https://api.github.com/users/shahsank3t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shahsank3t/subscriptions","organizations_url":"https://api.github.com/users/shahsank3t/orgs","repos_url":"https://api.github.com/users/shahsank3t/repos","events_url":"https://api.github.com/users/shahsank3t/events{/privacy}","received_events_url":"https://api.github.com/users/shahsank3t/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T10:13:30Z","updated_at":"2020-12-01T10:13:30Z","author_association":"CONTRIBUTOR","body":"@npawar Update the PR with the fixes for the issues you reported.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736376514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736679804","html_url":"https://github.com/apache/pinot/pull/6285#issuecomment-736679804","issue_url":"https://api.github.com/repos/apache/pinot/issues/6285","id":736679804,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjY3OTgwNA==","user":{"login":"mayankshriv","id":12615885,"node_id":"MDQ6VXNlcjEyNjE1ODg1","avatar_url":"https://avatars.githubusercontent.com/u/12615885?v=4","gravatar_id":"","url":"https://api.github.com/users/mayankshriv","html_url":"https://github.com/mayankshriv","followers_url":"https://api.github.com/users/mayankshriv/followers","following_url":"https://api.github.com/users/mayankshriv/following{/other_user}","gists_url":"https://api.github.com/users/mayankshriv/gists{/gist_id}","starred_url":"https://api.github.com/users/mayankshriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayankshriv/subscriptions","organizations_url":"https://api.github.com/users/mayankshriv/orgs","repos_url":"https://api.github.com/users/mayankshriv/repos","events_url":"https://api.github.com/users/mayankshriv/events{/privacy}","received_events_url":"https://api.github.com/users/mayankshriv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T16:54:29Z","updated_at":"2020-12-01T16:54:59Z","author_association":"CONTRIBUTOR","body":"Some of the changes (special-casing) seem motivated by performance improvement. If so, are there any performance improvement numbers to share? Also, are there any cases where we foresee the new implementation to be slower than the existing one?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736679804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736692535","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-736692535","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":736692535,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjY5MjUzNQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T17:12:45Z","updated_at":"2020-12-01T17:12:45Z","author_association":"MEMBER","body":"I remember adding support in Helix where you simply mention the replication factor as N and Helix will assign a segment to all nodes in the cluster that match the tag. Can we use that? ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736692535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736695196","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-736695196","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":736695196,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjY5NTE5Ng==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T17:16:49Z","updated_at":"2020-12-01T17:16:49Z","author_association":"CONTRIBUTOR","body":"> I remember adding support in Helix where you simply mention the replication factor as N and Helix will assign a segment to all nodes in the cluster that match the tag. Can we use that?\r\n\r\nI suggest not to use the helix mechanism (even if it is available) -- for operational ease.  \"Pinot code controls segment assignment\" --  is  much easier to reason about, than looking up whether isDimTable is set to know what is going on.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736695196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736716850","html_url":"https://github.com/apache/pinot/pull/6287#issuecomment-736716850","issue_url":"https://api.github.com/repos/apache/pinot/issues/6287","id":736716850,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjcxNjg1MA==","user":{"login":"JohnTortugo","id":2249648,"node_id":"MDQ6VXNlcjIyNDk2NDg=","avatar_url":"https://avatars.githubusercontent.com/u/2249648?v=4","gravatar_id":"","url":"https://api.github.com/users/JohnTortugo","html_url":"https://github.com/JohnTortugo","followers_url":"https://api.github.com/users/JohnTortugo/followers","following_url":"https://api.github.com/users/JohnTortugo/following{/other_user}","gists_url":"https://api.github.com/users/JohnTortugo/gists{/gist_id}","starred_url":"https://api.github.com/users/JohnTortugo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JohnTortugo/subscriptions","organizations_url":"https://api.github.com/users/JohnTortugo/orgs","repos_url":"https://api.github.com/users/JohnTortugo/repos","events_url":"https://api.github.com/users/JohnTortugo/events{/privacy}","received_events_url":"https://api.github.com/users/JohnTortugo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T17:52:47Z","updated_at":"2020-12-01T17:52:47Z","author_association":"NONE","body":"@mcvsubbu - I was told by @mayankshriv that this part of Pinot was slow. @mayankshriv - can you please answer @mcvsubbu question about in which situation is the segment creation code slow?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736716850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736733153","html_url":"https://github.com/apache/pinot/pull/6287#issuecomment-736733153","issue_url":"https://api.github.com/repos/apache/pinot/issues/6287","id":736733153,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjczMzE1Mw==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T18:22:00Z","updated_at":"2020-12-01T18:22:00Z","author_association":"CONTRIBUTOR","body":"@JohnTortugo please ping me via slack, and we can discuss further. I discussed with @mayankshriv  also, and we concur that reducing garbage collection is the first order of business. We have not observed performance problems in this area, only GC issues when this happens. We will gladly take any performance improvements, however.\r\nThe prototype that I had done with columnar segment build yielded both performance as well as GC improvements. Can you please take that up?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736733153/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736765701","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-736765701","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":736765701,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjc2NTcwMQ==","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T19:23:53Z","updated_at":"2020-12-01T19:23:53Z","author_association":"CONTRIBUTOR","body":"> > I remember adding support in Helix where you simply mention the replication factor as N and Helix will assign a segment to all nodes in the cluster that match the tag. Can we use that?\r\n> \r\n> I suggest not to use the helix mechanism (even if it is available) -- for operational ease. \"Pinot code controls segment assignment\" -- is much easier to reason about, than looking up whether isDimTable is set to know what is going on.\r\n\r\n@mcvsubbu I was curious about this suggestion. I think the purpose is to have a declarative way of segment assignment for the DimTable, but leave the actual implementation to the corresponding module, be it Helix or Pinot. Is there a particular reason that we shall not consider Helix? Is it due to reliability or some other considerations?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736765701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736765873","html_url":"https://github.com/apache/pinot/pull/6285#issuecomment-736765873","issue_url":"https://api.github.com/repos/apache/pinot/issues/6285","id":736765873,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjc2NTg3Mw==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T19:24:14Z","updated_at":"2020-12-01T19:24:14Z","author_association":"CONTRIBUTOR","body":"@mayankshriv Thanks for the review. Addressed all the comments and updated the description to include the number for a simple distinct query. All the cases should perform at least the same as before (when there are multiple distinct columns and has raw index column, we fall back to the old way of using `DistinctTable` to merge raw records)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736765873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736788717","html_url":"https://github.com/apache/pinot/issues/6303#issuecomment-736788717","issue_url":"https://api.github.com/repos/apache/pinot/issues/6303","id":736788717,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjc4ODcxNw==","user":{"login":"jackjlli","id":35080149,"node_id":"MDQ6VXNlcjM1MDgwMTQ5","avatar_url":"https://avatars.githubusercontent.com/u/35080149?v=4","gravatar_id":"","url":"https://api.github.com/users/jackjlli","html_url":"https://github.com/jackjlli","followers_url":"https://api.github.com/users/jackjlli/followers","following_url":"https://api.github.com/users/jackjlli/following{/other_user}","gists_url":"https://api.github.com/users/jackjlli/gists{/gist_id}","starred_url":"https://api.github.com/users/jackjlli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jackjlli/subscriptions","organizations_url":"https://api.github.com/users/jackjlli/orgs","repos_url":"https://api.github.com/users/jackjlli/repos","events_url":"https://api.github.com/users/jackjlli/events{/privacy}","received_events_url":"https://api.github.com/users/jackjlli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T20:08:25Z","updated_at":"2020-12-01T20:08:25Z","author_association":"MEMBER","body":"Correct, we have a PR for that: https://github.com/apache/incubator-pinot/pull/6066","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736788717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736818642","html_url":"https://github.com/apache/pinot/pull/6285#issuecomment-736818642","issue_url":"https://api.github.com/repos/apache/pinot/issues/6285","id":736818642,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjgxODY0Mg==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T21:03:17Z","updated_at":"2020-12-01T21:03:17Z","author_association":"CONTRIBUTOR","body":"@siddharthteotia Addressed all the comments, please take another look","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736818642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736826208","html_url":"https://github.com/apache/pinot/pull/6285#issuecomment-736826208","issue_url":"https://api.github.com/repos/apache/pinot/issues/6285","id":736826208,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjgyNjIwOA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-01T21:17:49Z","updated_at":"2020-12-01T22:08:27Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=h1) Report\n> Merging [#6285](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=desc) (c42ec6c) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.72%`.\n> The diff coverage is `68.27%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6285/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6285      +/-   ##\n==========================================\n+ Coverage   66.44%   74.17%   +7.72%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61768    +6995     \n  Branches     8168     8977     +809     \n==========================================\n+ Hits        36396    45817    +9421     \n+ Misses      15700    12990    -2710     \n- Partials     2677     2961     +284     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.68% <51.88%> (?)` | |\n| unittests | `65.39% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1068 more](https://codecov.io/gh/apache/incubator-pinot/pull/6285/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=footer). Last update [0565f86...c42ec6c](https://codecov.io/gh/apache/incubator-pinot/pull/6285?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736826208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736939120","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-736939120","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":736939120,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjkzOTEyMA==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T02:05:34Z","updated_at":"2020-12-02T02:05:34Z","author_association":"CONTRIBUTOR","body":"Some more issues:\r\n\r\n1. Can we have Delete Schema  and `Edit Schema` button on the individual schema page? Otherwise there’s no way to delete/edit a schema, unless a table is also created.\r\n2. UI side Validations for required fields on Add Schema didn’t work. I still see call being made to backend when I tried to add schema without specifying name\r\n3. The “*” on Number of instances per replica group field spilled onto new line for my screen. We can reduce that string to Instances per replica group , or increase size of that text area.\r\n4. When enabling Partitioning, the “segmentPrunerTypes” did not get set in the routing config. Refer to the doc for how to set. Both for REALTIME & OFFLINE\r\n5. When Enable Partitioning, mark all mandatory fields as red *. I see it only for OFFLINE, it’s missing for REALTIME\r\n6. In stream configs, mark these properties as mandatory - topic.name, broker.list, consumer.type, decoder.class.name\r\n7. Seeing spinning wheel forever in this scenario -\r\n\r\n- Created a schema “foo” with 1 dimension.\r\n- Add OFFLINE table, with name “foo”. When adding table, Enable Replica Groups, and add 2 replica groups and 2 instances per replica groups (this is expected to work only with 1,1 since we have only 1 server). So, the backend returns error (expected).\r\n- But actually the table has gotten added (due to a backend bug). So if I Cancel at this stage, and refresh tables list, I see the new table (so far so good).\r\n- The problem is when I click on the new table. It spins forever. I checked the GET API and it was able to retrieve the table.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736939120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736947530","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-736947530","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":736947530,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjk0NzUzMA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T02:29:41Z","updated_at":"2020-12-02T02:29:41Z","author_association":"CONTRIBUTOR","body":"> > > I remember adding support in Helix where you simply mention the replication factor as N and Helix will assign a segment to all nodes in the cluster that match the tag. Can we use that?\r\n> > \r\n> > \r\n> > I suggest not to use the helix mechanism (even if it is available) -- for operational ease. \"Pinot code controls segment assignment\" -- is much easier to reason about, than looking up whether isDimTable is set to know what is going on.\r\n> \r\n> @mcvsubbu I was curious about this suggestion. I think the purpose is to have a declarative way of segment assignment for the DimTable, but leave the actual implementation to the corresponding module, be it Helix or Pinot. Is there a particular reason that we shall not consider Helix? Is it due to reliability or some other considerations?\r\n\r\nThe idea is two-fold:\r\n1. It is better we have the same pattern of assigning segments --  that of using a specific segment assignment strategy. Just add another name, and write the code for it, it should be fairly small, as has been demonstrated in this PR.\r\n2. If Helix (for whatever reason) changes behavior, Pinot will not suffer. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736947530/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736983128","html_url":"https://github.com/apache/pinot/pull/6305#issuecomment-736983128","issue_url":"https://api.github.com/repos/apache/pinot/issues/6305","id":736983128,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjk4MzEyOA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T04:31:43Z","updated_at":"2020-12-03T01:02:14Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=h1) Report\n> Merging [#6305](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=desc) (7e83dba) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `20.84%`.\n> The diff coverage is `52.01%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6305/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6305       +/-   ##\n===========================================\n- Coverage   66.44%   45.60%   -20.85%     \n===========================================\n  Files        1075     1281      +206     \n  Lines       54773    61793     +7020     \n  Branches     8168     8979      +811     \n===========================================\n- Hits        36396    28181     -8215     \n- Misses      15700    31303    +15603     \n+ Partials     2677     2309      -368     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.60% <52.01%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `22.22% <0.00%> (-26.62%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `64.28% <ø> (-8.89%)` | :arrow_down: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| ... and [1277 more](https://codecov.io/gh/apache/incubator-pinot/pull/6305/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=footer). Last update [0565f86...7e83dba](https://codecov.io/gh/apache/incubator-pinot/pull/6305?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736983128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736986030","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-736986030","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":736986030,"node_id":"MDEyOklzc3VlQ29tbWVudDczNjk4NjAzMA==","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T04:42:45Z","updated_at":"2020-12-02T04:42:45Z","author_association":"CONTRIBUTOR","body":"> > > > I remember adding support in Helix where you simply mention the replication factor as N and Helix will assign a segment to all nodes in the cluster that match the tag. Can we use that?\r\n> > > \r\n> > > \r\n> > > I suggest not to use the helix mechanism (even if it is available) -- for operational ease. \"Pinot code controls segment assignment\" -- is much easier to reason about, than looking up whether isDimTable is set to know what is going on.\r\n> > \r\n> > \r\n> > @mcvsubbu I was curious about this suggestion. I think the purpose is to have a declarative way of segment assignment for the DimTable, but leave the actual implementation to the corresponding module, be it Helix or Pinot. Is there a particular reason that we shall not consider Helix? Is it due to reliability or some other considerations?\r\n> \r\n> The idea is two-fold:\r\n> \r\n> 1. It is better we have the same pattern of assigning segments --  that of using a specific segment assignment strategy. Just add another name, and write the code for it, it should be fairly small, as has been demonstrated in this PR.\r\n> 2. If Helix (for whatever reason) changes behavior, Pinot will not suffer.\r\n\r\nMakes sense. Thanks","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/736986030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737030984","html_url":"https://github.com/apache/pinot/pull/6306#issuecomment-737030984","issue_url":"https://api.github.com/repos/apache/pinot/issues/6306","id":737030984,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzAzMDk4NA==","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T06:47:55Z","updated_at":"2020-12-02T06:47:55Z","author_association":"CONTRIBUTOR","body":"@fx19880617 Thanks for taking a look. Comments addressed.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737030984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737217924","html_url":"https://github.com/apache/pinot/issues/6307#issuecomment-737217924","issue_url":"https://api.github.com/repos/apache/pinot/issues/6307","id":737217924,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzIxNzkyNA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T13:04:51Z","updated_at":"2020-12-02T13:04:51Z","author_association":"MEMBER","body":"`select tags from metric group by tags `\r\n\r\nThis is not valid query - try this \r\n\r\n`select tags from metric`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737217924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737254645","html_url":"https://github.com/apache/pinot/issues/6300#issuecomment-737254645","issue_url":"https://api.github.com/repos/apache/pinot/issues/6300","id":737254645,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzI1NDY0NQ==","user":{"login":"galalen","id":16897043,"node_id":"MDQ6VXNlcjE2ODk3MDQz","avatar_url":"https://avatars.githubusercontent.com/u/16897043?v=4","gravatar_id":"","url":"https://api.github.com/users/galalen","html_url":"https://github.com/galalen","followers_url":"https://api.github.com/users/galalen/followers","following_url":"https://api.github.com/users/galalen/following{/other_user}","gists_url":"https://api.github.com/users/galalen/gists{/gist_id}","starred_url":"https://api.github.com/users/galalen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/galalen/subscriptions","organizations_url":"https://api.github.com/users/galalen/orgs","repos_url":"https://api.github.com/users/galalen/repos","events_url":"https://api.github.com/users/galalen/events{/privacy}","received_events_url":"https://api.github.com/users/galalen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T14:13:00Z","updated_at":"2020-12-02T14:13:00Z","author_association":"CONTRIBUTOR","body":"here is the draft json schema for table config\r\n\r\n```json\r\n{\r\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n  \"$id\": \"http://example.com/product.schema.json\",\r\n  \"title\": \"Pinot TableConfig\",\r\n  \"description\": \"define the table properties\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"tableName\": {\r\n      \"description\": \"Name of the table\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"tableType\": {\r\n      \"description\": \"Type of the table\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"quota\": {\r\n      \"description\": \"Specifies quota for storage and queries per second\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"maxQueriesPerSecond\": { \"type\": \"integer\" },\r\n        \"storage\": { \"type\": \"string\" }\r\n      }\r\n    },\r\n    \"routing\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"segmentPrunerTypes\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [\"partition\"]\r\n          }\r\n        },\r\n        \"instanceSelectorType\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\"replicaGroup\", \"balanced\"]\r\n        }\r\n      }\r\n    },\r\n    \"segmentsConfig\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"schemaName\": { \"type\": \"string\" },\r\n        \"timeColumnName\": { \"type\": \"string\" },\r\n        \"timeType\": { \"type\": \"string\" },\r\n        \"replication\": { \"type\": \"string\" },\r\n        \"retentionTimeUnit\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\"DAYS\", \"HOURS\", \"MINUTES\", \"SECONDS\"]\r\n        },\r\n        \"retentionTimeValue\": { \"type\": \"string\" },\r\n        \"segmentPushFrequency\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\"HOURLY\", \"DAILY\", \"WEEKLY\", \"MONTHLY\"]\r\n        },\r\n        \"segmentPushType\": { \"type\": \"string\", \"enum\": [\"APPEND\", \"REFRESH\"] }\r\n      }\r\n    },\r\n    \"tableIndexConfig\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"invertedIndexColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"createInvertedIndexDuringSegmentGeneration\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"sortedColumn\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"bloomFilterColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"bloomFilterConfigs\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"rangeIndexColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"starTreeIndexConfigs\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"enableDefaultStarTree\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"enableDynamicStarTreeCreation\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"noDictionaryColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"onHeapDictionaryColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"varLengthDictionaryColumns\": {\r\n          \"type\": \"array\",\r\n          \"items\": { \"type\": \"string\" },\r\n          \"uniqueItems\": true\r\n        },\r\n        \"loadMode\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\"HEAP\", \"MMAP\"]\r\n        },\r\n        \"columnMinMaxValueGeneratorMode\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\"NONE\", \"ALL\", \"TIME\", \"NON_METRIC\"]\r\n        },\r\n        \"nullHandlingEnabled\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"aggregateMetrics\": {\r\n          \"type\": \"boolean\",\r\n          \"$comment\": \"only applicable for stream\"\r\n        },\r\n        \"fieldConfigList\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"name\": { \"type\": \"string\" },\r\n              \"encodingType\": {\r\n                \"type\": \"string\",\r\n                \"enum\": [\"RAW\", \"DICTIONARY\"]\r\n              },\r\n              \"indexType\": {\r\n                \"type\": \"string\",\r\n                \"enum\": [\"TEXT\"]\r\n              },\r\n              \"properties\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"enableQueryCacheForTextIndex\": { \"type\": \"boolean\" },\r\n                  \"rawIndexWriterVersion\": { \"type\": \"string\" },\r\n                  \"deriveNumDocsPerChunkForRawIndex\": { \"type\": \"string\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"tenants\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"broker\": { \"type\": \"string\" },\r\n        \"server\": { \"type\": \"string\" },\r\n        \"tagOverrideConfig\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"realtimeConsuming\": { \"type\": \"string\" },\r\n            \"realtimeCompleted\": { \"type\": \"string\" }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"ingestionConfig\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"filterConfig\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"filterFunction\": { \"type\": \"string\" }\r\n          }\r\n        },\r\n        \"transformConfigs\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"columnName\": { \"type\": \"string\" },\r\n              \"transformFunction\": { \"type\": \"string\" }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"type\": \"object\"\r\n    }\r\n  },\r\n  \"required\": [\"tableName\", \"tableType\", \"segmentsConfig\", \"tableIndexConfig\"]\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737254645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737522439","html_url":"https://github.com/apache/pinot/pull/6306#issuecomment-737522439","issue_url":"https://api.github.com/repos/apache/pinot/issues/6306","id":737522439,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzUyMjQzOQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-02T22:01:59Z","updated_at":"2020-12-02T22:01:59Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=h1) Report\n> Merging [#6306](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=desc) (1d73550) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `20.89%`.\n> The diff coverage is `51.88%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6306/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6306       +/-   ##\n===========================================\n- Coverage   66.44%   45.55%   -20.90%     \n===========================================\n  Files        1075     1281      +206     \n  Lines       54773    61789     +7016     \n  Branches     8168     8979      +811     \n===========================================\n- Hits        36396    28150     -8246     \n- Misses      15700    31332    +15632     \n+ Partials     2677     2307      -370     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.55% <51.88%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `22.22% <0.00%> (-26.62%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `64.28% <ø> (-8.89%)` | :arrow_down: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| ... and [1278 more](https://codecov.io/gh/apache/incubator-pinot/pull/6306/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=footer). Last update [0565f86...292e538](https://codecov.io/gh/apache/incubator-pinot/pull/6306?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737522439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737598198","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-737598198","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":737598198,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzU5ODE5OA==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T01:24:51Z","updated_at":"2020-12-03T01:24:51Z","author_association":"CONTRIBUTOR","body":"@kishoreg @mcvsubbu @fx19880617 @icefury71 ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737598198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737607128","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-737607128","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":737607128,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzYwNzEyOA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T01:51:10Z","updated_at":"2020-12-03T01:51:10Z","author_association":"CONTRIBUTOR","body":"The key here is that there is no alert set on lack of consumption, and there is no guarantee that restarting will even fix the issue. \r\n\r\nWe do have a mechanism by which servers can report problems to the controller. We use that currently for problems that happen during consumption.\r\n\r\nWe may want to  extend it (in case of 1 replica, maybe) to transition the segment to OFFLINE state if segment build fails (just throwing out the idea here, not sure if this is the best). In that case, the validator will come back and create a new segment.  Not sure if customers are ok waiting until validator runs, or if you are looking for instant gratification. Doing something the same instant an error is reported will generally be hard if there are more the one controllers, or if validation manager starts around the same time, etc. I think we should avoid that.\r\n\r\nValidation manager can be extended to handle ERROR state in all replicas, I suppose. It needs to change the idealstate to be OFFLINE for this segment, and invoke the same logic that we have now.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737607128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737610665","html_url":"https://github.com/apache/pinot/issues/6307#issuecomment-737610665","issue_url":"https://api.github.com/repos/apache/pinot/issues/6307","id":737610665,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzYxMDY2NQ==","user":{"login":"HyunjoonCho","id":59246310,"node_id":"MDQ6VXNlcjU5MjQ2MzEw","avatar_url":"https://avatars.githubusercontent.com/u/59246310?v=4","gravatar_id":"","url":"https://api.github.com/users/HyunjoonCho","html_url":"https://github.com/HyunjoonCho","followers_url":"https://api.github.com/users/HyunjoonCho/followers","following_url":"https://api.github.com/users/HyunjoonCho/following{/other_user}","gists_url":"https://api.github.com/users/HyunjoonCho/gists{/gist_id}","starred_url":"https://api.github.com/users/HyunjoonCho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HyunjoonCho/subscriptions","organizations_url":"https://api.github.com/users/HyunjoonCho/orgs","repos_url":"https://api.github.com/users/HyunjoonCho/repos","events_url":"https://api.github.com/users/HyunjoonCho/events{/privacy}","received_events_url":"https://api.github.com/users/HyunjoonCho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T02:00:51Z","updated_at":"2020-12-03T02:00:51Z","author_association":"NONE","body":"Thanks for the comment,\r\n\r\n> select tags from metric \r\n\r\nYeah, this lists tags but what I'm trying to do is filtering out duplicate ones.\r\n\r\nTo illustrate, if there are tags like below: \r\n```\r\n[\"tag1\", \"tag2\", \"tag3\"], [\"tag1\", \"tag2\", \"tag3\"], [\"tag1\", \"tag2\"], [\"tag1\", \"tag2\"], [\"tag1\", \"tag2\", \"tag3\"], [\"tag4\"] \r\n```\r\nWhen I do query with above one, it lists all the tags as they are.\r\nI want to print out each tags list only once like this: \r\n\r\n```\r\n[\"tag1\", \"tag2\", \"tag3\"], [\"tag1\", \"tag2\"], [\"tag4\"] \r\n```\r\nIs there a proper query for this? \r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737610665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737625205","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-737625205","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":737625205,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzYyNTIwNQ==","user":{"login":"shahsank3t","id":6761317,"node_id":"MDQ6VXNlcjY3NjEzMTc=","avatar_url":"https://avatars.githubusercontent.com/u/6761317?v=4","gravatar_id":"","url":"https://api.github.com/users/shahsank3t","html_url":"https://github.com/shahsank3t","followers_url":"https://api.github.com/users/shahsank3t/followers","following_url":"https://api.github.com/users/shahsank3t/following{/other_user}","gists_url":"https://api.github.com/users/shahsank3t/gists{/gist_id}","starred_url":"https://api.github.com/users/shahsank3t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shahsank3t/subscriptions","organizations_url":"https://api.github.com/users/shahsank3t/orgs","repos_url":"https://api.github.com/users/shahsank3t/repos","events_url":"https://api.github.com/users/shahsank3t/events{/privacy}","received_events_url":"https://api.github.com/users/shahsank3t/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T02:40:25Z","updated_at":"2020-12-03T02:40:25Z","author_association":"CONTRIBUTOR","body":"@npawar updated the PR with additional fixes and also added Schema Edit & Delete in Schema details page.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737625205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737632162","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-737632162","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":737632162,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzYzMjE2Mg==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T02:59:35Z","updated_at":"2020-12-03T03:06:33Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu \r\n\r\nFor example 1, what you suggest `We may want to extend it (in case of 1 replica, maybe) to transition the segment to OFFLINE state if segment build fails` would work. Letting the ValidationManager fix it should be fine. \r\nHowever, I think we should transition the segment to OFFLINE state, any time the while loop in the consumer thread exits with `ERROR` state (and not just for failed segment build or single replica).\r\n```\r\ntry {\r\n    while (!_state.isFinal()) {\r\n        ...\r\n    }\r\n    if (state == ERROR) {\r\n        throw IllegalStateException(\"Exited with ERROR state\", e);\r\n    }\r\n} catch (Exception e) {\r\n        segmentLogger.error(\"Exception while in work\", e);\r\n        postStopConsumedMsg(e.getClass().getName());\r\n        _state = State.ERROR;\r\n        _serverMetrics.setValueOfTableGauge(_metricKeyName, ServerGauge.LLC_PARTITION_CONSUMING, 0);\r\n        return;\r\n}\r\n```\r\nAs long as we reach the `postStopConsumedMsg` for all error conditions, I think we should be fine.\r\n\r\n\r\n-------------------------------------------------------------------------------\r\n\r\nI'm assuming this is for example 2: `Validation manager can be extended to handle ERROR state in all replicas` ? So we start looking at the External View in the Validation Manager?\r\n\r\n-------------------------------------------------------------------------------\r\n\r\nRegarding `We do have a mechanism by which servers can report problems to the controller. We use that currently for problems that happen during consumption.` - Where is this mechanism? Can we use that to create a Controller API that reports the status of all consumers? \r\nThis API will help in\r\n1. If users notice a lag, they can call this API and see consumer health. Right now they see segment metadata is IN_PROGRESS and segment is CONSUMING in ideal state, which causes confusion as to why the lag. \r\n2. We could also use that API in the Validation Manager to restart consumption if any consumers are dead\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737632162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737656800","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-737656800","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":737656800,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzY1NjgwMA==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T04:24:01Z","updated_at":"2020-12-03T04:24:01Z","author_association":"CONTRIBUTOR","body":"Thanks @shahsank3t ! Just 2 minor things remaining:\r\n\r\n- I still see the issues 6 & 7 from the above list.\r\n- When table config is invalid, can the whole exception be shown? For example, I tried to create OFFLINE table foo, and I set in Indexing & Encoding, the same column as None encoding and Inverted indexing (which is an invalid combination). In the error on UI I only see `“Invalid table config foo_OFFLINE\"` but in the log I see the whole message is being returned `\"Invalid table config: foo_OFFLINE exception: Cannot create an Inverted index on column aa specified in the noDictionaryColumns config\" `. So can the whole message be shown on the UI?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737656800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737659210","html_url":"https://github.com/apache/pinot/pull/6286#issuecomment-737659210","issue_url":"https://api.github.com/repos/apache/pinot/issues/6286","id":737659210,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzY1OTIxMA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T04:33:10Z","updated_at":"2020-12-03T04:33:10Z","author_association":"CONTRIBUTOR","body":"I would like to review this PR. Please give me a day or two. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737659210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737696301","html_url":"https://github.com/apache/pinot/issues/6309#issuecomment-737696301","issue_url":"https://api.github.com/repos/apache/pinot/issues/6309","id":737696301,"node_id":"MDEyOklzc3VlQ29tbWVudDczNzY5NjMwMQ==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T06:28:54Z","updated_at":"2020-12-03T06:28:54Z","author_association":"NONE","body":"it does work for regexp_like  so following is working for regexp_like but not for TEXT_MATCH\r\nselect date,data  from mytable where regexp_like(container_name,'^(?!.*(background)).*$')","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/737696301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738075426","html_url":"https://github.com/apache/pinot/issues/6309#issuecomment-738075426","issue_url":"https://api.github.com/repos/apache/pinot/issues/6309","id":738075426,"node_id":"MDEyOklzc3VlQ29tbWVudDczODA3NTQyNg==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T15:22:50Z","updated_at":"2020-12-03T15:22:50Z","author_association":"NONE","body":"Also it would be good to support NOT searches\r\nat the moment OR and AND will work i.e. \r\n\r\nTEXT_MATCH(data,'quick AND brown AND fox') - works\r\nTEXT_MATCH(data,'quick OR brown OR fox') - works\r\nTEXT_MATCH(data,'quick NOT brown NOT fox') - Not Working\r\n\r\n@siddharthteotia I can see you are the TEXT index expert , do you know whether there is a way to do negative searches for TEXT_MATCH also is it a quick fix to support NOT searches?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738075426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738116481","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-738116481","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":738116481,"node_id":"MDEyOklzc3VlQ29tbWVudDczODExNjQ4MQ==","user":{"login":"shahsank3t","id":6761317,"node_id":"MDQ6VXNlcjY3NjEzMTc=","avatar_url":"https://avatars.githubusercontent.com/u/6761317?v=4","gravatar_id":"","url":"https://api.github.com/users/shahsank3t","html_url":"https://github.com/shahsank3t","followers_url":"https://api.github.com/users/shahsank3t/followers","following_url":"https://api.github.com/users/shahsank3t/following{/other_user}","gists_url":"https://api.github.com/users/shahsank3t/gists{/gist_id}","starred_url":"https://api.github.com/users/shahsank3t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shahsank3t/subscriptions","organizations_url":"https://api.github.com/users/shahsank3t/orgs","repos_url":"https://api.github.com/users/shahsank3t/repos","events_url":"https://api.github.com/users/shahsank3t/events{/privacy}","received_events_url":"https://api.github.com/users/shahsank3t/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T16:23:32Z","updated_at":"2020-12-03T16:23:32Z","author_association":"CONTRIBUTOR","body":"@npawar Fixed issues you reported.\r\nI didn't receive the complete error log in API response like you mentioned but the below one:\r\n> {\"code\":400,\"error\":\"Invalid table config: airlineStats_OFFLINE\"}\r\n\r\nso for now, showing only the error value.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738116481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738148942","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-738148942","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":738148942,"node_id":"MDEyOklzc3VlQ29tbWVudDczODE0ODk0Mg==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T17:14:32Z","updated_at":"2020-12-03T17:14:32Z","author_association":"CONTRIBUTOR","body":"I disagree that ERROR state should trigger a consume stop.  The ERROR state is set (perhaps not best name) when the segment build fails. We can change the name to SEGMENT_BUILD_FAILED if you like, and it is an end state.\r\n\r\nIn production use case, there are always multiple replicas, and we should attempt to download if the build fails -- for whatever reason. We could check the number of replicas, and if it is one, we know that on a build failure, there will be nothing to download, and we can post the consumptionStopped message.\r\n\r\nAnother way to solve this whole problem is to introduce special code to monitor the consumption-stopped metric. If it stops for more than (say) 2 mins, then kill the process (call system.exit()). This can be done in service manager code.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738148942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738162768","html_url":"https://github.com/apache/pinot/issues/6311#issuecomment-738162768","issue_url":"https://api.github.com/repos/apache/pinot/issues/6311","id":738162768,"node_id":"MDEyOklzc3VlQ29tbWVudDczODE2Mjc2OA==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T17:28:41Z","updated_at":"2020-12-03T17:28:41Z","author_association":"CONTRIBUTOR","body":"I think this is duplicated with https://github.com/apache/incubator-pinot/issues/6277","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738162768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738172104","html_url":"https://github.com/apache/pinot/pull/6296#issuecomment-738172104","issue_url":"https://api.github.com/repos/apache/pinot/issues/6296","id":738172104,"node_id":"MDEyOklzc3VlQ29tbWVudDczODE3MjEwNA==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T17:44:28Z","updated_at":"2020-12-03T17:44:28Z","author_association":"CONTRIBUTOR","body":"Thanks @shahsank3t ! I will fix the API for the validate.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738172104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738194604","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-738194604","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":738194604,"node_id":"MDEyOklzc3VlQ29tbWVudDczODE5NDYwNA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T18:23:49Z","updated_at":"2020-12-03T18:23:49Z","author_association":"MEMBER","body":"Can do this instead\r\n1. Add an API to get the status of consuming segment across all servers (including offset is possible)\r\n2. If the status is bad/error because of whatever reason, disable and enable the consuming segment. \r\n\r\nOnce we have controller API for these two, the invocation can be manual or via validation manager.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738194604/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738272266","html_url":"https://github.com/apache/pinot/issues/6277#issuecomment-738272266","issue_url":"https://api.github.com/repos/apache/pinot/issues/6277","id":738272266,"node_id":"MDEyOklzc3VlQ29tbWVudDczODI3MjI2Ng==","user":{"login":"kkrugler","id":66217,"node_id":"MDQ6VXNlcjY2MjE3","avatar_url":"https://avatars.githubusercontent.com/u/66217?v=4","gravatar_id":"","url":"https://api.github.com/users/kkrugler","html_url":"https://github.com/kkrugler","followers_url":"https://api.github.com/users/kkrugler/followers","following_url":"https://api.github.com/users/kkrugler/following{/other_user}","gists_url":"https://api.github.com/users/kkrugler/gists{/gist_id}","starred_url":"https://api.github.com/users/kkrugler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkrugler/subscriptions","organizations_url":"https://api.github.com/users/kkrugler/orgs","repos_url":"https://api.github.com/users/kkrugler/repos","events_url":"https://api.github.com/users/kkrugler/events{/privacy}","received_events_url":"https://api.github.com/users/kkrugler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T19:56:57Z","updated_at":"2020-12-03T19:56:57Z","author_association":"CONTRIBUTOR","body":"I think this is a `tar` format limitation, not `gzip`. As per https://commons.apache.org/proper/commons-compress/tar.html, I think you want to switch to using BIGNUMBER_POSIX for the bigNumberMode so that it doesn't have an 8GB limit.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738272266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738273193","html_url":"https://github.com/apache/pinot/issues/6277#issuecomment-738273193","issue_url":"https://api.github.com/repos/apache/pinot/issues/6277","id":738273193,"node_id":"MDEyOklzc3VlQ29tbWVudDczODI3MzE5Mw==","user":{"login":"kkrugler","id":66217,"node_id":"MDQ6VXNlcjY2MjE3","avatar_url":"https://avatars.githubusercontent.com/u/66217?v=4","gravatar_id":"","url":"https://api.github.com/users/kkrugler","html_url":"https://github.com/kkrugler","followers_url":"https://api.github.com/users/kkrugler/followers","following_url":"https://api.github.com/users/kkrugler/following{/other_user}","gists_url":"https://api.github.com/users/kkrugler/gists{/gist_id}","starred_url":"https://api.github.com/users/kkrugler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkrugler/subscriptions","organizations_url":"https://api.github.com/users/kkrugler/orgs","repos_url":"https://api.github.com/users/kkrugler/repos","events_url":"https://api.github.com/users/kkrugler/events{/privacy}","received_events_url":"https://api.github.com/users/kkrugler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T19:58:37Z","updated_at":"2020-12-03T19:58:37Z","author_association":"CONTRIBUTOR","body":"Also @kishoreg had said on Slack:\r\n\r\n> after 2gb, we typically run into JVM limits on offset length etc.\r\n\r\nSo maybe adding a warning if the tar output size is > 2GB?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738273193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738273485","html_url":"https://github.com/apache/pinot/issues/6311#issuecomment-738273485","issue_url":"https://api.github.com/repos/apache/pinot/issues/6311","id":738273485,"node_id":"MDEyOklzc3VlQ29tbWVudDczODI3MzQ4NQ==","user":{"login":"kkrugler","id":66217,"node_id":"MDQ6VXNlcjY2MjE3","avatar_url":"https://avatars.githubusercontent.com/u/66217?v=4","gravatar_id":"","url":"https://api.github.com/users/kkrugler","html_url":"https://github.com/kkrugler","followers_url":"https://api.github.com/users/kkrugler/followers","following_url":"https://api.github.com/users/kkrugler/following{/other_user}","gists_url":"https://api.github.com/users/kkrugler/gists{/gist_id}","starred_url":"https://api.github.com/users/kkrugler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkrugler/subscriptions","organizations_url":"https://api.github.com/users/kkrugler/orgs","repos_url":"https://api.github.com/users/kkrugler/repos","events_url":"https://api.github.com/users/kkrugler/events{/privacy}","received_events_url":"https://api.github.com/users/kkrugler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T19:59:11Z","updated_at":"2020-12-03T19:59:11Z","author_association":"CONTRIBUTOR","body":"@fx19880617 - yes, thanks. Added some comments on #6277, closing this one.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738273485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738293160","html_url":"https://github.com/apache/pinot/pull/6290#issuecomment-738293160","issue_url":"https://api.github.com/repos/apache/pinot/issues/6290","id":738293160,"node_id":"MDEyOklzc3VlQ29tbWVudDczODI5MzE2MA==","user":{"login":"tejasajmera","id":33937650,"node_id":"MDQ6VXNlcjMzOTM3NjUw","avatar_url":"https://avatars.githubusercontent.com/u/33937650?v=4","gravatar_id":"","url":"https://api.github.com/users/tejasajmera","html_url":"https://github.com/tejasajmera","followers_url":"https://api.github.com/users/tejasajmera/followers","following_url":"https://api.github.com/users/tejasajmera/following{/other_user}","gists_url":"https://api.github.com/users/tejasajmera/gists{/gist_id}","starred_url":"https://api.github.com/users/tejasajmera/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tejasajmera/subscriptions","organizations_url":"https://api.github.com/users/tejasajmera/orgs","repos_url":"https://api.github.com/users/tejasajmera/repos","events_url":"https://api.github.com/users/tejasajmera/events{/privacy}","received_events_url":"https://api.github.com/users/tejasajmera/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T20:38:17Z","updated_at":"2020-12-03T20:38:17Z","author_association":"CONTRIBUTOR","body":"@zhangloo333 Can you please take a look again, your comments are addressed now.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738293160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738301725","html_url":"https://github.com/apache/pinot/pull/6314#issuecomment-738301725","issue_url":"https://api.github.com/repos/apache/pinot/issues/6314","id":738301725,"node_id":"MDEyOklzc3VlQ29tbWVudDczODMwMTcyNQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T20:55:56Z","updated_at":"2020-12-03T21:09:01Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=h1) Report\n> Merging [#6314](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=desc) (55da36d) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.62%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6314/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6314      +/-   ##\n==========================================\n+ Coverage   66.44%   74.07%   +7.62%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61789    +7016     \n  Branches     8168     8979     +811     \n==========================================\n+ Hits        36396    45769    +9373     \n+ Misses      15700    13064    -2636     \n- Partials     2677     2956     +279     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.62% <52.01%> (?)` | |\n| unittests | `65.34% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1066 more](https://codecov.io/gh/apache/incubator-pinot/pull/6314/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=footer). Last update [33e7ec8...55da36d](https://codecov.io/gh/apache/incubator-pinot/pull/6314?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738301725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738336236","html_url":"https://github.com/apache/pinot/issues/6277#issuecomment-738336236","issue_url":"https://api.github.com/repos/apache/pinot/issues/6277","id":738336236,"node_id":"MDEyOklzc3VlQ29tbWVudDczODMzNjIzNg==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T21:40:59Z","updated_at":"2020-12-03T21:40:59Z","author_association":"CONTRIBUTOR","body":"> Also @kishoreg had said on Slack:\r\n> \r\n> > after 2gb, we typically run into JVM limits on offset length etc.\r\n> \r\n> So maybe adding a warning if the tar output size is > 2GB?\r\n\r\nThis 2G limit is on per column size not entire segment ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738336236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738399473","html_url":"https://github.com/apache/pinot/issues/6309#issuecomment-738399473","issue_url":"https://api.github.com/repos/apache/pinot/issues/6309","id":738399473,"node_id":"MDEyOklzc3VlQ29tbWVudDczODM5OTQ3Mw==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-03T22:44:27Z","updated_at":"2020-12-03T22:46:02Z","author_association":"NONE","body":"We can do NOT searches using lucene regex patterns , so following should work\r\n\r\n`TEXT_MATCH(log,'/.*/ NOT quick AND NOT brown')`\r\n`TEXT_MATCH(log,'/.*/ NOT fox')`\r\nHence closing the ticket","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738399473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738480590","html_url":"https://github.com/apache/pinot/pull/6315#issuecomment-738480590","issue_url":"https://api.github.com/repos/apache/pinot/issues/6315","id":738480590,"node_id":"MDEyOklzc3VlQ29tbWVudDczODQ4MDU5MA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T00:58:06Z","updated_at":"2020-12-04T04:12:26Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=h1) Report\n> Merging [#6315](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=desc) (e13f39e) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.83%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6315/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6315      +/-   ##\n==========================================\n+ Coverage   66.44%   74.28%   +7.83%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61793    +7020     \n  Branches     8168     8980     +812     \n==========================================\n+ Hits        36396    45903    +9507     \n+ Misses      15700    12934    -2766     \n- Partials     2677     2956     +279     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.96% <52.01%> (?)` | |\n| unittests | `65.36% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1067 more](https://codecov.io/gh/apache/incubator-pinot/pull/6315/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=footer). Last update [3cf3154...e13f39e](https://codecov.io/gh/apache/incubator-pinot/pull/6315?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738480590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738557020","html_url":"https://github.com/apache/pinot/pull/6315#issuecomment-738557020","issue_url":"https://api.github.com/repos/apache/pinot/issues/6315","id":738557020,"node_id":"MDEyOklzc3VlQ29tbWVudDczODU1NzAyMA==","user":{"login":"jackjlli","id":35080149,"node_id":"MDQ6VXNlcjM1MDgwMTQ5","avatar_url":"https://avatars.githubusercontent.com/u/35080149?v=4","gravatar_id":"","url":"https://api.github.com/users/jackjlli","html_url":"https://github.com/jackjlli","followers_url":"https://api.github.com/users/jackjlli/followers","following_url":"https://api.github.com/users/jackjlli/following{/other_user}","gists_url":"https://api.github.com/users/jackjlli/gists{/gist_id}","starred_url":"https://api.github.com/users/jackjlli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jackjlli/subscriptions","organizations_url":"https://api.github.com/users/jackjlli/orgs","repos_url":"https://api.github.com/users/jackjlli/repos","events_url":"https://api.github.com/users/jackjlli/events{/privacy}","received_events_url":"https://api.github.com/users/jackjlli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T04:27:41Z","updated_at":"2020-12-04T04:27:41Z","author_association":"MEMBER","body":"The travis build was stuck in \"Job Received\" state, which lasts for 4 hours. While the travis build doesn't run anything, we can skip the travis build and merge this PR.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738557020/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738569252","html_url":"https://github.com/apache/pinot/pull/6316#issuecomment-738569252","issue_url":"https://api.github.com/repos/apache/pinot/issues/6316","id":738569252,"node_id":"MDEyOklzc3VlQ29tbWVudDczODU2OTI1Mg==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T05:13:11Z","updated_at":"2020-12-04T05:27:26Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=h1) Report\n> Merging [#6316](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=desc) (f616c32) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.63%`.\n> The diff coverage is `68.27%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6316/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6316      +/-   ##\n==========================================\n+ Coverage   66.44%   74.08%   +7.63%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61789    +7016     \n  Branches     8168     8979     +811     \n==========================================\n+ Hits        36396    45775    +9379     \n+ Misses      15700    13053    -2647     \n- Partials     2677     2961     +284     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.69% <51.88%> (?)` | |\n| unittests | `65.38% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1067 more](https://codecov.io/gh/apache/incubator-pinot/pull/6316/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=footer). Last update [9a5cc4b...f616c32](https://codecov.io/gh/apache/incubator-pinot/pull/6316?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738569252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738686111","html_url":"https://github.com/apache/pinot/issues/6307#issuecomment-738686111","issue_url":"https://api.github.com/repos/apache/pinot/issues/6307","id":738686111,"node_id":"MDEyOklzc3VlQ29tbWVudDczODY4NjExMQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T09:49:57Z","updated_at":"2020-12-04T09:51:24Z","author_association":"CONTRIBUTOR","body":"hmm I don't think the group by behavior is per array based.\r\n\r\nOne solution we can think of is to add a function like `array_concat` function(not supported yet) to concat all the values in an array to a string then group by it.(Then ordering in the array will result in different groups )\r\nE.g.\r\n```\r\nSELECT count(*), array_concat(tags) FROM myTable GROUP BY array_concat(tags)\r\n```\r\n\r\n@npawar can we use groovy to achieve this for now?\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738686111/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738851196","html_url":"https://github.com/apache/pinot/pull/5787#issuecomment-738851196","issue_url":"https://api.github.com/repos/apache/pinot/issues/5787","id":738851196,"node_id":"MDEyOklzc3VlQ29tbWVudDczODg1MTE5Ng==","user":{"login":"flykent1990","id":71525567,"node_id":"MDQ6VXNlcjcxNTI1NTY3","avatar_url":"https://avatars.githubusercontent.com/u/71525567?v=4","gravatar_id":"","url":"https://api.github.com/users/flykent1990","html_url":"https://github.com/flykent1990","followers_url":"https://api.github.com/users/flykent1990/followers","following_url":"https://api.github.com/users/flykent1990/following{/other_user}","gists_url":"https://api.github.com/users/flykent1990/gists{/gist_id}","starred_url":"https://api.github.com/users/flykent1990/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flykent1990/subscriptions","organizations_url":"https://api.github.com/users/flykent1990/orgs","repos_url":"https://api.github.com/users/flykent1990/repos","events_url":"https://api.github.com/users/flykent1990/events{/privacy}","received_events_url":"https://api.github.com/users/flykent1990/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T15:36:57Z","updated_at":"2020-12-04T15:36:57Z","author_association":"NONE","body":"hi @mangrrua \r\n\r\n\"streaming endpoints\" for spark connector currently this feature is available ?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738851196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738956959","html_url":"https://github.com/apache/pinot/issues/6308#issuecomment-738956959","issue_url":"https://api.github.com/repos/apache/pinot/issues/6308","id":738956959,"node_id":"MDEyOklzc3VlQ29tbWVudDczODk1Njk1OQ==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T18:54:11Z","updated_at":"2020-12-04T18:54:11Z","author_association":"CONTRIBUTOR","body":"I am fine adding admin API, but let us not do anything via validation manager. It can lead to some timing issues (depending on what we are trying to do) and not work in production correctly. If you do want to change automatic validation, please put forward a proposal, and we can discuss that.\r\n\r\nBtw, here are some ideas for an API https://github.com/apache/incubator-pinot/issues/4035\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/738956959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739076353","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739076353","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739076353,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTA3NjM1Mw==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-04T23:32:10Z","updated_at":"2020-12-04T23:32:10Z","author_association":"MEMBER","body":"Regarding the test failure, this is because the bitmap is being run length encoded incrementally. It becomes deterministic when setting\r\n\r\n```java\r\n_bitmapWriters[i] = RoaringBitmapWriter.bufferWriter().runCompress(false).get();\r\n```\r\n\r\nTo make the test deterministic, RLE could be disabled, but this is bad for file size. Or the off-heap index creator could run-optimise its bitmaps, but that's bad for speed compared to doing it incrementally. Alternatively the test could be modified to check that the bitmaps are equal after memory mapping. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739076353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739086469","html_url":"https://github.com/apache/pinot/pull/6322#issuecomment-739086469","issue_url":"https://api.github.com/repos/apache/pinot/issues/6322","id":739086469,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTA4NjQ2OQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T00:14:34Z","updated_at":"2020-12-07T01:18:03Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=h1) Report\n> Merging [#6322](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=desc) (2f6ab78) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.63%`.\n> The diff coverage is `68.27%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6322/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6322      +/-   ##\n==========================================\n+ Coverage   66.44%   74.08%   +7.63%     \n==========================================\n  Files        1075     1283     +208     \n  Lines       54773    61915    +7142     \n  Branches     8168     8993     +825     \n==========================================\n+ Hits        36396    45870    +9474     \n+ Misses      15700    13087    -2613     \n- Partials     2677     2958     +281     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.68% <51.88%> (?)` | |\n| unittests | `65.31% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1069 more](https://codecov.io/gh/apache/incubator-pinot/pull/6322/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=footer). Last update [33e7ec8...2f6ab78](https://codecov.io/gh/apache/incubator-pinot/pull/6322?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739086469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739086582","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739086582","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739086582,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTA4NjU4Mg==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T00:15:08Z","updated_at":"2020-12-05T00:15:08Z","author_association":"MEMBER","body":"The solution I came up with to make sure the same bytes are produced by both on-heap and off-heap creators was to apply the same changes to `OffHeapBitmapInvertedIndexCreator`, which will now also be run-optimised incrementally.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739086582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739096511","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739096511","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739096511,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTA5NjUxMQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T01:01:36Z","updated_at":"2020-12-07T23:08:23Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=h1) Report\n> Merging [#6320](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=desc) (725e218) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.67%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6320/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6320      +/-   ##\n==========================================\n+ Coverage   66.44%   74.11%   +7.67%     \n==========================================\n  Files        1075     1283     +208     \n  Lines       54773    61978    +7205     \n  Branches     8168     8998     +830     \n==========================================\n+ Hits        36396    45938    +9542     \n+ Misses      15700    13075    -2625     \n- Partials     2677     2965     +288     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.57% <52.01%> (?)` | |\n| unittests | `65.39% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1069 more](https://codecov.io/gh/apache/incubator-pinot/pull/6320/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=footer). Last update [41a7722...725e218](https://codecov.io/gh/apache/incubator-pinot/pull/6320?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739096511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739105516","html_url":"https://github.com/apache/pinot/pull/6322#issuecomment-739105516","issue_url":"https://api.github.com/repos/apache/pinot/issues/6322","id":739105516,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTEwNTUxNg==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T01:57:49Z","updated_at":"2020-12-05T01:57:49Z","author_association":"CONTRIBUTOR","body":"Is the `_consumerState` a string or a well-defined set of values? If we are building an API, should we consider putting in a well-defined set of values in there, so that we can build (say) a management platform?\r\n\r\nAlso, is a map for the output better (instead of an array):\r\n```\r\n{\r\n\"testTable__0__1__20201204T2030Z\" : {\r\n  \"idealstate\" : \"CONSUMING\",\r\n  \"externalView\" : \"ERROR\",\r\n  \"maxOffsetConsumed\" : \"somevalueComparable\",\r\n  \"consumerState\" : \"CONSUMING\" // Can be one of CONSUMING, CATCHING_UP,  BUILDING_SEGMENT, etc..(TBD)\r\n},\r\n\"testTable__0__2__whatever\" : {\r\n},\r\n.\r\n.\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739105516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739128938","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739128938","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739128938,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTEyODkzOA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T05:23:16Z","updated_at":"2020-12-05T05:23:16Z","author_association":"CONTRIBUTOR","body":"Can you follow one of the perf test classes (module pinot-perf , e.g BenchmarkPinotDataBuffer, BenchmarkDictionary etc) and get some numbers?\r\n\r\nAlso, you can write a simple test function that can be called while simultaneously profiling with YourKit/VisualVM. This can help reveal how the cpu and memory usage changes with this code.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739128938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739132934","html_url":"https://github.com/apache/pinot/issues/6324#issuecomment-739132934","issue_url":"https://api.github.com/repos/apache/pinot/issues/6324","id":739132934,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTEzMjkzNA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T06:09:46Z","updated_at":"2020-12-05T06:09:46Z","author_association":"MEMBER","body":"We have a PR out to catch invalid queries. Schema is still optional in Pinot for batch tables which makes it hard to enable this by default. But we plan to enable validation by default and provide the ability to disable.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739132934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739145374","html_url":"https://github.com/apache/pinot/pull/6323#issuecomment-739145374","issue_url":"https://api.github.com/repos/apache/pinot/issues/6323","id":739145374,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTE0NTM3NA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T08:18:05Z","updated_at":"2020-12-05T08:29:16Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=h1) Report\n> Merging [#6323](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=desc) (50e7a69) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.72%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6323/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6323      +/-   ##\n==========================================\n+ Coverage   66.44%   74.17%   +7.72%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61829    +7056     \n  Branches     8168     8981     +813     \n==========================================\n+ Hits        36396    45859    +9463     \n+ Misses      15700    13014    -2686     \n- Partials     2677     2956     +279     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.78% <52.01%> (?)` | |\n| unittests | `65.36% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1064 more](https://codecov.io/gh/apache/incubator-pinot/pull/6323/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=footer). Last update [9a5cc4b...50e7a69](https://codecov.io/gh/apache/incubator-pinot/pull/6323?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739145374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739154073","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739154073","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739154073,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTE1NDA3Mw==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T09:50:57Z","updated_at":"2020-12-05T09:50:57Z","author_association":"MEMBER","body":"I added a benchmark which times the single shot time to seal an off heap index creator, with a range of cardinalities, numbers of docs, and different assignment strategies of document ids to dictionary ids. One is the best case for roaring (sorted), the other is the worst case (round robin). The benchmark takes quite a long time to run so I only ran one fork and reduced the number of iterations, but this PR demonstrates a significant improvement:\r\n\r\nbefore\r\n```\r\nBenchmark                                          (assignment)  (cardinality)  (numDocs)  Mode  Cnt   Score   Error  Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10    1000000    ss    5   0.030 ± 0.003   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10   10000000    ss    5   0.374 ± 0.265   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10  100000000    ss    5   4.077 ± 0.191   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000    1000000    ss    5   0.090 ± 0.012   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000   10000000    ss    5   1.070 ± 0.304   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000  100000000    ss    5  11.465 ± 0.308   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000    1000000    ss    5   0.152 ± 0.040   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000   10000000    ss    5   1.639 ± 0.067   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000  100000000    ss    5  17.002 ± 0.217   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10    1000000    ss    5   0.021 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10   10000000    ss    5   0.212 ± 0.004   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10  100000000    ss    5   2.283 ± 0.109   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000    1000000    ss    5   0.075 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000   10000000    ss    5   0.296 ± 0.189   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000  100000000    ss    5   2.094 ± 0.284   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000    1000000    ss    5   0.093 ± 0.014   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000   10000000    ss    5   0.891 ± 0.327   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000  100000000    ss    5   3.736 ± 0.067   s/op\r\n```\r\n\r\nafter\r\n```\r\nBenchmark                                          (assignment)  (cardinality)  (numDocs)  Mode  Cnt  Score   Error  Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10    1000000    ss    5  0.021 ± 0.011   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10   10000000    ss    5  0.195 ± 0.026   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10  100000000    ss    5  1.966 ± 0.133   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000    1000000    ss    5  0.032 ± 0.009   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000   10000000    ss    5  0.287 ± 0.108   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000  100000000    ss    5  2.943 ± 0.176   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000    1000000    ss    5  0.057 ± 0.036   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000   10000000    ss    5  0.491 ± 0.131   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000  100000000    ss    5  5.502 ± 0.225   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10    1000000    ss    5  0.018 ± 0.005   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10   10000000    ss    5  0.159 ± 0.012   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10  100000000    ss    5  1.554 ± 0.028   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000    1000000    ss    5  0.021 ± 0.006   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000   10000000    ss    5  0.181 ± 0.028   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000  100000000    ss    5  1.580 ± 0.028   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000    1000000    ss    5  0.031 ± 0.003   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000   10000000    ss    5  0.193 ± 0.020   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000  100000000    ss    5  1.752 ± 0.089   s/op\r\n```\r\n\r\nPlease review the benchmark and let me know if you think the improvements look interesting - I am not going to be able to run cluster scale performance tests on this, but have prior experience of these APIs reducing resource cost in the system I wrote them for.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739154073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739241103","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739241103","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739241103,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTI0MTEwMw==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T11:51:41Z","updated_at":"2020-12-05T11:55:31Z","author_association":"MEMBER","body":"This PR allocates about the same amount as before. TL;DR: as of the [last commit](https://github.com/apache/incubator-pinot/pull/6320/commits/60861bc25110b94011091332a70a5e955e38405b) this is faster on this benchmark, and allocates between 40% and 100% (i.e. the same) as on the main branch.\r\n\r\nbefore\r\n```\r\n\r\nBenchmark                                                                           (assignment)  (cardinality)  (numDocs)  Mode  Cnt           Score           Error   Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10    1000000    ss    5           0.031 ±         0.009    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10    1000000    ss    5          11.935 ±         1.702  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10    1000000    ss    5     7164704.000 ±       355.929    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10   10000000    ss    5           0.408 ±         0.019    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10   10000000    ss    5          62.589 ±         5.249  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10   10000000    ss    5    71375131.200 ±     56512.643    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10   10000000    ss    5          70.263 ±       370.500  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10   10000000    ss    5    81788928.000 ± 431258859.992    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN             10   10000000    ss    5           0.190 ±         1.632  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN             10   10000000    ss    5      217683.200 ±   1874318.001    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10   10000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10   10000000    ss    5          16.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10  100000000    ss    5           4.193 ±         0.372    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10  100000000    ss    5         122.075 ±        12.717  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10  100000000    ss    5   712415345.600 ±     55691.481    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10  100000000    ss    5         120.923 ±        70.361  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10  100000000    ss    5   706320793.600 ± 422412916.188    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN             10  100000000    ss    5           1.682 ±         0.744  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN             10  100000000    ss    5     9832512.000 ±   4758932.013    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10  100000000    ss    5          18.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10  100000000    ss    5          35.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000    1000000    ss    5           0.092 ±         0.014    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000    1000000    ss    5          22.304 ±         0.194  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000    1000000    ss    5    14236214.400 ±      1270.764    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000   10000000    ss    5           1.010 ±         0.033    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000   10000000    ss    5          76.099 ±         1.422  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000   10000000    ss    5   139322380.800 ±     46579.496    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000   10000000    ss    5          83.271 ±       179.254  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000   10000000    ss    5   152672665.600 ± 328639423.512    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN           1000   10000000    ss    5           0.046 ±         0.399  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN           1000   10000000    ss    5       84628.800 ±    728679.490    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000   10000000    ss    5           4.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000   10000000    ss    5          29.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000  100000000    ss    5          11.633 ±         0.451    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000  100000000    ss    5         101.363 ±         2.794  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000  100000000    ss    5  1385939961.600 ±     55294.403    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000  100000000    ss    5         102.172 ±        30.699  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000  100000000    ss    5  1396703232.000 ± 398076377.621    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN           1000  100000000    ss    5           0.011 ±         0.052  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN           1000  100000000    ss    5      145384.000 ±    710672.251    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000  100000000    ss    5          37.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000  100000000    ss    5          37.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000    1000000    ss    5           0.150 ±         0.045    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000    1000000    ss    5          46.513 ±         4.210  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000    1000000    ss    5    33470916.800 ±     45678.008    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000    1000000    ss    5          41.258 ±       355.241  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000    1000000    ss    5    29779558.400 ± 256410978.784    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000    1000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000    1000000    ss    5          10.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000   10000000    ss    5           1.738 ±         0.386    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000   10000000    ss    5         125.776 ±        12.578  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000   10000000    ss    5   317429830.400 ±     64562.976    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000   10000000    ss    5         110.973 ±       164.658  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000   10000000    ss    5   279340646.400 ± 400867868.240    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000   10000000    ss    5           0.143 ±         0.755  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000   10000000    ss    5      354760.000 ±   1874217.875    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000   10000000    ss    5           6.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000   10000000    ss    5          57.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000  100000000    ss    5          17.156 ±         0.148    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000  100000000    ss    5         160.044 ±         1.436  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000  100000000    ss    5  3116823352.000 ±     45545.903    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000  100000000    ss    5         159.645 ±        26.123  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000  100000000    ss    5  3108818124.800 ± 482114724.008    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000  100000000    ss    5           0.026 ±         0.009  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000  100000000    ss    5      497857.600 ±    172824.399    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000  100000000    ss    5          68.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000  100000000    ss    5          73.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10    1000000    ss    5           0.020 ±         0.002    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10    1000000    ss    5           2.138 ±         0.034  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10    1000000    ss    5     1184286.400 ±       378.164    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10   10000000    ss    5           0.211 ±         0.001    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10   10000000    ss    5           9.535 ±         0.231  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10   10000000    ss    5     7565811.200 ±       502.228    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10   10000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10  100000000    ss    5           2.326 ±         0.034    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10  100000000    ss    5          20.862 ±         0.237  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10  100000000    ss    5    71689880.000 ±     56609.543    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM             10  100000000    ss    5          20.966 ±       110.550  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM             10  100000000    ss    5    72142028.800 ± 380384094.171    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM             10  100000000    ss    5           0.015 ±         0.127  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM             10  100000000    ss    5       50654.400 ±    436149.660    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10  100000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM             10  100000000    ss    5          15.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000    1000000    ss    5           0.074 ±         0.004    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000    1000000    ss    5          12.163 ±         0.138  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000    1000000    ss    5     7452222.400 ±      1019.460    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000   10000000    ss    5           0.275 ±         0.013    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000   10000000    ss    5          52.103 ±         1.439  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000   10000000    ss    5    50582414.400 ±     45991.882    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000   10000000    ss    5          42.028 ±       361.875  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000   10000000    ss    5    41104179.200 ± 353919379.167    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000   10000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000   10000000    ss    5           7.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000  100000000    ss    5           2.099 ±         0.251    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000  100000000    ss    5          35.099 ±         0.579  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000  100000000    ss    5   114648668.800 ±     55423.632    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000  100000000    ss    5          33.538 ±       117.892  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000  100000000    ss    5   109471334.400 ± 384807165.034    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM           1000  100000000    ss    5           0.026 ±         0.223  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM           1000  100000000    ss    5       83841.600 ±    721901.461    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000  100000000    ss    5           3.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000  100000000    ss    5          22.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000    1000000    ss    5           0.093 ±         0.011    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000    1000000    ss    5          20.878 ±         1.225  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000    1000000    ss    5    13544881.600 ±       191.637    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000   10000000    ss    5           0.886 ±         0.244    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000   10000000    ss    5          46.010 ±         1.042  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000   10000000    ss    5    74304364.800 ±     46037.614    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000   10000000    ss    5          24.963 ±       214.936  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000   10000000    ss    5    40684748.800 ± 350307956.931    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000   10000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000   10000000    ss    5           9.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000  100000000    ss    5           3.826 ±         0.052    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000  100000000    ss    5         100.180 ±         1.713  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000  100000000    ss    5   505538409.600 ±     96799.515    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000  100000000    ss    5          99.990 ±        79.926  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000  100000000    ss    5   504574771.200 ± 402985207.107    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM          10000  100000000    ss    5           0.329 ±         2.728  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM          10000  100000000    ss    5     1669273.600 ±  13844467.735    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000  100000000    ss    5          13.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000  100000000    ss    5          28.000                      ms\r\n```\r\n\r\nafter\r\n```\r\nBenchmark                                                                           (assignment)  (cardinality)  (numDocs)  Mode  Cnt           Score           Error   Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10    1000000    ss    5           0.029 ±         0.022    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10    1000000    ss    5          12.403 ±         1.117  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10    1000000    ss    5     7146006.400 ±     30985.905    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10   10000000    ss    5           0.188 ±         0.026    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10   10000000    ss    5          87.108 ±         4.467  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10   10000000    ss    5    71108766.400 ±     78261.812    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10   10000000    ss    5          95.241 ±       502.203  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10   10000000    ss    5    78014054.400 ± 411385221.551    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN             10   10000000    ss    5           1.101 ±         9.482  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN             10   10000000    ss    5      899424.000 ±   7744311.890    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10   10000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10   10000000    ss    5          25.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10  100000000    ss    5           1.947 ±         0.116    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10  100000000    ss    5         208.005 ±         7.371  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10  100000000    ss    5   709829240.000 ±     51497.263    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10  100000000    ss    5         201.399 ±        76.815  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10  100000000    ss    5   687026995.200 ± 247098882.679    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN             10  100000000    ss    5           2.224 ±        17.872  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN             10  100000000    ss    5     7549747.200 ±  60592304.093    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN             10  100000000    ss    5           4.788 ±        16.708  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN             10  100000000    ss    5    16357785.600 ±  57215688.521    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10  100000000    ss    5          17.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10  100000000    ss    5         256.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000    1000000    ss    5           0.040 ±         0.023    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000    1000000    ss    5          20.222 ±         1.683  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000    1000000    ss    5    11859302.400 ±     30898.399    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000   10000000    ss    5           0.293 ±         0.080    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000   10000000    ss    5         123.802 ±        11.035  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000   10000000    ss    5   113905795.200 ±     74048.230    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000   10000000    ss    5         108.134 ±       386.562  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000   10000000    ss    5   100663296.000 ± 360192977.778    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN           1000   10000000    ss    5           6.363 ±        34.666  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN           1000   10000000    ss    5     5872025.600 ±  32124407.719    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000   10000000    ss    5           3.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000   10000000    ss    5          35.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000  100000000    ss    5           2.898 ±         0.114    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000  100000000    ss    5         255.212 ±         6.003  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000  100000000    ss    5  1129770475.200 ±    124788.799    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000  100000000    ss    5         257.389 ±        62.089  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000  100000000    ss    5  1139592396.800 ± 287647003.971    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN           1000  100000000    ss    5           6.228 ±        32.860  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN           1000  100000000    ss    5    27472691.200 ± 144918864.230    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN           1000  100000000    ss    5           7.259 ±        12.981  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN           1000  100000000    ss    5    32086425.600 ±  56930036.769    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000  100000000    ss    5          24.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000  100000000    ss    5        1023.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000    1000000    ss    5           0.066 ±         0.037    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000    1000000    ss    5          72.601 ±         4.420  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000    1000000    ss    5    45097956.800 ±     48245.104    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000    1000000    ss    5          74.815 ±       644.181  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000    1000000    ss    5    47395635.200 ± 408090712.713    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000    1000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000    1000000    ss    5          14.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000   10000000    ss    5           0.557 ±         0.267    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000   10000000    ss    5         186.074 ±        47.551  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000   10000000    ss    5   223440820.800 ±     78325.490    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000   10000000    ss    5         138.524 ±       337.002  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000   10000000    ss    5   171127603.200 ± 416904247.274    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000   10000000    ss    5           1.756 ±        15.119  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000   10000000    ss    5     2097152.000 ±  18057111.182    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000   10000000    ss    5           5.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000   10000000    ss    5         298.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000  100000000    ss    5           5.260 ±         0.325    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000  100000000    ss    5         310.016 ±        14.954  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000  100000000    ss    5  2143068185.600 ±     64550.566    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000  100000000    ss    5         306.636 ±        42.750  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000  100000000    ss    5  2120220672.000 ± 339646533.455    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000  100000000    ss    5           8.017 ±         4.673  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000  100000000    ss    5    55364812.800 ±  30537345.918    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000  100000000    ss    5          39.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000  100000000    ss    5        4087.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10    1000000    ss    5           0.017 ±         0.006    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10    1000000    ss    5           2.146 ±         0.059  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10    1000000    ss    5     1175939.200 ±     30372.447    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10   10000000    ss    5           0.155 ±         0.001    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10   10000000    ss    5          10.358 ±         0.065  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10   10000000    ss    5     7563580.800 ±     30697.759    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10   10000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10  100000000    ss    5           1.548 ±         0.023    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10  100000000    ss    5          28.135 ±         0.251  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10  100000000    ss    5    71579300.800 ±     78187.548    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM             10  100000000    ss    5          28.278 ±       149.101  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM             10  100000000    ss    5    72142028.800 ± 380384094.171    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM             10  100000000    ss    5           0.028 ±         0.239  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM             10  100000000    ss    5       70888.000 ±    610367.059    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10  100000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM             10  100000000    ss    5          17.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000    1000000    ss    5           0.023 ±         0.032    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000    1000000    ss    5          13.814 ±         1.193  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000    1000000    ss    5     7669910.400 ±    300898.435    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000   10000000    ss    5           0.181 ±         0.037    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000   10000000    ss    5          66.605 ±         4.336  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000   10000000    ss    5    50803308.800 ±     76359.327    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000   10000000    ss    5          62.270 ±       536.163  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000   10000000    ss    5    47395635.200 ± 408090712.713    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000   10000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000   10000000    ss    5           8.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000  100000000    ss    5           1.568 ±         0.020    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000  100000000    ss    5          44.731 ±         0.340  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000  100000000    ss    5   114796513.600 ±     73178.185    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000  100000000    ss    5          43.084 ±       151.447  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000  100000000    ss    5   110729625.600 ± 389230235.896    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM           1000  100000000    ss    5           0.032 ±         0.275  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM           1000  100000000    ss    5       82238.400 ±    708097.426    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000  100000000    ss    5           3.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000  100000000    ss    5          24.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000    1000000    ss    5           0.034 ±         0.037    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000    1000000    ss    5          27.006 ±         2.034  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000    1000000    ss    5    15331587.200 ±     30511.819    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000   10000000    ss    5           0.186 ±         0.016    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000   10000000    ss    5          99.771 ±         3.199  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000   10000000    ss    5    76239598.400 ±     76412.193    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000   10000000    ss    5          53.525 ±       460.870  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000   10000000    ss    5    41523609.600 ± 357530801.403    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM          10000   10000000    ss    5           0.062 ±         0.531  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM          10000   10000000    ss    5       47827.200 ±    411806.616    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000   10000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000   10000000    ss    5           9.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000  100000000    ss    5           1.736 ±         0.045    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000  100000000    ss    5         184.429 ±         5.794  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000  100000000    ss    5   507845612.800 ±     59214.207    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000  100000000    ss    5         171.683 ±        16.667  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000  100000000    ss    5   472698060.800 ±  32099022.960    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM          10000  100000000    ss    5           0.901 ±         4.227  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM          10000  100000000    ss    5     2492544.000 ±  11744141.868    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000  100000000    ss    5          10.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000  100000000    ss    5          49.000                      ms\r\n```\r\n\r\nAllocation can be reduced and get a speed gain by guessing the approximate sizes of the bitmaps, and by reusing a single writer.\r\n\r\nlatest commit\r\n```\r\nBenchmark                                          (assignment)  (cardinality)  (numDocs)  Mode  Cnt  Score   Error  Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10    1000000    ss    5  0.021 ± 0.038   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10   10000000    ss    5  0.175 ± 0.015   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10  100000000    ss    5  1.780 ± 0.117   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000    1000000    ss    5  0.024 ± 0.003   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000   10000000    ss    5  0.243 ± 0.035   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000  100000000    ss    5  2.711 ± 0.219   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000    1000000    ss    5  0.052 ± 0.024   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000   10000000    ss    5  0.539 ± 0.107   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000  100000000    ss    5  4.500 ± 0.246   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10    1000000    ss    5  0.016 ± 0.003   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10   10000000    ss    5  0.148 ± 0.005   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10  100000000    ss    5  1.412 ± 0.026   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000    1000000    ss    5  0.021 ± 0.026   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000   10000000    ss    5  0.165 ± 0.019   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000  100000000    ss    5  1.437 ± 0.021   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000    1000000    ss    5  0.022 ± 0.005   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000   10000000    ss    5  0.172 ± 0.022   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000  100000000    ss    5  1.581 ± 0.095  s/op\r\n```\r\n\r\n```\r\nBenchmark                                                                           (assignment)  (cardinality)  (numDocs)  Mode  Cnt           Score           Error   Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10    1000000    ss    5           0.017 ±         0.002    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10    1000000    ss    5          12.633 ±         0.155  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10    1000000    ss    5     6986539.200 ±     30442.010    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10   10000000    ss    5           0.176 ±         0.012    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10   10000000    ss    5          87.350 ±         1.202  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10   10000000    ss    5    69659446.400 ±     52302.495    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10   10000000    ss    5         110.528 ±       582.795  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10   10000000    ss    5    88499814.400 ± 466642710.250    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10   10000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10   10000000    ss    5          12.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN             10  100000000    ss    5           1.783 ±         0.104    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN             10  100000000    ss    5         214.505 ±         7.603  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN             10  100000000    ss    5   695378540.800 ±    139270.627    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN             10  100000000    ss    5         214.143 ±       104.774  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN             10  100000000    ss    5   694576742.400 ± 352155335.840    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN             10  100000000    ss    5           1.321 ±        11.370  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN             10  100000000    ss    5     4256358.400 ±  36648529.462    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN             10  100000000    ss    5           3.111 ±         7.794  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN             10  100000000    ss    5    10067219.200 ±  25155045.841    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN             10  100000000    ss    5          23.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN             10  100000000    ss    5         275.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000    1000000    ss    5           0.025 ±         0.022    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000    1000000    ss    5          14.770 ±         1.072  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000    1000000    ss    5     8325694.400 ±     30481.121    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000   10000000    ss    5           0.244 ±         0.040    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000   10000000    ss    5          92.415 ±         4.679  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000   10000000    ss    5    80292582.400 ±     51274.216    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000   10000000    ss    5          69.550 ±       366.944  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000   10000000    ss    5    60817408.000 ± 320787006.897    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000   10000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000   10000000    ss    5          22.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN           1000  100000000    ss    5           2.429 ±         0.248    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN           1000  100000000    ss    5         200.418 ±        13.277  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN           1000  100000000    ss    5   787876115.200 ±    256741.280    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN           1000  100000000    ss    5         193.777 ±       130.177  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN           1000  100000000    ss    5   762943897.600 ± 544097645.991    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN           1000  100000000    ss    5           1.467 ±        12.630  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN           1000  100000000    ss    5     5872025.600 ±  50559911.310    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN           1000  100000000    ss    5           4.343 ±         9.498  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN           1000  100000000    ss    5    17196646.400 ±  38474784.725    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN           1000  100000000    ss    5          23.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN           1000  100000000    ss    5         746.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000    1000000    ss    5           0.054 ±         0.025    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000    1000000    ss    5          29.477 ±         2.118  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000    1000000    ss    5    17577993.600 ±     48406.649    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000    1000000    ss    5          30.144 ±       259.553  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000    1000000    ss    5    18035507.200 ± 155291156.165    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000    1000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000    1000000    ss    5          12.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000   10000000    ss    5           0.481 ±         0.050    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000   10000000    ss    5         205.551 ±        10.013  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000   10000000    ss    5   230199414.400 ±    124257.456    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000   10000000    ss    5         200.550 ±       150.026  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000   10000000    ss    5   224395264.000 ± 162413652.372    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN          10000   10000000    ss    5           1.853 ±        15.957  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN          10000   10000000    ss    5     2097152.000 ±  18057111.182    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000   10000000    ss    5          11.056 ±        41.589  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000   10000000    ss    5    12379680.000 ±  46553344.432    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000   10000000    ss    5          11.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000   10000000    ss    5         304.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                      ROUND_ROBIN          10000  100000000    ss    5           4.505 ±         0.168    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                       ROUND_ROBIN          10000  100000000    ss    5         220.361 ±         6.174  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm                  ROUND_ROBIN          10000  100000000    ss    5  1348977696.000 ±     48374.015    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space              ROUND_ROBIN          10000  100000000    ss    5         220.473 ±        89.136  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm         ROUND_ROBIN          10000  100000000    ss    5  1350146457.600 ± 565202002.425    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen                 ROUND_ROBIN          10000  100000000    ss    5           0.719 ±         6.193  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Old_Gen.norm            ROUND_ROBIN          10000  100000000    ss    5     4404019.200 ±  37919933.482    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space          ROUND_ROBIN          10000  100000000    ss    5           5.615 ±         5.115  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm     ROUND_ROBIN          10000  100000000    ss    5    34393292.800 ±  31587043.999    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                            ROUND_ROBIN          10000  100000000    ss    5          36.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                             ROUND_ROBIN          10000  100000000    ss    5        2728.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10    1000000    ss    5           0.022 ±         0.037    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10    1000000    ss    5           2.066 ±         0.233  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10    1000000    ss    5     1148363.200 ±     30594.344    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10   10000000    ss    5           0.148 ±         0.003    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10   10000000    ss    5          10.223 ±         0.105  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10   10000000    ss    5     7390347.200 ±     30613.010    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10   10000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM             10  100000000    ss    5           1.410 ±         0.015    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM             10  100000000    ss    5          29.172 ±         0.183  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM             10  100000000    ss    5    70052542.400 ±    137755.129    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM             10  100000000    ss    5          29.999 ±       158.176  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM             10  100000000    ss    5    72142028.800 ± 380384094.171    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM             10  100000000    ss    5           0.034 ±         0.293  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM             10  100000000    ss    5       81944.000 ±    705562.553    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM             10  100000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM             10  100000000    ss    5          16.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000    1000000    ss    5           0.025 ±         0.040    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000    1000000    ss    5          12.373 ±         1.158  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000    1000000    ss    5     6932864.000 ±     30927.743    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000   10000000    ss    5           0.164 ±         0.015    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000   10000000    ss    5          66.973 ±         1.648  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000   10000000    ss    5    49529336.000 ±     76261.103    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000   10000000    ss    5          55.023 ±       473.763  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000   10000000    ss    5    41104179.200 ± 353919379.167    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000   10000000    ss    5           1.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000   10000000    ss    5           8.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM           1000  100000000    ss    5           1.434 ±         0.018    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM           1000  100000000    ss    5          46.177 ±         0.422  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM           1000  100000000    ss    5   112162459.200 ±     73253.706    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM           1000  100000000    ss    5          44.479 ±       156.352  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM           1000  100000000    ss    5   108213043.200 ± 380384094.171    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM           1000  100000000    ss    5           0.033 ±         0.282  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM           1000  100000000    ss    5       80251.200 ±    686689.981    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM           1000  100000000    ss    5           3.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM           1000  100000000    ss    5          23.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000    1000000    ss    5           0.023 ±         0.011    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000    1000000    ss    5          20.115 ±         0.796  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000    1000000    ss    5    11170392.000 ±     30879.694    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000    1000000    ss    5             ≈ 0                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000   10000000    ss    5           0.167 ±         0.016    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000   10000000    ss    5          91.921 ±         7.404  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000   10000000    ss    5    69227684.800 ±     52043.344    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000   10000000    ss    5         114.528 ±       604.014  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000   10000000    ss    5    87241523.200 ± 459999369.696    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000   10000000    ss    5           2.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000   10000000    ss    5          17.000                      ms\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal                                   SORTED_UNIFORM          10000  100000000    ss    5           1.603 ±         0.123    s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate                    SORTED_UNIFORM          10000  100000000    ss    5         190.115 ±         9.171  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.alloc.rate.norm               SORTED_UNIFORM          10000  100000000    ss    5   495109988.800 ±    101261.939    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space           SORTED_UNIFORM          10000  100000000    ss    5         197.630 ±       142.159  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Eden_Space.norm      SORTED_UNIFORM          10000  100000000    ss    5   514641100.800 ± 368630518.221    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space       SORTED_UNIFORM          10000  100000000    ss    5           0.842 ±         4.357  MB/sec\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.churn.G1_Survivor_Space.norm  SORTED_UNIFORM          10000  100000000    ss    5     2221792.000 ±  11637986.706    B/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.count                         SORTED_UNIFORM          10000  100000000    ss    5          11.000                  counts\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal:·gc.time                          SORTED_UNIFORM          10000  100000000    ss    5          49.000                      ms\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739241103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739308749","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739308749","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739308749,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTMwODc0OQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T15:39:02Z","updated_at":"2020-12-05T15:39:02Z","author_association":"MEMBER","body":"This looks promising both from performance and memory allocation. @Jackie-Jiang can you please look into this?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739308749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739398210","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739398210","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739398210,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTM5ODIxMA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T20:17:07Z","updated_at":"2020-12-05T20:17:07Z","author_association":"CONTRIBUTOR","body":"Find this blog from @richardstartin explaining the optimization very well: https://richardstartin.github.io/posts/roaringbitmaps-construction-performance","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739398210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739415872","html_url":"https://github.com/apache/pinot/pull/6322#issuecomment-739415872","issue_url":"https://api.github.com/repos/apache/pinot/issues/6322","id":739415872,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTQxNTg3Mg==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T21:04:09Z","updated_at":"2020-12-05T21:04:09Z","author_association":"CONTRIBUTOR","body":"> Is the `_consumerState` a string or a well-defined set of values? If we are building an API, should we consider putting in a well-defined set of values in there, so that we can build (say) a management platform?\r\n> \r\n> Also, is a map for the output better (instead of an array):\r\n> \r\n> ```\r\n> {\r\n> \"testTable__0__1__20201204T2030Z\" : {\r\n>   \"idealstate\" : \"CONSUMING\",\r\n>   \"externalView\" : \"ERROR\",\r\n>   \"maxOffsetConsumed\" : \"somevalueComparable\",\r\n>   \"consumerState\" : \"CONSUMING\" // Can be one of CONSUMING, CATCHING_UP,  BUILDING_SEGMENT, etc..(TBD)\r\n> },\r\n> \"testTable__0__2__whatever\" : {\r\n> },\r\n> .\r\n> .\r\n> }\r\n> ```\r\n\r\nIt is a well defined set of values, containing CONSUMING and NOT_CONSUMING for now. The controller API's output is a Map. For each segment there's an array of map, to return info per replica.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739415872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739424522","html_url":"https://github.com/apache/pinot/pull/6323#issuecomment-739424522","issue_url":"https://api.github.com/repos/apache/pinot/issues/6323","id":739424522,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTQyNDUyMg==","user":{"login":"mayankshriv","id":12615885,"node_id":"MDQ6VXNlcjEyNjE1ODg1","avatar_url":"https://avatars.githubusercontent.com/u/12615885?v=4","gravatar_id":"","url":"https://api.github.com/users/mayankshriv","html_url":"https://github.com/mayankshriv","followers_url":"https://api.github.com/users/mayankshriv/followers","following_url":"https://api.github.com/users/mayankshriv/following{/other_user}","gists_url":"https://api.github.com/users/mayankshriv/gists{/gist_id}","starred_url":"https://api.github.com/users/mayankshriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayankshriv/subscriptions","organizations_url":"https://api.github.com/users/mayankshriv/orgs","repos_url":"https://api.github.com/users/mayankshriv/repos","events_url":"https://api.github.com/users/mayankshriv/events{/privacy}","received_events_url":"https://api.github.com/users/mayankshriv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T22:25:48Z","updated_at":"2020-12-05T22:25:48Z","author_association":"CONTRIBUTOR","body":"Thanks for keeping the backward compatibility. We can document and retire the previous version in future release.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739424522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739427884","html_url":"https://github.com/apache/pinot/pull/6321#issuecomment-739427884","issue_url":"https://api.github.com/repos/apache/pinot/issues/6321","id":739427884,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTQyNzg4NA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T23:04:23Z","updated_at":"2020-12-05T23:23:58Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=h1) Report\n> Merging [#6321](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=desc) (abbac5d) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.62%`.\n> The diff coverage is `68.40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6321/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6321      +/-   ##\n==========================================\n+ Coverage   66.44%   74.07%   +7.62%     \n==========================================\n  Files        1075     1281     +206     \n  Lines       54773    61798    +7025     \n  Branches     8168     8981     +813     \n==========================================\n+ Hits        36396    45776    +9380     \n+ Misses      15700    13065    -2635     \n- Partials     2677     2957     +280     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.64% <52.01%> (?)` | |\n| unittests | `65.35% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `98.27% <ø> (-1.73%)` | :arrow_down: |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1067 more](https://codecov.io/gh/apache/incubator-pinot/pull/6321/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=footer). Last update [8ecfd4a...abbac5d](https://codecov.io/gh/apache/incubator-pinot/pull/6321?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739427884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739429849","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739429849","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739429849,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTQyOTg0OQ==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-05T23:25:16Z","updated_at":"2020-12-05T23:25:16Z","author_association":"MEMBER","body":"@Jackie-Jiang with the last commit there was another performance improvement and a reduction in allocation rate following your suggestions. I have also tried to adhere to the style guidance.\r\n\r\nbefore\r\n```\r\nBenchmark                                          (assignment)  (cardinality)  (numDocs)  Mode  Cnt   Score   Error  Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10    1000000    ss    5   0.030 ± 0.003   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10   10000000    ss    5   0.374 ± 0.265   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10  100000000    ss    5   4.077 ± 0.191   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000    1000000    ss    5   0.090 ± 0.012   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000   10000000    ss    5   1.070 ± 0.304   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000  100000000    ss    5  11.465 ± 0.308   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000    1000000    ss    5   0.152 ± 0.040   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000   10000000    ss    5   1.639 ± 0.067   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000  100000000    ss    5  17.002 ± 0.217   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10    1000000    ss    5   0.021 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10   10000000    ss    5   0.212 ± 0.004   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10  100000000    ss    5   2.283 ± 0.109   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000    1000000    ss    5   0.075 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000   10000000    ss    5   0.296 ± 0.189   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000  100000000    ss    5   2.094 ± 0.284   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000    1000000    ss    5   0.093 ± 0.014   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000   10000000    ss    5   0.891 ± 0.327   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000  100000000    ss    5   3.736 ± 0.067   s/op\r\n```\r\n\r\nafter\r\n```\r\nBenchmark                                          (assignment)  (cardinality)  (numDocs)  Mode  Cnt  Score   Error  Units\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10    1000000    ss    5  0.016 ± 0.004   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10   10000000    ss    5  0.179 ± 0.021   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN             10  100000000    ss    5  1.711 ± 0.014   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000    1000000    ss    5  0.024 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000   10000000    ss    5  0.233 ± 0.034   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN           1000  100000000    ss    5  2.118 ± 0.007   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000    1000000    ss    5  0.048 ± 0.025   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000   10000000    ss    5  0.401 ± 0.090   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal     ROUND_ROBIN          10000  100000000    ss    5  3.575 ± 0.007   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10    1000000    ss    5  0.014 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10   10000000    ss    5  0.123 ± 0.004   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM             10  100000000    ss    5  1.444 ± 0.101   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000    1000000    ss    5  0.018 ± 0.002   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000   10000000    ss    5  0.147 ± 0.029   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM           1000  100000000    ss    5  1.513 ± 0.082   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000    1000000    ss    5  0.022 ± 0.007   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000   10000000    ss    5  0.175 ± 0.022   s/op\r\nBenchmarkOffheapBitmapInvertedIndexCreator.seal  SORTED_UNIFORM          10000  100000000    ss    5  1.350 ± 0.040   s/op\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739429849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739571429","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739571429","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739571429,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTU3MTQyOQ==","user":{"login":"richardstartin","id":16439049,"node_id":"MDQ6VXNlcjE2NDM5MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/16439049?v=4","gravatar_id":"","url":"https://api.github.com/users/richardstartin","html_url":"https://github.com/richardstartin","followers_url":"https://api.github.com/users/richardstartin/followers","following_url":"https://api.github.com/users/richardstartin/following{/other_user}","gists_url":"https://api.github.com/users/richardstartin/gists{/gist_id}","starred_url":"https://api.github.com/users/richardstartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardstartin/subscriptions","organizations_url":"https://api.github.com/users/richardstartin/orgs","repos_url":"https://api.github.com/users/richardstartin/repos","events_url":"https://api.github.com/users/richardstartin/events{/privacy}","received_events_url":"https://api.github.com/users/richardstartin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-06T21:59:50Z","updated_at":"2020-12-06T21:59:50Z","author_association":"MEMBER","body":"@Jackie-Jiang since the branch is churning somewhat do you mind if I squash the commits to what we have so far and force push?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739571429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739720163","html_url":"https://github.com/apache/pinot/pull/6326#issuecomment-739720163","issue_url":"https://api.github.com/repos/apache/pinot/issues/6326","id":739720163,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTcyMDE2Mw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T07:11:59Z","updated_at":"2020-12-15T05:29:29Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=h1) Report\n> Merging [#6326](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=desc) (8e49dda) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **increase** coverage by `7.61%`.\n> The diff coverage is `68.27%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6326/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6326      +/-   ##\n==========================================\n+ Coverage   66.44%   74.06%   +7.61%     \n==========================================\n  Files        1075     1291     +216     \n  Lines       54773    62160    +7387     \n  Branches     8168     9014     +846     \n==========================================\n+ Hits        36396    46039    +9643     \n+ Misses      15700    13156    -2544     \n- Partials     2677     2965     +288     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `45.58% <51.88%> (?)` | |\n| unittests | `65.30% <45.12%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `44.44% <0.00%> (-4.40%)` | :arrow_down: |\n| [...not/common/assignment/InstancePartitionsUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vYXNzaWdubWVudC9JbnN0YW5jZVBhcnRpdGlvbnNVdGlscy5qYXZh) | `78.57% <ø> (+5.40%)` | :arrow_up: |\n| [.../apache/pinot/common/exception/QueryException.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZXhjZXB0aW9uL1F1ZXJ5RXhjZXB0aW9uLmphdmE=) | `90.27% <ø> (+5.55%)` | :arrow_up: |\n| [...pinot/common/function/AggregationFunctionType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vQWdncmVnYXRpb25GdW5jdGlvblR5cGUuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [.../pinot/common/function/DateTimePatternHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRGF0ZVRpbWVQYXR0ZXJuSGFuZGxlci5qYXZh) | `83.33% <ø> (ø)` | |\n| [...ot/common/function/FunctionDefinitionRegistry.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25EZWZpbml0aW9uUmVnaXN0cnkuamF2YQ==) | `88.88% <ø> (+44.44%)` | :arrow_up: |\n| [...org/apache/pinot/common/function/FunctionInfo.java](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vZnVuY3Rpb24vRnVuY3Rpb25JbmZvLmphdmE=) | `100.00% <ø> (ø)` | |\n| ... and [1085 more](https://codecov.io/gh/apache/incubator-pinot/pull/6326/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=footer). Last update [8ecfd4a...8e49dda](https://codecov.io/gh/apache/incubator-pinot/pull/6326?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739720163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739781501","html_url":"https://github.com/apache/pinot/pull/6320#issuecomment-739781501","issue_url":"https://api.github.com/repos/apache/pinot/issues/6320","id":739781501,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTc4MTUwMQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T09:07:03Z","updated_at":"2020-12-07T09:07:03Z","author_association":"MEMBER","body":"> @Jackie-Jiang since the branch is churning somewhat do you mind if I squash the commits to what we have so far and force push?\r\n\r\nit's ok to do that if it helps you. Note that, we automatically perform squash and merge during the final merge. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739781501/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739889947","html_url":"https://github.com/apache/pinot/pull/5787#issuecomment-739889947","issue_url":"https://api.github.com/repos/apache/pinot/issues/5787","id":739889947,"node_id":"MDEyOklzc3VlQ29tbWVudDczOTg4OTk0Nw==","user":{"login":"mangrrua","id":17813993,"node_id":"MDQ6VXNlcjE3ODEzOTkz","avatar_url":"https://avatars.githubusercontent.com/u/17813993?v=4","gravatar_id":"","url":"https://api.github.com/users/mangrrua","html_url":"https://github.com/mangrrua","followers_url":"https://api.github.com/users/mangrrua/followers","following_url":"https://api.github.com/users/mangrrua/following{/other_user}","gists_url":"https://api.github.com/users/mangrrua/gists{/gist_id}","starred_url":"https://api.github.com/users/mangrrua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mangrrua/subscriptions","organizations_url":"https://api.github.com/users/mangrrua/orgs","repos_url":"https://api.github.com/users/mangrrua/repos","events_url":"https://api.github.com/users/mangrrua/events{/privacy}","received_events_url":"https://api.github.com/users/mangrrua/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T12:32:29Z","updated_at":"2020-12-07T12:32:29Z","author_association":"CONTRIBUTOR","body":"> hi @mangrrua\r\n> \r\n> \"streaming endpoints\" for spark connector currently this feature is available ?\r\n\r\nNo","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/739889947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740124961","html_url":"https://github.com/apache/pinot/issues/6328#issuecomment-740124961","issue_url":"https://api.github.com/repos/apache/pinot/issues/6328","id":740124961,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MDEyNDk2MQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T19:18:25Z","updated_at":"2020-12-07T19:18:25Z","author_association":"MEMBER","body":"Makes sense, do you want to take it up?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740124961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740125975","html_url":"https://github.com/apache/pinot/pull/6327#issuecomment-740125975","issue_url":"https://api.github.com/repos/apache/pinot/issues/6327","id":740125975,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MDEyNTk3NQ==","user":{"login":"npawar","id":19693933,"node_id":"MDQ6VXNlcjE5NjkzOTMz","avatar_url":"https://avatars.githubusercontent.com/u/19693933?v=4","gravatar_id":"","url":"https://api.github.com/users/npawar","html_url":"https://github.com/npawar","followers_url":"https://api.github.com/users/npawar/followers","following_url":"https://api.github.com/users/npawar/following{/other_user}","gists_url":"https://api.github.com/users/npawar/gists{/gist_id}","starred_url":"https://api.github.com/users/npawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/npawar/subscriptions","organizations_url":"https://api.github.com/users/npawar/orgs","repos_url":"https://api.github.com/users/npawar/repos","events_url":"https://api.github.com/users/npawar/events{/privacy}","received_events_url":"https://api.github.com/users/npawar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T19:20:19Z","updated_at":"2020-12-07T19:20:19Z","author_association":"CONTRIBUTOR","body":"Thanks @shahsank3t ! Few missing tooltips and comments:\r\n\r\n1. Add tooltip for Estimated size to individual table page\r\n2. Add tooltip for Reported size, estimated size, status to the Tables page\r\n3. Transform functions link broken on Add Offline page\r\n4. Link for Indexing and Encoding missing\r\n5. For some links (noticed in Filter and transform function, and all links on REALTIME table page as well), it is opening in same page instead of new tab. Can we make it always open in new tab?\r\n6. Relocate to tag tooltip missing\r\n7. StreamConfigs tooltip appears far away and disappears when trying to click\r\n8. Repeat all tooltips from the OFFLINE table to the REALTIME table form\r\n9. The “i”  in the purple circle UI for the links was not very intuitive for me. I kept expecting some info to pop up. Any other way to show it? The “click here for details” you’ve added to some tooltips is great.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740125975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740126006","html_url":"https://github.com/apache/pinot/issues/6328#issuecomment-740126006","issue_url":"https://api.github.com/repos/apache/pinot/issues/6328","id":740126006,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MDEyNjAwNg==","user":{"login":"dongxiaoman","id":11821736,"node_id":"MDQ6VXNlcjExODIxNzM2","avatar_url":"https://avatars.githubusercontent.com/u/11821736?v=4","gravatar_id":"","url":"https://api.github.com/users/dongxiaoman","html_url":"https://github.com/dongxiaoman","followers_url":"https://api.github.com/users/dongxiaoman/followers","following_url":"https://api.github.com/users/dongxiaoman/following{/other_user}","gists_url":"https://api.github.com/users/dongxiaoman/gists{/gist_id}","starred_url":"https://api.github.com/users/dongxiaoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dongxiaoman/subscriptions","organizations_url":"https://api.github.com/users/dongxiaoman/orgs","repos_url":"https://api.github.com/users/dongxiaoman/repos","events_url":"https://api.github.com/users/dongxiaoman/events{/privacy}","received_events_url":"https://api.github.com/users/dongxiaoman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T19:20:23Z","updated_at":"2020-12-07T19:20:23Z","author_association":"CONTRIBUTOR","body":"Sure, I can help with that. It would be a start to contribute","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740126006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740188793","html_url":"https://github.com/apache/pinot/pull/6321#issuecomment-740188793","issue_url":"https://api.github.com/repos/apache/pinot/issues/6321","id":740188793,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MDE4ODc5Mw==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-07T21:24:40Z","updated_at":"2020-12-07T21:24:40Z","author_association":"CONTRIBUTOR","body":"overall lgtm, can we add a test for the gzipped json file?\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/740188793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]