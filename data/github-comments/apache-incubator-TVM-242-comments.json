[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783849908","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-783849908","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":783849908,"node_id":"MDEyOklzc3VlQ29tbWVudDc4Mzg0OTkwOA==","user":{"login":"zhuwenxi","id":4969797,"node_id":"MDQ6VXNlcjQ5Njk3OTc=","avatar_url":"https://avatars.githubusercontent.com/u/4969797?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuwenxi","html_url":"https://github.com/zhuwenxi","followers_url":"https://api.github.com/users/zhuwenxi/followers","following_url":"https://api.github.com/users/zhuwenxi/following{/other_user}","gists_url":"https://api.github.com/users/zhuwenxi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuwenxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuwenxi/subscriptions","organizations_url":"https://api.github.com/users/zhuwenxi/orgs","repos_url":"https://api.github.com/users/zhuwenxi/repos","events_url":"https://api.github.com/users/zhuwenxi/events{/privacy}","received_events_url":"https://api.github.com/users/zhuwenxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T03:25:43Z","updated_at":"2021-02-23T03:25:43Z","author_association":"CONTRIBUTOR","body":"> Possible way to resolve the issue:\r\n> \r\n> * Introduce the packed_arg_alloca intrinsic that is only gauranteed to be valid for the specific packed func call\r\n>   \r\n>   * Skip the lifting alloca step, and keep alloca always next to the func call\r\n> * Update LLVM codegen to insert alloca always to the beginning of the current function block\r\n> * Update StackVM and C codegen to support things accordingly\r\n\r\n@tqchen , I have a few questions about the implementation detail of your proposal. That is:\r\n\r\n1. What is the detailed definition or semantic of `packed_arg_alloca` intrinsic, and how to guarantee it is valid only for the specific packed func call?\r\n    How does the generated tir look like? Something like:\r\n    `let stack_1 = @tir.packed_arg_alloca(...)` \r\n    `tir.tvm_call_packed_lowered(\"tvm.contrib.cblas.matmul\", stack_1)`\r\n    `let stack_2 = @tir.packed_arg_alloca(...)`\r\n    `tir.tvm_call_packed_lowered(\"tvm.contrib.cblas.matmul\", stack_2)`\r\n2. How does \"insert alloca always to the beginning of the current function block\" work?  \r\n    According to my understanding, stack is used to communicate parameters between caller and callee, so it is definitely required to be allocated & assigned parameters at the call-site. Allocating stack at the beginning of a function does not make sense according to my point of view. Could you further explain this a little bit more?  ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783849908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783872081","html_url":"https://github.com/apache/tvm/issues/4102#issuecomment-783872081","issue_url":"https://api.github.com/repos/apache/tvm/issues/4102","id":783872081,"node_id":"MDEyOklzc3VlQ29tbWVudDc4Mzg3MjA4MQ==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T04:39:59Z","updated_at":"2021-02-23T04:39:59Z","author_association":"CONTRIBUTOR","body":"@wx3000 understand the complexity around control flow ops. But, I am worried about two copies of independent  ops across parsers. Understanding the complexity of existing parser and to avoid redundant ops across parsers here are my thoughts.\r\n\r\n- Version independent ops implementation can move to a common file (tf_op.py)\r\n- Common entry point for the parser from_tensorflow with graphdef or concrete_function (tensorflow.py).\r\n- Quick inspection of graph can decide the parser version to use (TF1.x / TF2.x).\r\n- Parser and corresponding exclusive ops can go to individual parsers (tf_parser_1_x.py & tf_parser_2_x.py)\r\nOr the tf_parser_x_x. py can hold only the parser and tf_op.py can hold all operator implementations.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783872081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783901662","html_url":"https://github.com/apache/tvm/pull/7489#issuecomment-783901662","issue_url":"https://api.github.com/repos/apache/tvm/issues/7489","id":783901662,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MzkwMTY2Mg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T05:18:19Z","updated_at":"2021-02-23T05:18:19Z","author_association":"MEMBER","body":"Thanks, can you add a test case? It can be the one from that issue.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783901662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783929299","html_url":"https://github.com/apache/tvm/pull/7347#issuecomment-783929299","issue_url":"https://api.github.com/repos/apache/tvm/issues/7347","id":783929299,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MzkyOTI5OQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T05:53:45Z","updated_at":"2021-02-23T05:53:45Z","author_association":"MEMBER","body":"Sorry I some how missed the notification for this one, LGTM thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/783929299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784098499","html_url":"https://github.com/apache/tvm/pull/7425#issuecomment-784098499","issue_url":"https://api.github.com/repos/apache/tvm/issues/7425","id":784098499,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDA5ODQ5OQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T10:28:12Z","updated_at":"2021-02-23T10:34:56Z","author_association":"MEMBER","body":"> Thanks @masahi ! the change has addressed my previous comments. Please add testcases to transforms that touches requires special While handling to cover these passes\r\n\r\nYes, so far only a test case to prevent invalid vectorization is added. I'm still trying to figure out what `StorageRewrite` is doing. This pass is a beast :slightly_smiling_face: I think it is doing something like storage coalescing etc, and since this is purely for optimization (I think), I'm not sure what the \"failure\" means in this case.\r\n\r\nFor example, we should definitely prevent invalid optimization. But I so far I'm having hard timing coming up with an example program that could fail. Anyone have any idea? Another example of failure is a missed optimization, I have an example where `For` loop coalesces but `While` loop does not https://github.com/apache/tvm/pull/7425#issuecomment-779798238\r\n\r\nI've also added a non trivial change to `StorageAccessVisitor` following the existing visitor for `IfThenElseNode`, I need to look at this class and its derived classes `ThreadSyncPlanner` etc","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784098499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784154807","html_url":"https://github.com/apache/tvm/pull/7489#issuecomment-784154807","issue_url":"https://api.github.com/repos/apache/tvm/issues/7489","id":784154807,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDE1NDgwNw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T12:07:32Z","updated_at":"2021-02-23T12:07:32Z","author_association":"MEMBER","body":"thanks @xutianming ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784154807/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784158943","html_url":"https://github.com/apache/tvm/pull/7469#issuecomment-784158943","issue_url":"https://api.github.com/repos/apache/tvm/issues/7469","id":784158943,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDE1ODk0Mw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T12:15:07Z","updated_at":"2021-02-23T12:15:07Z","author_association":"MEMBER","body":"> > > Hi, this is a good and simple idea to skip the expression too complex. I just wonder if there is a case that many basic arithmetic operations composited together, and many of them can be simplified. But, here using a counter to calculate the complexity of expression and skip it if greater than a const, say 256 in the PR. Is it appropriate?\r\n> > \r\n> > \r\n> > Good question. Here assumes even we could simplify many basic arithmetic operations we still give up because it will cost hours+ to compile, compared with optimization, we choose to maintain users' experience.\r\n> \r\n> Thanks for the clarity, user experience is always the first choice. But, I think it does not consume much time compare to symbolic expressions which cannot be simplified at all (in your TFLite case).\r\n\r\nAh...unfortunately, In fact, in my tflite case, our compile time almost costs on the `rewrite_simplify` and `canonical_simplify`. If you have interest,  you could  try to patch #7456, remove the expression complexity restrict and run TFLite mobilenet v2 qat model (in tests/python/frontend/tflite/test_forward.py). We maybe hang hours+ to complete compling... so indeed it consume much time to compile.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784158943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784192951","html_url":"https://github.com/apache/tvm/pull/7425#issuecomment-784192951","issue_url":"https://api.github.com/repos/apache/tvm/issues/7425","id":784192951,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDE5Mjk1MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T13:12:32Z","updated_at":"2021-02-23T13:12:32Z","author_association":"MEMBER","body":"Thanks @masahi . The primary thing to address is correctness(e.g. we should not generate invalid code). It is totally fine to not optimize While well. So the test coverage is mainly to make sure that the case is handled correctly. Please let us know once you confirmed the storageaccess and rewrite, then we can revisit and merge","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784192951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784223136","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-784223136","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":784223136,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDIyMzEzNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T14:01:11Z","updated_at":"2021-02-23T14:12:48Z","author_association":"MEMBER","body":"The function will looks like\r\n```\r\nfn myfunc() {\r\n   for i in range(10):\r\n       stack_tcode = @tir.packed_arg_alloca(\"arg_tcode\", 8)\r\n       stack_value = @tir.packed_arg_alloca(\"arg_value\", 8)\r\n       tir.tvm_call_packed_lowered(\"tvm.contrib.cblas.matmul\", stack_1)\r\n}\r\n```\r\n\r\nIn the LLVM code generator, we want the compiled code to look like\r\n\r\n```\r\nfn myfunc() {\r\nbegin:\r\n    stack_tcode0 = alloca(\"arg_tcode\", 8)\r\n    stack_value1 = alloca(\"arg_value\", 8)\r\n\r\nloop:\r\n   for i in range(10):\r\n       tir.tvm_call_packed_lowered(\"tvm.contrib.cblas.matmul\", stack_1)\r\n}\r\n```\r\n\r\nActually, the main thing is that we could lift the semantics of the `tir.tvm_stack_alloca`  to allow it to appear in most places, but allocation happens in the beginning of the function.\r\n\r\nThis can be done by jumping to the function begin basic block for insertion. https://github.com/apache/tvm/blob/81d9f11ab87dc3ef5fc906aa6ca23737885f7b27/src/target/llvm/codegen_llvm.h#L173\r\nNote that this is a restriction of LLVM IR(alloca always happens in the beginning of the function). Additionally, we could certainly coleasce the stack of multiple calls, although LLVM could do that for us so we do not need to do so. \r\n\r\nNote that in the case of parallel, a new function will be created for the parallel body, and WithFunctionEntry will get the alloca inserted at the beginning of that function. This is the benefit of delaying the alloca location move until the code gen point.\r\n\r\nFor the case of C generator, depending on the restriction of language, we might also need to create allocation in the beginning (e.g. create a init fragement stream of a function that is separated from the rest).\r\n\r\nFor the case of StackVM, we could need to have the ability to insert into the beginning of instruction stream that allocates, and stores the value into a few global heap which can be referred later.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784223136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784226148","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-784226148","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":784226148,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDIyNjE0OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T14:05:54Z","updated_at":"2021-02-23T14:14:10Z","author_association":"MEMBER","body":"Assuming we will use use `tir.tvm_stack_alloca`, here is the new semantics:\r\n\r\n- Retrieve a constant-sized temp memory allocated during the function entry for packed argument calls.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784226148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784324059","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-784324059","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":784324059,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDMyNDA1OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T16:22:33Z","updated_at":"2021-02-23T16:22:33Z","author_association":"MEMBER","body":"cc @comaniac @cbalint13  @merrymercy @zxybazh @junru can you please help to review the PR?\r\n\r\n@limenghao please sync the code with the latest main.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784324059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784326126","html_url":"https://github.com/apache/tvm/pull/7495#issuecomment-784326126","issue_url":"https://api.github.com/repos/apache/tvm/issues/7495","id":784326126,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDMyNjEyNg==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T16:25:20Z","updated_at":"2021-02-23T16:25:20Z","author_association":"CONTRIBUTOR","body":"I tried the separate instruction approach. It works ok, but there are some challenges around the timing of Invoke and InvokeClosure. I ultimately dropped the separate instruction approach because if you want to profiling everything,  you have to change all the instructions or insert a ton on profiling instructions. I think the approach in this PR is fine. However, I will point out that this PR does not time Invoke and InvokeClosure correctly. It just times how long it takes to start the function call, not the total time spent in the call.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784326126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784372115","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-784372115","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":784372115,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDM3MjExNQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T17:30:57Z","updated_at":"2021-02-23T17:30:57Z","author_association":"CONTRIBUTOR","body":"@limenghao please also mark this PR as ready for review if all required changes are already committed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784372115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784388218","html_url":"https://github.com/apache/tvm/pull/7398#issuecomment-784388218","issue_url":"https://api.github.com/repos/apache/tvm/issues/7398","id":784388218,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDM4ODIxOA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T17:55:00Z","updated_at":"2021-02-23T17:55:00Z","author_association":"CONTRIBUTOR","body":"Thank you @areusch @zhiics @manupa-arm the PR has been merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784388218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784445597","html_url":"https://github.com/apache/tvm/pull/7501#issuecomment-784445597","issue_url":"https://api.github.com/repos/apache/tvm/issues/7501","id":784445597,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDQ0NTU5Nw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T19:15:26Z","updated_at":"2021-02-23T19:15:26Z","author_association":"CONTRIBUTOR","body":"Checks have passed, @merrymercy @junrushao1994 PTAL, thanks!\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784445597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784456088","html_url":"https://github.com/apache/tvm/issues/4102#issuecomment-784456088","issue_url":"https://api.github.com/repos/apache/tvm/issues/4102","id":784456088,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDQ1NjA4OA==","user":{"login":"wx3000","id":46941243,"node_id":"MDQ6VXNlcjQ2OTQxMjQz","avatar_url":"https://avatars.githubusercontent.com/u/46941243?v=4","gravatar_id":"","url":"https://api.github.com/users/wx3000","html_url":"https://github.com/wx3000","followers_url":"https://api.github.com/users/wx3000/followers","following_url":"https://api.github.com/users/wx3000/following{/other_user}","gists_url":"https://api.github.com/users/wx3000/gists{/gist_id}","starred_url":"https://api.github.com/users/wx3000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wx3000/subscriptions","organizations_url":"https://api.github.com/users/wx3000/orgs","repos_url":"https://api.github.com/users/wx3000/repos","events_url":"https://api.github.com/users/wx3000/events{/privacy}","received_events_url":"https://api.github.com/users/wx3000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T19:32:37Z","updated_at":"2021-02-23T20:26:53Z","author_association":"NONE","body":"@srkreddy1238 : I agree we should avoid duplication in ops implementation. This will speed things up for TF2.x model support and keep the code clean. Great idea!\r\n\r\nI think we can have a series of small PR roughly in this order:\r\n\r\n1. new entry point from_tensorflow() for v2 style control flow handling, in a new file tensorflow2.py\r\n2. common ops moving from tensorflow.py to tensorflow_ops.py. examples are: _concatV2, _transpose, etc. ops in this file are tested for both versions of the parser.\r\n3. new ops such as TensorList* will be in tensorflow2_ops.py first. Later we may move it to tensorflow_ops.py if there is a need for this op in the v1 parser. \r\n4. common parser entry point for v1/v2 switch based on inspection of the graph.\r\n5. convenient entry point which takes saved_model format or concrete_function, in addition to GraphDef.\r\n\r\nWe will soon submit item 1-3 from the above list. Rest I don't know who will be working on at this point but hopefully someone will pick it up. \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784456088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784458728","html_url":"https://github.com/apache/tvm/pull/7153#issuecomment-784458728","issue_url":"https://api.github.com/repos/apache/tvm/issues/7153","id":784458728,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDQ1ODcyOA==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T19:36:55Z","updated_at":"2021-02-23T19:36:55Z","author_association":"CONTRIBUTOR","body":"@areusch @junrushao1994 @antinucleon @tqchen I think this PR is ready for a re-review. All previous issues should be fixed.\r\n\r\nCI is failing because I'm hitting a segfault in the frontend tests. I think its a stack overflow, but I'm not sure. The segfault occurs within tvm::relay::ExprFunctor.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784458728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784501849","html_url":"https://github.com/apache/tvm/pull/7441#issuecomment-784501849","issue_url":"https://api.github.com/repos/apache/tvm/issues/7441","id":784501849,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDUwMTg0OQ==","user":{"login":"ymwangg","id":19481308,"node_id":"MDQ6VXNlcjE5NDgxMzA4","avatar_url":"https://avatars.githubusercontent.com/u/19481308?v=4","gravatar_id":"","url":"https://api.github.com/users/ymwangg","html_url":"https://github.com/ymwangg","followers_url":"https://api.github.com/users/ymwangg/followers","following_url":"https://api.github.com/users/ymwangg/following{/other_user}","gists_url":"https://api.github.com/users/ymwangg/gists{/gist_id}","starred_url":"https://api.github.com/users/ymwangg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ymwangg/subscriptions","organizations_url":"https://api.github.com/users/ymwangg/orgs","repos_url":"https://api.github.com/users/ymwangg/repos","events_url":"https://api.github.com/users/ymwangg/events{/privacy}","received_events_url":"https://api.github.com/users/ymwangg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T20:49:19Z","updated_at":"2021-02-23T20:49:19Z","author_association":"CONTRIBUTOR","body":"@masahi I added the GPU version and it's ready for review.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784501849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784509291","html_url":"https://github.com/apache/tvm/pull/7509#issuecomment-784509291","issue_url":"https://api.github.com/repos/apache/tvm/issues/7509","id":784509291,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDUwOTI5MQ==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T21:00:22Z","updated_at":"2021-02-23T21:00:22Z","author_association":"CONTRIBUTOR","body":"@mbrookhart @xutianming @masahi can one of you take a look at this PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784509291/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784603785","html_url":"https://github.com/apache/tvm/pull/7472#issuecomment-784603785","issue_url":"https://api.github.com/repos/apache/tvm/issues/7472","id":784603785,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDYwMzc4NQ==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T23:30:52Z","updated_at":"2021-02-23T23:30:52Z","author_association":"CONTRIBUTOR","body":"I've switch from a function based timing approach to an object based one. This means that the api is substantially different. @areusch and @tqchen you will probably have to re-review. Sorry about that.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784603785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784609070","html_url":"https://github.com/apache/tvm/pull/7337#issuecomment-784609070","issue_url":"https://api.github.com/repos/apache/tvm/issues/7337","id":784609070,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDYwOTA3MA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T23:38:07Z","updated_at":"2021-02-23T23:38:07Z","author_association":"CONTRIBUTOR","body":"@comaniac great point! I've updated code_loader to module_loader everywhere in this change.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784609070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784615965","html_url":"https://github.com/apache/tvm/pull/7441#issuecomment-784615965","issue_url":"https://api.github.com/repos/apache/tvm/issues/7441","id":784615965,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDYxNTk2NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-23T23:55:42Z","updated_at":"2021-02-23T23:56:57Z","author_association":"MEMBER","body":"@ymwangg @codeislife99 I found a neat trick PyTorch uses for `count`. https://github.com/pytorch/pytorch/blob/22a34bcf4e5eaa348f0117c414c3dd760ec64b13/aten/src/ATen/native/cuda/Unique.cu#L60-L68\r\n\r\nBasically, after you get ex scan, instead of copying from the original input, you copy from an array [0, 1, 2, ....]. This will give you something like [0, 2, 5], and doing adjacent element on it directly gives the count. Does this make sense? It should be much faster than atomic.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784615965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784643576","html_url":"https://github.com/apache/tvm/pull/7441#issuecomment-784643576","issue_url":"https://api.github.com/repos/apache/tvm/issues/7441","id":784643576,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDY0MzU3Ng==","user":{"login":"ymwangg","id":19481308,"node_id":"MDQ6VXNlcjE5NDgxMzA4","avatar_url":"https://avatars.githubusercontent.com/u/19481308?v=4","gravatar_id":"","url":"https://api.github.com/users/ymwangg","html_url":"https://github.com/ymwangg","followers_url":"https://api.github.com/users/ymwangg/followers","following_url":"https://api.github.com/users/ymwangg/following{/other_user}","gists_url":"https://api.github.com/users/ymwangg/gists{/gist_id}","starred_url":"https://api.github.com/users/ymwangg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ymwangg/subscriptions","organizations_url":"https://api.github.com/users/ymwangg/orgs","repos_url":"https://api.github.com/users/ymwangg/repos","events_url":"https://api.github.com/users/ymwangg/events{/privacy}","received_events_url":"https://api.github.com/users/ymwangg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T00:46:10Z","updated_at":"2021-02-24T00:46:10Z","author_association":"CONTRIBUTOR","body":"@masahi thanks. I'll try using `arange` and `adjacent_difference` to compute the counts rather than counting by adding.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784643576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784674228","html_url":"https://github.com/apache/tvm/issues/7511#issuecomment-784674228","issue_url":"https://api.github.com/repos/apache/tvm/issues/7511","id":784674228,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDY3NDIyOA==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T01:52:27Z","updated_at":"2021-02-24T01:52:27Z","author_association":"CONTRIBUTOR","body":"Can you try updating your tvm git submodules?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784674228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784678376","html_url":"https://github.com/apache/tvm/pull/7469#issuecomment-784678376","issue_url":"https://api.github.com/repos/apache/tvm/issues/7469","id":784678376,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDY3ODM3Ng==","user":{"login":"leeexyz","id":7345156,"node_id":"MDQ6VXNlcjczNDUxNTY=","avatar_url":"https://avatars.githubusercontent.com/u/7345156?v=4","gravatar_id":"","url":"https://api.github.com/users/leeexyz","html_url":"https://github.com/leeexyz","followers_url":"https://api.github.com/users/leeexyz/followers","following_url":"https://api.github.com/users/leeexyz/following{/other_user}","gists_url":"https://api.github.com/users/leeexyz/gists{/gist_id}","starred_url":"https://api.github.com/users/leeexyz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leeexyz/subscriptions","organizations_url":"https://api.github.com/users/leeexyz/orgs","repos_url":"https://api.github.com/users/leeexyz/repos","events_url":"https://api.github.com/users/leeexyz/events{/privacy}","received_events_url":"https://api.github.com/users/leeexyz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T02:01:03Z","updated_at":"2021-02-24T02:01:03Z","author_association":"CONTRIBUTOR","body":"> > > > Hi, this is a good and simple idea to skip the expression too complex. I just wonder if there is a case that many basic arithmetic operations composited together, and many of them can be simplified. But, here using a counter to calculate the complexity of expression and skip it if greater than a const, say 256 in the PR. Is it appropriate?\r\n> > > \r\n> > > \r\n> > > Good question. Here assumes even we could simplify many basic arithmetic operations we still give up because it will cost hours+ to compile, compared with optimization, we choose to maintain users' experience.\r\n> > \r\n> > \r\n> > Thanks for the clarity, user experience is always the first choice. But, I think it does not consume much time compare to symbolic expressions which cannot be simplified at all (in your TFLite case).\r\n> \r\n> Ah...unfortunately, In fact, in my tflite case, our compile time almost costs on the `rewrite_simplify` and `canonical_simplify`. If you have interest, you could try to patch #7456, remove the expression complexity restrict and run TFLite mobilenet v2 qat model (in tests/python/frontend/tflite/test_forward.py). We maybe hang hours+ to complete compling... so indeed it consume much time to compile.\r\n\r\nThanks :) Let me run it. I saw the issue in #7456 and found that the symbolic expressions are too complex to simplify.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784678376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784695477","html_url":"https://github.com/apache/tvm/issues/7511#issuecomment-784695477","issue_url":"https://api.github.com/repos/apache/tvm/issues/7511","id":784695477,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDY5NTQ3Nw==","user":{"login":"haruband","id":4963695,"node_id":"MDQ6VXNlcjQ5NjM2OTU=","avatar_url":"https://avatars.githubusercontent.com/u/4963695?v=4","gravatar_id":"","url":"https://api.github.com/users/haruband","html_url":"https://github.com/haruband","followers_url":"https://api.github.com/users/haruband/followers","following_url":"https://api.github.com/users/haruband/following{/other_user}","gists_url":"https://api.github.com/users/haruband/gists{/gist_id}","starred_url":"https://api.github.com/users/haruband/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haruband/subscriptions","organizations_url":"https://api.github.com/users/haruband/orgs","repos_url":"https://api.github.com/users/haruband/repos","events_url":"https://api.github.com/users/haruband/events{/privacy}","received_events_url":"https://api.github.com/users/haruband/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T02:11:51Z","updated_at":"2021-02-24T02:11:51Z","author_association":"NONE","body":"It's working. Thank you very much!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784695477/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784712542","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-784712542","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":784712542,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDcxMjU0Mg==","user":{"login":"zhuwenxi","id":4969797,"node_id":"MDQ6VXNlcjQ5Njk3OTc=","avatar_url":"https://avatars.githubusercontent.com/u/4969797?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuwenxi","html_url":"https://github.com/zhuwenxi","followers_url":"https://api.github.com/users/zhuwenxi/followers","following_url":"https://api.github.com/users/zhuwenxi/following{/other_user}","gists_url":"https://api.github.com/users/zhuwenxi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuwenxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuwenxi/subscriptions","organizations_url":"https://api.github.com/users/zhuwenxi/orgs","repos_url":"https://api.github.com/users/zhuwenxi/repos","events_url":"https://api.github.com/users/zhuwenxi/events{/privacy}","received_events_url":"https://api.github.com/users/zhuwenxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T02:57:58Z","updated_at":"2021-02-24T10:51:51Z","author_association":"CONTRIBUTOR","body":"The function looks pretty much like the fix I proposed. In my proposal \"reallocate the stack in parallel for loop\", the function looks like this:\r\n<pre>\r\nfn myfunc() {\r\n   stack_tcode = @tir.tvm_stack_alloca(\"arg_tcode\", 8)\r\n   stack_value = @tir.tvm_stack_alloca(\"arg_value\", 8)\r\n   for i in range(10):\r\n       stack_tcode = @tir.tvm_stack_alloca(\"arg_tcode\", 8)                 // Do reallocation if current loop is parallel\r\n       stack_value = @tir.tvm_stack_alloca(\"arg_value\", 8)                   // Do reallocation if current loop is parallel\r\n       tir.tvm_call_packed_lowered(\"tvm.contrib.cblas.matmul\", stack_1)\r\n}\r\n</pre>\r\n\r\nSo if I understand correctly, the only difference between \"packed_arg_alloca\" and \"tvm_stack_alloca\" is the former one uses thread-local storage allocation?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784712542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784960851","html_url":"https://github.com/apache/tvm/pull/7506#issuecomment-784960851","issue_url":"https://api.github.com/repos/apache/tvm/issues/7506","id":784960851,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDk2MDg1MQ==","user":{"login":"tristan-arm","id":52404655,"node_id":"MDQ6VXNlcjUyNDA0NjU1","avatar_url":"https://avatars.githubusercontent.com/u/52404655?v=4","gravatar_id":"","url":"https://api.github.com/users/tristan-arm","html_url":"https://github.com/tristan-arm","followers_url":"https://api.github.com/users/tristan-arm/followers","following_url":"https://api.github.com/users/tristan-arm/following{/other_user}","gists_url":"https://api.github.com/users/tristan-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/tristan-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tristan-arm/subscriptions","organizations_url":"https://api.github.com/users/tristan-arm/orgs","repos_url":"https://api.github.com/users/tristan-arm/repos","events_url":"https://api.github.com/users/tristan-arm/events{/privacy}","received_events_url":"https://api.github.com/users/tristan-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T10:05:18Z","updated_at":"2021-02-24T10:05:18Z","author_association":"CONTRIBUTOR","body":"cc @Leo-arm @u99127 @mbaret @leandron @d-smirnov @grant-arm ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784960851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784980723","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-784980723","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":784980723,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDk4MDcyMw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T10:36:56Z","updated_at":"2021-02-24T10:36:56Z","author_association":"MEMBER","body":"This came up many times, we probably do not want to support this due to a lack of inplace op support in Relay. See https://github.com/apache/tvm/pull/7231","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/784980723/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785095353","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-785095353","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":785095353,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTA5NTM1Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T14:00:22Z","updated_at":"2021-02-24T14:00:22Z","author_association":"MEMBER","body":"Right, as a matter of fact, we should simply change the semantics of tvm_stack_alloca.S ince stack should always be thread local","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785095353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785195522","html_url":"https://github.com/apache/tvm/pull/7435#issuecomment-785195522","issue_url":"https://api.github.com/repos/apache/tvm/issues/7435","id":785195522,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTE5NTUyMg==","user":{"login":"ANSHUMAN87","id":32511895,"node_id":"MDQ6VXNlcjMyNTExODk1","avatar_url":"https://avatars.githubusercontent.com/u/32511895?v=4","gravatar_id":"","url":"https://api.github.com/users/ANSHUMAN87","html_url":"https://github.com/ANSHUMAN87","followers_url":"https://api.github.com/users/ANSHUMAN87/followers","following_url":"https://api.github.com/users/ANSHUMAN87/following{/other_user}","gists_url":"https://api.github.com/users/ANSHUMAN87/gists{/gist_id}","starred_url":"https://api.github.com/users/ANSHUMAN87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ANSHUMAN87/subscriptions","organizations_url":"https://api.github.com/users/ANSHUMAN87/orgs","repos_url":"https://api.github.com/users/ANSHUMAN87/repos","events_url":"https://api.github.com/users/ANSHUMAN87/events{/privacy}","received_events_url":"https://api.github.com/users/ANSHUMAN87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T16:22:32Z","updated_at":"2021-02-24T16:22:32Z","author_association":"CONTRIBUTOR","body":"@tkonolige : All your comments are addressed now, PTAL. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785195522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785250424","html_url":"https://github.com/apache/tvm/pull/7508#issuecomment-785250424","issue_url":"https://api.github.com/repos/apache/tvm/issues/7508","id":785250424,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI1MDQyNA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T17:39:24Z","updated_at":"2021-02-24T17:39:24Z","author_association":"CONTRIBUTOR","body":"I googled \"compute library\" and the first 2-3 results are for ACL so I think it's fine to change the composite target name.\r\nOn the other hand, I'd prefer to keep the arm_compute_lib in the codegen to make developers clearer.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785250424/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785258342","html_url":"https://github.com/apache/tvm/pull/7512#issuecomment-785258342","issue_url":"https://api.github.com/repos/apache/tvm/issues/7512","id":785258342,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI1ODM0Mg==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T17:51:43Z","updated_at":"2021-02-24T17:51:43Z","author_association":"CONTRIBUTOR","body":"Is this for ops that are extern calls? Like calling into MKL?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785258342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785260354","html_url":"https://github.com/apache/tvm/pull/7508#issuecomment-785260354","issue_url":"https://api.github.com/repos/apache/tvm/issues/7508","id":785260354,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI2MDM1NA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T17:54:55Z","updated_at":"2021-02-24T17:54:55Z","author_association":"CONTRIBUTOR","body":"> On the other hand, I'd prefer to keep the arm_compute_lib in the codegen to make developers clearer.\r\n\r\nI'll check whether there is any reason to change in other places, and follow-up if needed, with proper justification. For now we can leave it as is.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785260354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785260685","html_url":"https://github.com/apache/tvm/pull/7508#issuecomment-785260685","issue_url":"https://api.github.com/repos/apache/tvm/issues/7508","id":785260685,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI2MDY4NQ==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T17:55:27Z","updated_at":"2021-02-24T17:55:27Z","author_association":"CONTRIBUTOR","body":"when possible, can someone (@mbaret @comaniac) merge this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785260685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785268008","html_url":"https://github.com/apache/tvm/pull/7508#issuecomment-785268008","issue_url":"https://api.github.com/repos/apache/tvm/issues/7508","id":785268008,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI2ODAwOA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T18:06:52Z","updated_at":"2021-02-24T18:06:52Z","author_association":"CONTRIBUTOR","body":"Thanks @leandron @mbaret ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785268008/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785281079","html_url":"https://github.com/apache/tvm/pull/7516#issuecomment-785281079","issue_url":"https://api.github.com/repos/apache/tvm/issues/7516","id":785281079,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTI4MTA3OQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T18:27:43Z","updated_at":"2021-02-24T18:27:43Z","author_association":"CONTRIBUTOR","body":"@junrushao1994 @merrymercy @masahi ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785281079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785317243","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785317243","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785317243,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMxNzI0Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T19:26:47Z","updated_at":"2021-02-24T19:26:47Z","author_association":"MEMBER","body":"@mbrookhart Can you take a look as well?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785317243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785318675","html_url":"https://github.com/apache/tvm/pull/7479#issuecomment-785318675","issue_url":"https://api.github.com/repos/apache/tvm/issues/7479","id":785318675,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMxODY3NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T19:29:27Z","updated_at":"2021-02-24T19:29:27Z","author_association":"MEMBER","body":"ping @kevinthesun @anijain2305 @siju-samuel this should be easy and no brainer","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785318675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785319410","html_url":"https://github.com/apache/tvm/pull/7517#issuecomment-785319410","issue_url":"https://api.github.com/repos/apache/tvm/issues/7517","id":785319410,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMxOTQxMA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T19:30:46Z","updated_at":"2021-02-24T19:30:46Z","author_association":"MEMBER","body":"@alexwong can you add a test?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785319410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785326896","html_url":"https://github.com/apache/tvm/pull/7500#issuecomment-785326896","issue_url":"https://api.github.com/repos/apache/tvm/issues/7500","id":785326896,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMyNjg5Ng==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T19:44:15Z","updated_at":"2021-02-24T19:44:15Z","author_association":"CONTRIBUTOR","body":"> After a first pass, this looks mostly good to me. Any idea how much overhead this brings to running the passes?\r\n\r\nI did a few compilation runs on a large model that takes ~50 seconds and didn't notice any large performance hits, seemed to be mostly hidden by normal compilation variance. In any case, I'm disabling the profiling by default and added API to enable/disable as needed. I think this should be good to go for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785326896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785329002","html_url":"https://github.com/apache/tvm/pull/7500#issuecomment-785329002","issue_url":"https://api.github.com/repos/apache/tvm/issues/7500","id":785329002,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMyOTAwMg==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T19:48:01Z","updated_at":"2021-02-24T19:48:01Z","author_association":"CONTRIBUTOR","body":"I updated the printer to additionally show time spent in the pass itself (excluding sub-passes), along with percentage relative to the total time. I described the exact formatting in the Python docstring, but open to changing. Also, long term I'm planning on exposing the profiling data through the Object FFI so that users can customize output/analysis, but I'll do that in a separate PR.\r\n\r\nHere's new example output:\r\n```\r\nInferType: 242us [242us] (0.03%; 0.03%)\r\nInferType: 278us [278us] (0.04%; 0.04%)\r\nInferType: 2501us [2501us] (0.34%; 0.34%)\r\nsequential: 1us [1us] (0.00%; 0.00%)\r\nsequential: 678773us [90us] (91.82%; 91.82%)\r\n\tRemoveUnusedFunctions: 92us [92us] (0.01%; 0.01%)\r\n\tToBasicBlockNormalForm: 1219us [1219us] (0.16%; 0.18%)\r\n\tsequential: 11724us [12us] (1.59%; 1.73%)\r\n\t\tInferType: 2573us [2573us] (0.35%; 21.95%)\r\n\t\tLegalize: 3059us [738us] (0.41%; 26.09%)\r\n\t\t\tInferType: 2322us [2322us] (0.31%; 75.89%)\r\n\t\tInferType: 2619us [2619us] (0.35%; 22.34%)\r\n\t\tLegalize: 3460us [865us] (0.47%; 29.51%)\r\n\t\t\tInferType: 2595us [2595us] (0.35%; 75.00%)\r\n\tInferType: 2783us [2783us] (0.38%; 0.41%)\r\n\tLegalize: 4525us [2064us] (0.61%; 0.67%)\r\n\t\tInferType: 2461us [2461us] (0.33%; 54.38%)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785329002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785337310","html_url":"https://github.com/apache/tvm/pull/7521#issuecomment-785337310","issue_url":"https://api.github.com/repos/apache/tvm/issues/7521","id":785337310,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTMzNzMxMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:02:37Z","updated_at":"2021-02-24T20:02:37Z","author_association":"MEMBER","body":"cc @tkonolige @junrushao1994 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785337310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785342794","html_url":"https://github.com/apache/tvm/pull/7520#issuecomment-785342794","issue_url":"https://api.github.com/repos/apache/tvm/issues/7520","id":785342794,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM0Mjc5NA==","user":{"login":"trevor-m","id":12981474,"node_id":"MDQ6VXNlcjEyOTgxNDc0","avatar_url":"https://avatars.githubusercontent.com/u/12981474?v=4","gravatar_id":"","url":"https://api.github.com/users/trevor-m","html_url":"https://github.com/trevor-m","followers_url":"https://api.github.com/users/trevor-m/followers","following_url":"https://api.github.com/users/trevor-m/following{/other_user}","gists_url":"https://api.github.com/users/trevor-m/gists{/gist_id}","starred_url":"https://api.github.com/users/trevor-m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trevor-m/subscriptions","organizations_url":"https://api.github.com/users/trevor-m/orgs","repos_url":"https://api.github.com/users/trevor-m/repos","events_url":"https://api.github.com/users/trevor-m/events{/privacy}","received_events_url":"https://api.github.com/users/trevor-m/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:11:56Z","updated_at":"2021-02-24T20:11:56Z","author_association":"CONTRIBUTOR","body":"@anijain2305 @kevinthesun @yongwww @siju-samuel Please take a look","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785342794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785344167","html_url":"https://github.com/apache/tvm/pull/7521#issuecomment-785344167","issue_url":"https://api.github.com/repos/apache/tvm/issues/7521","id":785344167,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM0NDE2Nw==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:13:20Z","updated_at":"2021-02-24T20:13:20Z","author_association":"CONTRIBUTOR","body":"Where is the error message for when the user is using python 2? It seems like that check should be in this file before any imports are loaded.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785344167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785344596","html_url":"https://github.com/apache/tvm/pull/7521#issuecomment-785344596","issue_url":"https://api.github.com/repos/apache/tvm/issues/7521","id":785344596,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM0NDU5Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:14:04Z","updated_at":"2021-02-24T20:14:30Z","author_association":"MEMBER","body":"The error check is in _ffi._pyversion, which should be fired in the first import. Verified in my local setups","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785344596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785352246","html_url":"https://github.com/apache/tvm/issues/7523#issuecomment-785352246","issue_url":"https://api.github.com/repos/apache/tvm/issues/7523","id":785352246,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM1MjI0Ng==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:26:21Z","updated_at":"2021-02-24T20:26:21Z","author_association":"CONTRIBUTOR","body":"cc @jroesch ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785352246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785376392","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785376392","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785376392,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM3NjM5Mg==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:52:19Z","updated_at":"2021-02-24T21:39:24Z","author_association":"CONTRIBUTOR","body":"My main concern with this, and please correct me if I'm wrong, is concatenating something like shape [1, 3] and shape [1, ?] on axis 0. In that case, I believe this will return [2, 3], and we don't do any runtime checks on the second argument. If the model is wrong, and, say, the input comes in as [1, 2] instead of [1, 3], we'll end up with a runtime segfault in generated code, which is very difficult to debug.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785376392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785376789","html_url":"https://github.com/apache/tvm/issues/7523#issuecomment-785376789","issue_url":"https://api.github.com/repos/apache/tvm/issues/7523","id":785376789,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM3Njc4OQ==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T20:53:02Z","updated_at":"2021-02-24T20:53:02Z","author_association":"CONTRIBUTOR","body":"This might be a good discussion to have on discuss.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785376789/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785381868","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785381868","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785381868,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM4MTg2OA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:02:11Z","updated_at":"2021-02-24T21:03:31Z","author_association":"MEMBER","body":"@mbrookhart I'm not sure about this, but doesn't concat shape function do the runtime check to prevent segfault? I mean, for the shape func, the case where all dims are dynamic vs dims are mixed static/dynamic shouldn't make a difference for what the shape func should do?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785381868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785391152","html_url":"https://github.com/apache/tvm/pull/7457#issuecomment-785391152","issue_url":"https://api.github.com/repos/apache/tvm/issues/7457","id":785391152,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM5MTE1Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:18:43Z","updated_at":"2021-02-24T21:18:43Z","author_association":"MEMBER","body":"The way device side works is through creating a struct.\r\n\r\nsay the original function is ```fn(int32 arg0, int64 arg1)```\r\n\r\nWe generate the following device code:\r\n\r\n```\r\nstruct ArgBuffer {\r\n   // always generate two int values to pad things to the same alignment\r\n   int32 arg0[2];\r\n   int64 arg1\r\n};\r\n\r\nfn (ArgBuffer* arg_buffer) {\r\n   int32 arg0 = arg_buffer->arg0[0];\r\n   int64 arg1 = arg_buffer->arg1;\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785391152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785394445","html_url":"https://github.com/apache/tvm/pull/7507#issuecomment-785394445","issue_url":"https://api.github.com/repos/apache/tvm/issues/7507","id":785394445,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM5NDQ0NQ==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:24:54Z","updated_at":"2021-02-24T21:24:54Z","author_association":"CONTRIBUTOR","body":"any way to get this merged? LGTM (if that matters lol), pretty simple change","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785394445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785399867","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785399867","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785399867,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTM5OTg2Nw==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:34:54Z","updated_at":"2021-02-24T21:34:54Z","author_association":"CONTRIBUTOR","body":"The shape function only runs if the output shape of the op is dynamic at compile time:\r\n\r\nhttps://github.com/apache/tvm/blob/88a4fdddc2bdd41a62baaaa55dbd4c524d25933d/src/relay/transforms/memory_alloc.cc#L185-L187\r\nhttps://github.com/apache/tvm/blob/88a4fdddc2bdd41a62baaaa55dbd4c524d25933d/src/relay/transforms/memory_alloc.cc#L356\r\nhttps://github.com/apache/tvm/blob/88a4fdddc2bdd41a62baaaa55dbd4c524d25933d/src/relay/transforms/memory_alloc.cc#L287-L350","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785399867/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785400473","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785400473","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785400473,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQwMDQ3Mw==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:36:03Z","updated_at":"2021-02-24T21:36:15Z","author_association":"CONTRIBUTOR","body":"If you have dynamically shaped inputs and a statically shaped output, the shape func won't run, so you wont be able to update/check your assumption on that dynamic input at runtime.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785400473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785403245","html_url":"https://github.com/apache/tvm/issues/7514#issuecomment-785403245","issue_url":"https://api.github.com/repos/apache/tvm/issues/7514","id":785403245,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQwMzI0NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:41:40Z","updated_at":"2021-02-24T21:41:40Z","author_association":"MEMBER","body":"Please open a new thread on https://discuss.tvm.apache.org/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785403245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785403452","html_url":"https://github.com/apache/tvm/issues/7476#issuecomment-785403452","issue_url":"https://api.github.com/repos/apache/tvm/issues/7476","id":785403452,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQwMzQ1Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:42:02Z","updated_at":"2021-02-24T21:42:02Z","author_association":"MEMBER","body":"please open a new troubleshooting thread on https://discuss.tvm.apache.org/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785403452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785404664","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-785404664","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":785404664,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQwNDY2NA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T21:43:36Z","updated_at":"2021-02-24T21:43:36Z","author_association":"MEMBER","body":"Thanks, that makes sense. I wish there was a way to decouple output shape calculation and input shape check from shape func, so that we can add input shape check for case like this (dynamic input shape + static output shape).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785404664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785436558","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785436558","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785436558,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQzNjU1OA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T22:49:57Z","updated_at":"2021-02-24T22:52:09Z","author_association":"CONTRIBUTOR","body":"@masahi I tried to add the following to `def _run_jit_passes(graph)`\r\n```\r\ntorch._C._jit_pass_onnx_prepare_inplace_ops_for_onnx(graph)\r\ntorch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects(graph)\r\n```\r\n\r\nYes it replaces `copy_` with `expand_as` + `index_put`. But `index_put` operator gets empty indices array in that case\r\n\r\nTest Module:\r\n```\r\nimport torch\r\nimport numpy as np\r\n\r\nclass MyCopy(torch.nn.Module):\r\n    def __init__(self, shape):\r\n        super(MyCopy, self).__init__()\r\n        self.shape = shape\r\n        \r\n    def forward(self, values):\r\n        A = torch.zeros(self.shape)\r\n        B = A.copy_(values)\r\n        return B\r\n\r\n\r\nMP = MyCopy((2,4))\r\na = torch.tensor([0, 1, 2, 6])\r\nMP(a)\r\n\r\ntraced_MP = torch.jit.trace(MP, (a))\r\n```\r\n\r\n```\r\ntraced_MP.graph\r\ngraph(%self : __torch__.MyCopy,\r\n      %values : Long(4, strides=[1], requires_grad=0, device=cpu)):\r\n  %4 : int = prim::Constant[value=2]() # <stdin>:7:0\r\n  %5 : int = prim::Constant[value=4]() # <stdin>:7:0\r\n  %6 : int[] = prim::ListConstruct(%4, %5)\r\n  %7 : int = prim::Constant[value=6]() # <stdin>:7:0\r\n  %8 : None = prim::Constant()\r\n  %9 : Device = prim::Constant[value=\"cpu\"]() # <stdin>:7:0\r\n  %10 : bool = prim::Constant[value=0]() # <stdin>:7:0\r\n  %A : Float(2, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::zeros(%6, %7, %8, %9, %10) # <stdin>:7:0\r\n  %12 : bool = prim::Constant[value=0]()\r\n  %13 : Float(2, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::copy_(%A, %values, %12) # <stdin>:8:0\r\n  return (%13)\r\n```\r\n\r\nAfter jit_passes\r\n```\r\ngraph = traced_MP.graph.copy()\r\ntorch._C._jit_pass_onnx_function_substitution(graph)\r\ntorch._C._jit_pass_onnx_prepare_inplace_ops_for_onnx(graph)\r\ntorch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects(graph)\r\ngraph\r\ngraph(%self : __torch__.MyCopy,\r\n      %values.1 : Long(4, strides=[1], requires_grad=0, device=cpu)):\r\n  %2 : int = prim::Constant[value=2]() # <stdin>:7:0\r\n  %3 : int = prim::Constant[value=4]() # <stdin>:7:0\r\n  %4 : int[] = prim::ListConstruct(%2, %3)\r\n  %5 : int = prim::Constant[value=6]() # <stdin>:7:0\r\n  %6 : None = prim::Constant()\r\n  %7 : Device = prim::Constant[value=\"cpu\"]() # <stdin>:7:0\r\n  %8 : bool = prim::Constant[value=0]() # <stdin>:7:0\r\n  %A : Float(2, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::zeros(%4, %5, %6, %7, %8) # <stdin>:7:0\r\n  %10 : bool = prim::Constant[value=0]()\r\n  %values : Long(4, strides=[1], requires_grad=0, device=cpu) = aten::expand_as(%values.1, %A) # <stdin>:8:0\r\n  %15 : Tensor?[] = prim::ListConstruct()\r\n  %16 : Float(2, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::index_put(%A, %15, %values, %10)\r\n  return (%16)\r\n```\r\n\r\nAs you can see %15 is empty list.\r\n\r\nAs a result we get TVM error because index_put indices array is empty:\r\n```\r\nimport tvm\r\nfrom tvm import relay\r\nctx = tvm.cpu(0)\r\ntarget = 'llvm'\r\n\r\nshape_list = [(\"input0\", [4,]),]\r\nmod, params = relay.frontend.from_pytorch(traced_MP, shape_list)\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/pivovaa/workspace/tvm/python/tvm/relay/frontend/pytorch.py\", line 3186, in from_pytorch\r\n    ret = converter.convert_operators(_get_operator_nodes(graph.nodes()), outputs, ret_name)[0]\r\n  File \"/Users/pivovaa/workspace/tvm/python/tvm/relay/frontend/pytorch.py\", line 2605, in convert_operators\r\n    relay_out = relay_op(\r\n  File \"/Users/pivovaa/workspace/tvm/python/tvm/relay/frontend/pytorch.py\", line 2059, in index_put\r\n    index_tensor = _op.stack(indices, axis=0)\r\n  File \"/Users/pivovaa/workspace/tvm/python/tvm/relay/op/tensor.py\", line 1124, in stack\r\n    raise ValueError(\"relay.stack requires data to be non-empty.\")\r\nValueError: relay.stack requires data to be non-empty.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785436558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785438683","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785438683","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785438683,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQzODY4Mw==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T22:54:36Z","updated_at":"2021-02-24T22:54:36Z","author_association":"CONTRIBUTOR","body":"@masahi This PR uses `Relay.stack` to implement `copy_` operator. Why it is a bad idea to do it this way? I added couple unit tests - they are passed for CPU and GPU.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785438683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785453479","html_url":"https://github.com/apache/tvm/pull/7122#issuecomment-785453479","issue_url":"https://api.github.com/repos/apache/tvm/issues/7122","id":785453479,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQ1MzQ3OQ==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T23:06:56Z","updated_at":"2021-02-24T23:06:56Z","author_association":"CONTRIBUTOR","body":"Need a docker image update for ci_arm - @tqchen @zhiics , could this be done please ? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785453479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785463292","html_url":"https://github.com/apache/tvm/pull/7350#issuecomment-785463292","issue_url":"https://api.github.com/repos/apache/tvm/issues/7350","id":785463292,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQ2MzI5Mg==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T23:32:16Z","updated_at":"2021-02-24T23:32:16Z","author_association":"CONTRIBUTOR","body":"Thanks @jtuyls @leandron @zhiics ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785463292/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785491670","html_url":"https://github.com/apache/tvm/pull/7500#issuecomment-785491670","issue_url":"https://api.github.com/repos/apache/tvm/issues/7500","id":785491670,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQ5MTY3MA==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T00:42:54Z","updated_at":"2021-02-25T00:42:54Z","author_association":"CONTRIBUTOR","body":"> Thank for the nice work. Could you add a unit test to it so that people can easily know how to use the profiler?\r\n\r\nThanks, how should I do this? I can add something like `tests/python/relay/test_pass_profiler.py` that just shows how to use it but there isn't really a \"correctness\" property I can check. I'll go ahead and do this but let me know if you have something more specific.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785491670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785492581","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785492581","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785492581,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTQ5MjU4MQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T00:45:12Z","updated_at":"2021-02-25T00:45:12Z","author_association":"MEMBER","body":"The point is, no matter how we try to support `copy_`, there seems to be an edge case pytorch usage that prevents a correct translation to Relay. See the discussion and examples in the PR linked above. \r\n\r\nRather than adding `copy_` support that sometime works and sometime doesn't, the current consensus seems to be that we shouldn't support this op. The best way forward is to remove that inplace assignment idiom from your models. Don't say you cannot change the model because of customer issues, that's not our problem.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785492581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785505452","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785505452","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785505452,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTUwNTQ1Mg==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T01:20:08Z","updated_at":"2021-02-25T01:20:08Z","author_association":"CONTRIBUTOR","body":"I think we already have 16 in-place operators ending with `_` in Pytorch frontend. e.g. `add_`\r\n```\r\na=torch.tensor([1,2,3,4])\r\nb=torch.tensor([1,1,2,2])\r\na.add_(b)\r\na\r\ntensor([2, 3, 5, 6])\r\n```\r\nIs `copy_` different from them?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785505452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785506781","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785506781","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785506781,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTUwNjc4MQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T01:24:01Z","updated_at":"2021-02-25T01:24:01Z","author_association":"MEMBER","body":"Yeah, this is a tricky issue. Some inplace ops are benign (like `relu_`), preventing all of them will likely lead to too many otherwise ok models to be rejected. I don't have a good solution that enables distinguishing which inplace ops are safe or not. This is an ongoing problem.\r\n\r\ncc @t-vi our favorite topic again ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785506781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785507752","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785507752","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785507752,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTUwNzc1Mg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T01:26:23Z","updated_at":"2021-02-25T01:26:50Z","author_association":"MEMBER","body":"@apivovarov If you really need to support this conversion and you are sure your conversion should work, you can use a custom convert map. See https://github.com/apache/tvm/blob/50e013dd3a5e23450ff4ae98324be07aa6160a6d/tests/python/frontend/pytorch/test_forward.py#L1916 it basically allows you to register custom conversion from user's code. This is probably the best solution (or workaround) for now. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785507752/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785512605","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785512605","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785512605,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTUxMjYwNQ==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T01:40:43Z","updated_at":"2021-02-25T01:40:43Z","author_association":"CONTRIBUTOR","body":"What if we add log.warn message - `in-place copy_ operator was replaced with out-place operator. Compiled model might not work as expected. It is strongly recommended to remove copy_ operator from the model graph`.\r\n\r\nThis default `copy_` implementation will allow users to compile the model and see if it works as expected.\r\nif not - users really need to remove `copy_` op from the graph.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785512605/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785537707","html_url":"https://github.com/apache/tvm/pull/7500#issuecomment-785537707","issue_url":"https://api.github.com/repos/apache/tvm/issues/7500","id":785537707,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTUzNzcwNw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T02:52:44Z","updated_at":"2021-02-25T02:52:44Z","author_association":"MEMBER","body":"> > Thank for the nice work. Could you add a unit test to it so that people can easily know how to use the profiler?\r\n> \r\n> Thanks, how should I do this? I can add something like `tests/python/relay/test_pass_profiler.py` that just shows how to use it but there isn't really a \"correctness\" property I can check. I'll go ahead and do this but let me know if you have something more specific.\r\n\r\nYeah, this should be fine. Is it possible to assert that the passes being observed are printed? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785537707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785553307","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-785553307","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":785553307,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTU1MzMwNw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T03:39:46Z","updated_at":"2021-02-25T03:39:46Z","author_association":"MEMBER","body":"I generally don't like a half baked solution, but if that allows more models to run on TVM, that doesn't sound too bad. If people agree with this, I think we can go with this @t-vi @siju-samuel @kevinthesun @codeislife99 @alexwong \r\n\r\n@apivovarov If you want to pursue this path, please revisit the `index_put` -> `scatter_nd` solution. This is what PyTorch ONNX converter does to convert `copy_`. Your solution probably doesn't work for dynamic shape inputs, but copying dynamic tensors should be conceptually no harder than for static case. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785553307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785555243","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-785555243","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":785555243,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTU1NTI0Mw==","user":{"login":"limenghao","id":25861733,"node_id":"MDQ6VXNlcjI1ODYxNzMz","avatar_url":"https://avatars.githubusercontent.com/u/25861733?v=4","gravatar_id":"","url":"https://api.github.com/users/limenghao","html_url":"https://github.com/limenghao","followers_url":"https://api.github.com/users/limenghao/followers","following_url":"https://api.github.com/users/limenghao/following{/other_user}","gists_url":"https://api.github.com/users/limenghao/gists{/gist_id}","starred_url":"https://api.github.com/users/limenghao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/limenghao/subscriptions","organizations_url":"https://api.github.com/users/limenghao/orgs","repos_url":"https://api.github.com/users/limenghao/repos","events_url":"https://api.github.com/users/limenghao/events{/privacy}","received_events_url":"https://api.github.com/users/limenghao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T03:45:52Z","updated_at":"2021-02-25T03:45:52Z","author_association":"NONE","body":"I changed its status now. It failed to pass some checks, in fact I am new to contributing this and not sure where is the syntax problem. And another question is the added RFEITuner needs extra package requirement of 'scipy', could you please help point out where to set it up properly? Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785555243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785645314","html_url":"https://github.com/apache/tvm/pull/7520#issuecomment-785645314","issue_url":"https://api.github.com/repos/apache/tvm/issues/7520","id":785645314,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTY0NTMxNA==","user":{"login":"siju-samuel","id":15828974,"node_id":"MDQ6VXNlcjE1ODI4OTc0","avatar_url":"https://avatars.githubusercontent.com/u/15828974?v=4","gravatar_id":"","url":"https://api.github.com/users/siju-samuel","html_url":"https://github.com/siju-samuel","followers_url":"https://api.github.com/users/siju-samuel/followers","following_url":"https://api.github.com/users/siju-samuel/following{/other_user}","gists_url":"https://api.github.com/users/siju-samuel/gists{/gist_id}","starred_url":"https://api.github.com/users/siju-samuel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siju-samuel/subscriptions","organizations_url":"https://api.github.com/users/siju-samuel/orgs","repos_url":"https://api.github.com/users/siju-samuel/repos","events_url":"https://api.github.com/users/siju-samuel/events{/privacy}","received_events_url":"https://api.github.com/users/siju-samuel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T06:17:04Z","updated_at":"2021-02-25T06:17:04Z","author_association":"MEMBER","body":"Thanks @trevor-m @anijain2305 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785645314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785649280","html_url":"https://github.com/apache/tvm/pull/7500#issuecomment-785649280","issue_url":"https://api.github.com/repos/apache/tvm/issues/7500","id":785649280,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTY0OTI4MA==","user":{"login":"altanh","id":3124994,"node_id":"MDQ6VXNlcjMxMjQ5OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3124994?v=4","gravatar_id":"","url":"https://api.github.com/users/altanh","html_url":"https://github.com/altanh","followers_url":"https://api.github.com/users/altanh/followers","following_url":"https://api.github.com/users/altanh/following{/other_user}","gists_url":"https://api.github.com/users/altanh/gists{/gist_id}","starred_url":"https://api.github.com/users/altanh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/altanh/subscriptions","organizations_url":"https://api.github.com/users/altanh/orgs","repos_url":"https://api.github.com/users/altanh/repos","events_url":"https://api.github.com/users/altanh/events{/privacy}","received_events_url":"https://api.github.com/users/altanh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T06:25:54Z","updated_at":"2021-02-25T06:25:54Z","author_association":"CONTRIBUTOR","body":"> Yeah, this should be fine. Is it possible to assert that the passes being observed are printed?\r\n\r\nHmm, I think I'll change the API to return a String rather than printing to stdout. This should make things more flexible and I'll be able to check the output for the passes in the unit test. I will do this tomorrow- thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785649280/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785652300","html_url":"https://github.com/apache/tvm/pull/7060#issuecomment-785652300","issue_url":"https://api.github.com/repos/apache/tvm/issues/7060","id":785652300,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTY1MjMwMA==","user":{"login":"xqdan","id":23742050,"node_id":"MDQ6VXNlcjIzNzQyMDUw","avatar_url":"https://avatars.githubusercontent.com/u/23742050?v=4","gravatar_id":"","url":"https://api.github.com/users/xqdan","html_url":"https://github.com/xqdan","followers_url":"https://api.github.com/users/xqdan/followers","following_url":"https://api.github.com/users/xqdan/following{/other_user}","gists_url":"https://api.github.com/users/xqdan/gists{/gist_id}","starred_url":"https://api.github.com/users/xqdan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xqdan/subscriptions","organizations_url":"https://api.github.com/users/xqdan/orgs","repos_url":"https://api.github.com/users/xqdan/repos","events_url":"https://api.github.com/users/xqdan/events{/privacy}","received_events_url":"https://api.github.com/users/xqdan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T06:32:05Z","updated_at":"2021-02-25T06:32:05Z","author_association":"CONTRIBUTOR","body":"@yongwww @tqchen @zhiics I suggest we support a kind of graph ir with boundry in relay. Let me explain a little bit. XLA is expanding big ops with fine-grained primitive ops, but losing high level information, that is the boundry of big ops, and which brings lots of trouble to fusion, since it's very difficult to do fusion for such huge graph with thoudsands of fine-grained primitive ops. But if we can keep the boundry when we expand/convert big ops into relay graph ir, we can avoid the problem above, besides we can do whatever XLA can do with this graph ir with boundry info. with this design, tvm can be a more powerful deep learning compiler, also can be a more powerful plugin optimizer for other ai frameworks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785652300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785661470","html_url":"https://github.com/apache/tvm/pull/7495#issuecomment-785661470","issue_url":"https://api.github.com/repos/apache/tvm/issues/7495","id":785661470,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTY2MTQ3MA==","user":{"login":"monklof","id":2393551,"node_id":"MDQ6VXNlcjIzOTM1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/2393551?v=4","gravatar_id":"","url":"https://api.github.com/users/monklof","html_url":"https://github.com/monklof","followers_url":"https://api.github.com/users/monklof/followers","following_url":"https://api.github.com/users/monklof/following{/other_user}","gists_url":"https://api.github.com/users/monklof/gists{/gist_id}","starred_url":"https://api.github.com/users/monklof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/monklof/subscriptions","organizations_url":"https://api.github.com/users/monklof/orgs","repos_url":"https://api.github.com/users/monklof/repos","events_url":"https://api.github.com/users/monklof/events{/privacy}","received_events_url":"https://api.github.com/users/monklof/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T06:51:59Z","updated_at":"2021-02-25T06:51:59Z","author_association":"CONTRIBUTOR","body":"@tkonolige Thanks, you are right, it does not time the total execution of Invoke and InvokeClosure, I only implemented the instruction-level profiling, function-level is not included.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785661470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785664712","html_url":"https://github.com/apache/tvm/issues/7246#issuecomment-785664712","issue_url":"https://api.github.com/repos/apache/tvm/issues/7246","id":785664712,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTY2NDcxMg==","user":{"login":"zhuwenxi","id":4969797,"node_id":"MDQ6VXNlcjQ5Njk3OTc=","avatar_url":"https://avatars.githubusercontent.com/u/4969797?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuwenxi","html_url":"https://github.com/zhuwenxi","followers_url":"https://api.github.com/users/zhuwenxi/followers","following_url":"https://api.github.com/users/zhuwenxi/following{/other_user}","gists_url":"https://api.github.com/users/zhuwenxi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuwenxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuwenxi/subscriptions","organizations_url":"https://api.github.com/users/zhuwenxi/orgs","repos_url":"https://api.github.com/users/zhuwenxi/repos","events_url":"https://api.github.com/users/zhuwenxi/events{/privacy}","received_events_url":"https://api.github.com/users/zhuwenxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T06:58:52Z","updated_at":"2021-02-25T06:58:52Z","author_association":"CONTRIBUTOR","body":"Make sense. So no new intrinsic required, what we need to do is merely to change the semantics of `tvm_stack_alloca` and its corresponding implementations in those 3 backends. Got it. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785664712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785768364","html_url":"https://github.com/apache/tvm/pull/7473#issuecomment-785768364","issue_url":"https://api.github.com/repos/apache/tvm/issues/7473","id":785768364,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTc2ODM2NA==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T09:53:28Z","updated_at":"2021-02-25T09:53:28Z","author_association":"CONTRIBUTOR","body":"Thanks @ANSHUMAN87, this is now merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785768364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785935582","html_url":"https://github.com/apache/tvm/pull/7488#issuecomment-785935582","issue_url":"https://api.github.com/repos/apache/tvm/issues/7488","id":785935582,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTkzNTU4Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T14:29:42Z","updated_at":"2021-02-25T14:29:42Z","author_association":"MEMBER","body":"cc @junrushao1994 @csullivan would be great if you can help review as well","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/785935582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786136455","html_url":"https://github.com/apache/tvm/pull/7512#issuecomment-786136455","issue_url":"https://api.github.com/repos/apache/tvm/issues/7512","id":786136455,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjEzNjQ1NQ==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T19:12:04Z","updated_at":"2021-02-25T19:12:04Z","author_association":"CONTRIBUTOR","body":"@tkonolige no, the GraphRuntime has two different paths to run operators: one for local operators where non-kernel ops could be done fairly inexpensively (I.e. layout transforms maybe? this isn't actually used) and one for RPC operators (where that is not easy). right now tvm_op == \"null\" (for graph nodes which are inputs) or \"tvm_op\" (for graph nodes which are operator function execs).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786136455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786145854","html_url":"https://github.com/apache/tvm/pull/7431#issuecomment-786145854","issue_url":"https://api.github.com/repos/apache/tvm/issues/7431","id":786145854,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjE0NTg1NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T19:27:59Z","updated_at":"2021-02-25T19:27:59Z","author_association":"MEMBER","body":"Thanks @rkimball !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786145854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786146079","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-786146079","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":786146079,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjE0NjA3OQ==","user":{"login":"zxybazh","id":3203174,"node_id":"MDQ6VXNlcjMyMDMxNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3203174?v=4","gravatar_id":"","url":"https://api.github.com/users/zxybazh","html_url":"https://github.com/zxybazh","followers_url":"https://api.github.com/users/zxybazh/followers","following_url":"https://api.github.com/users/zxybazh/following{/other_user}","gists_url":"https://api.github.com/users/zxybazh/gists{/gist_id}","starred_url":"https://api.github.com/users/zxybazh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxybazh/subscriptions","organizations_url":"https://api.github.com/users/zxybazh/orgs","repos_url":"https://api.github.com/users/zxybazh/repos","events_url":"https://api.github.com/users/zxybazh/events{/privacy}","received_events_url":"https://api.github.com/users/zxybazh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T19:28:20Z","updated_at":"2021-02-25T19:28:20Z","author_association":"MEMBER","body":"Hi, Menghao, it seems like you have some extra spaces in the end of line in python files. You could check out the required formatting result [here](https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-7021/4/pipeline). Also, the reason that the Windows build failed seems to be that you need to import `sklearn` instead of `scipy`. @junrushao1994 Do you think it feasible to add a dependency here?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786146079/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786175478","html_url":"https://github.com/apache/tvm/pull/7517#issuecomment-786175478","issue_url":"https://api.github.com/repos/apache/tvm/issues/7517","id":786175478,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjE3NTQ3OA==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T20:20:06Z","updated_at":"2021-02-25T20:20:06Z","author_association":"CONTRIBUTOR","body":"> @alexwong can you add a test?\r\n\r\nYep, added a test in maxpool2d. It creates a call expr which hits the new function.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786175478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786215477","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-786215477","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":786215477,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjIxNTQ3Nw==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T21:13:54Z","updated_at":"2021-02-25T21:13:54Z","author_association":"CONTRIBUTOR","body":"@limenghao we use `black` to format all Python code. Specifically, you can do auto-formatting as follows:\r\n```\r\npip3 install black\r\nblack -l 100 <python file>\r\n```\r\nYou can also follow @zxybazh's suggestion to fix the formatting by referring to the CI errors, tho.\r\n\r\nFor `scipy`, TVM already depends on `scipy`. See `python/gen_requirements.py` for detail (cc @areusch).\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786215477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786227834","html_url":"https://github.com/apache/tvm/pull/7021#issuecomment-786227834","issue_url":"https://api.github.com/repos/apache/tvm/issues/7021","id":786227834,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjIyNzgzNA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T21:20:06Z","updated_at":"2021-02-25T21:20:35Z","author_association":"CONTRIBUTOR","body":"@comaniac @limenghao can you add any new requirements to python/gen_requirements.py? scipy is already present there, i'm not sure if you need scikit-learn based on skimming?\r\n\r\ntry not to set any version constraint in there, unless there is a functional reason why we could not upgrade.\r\n\r\nif we need to make more dependencies available in CI, we'll need to rebuild and push the docker ci-* images. I believe a committer will need to do that.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786227834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786238424","html_url":"https://github.com/apache/tvm/pull/7497#issuecomment-786238424","issue_url":"https://api.github.com/repos/apache/tvm/issues/7497","id":786238424,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjIzODQyNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T21:28:20Z","updated_at":"2021-02-25T21:28:20Z","author_association":"MEMBER","body":"cc @comaniac @merrymercy ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786238424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786274764","html_url":"https://github.com/apache/tvm/pull/7522#issuecomment-786274764","issue_url":"https://api.github.com/repos/apache/tvm/issues/7522","id":786274764,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjI3NDc2NA==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T22:35:59Z","updated_at":"2021-02-25T22:35:59Z","author_association":"CONTRIBUTOR","body":"I think its fine to skip the test in this case, it makes much more sense to use `checked_type`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786274764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786303375","html_url":"https://github.com/apache/tvm/pull/7477#issuecomment-786303375","issue_url":"https://api.github.com/repos/apache/tvm/issues/7477","id":786303375,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjMwMzM3NQ==","user":{"login":"codeislife99","id":17168743,"node_id":"MDQ6VXNlcjE3MTY4NzQz","avatar_url":"https://avatars.githubusercontent.com/u/17168743?v=4","gravatar_id":"","url":"https://api.github.com/users/codeislife99","html_url":"https://github.com/codeislife99","followers_url":"https://api.github.com/users/codeislife99/followers","following_url":"https://api.github.com/users/codeislife99/following{/other_user}","gists_url":"https://api.github.com/users/codeislife99/gists{/gist_id}","starred_url":"https://api.github.com/users/codeislife99/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codeislife99/subscriptions","organizations_url":"https://api.github.com/users/codeislife99/orgs","repos_url":"https://api.github.com/users/codeislife99/repos","events_url":"https://api.github.com/users/codeislife99/events{/privacy}","received_events_url":"https://api.github.com/users/codeislife99/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T23:32:58Z","updated_at":"2021-02-25T23:32:58Z","author_association":"CONTRIBUTOR","body":"@tkonolige All your comments have been resolved. Any other changes you'd like me to make  ? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786303375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786323050","html_url":"https://github.com/apache/tvm/pull/7516#issuecomment-786323050","issue_url":"https://api.github.com/repos/apache/tvm/issues/7516","id":786323050,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjMyMzA1MA==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T00:27:16Z","updated_at":"2021-02-26T00:27:49Z","author_association":"MEMBER","body":"How can we address this kind of issue in the future?\r\n\r\nShould we organize the optimization passes in `src/relay/backend/vm/compiler.cc` and `src/relay/backend/build_module.cc` into a common place? So we don't need to add every new pass in two places.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786323050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786323884","html_url":"https://github.com/apache/tvm/issues/7310#issuecomment-786323884","issue_url":"https://api.github.com/repos/apache/tvm/issues/7310","id":786323884,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjMyMzg4NA==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T00:29:32Z","updated_at":"2021-02-26T00:29:32Z","author_association":"MEMBER","body":"I think this problem is similar to the problems in #7475 and  #7501\r\nWe can fix it by taking a similar approach.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786323884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786330018","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-786330018","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":786330018,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjMzMDAxOA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T00:46:32Z","updated_at":"2021-02-26T01:36:22Z","author_association":"CONTRIBUTOR","body":"I prepared a test model which uses both `destination tensor` and `copy_ output tensor` after the `copy_` operator.\r\nPyTorch and TVM outputs are the same\r\nWhat other test models can we try?\r\n```\r\nimport torch\r\nimport tvm\r\nfrom tvm import relay\r\nimport numpy as np\r\n        \r\nclass Net(torch.nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n    def forward(self, values):\r\n        scale = values.shape[0]\r\n        A = torch.zeros(values.shape)\r\n        B = torch.stack([A] * scale)\r\n        V1 = B + 1\r\n        C = B.copy_(values)\r\n        V2 = B + 2\r\n        V3 = C + 3\r\n        D = V1 + V2 + V3\r\n        return D\r\n        \r\n\r\nnet = Net()\r\na = torch.tensor([0, 1, 2, 6])\r\nnet(a)\r\n\r\ntraced_net = torch.jit.trace(net, (a))\r\n\r\nctx = tvm.cpu(0)\r\ntarget = 'llvm'\r\n\r\nshape_list = [(\"input0\", [4,]),]\r\nmod, params = relay.frontend.from_pytorch(traced_net, shape_list)\r\n\r\nwith tvm.transform.PassContext(opt_level=3):\r\n    lib = relay.build(mod, target=target, params=params)\r\n\r\nfunc=mod['main']\r\nintrp = relay.create_executor(\"graph\", ctx=ctx, target=target)\r\nff=intrp.evaluate(func)\r\nff([0, 1, 2, 6])\r\n\r\n<tvm.nd.NDArray shape=(4, 4), cpu(0)>\r\narray([[ 6.,  8., 10., 18.],\r\n       [ 6.,  8., 10., 18.],\r\n       [ 6.,  8., 10., 18.],\r\n       [ 6.,  8., 10., 18.]], dtype=float32)\r\n```\r\n\r\nRelay graph:\r\n```\r\nprint(func)\r\nfn (%input0: Tensor[(4), int64]) {\r\n  %0 = full(0, shape=[4], dtype=\"float32\");\r\n  %1 = (%0, %0, %0, %0);\r\n  %2 = stack(%1);\r\n  %3 = add(%2, 1f);\r\n  %4 = cast(%input0, dtype=\"float32\");\r\n  %5 = (%4, %4, %4, %4);\r\n  %6 = stack(%5);\r\n  %7 = add(%6, 2f);\r\n  %8 = add(%3, %7);\r\n  %9 = add(%6, 3f);\r\n  add(%8, %9)\r\n}\r\n```\r\n\r\n[Torch graph](https://www.dropbox.com/s/czxe97h5itdtuny/copy_net_1.png?dl=0):\r\n```\r\nprint(traced_net.graph)\r\ngraph(%self : __torch__.Net,\r\n      %values : Long(4, strides=[1], requires_grad=0, device=cpu)):\r\n  %7 : int = prim::Constant[value=0]() # <stdin>:6:0\r\n  %8 : int = aten::size(%values, %7) # <stdin>:6:0\r\n  %9 : Long(device=cpu) = prim::NumToTensor(%8)\r\n  %10 : int = aten::Int(%9)\r\n  %11 : int[] = prim::ListConstruct(%10)\r\n  %12 : int = prim::Constant[value=6]() # <stdin>:6:0\r\n  %13 : None = prim::Constant()\r\n  %14 : Device = prim::Constant[value=\"cpu\"]() # <stdin>:6:0\r\n  %15 : bool = prim::Constant[value=0]() # <stdin>:6:0\r\n  %A : Float(4, strides=[1], requires_grad=0, device=cpu) = aten::zeros(%11, %12, %13, %14, %15) # <stdin>:6:0\r\n  %17 : Tensor[] = prim::ListConstruct(%A, %A, %A, %A)\r\n  %18 : int = prim::Constant[value=0]() # <stdin>:7:0\r\n  %B.1 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::stack(%17, %18) # <stdin>:7:0\r\n  %20 : Long(requires_grad=0, device=cpu) = prim::Constant[value={1}]() # <stdin>:8:0\r\n  %21 : int = prim::Constant[value=1]() # <stdin>:8:0\r\n  %V1 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::add(%B.1, %20, %21) # <stdin>:8:0\r\n  %23 : bool = prim::Constant[value=0]()\r\n  %B : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::copy_(%B.1, %values, %23) # <stdin>:9:0\r\n  %25 : Long(requires_grad=0, device=cpu) = prim::Constant[value={2}]() # <stdin>:10:0\r\n  %26 : int = prim::Constant[value=1]() # <stdin>:10:0\r\n  %V2 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::add(%B, %25, %26) # <stdin>:10:0\r\n  %28 : Long(requires_grad=0, device=cpu) = prim::Constant[value={3}]() # <stdin>:11:0\r\n  %29 : int = prim::Constant[value=1]() # <stdin>:11:0\r\n  %V3 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::add(%B, %28, %29) # <stdin>:11:0\r\n  %31 : int = prim::Constant[value=1]() # <stdin>:12:0\r\n  %32 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::add(%V1, %V2, %31) # <stdin>:12:0\r\n  %33 : int = prim::Constant[value=1]() # <stdin>:12:0\r\n  %34 : Float(4, 4, strides=[4, 1], requires_grad=0, device=cpu) = aten::add(%32, %V3, %33) # <stdin>:12:0\r\n  return (%34)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786330018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786332326","html_url":"https://github.com/apache/tvm/pull/7516#issuecomment-786332326","issue_url":"https://api.github.com/repos/apache/tvm/issues/7516","id":786332326,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjMzMjMyNg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T00:53:10Z","updated_at":"2021-02-26T00:53:10Z","author_association":"CONTRIBUTOR","body":"@merrymercy I think that initially the intent for Relay VM compilation was to use the same passes as the graph runtime. I think that the pass manager refactor ended up being applied to graph runtime and not the VM IIRC causing the two to diverge?\r\n@jroesch and @tkonolige has some input on this and we could think of a plan to unify the passes since technically the two runtimes should use the same passes. This could use an RFC but I think everyone will be behind it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786332326/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786347109","html_url":"https://github.com/apache/tvm/pull/7534#issuecomment-786347109","issue_url":"https://api.github.com/repos/apache/tvm/issues/7534","id":786347109,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjM0NzEwOQ==","user":{"login":"zxybazh","id":3203174,"node_id":"MDQ6VXNlcjMyMDMxNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3203174?v=4","gravatar_id":"","url":"https://api.github.com/users/zxybazh","html_url":"https://github.com/zxybazh","followers_url":"https://api.github.com/users/zxybazh/followers","following_url":"https://api.github.com/users/zxybazh/following{/other_user}","gists_url":"https://api.github.com/users/zxybazh/gists{/gist_id}","starred_url":"https://api.github.com/users/zxybazh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxybazh/subscriptions","organizations_url":"https://api.github.com/users/zxybazh/orgs","repos_url":"https://api.github.com/users/zxybazh/repos","events_url":"https://api.github.com/users/zxybazh/events{/privacy}","received_events_url":"https://api.github.com/users/zxybazh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T01:31:51Z","updated_at":"2021-02-26T01:31:51Z","author_association":"MEMBER","body":"This is the python script part and a lot of testcases could be added.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786347109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786350361","html_url":"https://github.com/apache/tvm/pull/7487#issuecomment-786350361","issue_url":"https://api.github.com/repos/apache/tvm/issues/7487","id":786350361,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjM1MDM2MQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T01:41:23Z","updated_at":"2021-02-26T01:41:23Z","author_association":"MEMBER","body":"Thanks @anijain2305 @mbrookhart ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786350361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786356125","html_url":"https://github.com/apache/tvm/pull/7441#issuecomment-786356125","issue_url":"https://api.github.com/repos/apache/tvm/issues/7441","id":786356125,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjM1NjEyNQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T01:59:00Z","updated_at":"2021-02-26T01:59:00Z","author_association":"MEMBER","body":"Thanks @ymwangg @codeislife99, this is really a great work!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786356125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786357373","html_url":"https://github.com/apache/tvm/pull/7441#issuecomment-786357373","issue_url":"https://api.github.com/repos/apache/tvm/issues/7441","id":786357373,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjM1NzM3Mw==","user":{"login":"ymwangg","id":19481308,"node_id":"MDQ6VXNlcjE5NDgxMzA4","avatar_url":"https://avatars.githubusercontent.com/u/19481308?v=4","gravatar_id":"","url":"https://api.github.com/users/ymwangg","html_url":"https://github.com/ymwangg","followers_url":"https://api.github.com/users/ymwangg/followers","following_url":"https://api.github.com/users/ymwangg/following{/other_user}","gists_url":"https://api.github.com/users/ymwangg/gists{/gist_id}","starred_url":"https://api.github.com/users/ymwangg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ymwangg/subscriptions","organizations_url":"https://api.github.com/users/ymwangg/orgs","repos_url":"https://api.github.com/users/ymwangg/repos","events_url":"https://api.github.com/users/ymwangg/events{/privacy}","received_events_url":"https://api.github.com/users/ymwangg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T02:02:25Z","updated_at":"2021-02-26T02:02:25Z","author_association":"CONTRIBUTOR","body":"@masahi thanks for making this such an interesting project!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786357373/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786398027","html_url":"https://github.com/apache/tvm/issues/7530#issuecomment-786398027","issue_url":"https://api.github.com/repos/apache/tvm/issues/7530","id":786398027,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjM5ODAyNw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T04:09:45Z","updated_at":"2021-02-26T04:09:45Z","author_association":"MEMBER","body":"Ok I will take a look at this","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786398027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786423755","html_url":"https://github.com/apache/tvm/pull/7517#issuecomment-786423755","issue_url":"https://api.github.com/repos/apache/tvm/issues/7517","id":786423755,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQyMzc1NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T05:37:27Z","updated_at":"2021-02-26T05:37:27Z","author_association":"MEMBER","body":"Thanks @alexwong ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786423755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786451620","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-786451620","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":786451620,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQ1MTYyMA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T06:52:36Z","updated_at":"2021-02-26T06:52:36Z","author_association":"MEMBER","body":"People never use `copy_` directly. It is better to make it more realistic. Also see my point on dynamic input support.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786451620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786464453","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-786464453","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":786464453,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQ2NDQ1Mw==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T07:23:48Z","updated_at":"2021-02-26T07:28:35Z","author_association":"CONTRIBUTOR","body":"What could be the example of more realistic Net with `copy_`?\r\nhttps://github.com/facebookresearch/detectron2/search?q=copy_%28","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786464453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786465121","html_url":"https://github.com/apache/tvm/issues/7530#issuecomment-786465121","issue_url":"https://api.github.com/repos/apache/tvm/issues/7530","id":786465121,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQ2NTEyMQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T07:25:23Z","updated_at":"2021-02-26T07:25:23Z","author_association":"MEMBER","body":"We can add `SimplifyInference` to prereq passes list in `FoldConstant`: https://github.com/apache/tvm/blob/4e211a735221a9b9d188422025e2d464e37b3c96/src/relay/transforms/fold_constant.cc#L386\r\n\r\nIf we do this,\r\n```\r\nreturn CreateFunctionPass(pass_func, 2, \"FoldConstant\", {\"SimplifyInference\"});\r\n```\r\n`SimplifyInference` will automatically run before `FoldConstant`. But then `SimplifyInference` would run too many times.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786465121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786466712","html_url":"https://github.com/apache/tvm/pull/7513#issuecomment-786466712","issue_url":"https://api.github.com/repos/apache/tvm/issues/7513","id":786466712,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQ2NjcxMg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-26T07:29:18Z","updated_at":"2021-02-26T07:29:18Z","author_association":"MEMBER","body":"One example I know is in-place assignment like this https://github.com/pytorch/vision/blob/433283ebbf629c8b5bf27e28af7265267ac0af00/torchvision/ops/poolers.py#L269","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/786466712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]