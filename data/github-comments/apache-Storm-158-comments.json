[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631165","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631165","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631165,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T21:27:24Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49128132\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49128132</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/README.md &#8212;<br/>\n    @@ -405,7 +410,123 @@ On worker hosts the bolt/trident-state code will use the keytab file with princi<br/>\n     Namenode. This method is little dangerous as you need to ensure all workers have the keytab file at the same location and you need<br/>\n     to remember this as you bring up new hosts in the cluster.</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>\n\t<ol>\n\t\t<li>\n\t\t<ol>\n\t\t\t<li>License<br/>\n    +---<br/>\n    +<br/>\n    +# HDFS Spout<br/>\n    +<br/>\n    +Hdfs spout is intended to allow feeding data into Storm from a HDFS directory. <br/>\n    +It will actively monitor the directory to consume any new files that appear in the directory.<br/>\n    +HDFS spout does not support Trident currently.<br/>\n    +<br/>\n    +*<b>Impt</b>*: Hdfs spout assumes that the files being made visible to it in the monitored directory <br/>\n    +are NOT actively being written to. Only after a file is completely written should it be made<br/>\n    +visible to the spout. This can be achieved by either writing the files out to another directory <br/>\n    +and once completely written, move it to the monitored directory. Alternatively the file<br/>\n    +can be created with a '.ignore' suffix in the monitored directory and after data is completely <br/>\n    +written, rename it without the suffix. File names with a '.ignore' suffix are ignored<br/>\n    +by the spout.<br/>\n    +<br/>\n    +When the spout is actively consuming a file, it renames the file with a '.inprogress' suffix.<br/>\n    +After consuming all the contents in the file, the file will be moved to a configurable <b>done</b> <br/>\n    +directory and the '.inprogress' suffix will be dropped.<br/>\n    +<br/>\n    +*<b>Concurrency</b>* If multiple spout instances are used in the topology, each instance will consume<br/>\n    +a different file. Synchronization among spout instances is done using lock files created in a <br/>\n    +(by default) '.lock' subdirectory under the monitored directory. A file with the same name<br/>\n    +as the file being consumed (without the in progress suffix) is created in the lock directory.<br/>\n    +Once the file is completely consumed, the corresponding lock file is deleted.<br/>\n    +<br/>\n    +*<b>Recovery from failure</b>*<br/>\n    +Periodically, the spout also records progress information wrt to how much of the file has been<br/>\n    +consumed in the lock file. In case of an crash of the spout instance (or force kill of topology) <br/>\n    +another spout can take over the file and resume from the location recorded in the lock file.<br/>\n    +<br/>\n    +Certain error conditions (such spout crashing) can leave behind lock files without deleting them. <br/>\n    +Such a stale lock file also indicates that the corresponding input file has also not been completely <br/>\n    +processed. When detected, ownership of such stale lock files will be transferred to another spout.   <br/>\n    +The configuration 'hdfsspout.lock.timeout.sec' is used to specify the duration of inactivity after <br/>\n    +which lock files should be considered stale. For lock file ownership transfer to succeed, the HDFS<br/>\n    +lease on the file (from prev lock owner) should have expired. Spouts scan for stale lock files<br/>\n    +before selecting the next file for consumption.<br/>\n    +<br/>\n    +*<b>Lock on *.lock</b> Directory**<br/>\n    +Hdfs spout instances create a <b>DIRLOCK</b> file in the .lock directory to co-ordinate certain accesses to <br/>\n    +the .lock dir itself. A spout will try to create it when it needs access to the .lock directory and<br/>\n    +then delete it when done.  In case of a topology crash or force kill, this file may not get deleted.</li>\n\t\t</ol>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ol>\n\t</li>\n</ul>\n\n\n<p>    you are right.. it should.  I should reword it. Thanks!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169828477","html_url":"https://github.com/apache/storm/pull/978#issuecomment-169828477","issue_url":"https://api.github.com/repos/apache/storm/issues/978","id":169828477,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTgyODQ3Nw==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:33:30Z","updated_at":"2016-01-07T22:33:30Z","author_association":"CONTRIBUTOR","body":"@vesense why is this change necessary?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169828477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693181","html_url":"https://github.com/apache/storm/issues/5255#issuecomment-2612693181","issue_url":"https://api.github.com/repos/apache/storm/issues/5255","id":2612693181,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTMxODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:33:31Z","updated_at":"2025-01-24T14:41:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/978#issuecomment-169828477\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/978#issuecomment-169828477</a></p>\n\n<p>    @vesense why is this change necessary?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692878","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692878","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692878,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:37:14Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49136454\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49136454</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -92,9 +108,17 @@ private void ack(Tuple tuple) throws SolrServerException, IOException {<br/>\n     if (commitStgy == null) </p>\n{\n collector.ack(tuple);\n     }\n<p> else {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>toCommitTuples.add(tuple);</li>\n\t<li>commitStgy.update();</li>\n\t<li>if (commitStgy.commit()) {<br/>\n    +    boolean forceCommit = false;<br/>\n    +    if (TupleUtils.isTick(tuple)) \n{\n    +LOG.debug(\"TICK! forcing solr client commit\");\n    +collector.ack(tuple);\n    +forceCommit = true;\n    +    }\n<p> else </p>\n{\n    +toCommitTuples.add(tuple);\n    +commitStgy.update();\n    +    }\n<p>    +<br/>\n    +    if (forceCommit || commitStgy.commit()) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @vesense Can you please follow te suggestion that I gave as the code is much cleaner.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692882","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692882","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692882,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:37:28Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49136481\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49136481</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -92,9 +108,17 @@ private void ack(Tuple tuple) throws SolrServerException, IOException {<br/>\n     if (commitStgy == null) </p>\n{\n collector.ack(tuple);\n     }\n<p> else {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>toCommitTuples.add(tuple);</li>\n\t<li>commitStgy.update();</li>\n\t<li>if (commitStgy.commit()) {<br/>\n    +    boolean forceCommit = false;<br/>\n    +    if (TupleUtils.isTick(tuple)) {<br/>\n    +LOG.debug(\"TICK! forcing solr client commit\");<br/>\n    +collector.ack(tuple);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    tick tuples don't need to be acked</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692887","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692887","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692887,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:39:10Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49136662\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49136662</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -131,6 +155,26 @@ private void failQueuedTuples(List<Tuple> failedTuples) </p>\n{\n     return queuedTuples;\n }\n\n<p>    +    public SolrUpdateBolt withTickIntervalSecs(int tickTupleInterval) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @vesense this violates encapsulation and should be avoided</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169832464","html_url":"https://github.com/apache/storm/pull/994#issuecomment-169832464","issue_url":"https://api.github.com/repos/apache/storm/issues/994","id":169832464,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTgzMjQ2NA==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:52:00Z","updated_at":"2016-01-07T22:52:00Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169832464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692889","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692889","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692889,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T22:52:31Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49138053\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49138053</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -59,16 +64,24 @@ public SolrUpdateBolt(SolrConfig solrConfig, SolrMapper solrMapper, SolrCommitSt<br/>\n     this.solrConfig = solrConfig;<br/>\n     this.solrMapper = solrMapper;<br/>\n     this.commitStgy = commitStgy;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>logger.debug(\"Created {} with the following configuration: \" +<br/>\n    +LOG.debug(\"Created {} with the following configuration: \" +<br/>\n \"<span class=\"error\">&#91;SolrConfig = {}&#93;</span>, <span class=\"error\">&#91;SolrMapper = {}&#93;</span>, <span class=\"error\">&#91;CommitStgy = {}&#93;</span>\",<br/>\n this.getClass().getSimpleName(), solrConfig, solrMapper, commitStgy);<br/>\n }</li>\n</ul>\n\n\n<p>    +    @Override<br/>\n public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {<br/>\n     this.collector = collector;<br/>\n     this.solrClient = new CloudSolrClient(solrConfig.getZkHostString());<br/>\n     this.toCommitTuples = new ArrayList<>(capacity());</p>\n\n<p>    +//set default tickTupleInterval if interval is zero<br/>\n    +if (stormConf.containsKey(\"topology.message.timeout.secs\") && tickTupleInterval == 0) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @vesense  This code should go in the SolrConfig object</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697814","html_url":"https://github.com/apache/storm/issues/5287#issuecomment-2612697814","issue_url":"https://api.github.com/repos/apache/storm/issues/5287","id":2612697814,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc4MTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T00:40:00Z","updated_at":"2025-01-24T14:43:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p>Created as a Blocker since the presentation is very visible on the UI page.</p>\n\n<p>It should not be too hard to fix.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697821","html_url":"https://github.com/apache/storm/issues/5287#issuecomment-2612697821","issue_url":"https://api.github.com/repos/apache/storm/issues/5287","id":2612697821,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc4MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T01:07:25Z","updated_at":"2025-01-24T14:43:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=johnbaba\">johnbaba</a>:</i>\n<p>+1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693346","html_url":"https://github.com/apache/storm/issues/5256#issuecomment-2612693346","issue_url":"https://api.github.com/repos/apache/storm/issues/5256","id":2612693346,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTMzNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T01:35:38Z","updated_at":"2025-01-24T14:41:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=beginner1\">beginner1</a>:</i>\n<p>can you help ? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169882606","html_url":"https://github.com/apache/storm/pull/936#issuecomment-169882606","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":169882606,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTg4MjYwNg==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T03:27:02Z","updated_at":"2016-01-08T03:28:24Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan  have also addressed your comment about releasing the lock files on exception with the latest push. Good catch(..) !  ;-)\n\nTake look.. all comments should have now been addressed. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169882606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631168","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631168","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631168,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T03:27:04Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-169882606\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-169882606</a></p>\n\n<p>    @arunmahadevan  have also addressed your comment about releasing the lock files on exception with the latest push. Good catch(..) !  <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692895","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692895","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692895,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:19:42Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49157203\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49157203</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -92,9 +108,17 @@ private void ack(Tuple tuple) throws SolrServerException, IOException {<br/>\n     if (commitStgy == null) </p>\n{\n collector.ack(tuple);\n     }\n<p> else {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>toCommitTuples.add(tuple);</li>\n\t<li>commitStgy.update();</li>\n\t<li>if (commitStgy.commit()) {<br/>\n    +    boolean forceCommit = false;<br/>\n    +    if (TupleUtils.isTick(tuple)) \n{\n    +LOG.debug(\"TICK! forcing solr client commit\");\n    +collector.ack(tuple);\n    +forceCommit = true;\n    +    }\n<p> else </p>\n{\n    +toCommitTuples.add(tuple);\n    +commitStgy.update();\n    +    }\n<p>    +<br/>\n    +    if (forceCommit || commitStgy.commit()) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    OK</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692902","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692902","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692902,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:19:49Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49157210\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49157210</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -92,9 +108,17 @@ private void ack(Tuple tuple) throws SolrServerException, IOException {<br/>\n     if (commitStgy == null) </p>\n{\n collector.ack(tuple);\n     }\n<p> else {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>toCommitTuples.add(tuple);</li>\n\t<li>commitStgy.update();</li>\n\t<li>if (commitStgy.commit()) {<br/>\n    +    boolean forceCommit = false;<br/>\n    +    if (TupleUtils.isTick(tuple)) {<br/>\n    +LOG.debug(\"TICK! forcing solr client commit\");<br/>\n    +collector.ack(tuple);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    OK</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692907","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692907","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692907,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:20:18Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49157240\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49157240</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -131,6 +155,26 @@ private void failQueuedTuples(List<Tuple> failedTuples) </p>\n{\n     return queuedTuples;\n }\n\n<p>    +    public SolrUpdateBolt withTickIntervalSecs(int tickTupleInterval) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    OK. Thx.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692910","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692910","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692910,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:25:24Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49157386\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49157386</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -59,16 +64,24 @@ public SolrUpdateBolt(SolrConfig solrConfig, SolrMapper solrMapper, SolrCommitSt<br/>\n     this.solrConfig = solrConfig;<br/>\n     this.solrMapper = solrMapper;<br/>\n     this.commitStgy = commitStgy;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>logger.debug(\"Created {} with the following configuration: \" +<br/>\n    +LOG.debug(\"Created {} with the following configuration: \" +<br/>\n \"<span class=\"error\">&#91;SolrConfig = {}&#93;</span>, <span class=\"error\">&#91;SolrMapper = {}&#93;</span>, <span class=\"error\">&#91;CommitStgy = {}&#93;</span>\",<br/>\n this.getClass().getSimpleName(), solrConfig, solrMapper, commitStgy);<br/>\n }</li>\n</ul>\n\n\n<p>    +    @Override<br/>\n public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {<br/>\n     this.collector = collector;<br/>\n     this.solrClient = new CloudSolrClient(solrConfig.getZkHostString());<br/>\n     this.toCommitTuples = new ArrayList<>(capacity());</p>\n\n<p>    +//set default tickTupleInterval if interval is zero<br/>\n    +if (stormConf.containsKey(\"topology.message.timeout.secs\") && tickTupleInterval == 0) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I prefer to keep this code in `prepare()` method since no `stormConf` in SolrConfig.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169894466","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169894466","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169894466,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTg5NDQ2Ng==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:37:58Z","updated_at":"2016-01-08T04:37:58Z","author_association":"MEMBER","body":"@hmcl  comments addressed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169894466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692917","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692917","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692917,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:37:59Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169894466\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169894466</a></p>\n\n<p>    @hmcl  comments addressed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169896957","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169896957","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169896957,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTg5Njk1Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:56:14Z","updated_at":"2016-01-08T04:56:14Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169896957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692925","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692925","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692925,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T04:56:15Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169896957\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169896957</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631184","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631184","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631184,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T05:11:53Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49158800\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49158800</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,133 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(DirLock.class);<br/>\n    +  private DirLock(FileSystem fs, Path lockFile) throws IOException {<br/>\n    +    if( fs.isDirectory(lockFile) ) </p>\n{\n    +      throw new IllegalArgumentException(lockFile.toString() + \" is not a directory\");\n    +    }\n<p>    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Get a lock on file if not already locked<br/>\n    +   *<br/>\n    +   * @param fs<br/>\n    +   * @param dir  the dir on which to get a lock<br/>\n    +   * @return The lock object if it the lock was acquired. Returns null if the dir is already locked.<br/>\n    +   * @throws IOException if there were errors<br/>\n    +   */<br/>\n    +  public static DirLock tryLock(FileSystem fs, Path dir) throws IOException {<br/>\n    +    Path lockFile = getDirLockFile(dir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The RawLocalFileSystem implementation does not seem to take care of atomicity - <span class=\"error\">&#91;link&#93;</span>(<a href=\"https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java#L299\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java#L299</a>). In the distributed mode name node could guarantee atomicity by locking, but I havent checked the details. Did you run the tests in local or distributed mode ? Anyways it would be hard to get the order and timing right for the tests to fail. <br/>\n    It might be good to add some comments/docs to call out that the locking semantics depends on the underlying implementation guarantees.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169898710","html_url":"https://github.com/apache/storm/pull/936#issuecomment-169898710","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":169898710,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTg5ODcxMA==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T05:15:27Z","updated_at":"2016-01-08T05:15:27Z","author_association":"CONTRIBUTOR","body":"+1 Please squash the commits and add some comments/docs on the locking semantics https://github.com/apache/storm/pull/936#discussion_r49158800\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169898710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631189","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631189","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631189,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T05:15:28Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-169898710\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-169898710</a></p>\n\n<p>    +1 Please squash the commits and add some comments/docs on the locking semantics <a href=\"https://github.com/apache/storm/pull/936#discussion_r49158800\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49158800</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694685","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694685","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694685,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ2ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T05:50:34Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user d2r opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1430\" title=\"UI Worker Functions: Replace pick-list with buttons\" class=\"issue-link\" data-issue-key=\"STORM-1430\"><del>STORM-1430</del></a> ui worker checkboxes</p>\n\n<p>    This adds new checkboxes to the Executors tables of the component pages. Selecting these will enable the debugging/profiling actions to be performed on multiple workers while making it much easier to choose workers—especially for topologies with hundreds of workers.</p>\n\n<p>    Look at the documentation to see what has changed. This is a little hard to test, because of <a href=\"https://issues.apache.org/jira/browse/STORM-1452\" title=\"Worker \"profiler\" actions broken by default\" class=\"issue-link\" data-issue-key=\"STORM-1452\"><del>STORM-1452</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-1452\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1452</a>). As a work-around, manually copy flight.bash to somewhere on the supervisor process's PATH and it should work.</p>\n\n<p>    This also cleans up some tooltip placement and removes some extra bindings from core.clj, and I put these in their own commits so it is clearer.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/d2r/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/d2r/storm</a> storm-1430-ui-worker-checkboxes</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #995</p>\n\n<hr />\n<p>commit 181a46dfa561ba863a170efc5b688e5427ee7089<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2016-01-08T05:06:03Z</p>\n\n<p>    removes unnecessary bindings</p>\n\n<p>commit a1c3ebbc249e5d35ae59531b424f90b930471378<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2016-01-08T05:22:40Z</p>\n\n<p>    corrects tooltip placement</p>\n\n<p>commit 497aa0991b05b1e8296511bbc3aacf0d9a0830ad<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2016-01-08T05:26:17Z</p>\n\n<p>    Adds debugging checkboxes and links to exec table</p>\n\n<p>commit c34266924a0bcb7c17bddc0a602580e892153651<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2016-01-08T05:27:30Z</p>\n\n<p>    updates profiling docs for action checkboxes & links</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697825","html_url":"https://github.com/apache/storm/issues/5287#issuecomment-2612697825","issue_url":"https://api.github.com/repos/apache/storm/issues/5287","id":2612697825,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc4MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T05:53:26Z","updated_at":"2025-01-24T14:43:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p>Here is a <a href=\"https://gist.github.com/d2r/ab15f312a5af1d9525af\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">partial patch</a> that makes everything work, but we still need to disable the jfr feature by default.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692931","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692931","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692931,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:08:43Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49160816\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49160816</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -92,9 +108,12 @@ private void ack(Tuple tuple) throws SolrServerException, IOException {<br/>\n     if (commitStgy == null) </p>\n{\n collector.ack(tuple);\n     }\n<p> else {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>toCommitTuples.add(tuple);</li>\n\t<li>commitStgy.update();</li>\n\t<li>if (commitStgy.commit()) {<br/>\n    +    final boolean isTickTuple = TupleUtils.isTick(tuple);<br/>\n    +    if (!isTickTuple) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Can you please add the inline comment: // Don't ack tick tuples.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690982","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690982","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690982,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:08:50Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49160828\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49160828</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/trident/MqttPublishFunction.java &#8212;<br/>\n    @@ -0,0 +1,84 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.trident;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.topology.FailedException;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.MqttTupleMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import storm.trident.operation.BaseFunction;<br/>\n    +import storm.trident.operation.TridentCollector;<br/>\n    +import storm.trident.operation.TridentOperationContext;<br/>\n    +import storm.trident.tuple.TridentTuple;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class MqttPublishFunction extends BaseFunction {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I thought about that distinction. Ultimately, I decided upon a function based on the following criteria:</p>\n\n<p>    1, There is no bulk publishing mechanism with MQTT, so there wouldn't be any performance benefit in processing tuples in batch.<br/>\n    2. Aside from publishing a message with a QoS of 2, we don't have any way to truly determine if it reached all subscribers, only the broker, and if the broker dies...??<br/>\n    3. Exactly once is virtually impossible with MQTT in a distributed environment. <br/>\n    4. Most MQTT use cases that need to scale avoid QoS 2 because of the overhead.</p>\n\n<p>    That being said, I'm perfectly open to exploring a MQTT State implementation if it would be useful.</p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692940","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692940","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692940,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:11:16Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49160913\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49160913</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -131,6 +150,21 @@ private void failQueuedTuples(List<Tuple> failedTuples) </p>\n{\n     return queuedTuples;\n }\n\n<p>    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @vesense  I noticed that the body of this method is exactly the same for AbstractHdfsBolt. Furthermore, it's very likely that many Storm connector bolts will use the same code. Can you please write a helper method in TupleUtils and call that method here and AbstractHdfsBolt. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692944","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692944","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692944,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:12:24Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49160962\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49160962</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/bolt/SolrUpdateBolt.java &#8212;<br/>\n    @@ -59,15 +63,24 @@ public SolrUpdateBolt(SolrConfig solrConfig, SolrMapper solrMapper, SolrCommitSt<br/>\n     this.solrConfig = solrConfig;<br/>\n     this.solrMapper = solrMapper;<br/>\n     this.commitStgy = commitStgy;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>logger.debug(\"Created {} with the following configuration: \" +<br/>\n    +LOG.debug(\"Created {} with the following configuration: \" +<br/>\n \"<span class=\"error\">&#91;SolrConfig = {}&#93;</span>, <span class=\"error\">&#91;SolrMapper = {}&#93;</span>, <span class=\"error\">&#91;CommitStgy = {}&#93;</span>\",<br/>\n this.getClass().getSimpleName(), solrConfig, solrMapper, commitStgy);<br/>\n }</li>\n</ul>\n\n\n<p>    +    @Override<br/>\n public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {<br/>\n     this.collector = collector;<br/>\n     this.solrClient = new CloudSolrClient(solrConfig.getZkHostString());<br/>\n     this.toCommitTuples = new ArrayList<>(capacity());<br/>\n    +this.tickTupleInterval = solrConfig.getTickTupleInterval();<br/>\n    +<br/>\n    +//set default tickTupleInterval<br/>\n    +if (stormConf.containsKey(\"topology.message.timeout.secs\") && tickTupleInterval == 0) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @vesense  Please create a private method called something setDefaultTickTupleInterval() with this code and call it here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692948","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692948","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692948,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:14:47Z","updated_at":"2025-01-24T14:41:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#discussion_r49161066\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#discussion_r49161066</a></p>\n\n<p>    &#8212; Diff: external/storm-solr/src/main/java/org/apache/storm/solr/config/SolrConfig.java &#8212;<br/>\n    @@ -39,4 +40,13 @@ public SolrConfig(String zkHostString) {<br/>\n public String getZkHostString() </p>\n{\n     return zkHostString;\n }\n<p>    +<br/>\n    +    public int getTickTupleInterval() </p>\n{\n    +return tickTupleInterval;\n    +    }\n<p>    +<br/>\n    +    public void setTickTupleInterval(int tickTupleInterval) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @vesense Can you please delete this set method and pass the tickTupleInterval in the constructor, or use a builder pattern. This object should be immutable and fully initialized once passed to the Bolt.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169908193","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169908193","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169908193,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTkwODE5Mw==","user":{"login":"sergeyevd","id":9090632,"node_id":"MDQ6VXNlcjkwOTA2MzI=","avatar_url":"https://avatars.githubusercontent.com/u/9090632?v=4","gravatar_id":"","url":"https://api.github.com/users/sergeyevd","html_url":"https://github.com/sergeyevd","followers_url":"https://api.github.com/users/sergeyevd/followers","following_url":"https://api.github.com/users/sergeyevd/following{/other_user}","gists_url":"https://api.github.com/users/sergeyevd/gists{/gist_id}","starred_url":"https://api.github.com/users/sergeyevd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergeyevd/subscriptions","organizations_url":"https://api.github.com/users/sergeyevd/orgs","repos_url":"https://api.github.com/users/sergeyevd/repos","events_url":"https://api.github.com/users/sergeyevd/events{/privacy}","received_events_url":"https://api.github.com/users/sergeyevd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:15:33Z","updated_at":"2016-01-08T06:15:33Z","author_association":"NONE","body":"Thanks for comments! @harshach could you please give me ETA of @hmcl PR with this feature? I want to be sure, that new storm-kafka will work nicely with my existing code base. Also, I can write non-autocommit approach by next two days, if its needed.\nHave a nice day! \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169908193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169908195","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169908195","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169908195,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTkwODE5NQ==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:15:34Z","updated_at":"2016-01-08T06:15:34Z","author_association":"CONTRIBUTOR","body":"+1 once the last few, minor, comments are addressed.\n\n@vesense Thanks for the great work!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169908195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692954","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692954","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692954,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI5NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:15:36Z","updated_at":"2025-01-24T14:41:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169908195\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169908195</a></p>\n\n<p>    +1 once the last few, minor, comments are addressed.</p>\n\n<p>    @vesense Thanks for the great work!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690987","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690987","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690987,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:25:31Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49161519\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49161519</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/trident/MqttPublishFunction.java &#8212;<br/>\n    @@ -0,0 +1,84 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.trident;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.topology.FailedException;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.MqttTupleMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import storm.trident.operation.BaseFunction;<br/>\n    +import storm.trident.operation.TridentCollector;<br/>\n    +import storm.trident.operation.TridentOperationContext;<br/>\n    +import storm.trident.tuple.TridentTuple;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class MqttPublishFunction extends BaseFunction {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Since the function does not emit anything, it cannot be chained with further operations like normal functions and it appeared more like a sink. Hence thought it might be more apt for it to be implemented as a state instead of a function.</p>\n\n<p>    Agree that its difficult to do exactly once, but many other state implementations also does not guarantee exactly once. Leave it to you to decide the right approach.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169910619","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169910619","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169910619,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTkxMDYxOQ==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T06:41:13Z","updated_at":"2016-01-08T06:41:13Z","author_association":"CONTRIBUTOR","body":"@Deepnekroz I am working on this. We wil make sure that all works well with what you have. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169910619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698111","html_url":"https://github.com/apache/storm/issues/5288#issuecomment-2612698111","issue_url":"https://api.github.com/repos/apache/storm/issues/5288","id":2612698111,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTgxMTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T08:59:24Z","updated_at":"2025-01-24T14:43:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user caofangkun opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/996\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/996</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1453\" title=\"nimbus.clj/wait-for-desired-code-replication print wrong log message\" class=\"issue-link\" data-issue-key=\"STORM-1453\"><del>STORM-1453</del></a> nimbus.clj/wait-for-desired-code-replication print wrong log message</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/caofangkun/apache-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/caofangkun/apache-storm</a> storm-1453</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/996.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/996.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #996</p>\n\n<hr />\n<p>commit ed25dfda1f47a6fffcaea681f0a395f274ff1bf6<br/>\nAuthor: ablecao <ablecao@tencent.com><br/>\nDate:   2016-01-08T08:56:58Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1453\" title=\"nimbus.clj/wait-for-desired-code-replication print wrong log message\" class=\"issue-link\" data-issue-key=\"STORM-1453\"><del>STORM-1453</del></a> nimbus.clj/wait-for-desired-code-replication print wrong log message</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693352","html_url":"https://github.com/apache/storm/issues/5256#issuecomment-2612693352","issue_url":"https://api.github.com/repos/apache/storm/issues/5256","id":2612693352,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTMzNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:26:54Z","updated_at":"2025-01-24T14:41:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Neither of those messages indicate that an error has occurred.  They are warnings but are perfectly normal in some situations.  Please ask these types of questions on the mailing list user@storm.apache.org, not in JIRA.  Also 0.8.2 is a really old version of storm and eats any error messages that are written to stdout/stderr by the worker process.  If you can upgrade to something like 0.9.6 it should help with your debugging a lot.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612693352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597399","html_url":"https://github.com/apache/storm/issues/4868#issuecomment-2612597399","issue_url":"https://api.github.com/repos/apache/storm/issues/4868","id":2612597399,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTczOTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:47:49Z","updated_at":"2025-01-24T13:59:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/871#discussion_r49201617\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/871#discussion_r49201617</a></p>\n\n<p>    &#8212; Diff: external/storm-hive/src/main/java/org/apache/storm/hive/bolt/HiveBolt.java &#8212;<br/>\n    @@ -25,75 +26,40 @@<br/>\n     import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n     import backtype.storm.utils.TupleUtils;<br/>\n     import backtype.storm.Config;<br/>\n    +import org.apache.storm.hive.common.HiveConnector;<br/>\n     import org.apache.storm.hive.common.HiveWriter;<br/>\n    -import com.google.common.util.concurrent.ThreadFactoryBuilder;<br/>\n     import org.apache.hive.hcatalog.streaming.*;<br/>\n     import org.apache.storm.hive.common.HiveOptions;<br/>\n     import org.apache.storm.hive.common.HiveUtils;<br/>\n    -import org.apache.hadoop.security.UserGroupInformation;<br/>\n     import org.slf4j.Logger;<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import java.util.List;<br/>\n    -import java.util.ArrayList;<br/>\n     import java.util.Map;<br/>\n    -import java.util.HashMap;<br/>\n    -import java.util.Timer;<br/>\n    -import java.util.TimerTask;<br/>\n    -import java.util.Map.Entry;<br/>\n    -import java.util.concurrent.ExecutorService;<br/>\n    -import java.util.concurrent.Executors;<br/>\n    -import java.util.concurrent.TimeUnit;<br/>\n    -import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    -import java.util.List;<br/>\n     import java.util.LinkedList;<br/>\n    -import java.io.IOException;</p>\n\n<p>     public class HiveBolt extends  BaseRichBolt {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(HiveBolt.class);<br/>\n private OutputCollector collector;<br/>\n private HiveOptions options;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private ExecutorService callTimeoutPool;</li>\n\t<li>private transient Timer heartBeatTimer;</li>\n\t<li>private Boolean kerberosEnabled = false;</li>\n\t<li>private AtomicBoolean timeToSendHeartBeat = new AtomicBoolean(false);</li>\n\t<li>private UserGroupInformation ugi = null;</li>\n\t<li>HashMap<HiveEndPoint, HiveWriter> allWriters;<br/>\n    +    private HiveConnector hiveConnector;<br/>\n private List<Tuple> tupleBatch;<br/>\n    +    transient CountMetric serializationErrorMetric;</li>\n</ul>\n\n\n<p> public HiveBolt(HiveOptions options) </p>\n{\n     this.options = options;\n     tupleBatch = new LinkedList<>();\n    +\n }\n\n<p> @Override<br/>\n public void prepare(Map conf, TopologyContext topologyContext, OutputCollector collector)  {<br/>\n     try {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if(options.getKerberosPrincipal() == null && options.getKerberosKeytab() == null) \n{\n    -kerberosEnabled = false;\n    -    }\n<p> else if(options.getKerberosPrincipal() != null && options.getKerberosKeytab() != null) </p>\n{\n    -kerberosEnabled = true;\n    -    }\n<p> else </p>\n{\n    -throw new IllegalArgumentException(\"To enable Kerberos, need to set both KerberosPrincipal \" +\n    -   \" & KerberosKeytab\");\n    -    }\n<p>    -</p></li>\n\t<li>if (kerberosEnabled) {</li>\n\t<li>try \n{\n    -    ugi = HiveUtils.authenticate(options.getKerberosKeytab(), options.getKerberosPrincipal());\n    -}\n<p> catch(HiveUtils.AuthenticationFailed ex) </p>\n{\n    -    LOG.error(\"Hive Kerberos authentication failed \" + ex.getMessage(), ex);\n    -    throw new IllegalArgumentException(ex);\n    -}</li>\n\t<li>}<br/>\n this.collector = collector;</li>\n\t<li>allWriters = new HashMap<HiveEndPoint,HiveWriter>();</li>\n\t<li>String timeoutName = \"hive-bolt-%d\";</li>\n\t<li>this.callTimeoutPool = Executors.newFixedThreadPool(1,</li>\n\t<li>new ThreadFactoryBuilder().setNameFormat(timeoutName).build());</li>\n\t<li>heartBeatTimer = new Timer();</li>\n\t<li>setupHeartBeatTimer();<br/>\n    -<br/>\n    +    this.hiveConnector  =  new HiveConnector(this.options);<br/>\n    +    this.hiveConnector.configure();<br/>\n    +    this.serializationErrorMetric = new CountMetric();<br/>\n    +    topologyContext.registerMetric(\"hive_serialization_error_count\", serializationErrorMetric, 0);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Not really sure what registering a metric that is reported every 0 seconds does.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597401","html_url":"https://github.com/apache/storm/issues/4868#issuecomment-2612597401","issue_url":"https://api.github.com/repos/apache/storm/issues/4868","id":2612597401,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTc0MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:48:15Z","updated_at":"2025-01-24T13:59:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/871#discussion_r49201673\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/871#discussion_r49201673</a></p>\n\n<p>    &#8212; Diff: external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveConnector.java &#8212;<br/>\n    @@ -0,0 +1,241 @@<br/>\n    +package org.apache.storm.hive.common;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Need a license header.  Rat is complaining.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597406","html_url":"https://github.com/apache/storm/issues/4868#issuecomment-2612597406","issue_url":"https://api.github.com/repos/apache/storm/issues/4868","id":2612597406,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTc0MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:49:15Z","updated_at":"2025-01-24T13:59:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/871#discussion_r49201793\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/871#discussion_r49201793</a></p>\n\n<p>    &#8212; Diff: external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveConnector.java &#8212;<br/>\n    @@ -0,0 +1,241 @@<br/>\n    +package org.apache.storm.hive.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.hadoop.security.UserGroupInformation;<br/>\n    +import org.apache.hive.hcatalog.streaming.HiveEndPoint;<br/>\n    +import org.apache.hive.hcatalog.streaming.StreamingException;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.*;<br/>\n    +import java.util.concurrent.ExecutorService;<br/>\n    +import java.util.concurrent.Executors;<br/>\n    +import com.google.common.util.concurrent.ThreadFactoryBuilder;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class HiveConnector {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(HiveConnector.class);<br/>\n    +    private HiveOptions options;<br/>\n    +    private transient Timer heartBeatTimer;<br/>\n    +    private AtomicBoolean sendHeartBeat = new AtomicBoolean(true);<br/>\n    +    private UserGroupInformation ugi = null;<br/>\n    +    private Map<HiveEndPoint, HiveWriter> allWriters;<br/>\n    +    private ExecutorService callTimeoutPool;<br/>\n    +<br/>\n    +    public HiveConnector(HiveOptions options) {<br/>\n    +this.options = options;<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597415","html_url":"https://github.com/apache/storm/issues/4868#issuecomment-2612597415","issue_url":"https://api.github.com/repos/apache/storm/issues/4868","id":2612597415,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTc0MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:49:42Z","updated_at":"2025-01-24T13:59:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/871#discussion_r49201838\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/871#discussion_r49201838</a></p>\n\n<p>    &#8212; Diff: external/storm-hive/src/main/java/org/apache/storm/hive/common/HiveConnector.java &#8212;<br/>\n    @@ -0,0 +1,241 @@<br/>\n    +package org.apache.storm.hive.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.hadoop.security.UserGroupInformation;<br/>\n    +import org.apache.hive.hcatalog.streaming.HiveEndPoint;<br/>\n    +import org.apache.hive.hcatalog.streaming.StreamingException;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.*;<br/>\n    +import java.util.concurrent.ExecutorService;<br/>\n    +import java.util.concurrent.Executors;<br/>\n    +import com.google.common.util.concurrent.ThreadFactoryBuilder;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class HiveConnector {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(HiveConnector.class);<br/>\n    +    private HiveOptions options;<br/>\n    +    private transient Timer heartBeatTimer;<br/>\n    +    private AtomicBoolean sendHeartBeat = new AtomicBoolean(true);<br/>\n    +    private UserGroupInformation ugi = null;<br/>\n    +    private Map<HiveEndPoint, HiveWriter> allWriters;<br/>\n    +    private ExecutorService callTimeoutPool;<br/>\n    +<br/>\n    +    public HiveConnector(HiveOptions options) </p>\n{\n    +this.options = options;\n    +\n    +    }\n<p>    +<br/>\n    +    public void configure() {<br/>\n    +boolean kerberosEnabled;<br/>\n    +<br/>\n    +if(this.options.getKerberosPrincipal() == null && this.options.getKerberosKeytab() == null) </p>\n{\n    +    kerberosEnabled = false;\n    +}\n<p> else if(options.getKerberosPrincipal() != null && options.getKerberosKeytab() != null) </p>\n{\n    +    kerberosEnabled = true;\n    +}\n<p> else </p>\n{\n    +    throw new IllegalArgumentException(\"To enable Kerberos, need to set both KerberosPrincipal \" +\n    +       \" & KerberosKeytab\");\n    +}\n<p>    +<br/>\n    +if (kerberosEnabled) {<br/>\n    +    try </p>\n{\n    +ugi = HiveUtils.authenticate(options.getKerberosKeytab(), options.getKerberosPrincipal());\n    +    }\n<p> catch(HiveUtils.AuthenticationFailed ex) </p>\n{\n    +LOG.error(\"Hive Kerberos authentication failed \" + ex.getMessage(), ex);\n    +throw new IllegalArgumentException(ex);\n    +    }\n<p>    +}<br/>\n    +<br/>\n    +allWriters = new ConcurrentHashMap<HiveEndPoint, HiveWriter>();<br/>\n    +String timeoutName = \"hive-bolt-%d\";<br/>\n    +this.callTimeoutPool = Executors.newFixedThreadPool(1,<br/>\n    +   new ThreadFactoryBuilder().setNameFormat(timeoutName).build());<br/>\n    +heartBeatTimer = new Timer();<br/>\n    +setupHeartBeatTimer();<br/>\n    +    }<br/>\n    +<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Extra sapce</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170037330","html_url":"https://github.com/apache/storm/pull/871#issuecomment-170037330","issue_url":"https://api.github.com/repos/apache/storm/issues/871","id":170037330,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDAzNzMzMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:52:09Z","updated_at":"2016-01-08T15:52:09Z","author_association":"CONTRIBUTOR","body":"Sorry this took so long to get back to.  The code looks good for the most part.  I have a few minor formatting nits, but the header needs to be updated and I would like to see the metric registered with a non-zero poll interval.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170037330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597421","html_url":"https://github.com/apache/storm/issues/4868#issuecomment-2612597421","issue_url":"https://api.github.com/repos/apache/storm/issues/4868","id":2612597421,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTc0MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T15:52:10Z","updated_at":"2025-01-24T13:59:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/871#issuecomment-170037330\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/871#issuecomment-170037330</a></p>\n\n<p>    Sorry this took so long to get back to.  The code looks good for the most part.  I have a few minor formatting nits, but the header needs to be updated and I would like to see the metric registered with a non-zero poll interval.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612597421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170039698","html_url":"https://github.com/apache/storm/pull/996#issuecomment-170039698","issue_url":"https://api.github.com/repos/apache/storm/issues/996","id":170039698,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDAzOTY5OA==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:00:41Z","updated_at":"2016-01-08T16:00:41Z","author_association":"NONE","body":"Test failures are the same, and they look unrelated.  We may want a new Jira created under [STORM-915](https://issues.apache.org/jira/browse/STORM-915).\n\n```\nRunning storm.kafka.bolt.KafkaBoltTest\nTests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 14.346 sec <<< FAILURE! - in storm.kafka.bolt.KafkaBoltTest\nexecuteWithByteArrayKeyAndMessageFire(storm.kafka.bolt.KafkaBoltTest)  Time elapsed: 1.71 sec  <<< ERROR!\nstorm.kafka.TopicOffsetOutOfRangeException: Partition{host=localhost:59874, topic=test-topic, partition=0} Got fetch request with offset out of range: [-1]\n    at storm.kafka.KafkaUtils.fetchMessages(KafkaUtils.java:203)\n    at storm.kafka.bolt.KafkaBoltTest.verifyMessage(KafkaBoltTest.java:275)\n    at storm.kafka.bolt.KafkaBoltTest.executeWithByteArrayKeyAndMessageFire(KafkaBoltTest.java:188)\n```\n\n+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170039698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698117","html_url":"https://github.com/apache/storm/issues/5288#issuecomment-2612698117","issue_url":"https://api.github.com/repos/apache/storm/issues/5288","id":2612698117,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTgxMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:00:43Z","updated_at":"2025-01-24T14:43:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/996#issuecomment-170039698\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/996#issuecomment-170039698</a></p>\n\n<p>    Test failures are the same, and they look unrelated.  We may want a new Jira created under <a href=\"https://issues.apache.org/jira/browse/STORM-915\" title=\"Track and resolve any further random tests failure\" class=\"issue-link\" data-issue-key=\"STORM-915\"><del>STORM-915</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-915\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-915</a>).</p>\n\n<p>    ```<br/>\n    Running storm.kafka.bolt.KafkaBoltTest<br/>\n    Tests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 14.346 sec <<< FAILURE! - in storm.kafka.bolt.KafkaBoltTest<br/>\n    executeWithByteArrayKeyAndMessageFire(storm.kafka.bolt.KafkaBoltTest)  Time elapsed: 1.71 sec  <<< ERROR!<br/>\n    storm.kafka.TopicOffsetOutOfRangeException: Partition</p>\n{host=localhost:59874, topic=test-topic, partition=0}\n<p> Got fetch request with offset out of range: <span class=\"error\">&#91;-1&#93;</span><br/>\n    \tat storm.kafka.KafkaUtils.fetchMessages(KafkaUtils.java:203)<br/>\n    \tat storm.kafka.bolt.KafkaBoltTest.verifyMessage(KafkaBoltTest.java:275)<br/>\n    \tat storm.kafka.bolt.KafkaBoltTest.executeWithByteArrayKeyAndMessageFire(KafkaBoltTest.java:188)<br/>\n    ```</p>\n\n<p>    +1</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612686944","html_url":"https://github.com/apache/storm/issues/5214#issuecomment-2612686944","issue_url":"https://api.github.com/repos/apache/storm/issues/5214","id":2612686944,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODY5NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:27:44Z","updated_at":"2025-01-24T14:38:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=darion\" class=\"user-hover\" rel=\"darion\">darion yaphet</a>,</p>\n\n<p>This kind of fell off my radar.  Sorry about it.  The code change looks good.  There was a minor merge conflict, but it looks like it was just white space changes in partition manger.  I am +1 on this.</p>\n\n<p>In the future putting a pull request against <a href=\"http://github.com/apache/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://github.com/apache/storm</a> is a lot simpler and triggers our CI process, so I don't have to run things manually.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612686944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612686947","html_url":"https://github.com/apache/storm/issues/5214#issuecomment-2612686947","issue_url":"https://api.github.com/repos/apache/storm/issues/5214","id":2612686947,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODY5NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:40:38Z","updated_at":"2025-01-24T14:38:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=darion\" class=\"user-hover\" rel=\"darion\">darion yaphet</a>,</p>\n\n<p>I merged this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612686947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631193","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631193","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631193,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExOTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:52:05Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49209735\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49209735</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/README.md &#8212;<br/>\n    @@ -405,7 +410,123 @@ On worker hosts the bolt/trident-state code will use the keytab file with princi<br/>\n     Namenode. This method is little dangerous as you need to ensure all workers have the keytab file at the same location and you need<br/>\n     to remember this as you bring up new hosts in the cluster.</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>\n\t<ol>\n\t\t<li>\n\t\t<ol>\n\t\t\t<li>License<br/>\n    +---<br/>\n    +<br/>\n    +# HDFS Spout<br/>\n    +<br/>\n    +Hdfs spout is intended to allow feeding data into Storm from a HDFS directory. <br/>\n    +It will actively monitor the directory to consume any new files that appear in the directory.<br/>\n    +HDFS spout does not support Trident currently.<br/>\n    +<br/>\n    +*<b>Impt</b>*: Hdfs spout assumes that the files being made visible to it in the monitored directory <br/>\n    +are NOT actively being written to. Only after a file is completely written should it be made<br/>\n    +visible to the spout. This can be achieved by either writing the files out to another directory <br/>\n    +and once completely written, move it to the monitored directory. Alternatively the file<br/>\n    +can be created with a '.ignore' suffix in the monitored directory and after data is completely <br/>\n    +written, rename it without the suffix. File names with a '.ignore' suffix are ignored<br/>\n    +by the spout.<br/>\n    +<br/>\n    +When the spout is actively consuming a file, it renames the file with a '.inprogress' suffix.<br/>\n    +After consuming all the contents in the file, the file will be moved to a configurable <b>done</b> <br/>\n    +directory and the '.inprogress' suffix will be dropped.<br/>\n    +<br/>\n    +*<b>Concurrency</b>* If multiple spout instances are used in the topology, each instance will consume<br/>\n    +a different file. Synchronization among spout instances is done using lock files created in a <br/>\n    +(by default) '.lock' subdirectory under the monitored directory. A file with the same name<br/>\n    +as the file being consumed (without the in progress suffix) is created in the lock directory.<br/>\n    +Once the file is completely consumed, the corresponding lock file is deleted.<br/>\n    +<br/>\n    +*<b>Recovery from failure</b>*<br/>\n    +Periodically, the spout also records progress information wrt to how much of the file has been<br/>\n    +consumed in the lock file. In case of an crash of the spout instance (or force kill of topology) <br/>\n    +another spout can take over the file and resume from the location recorded in the lock file.<br/>\n    +<br/>\n    +Certain error conditions (such spout crashing) can leave behind lock files without deleting them. <br/>\n    +Such a stale lock file also indicates that the corresponding input file has also not been completely <br/>\n    +processed. When detected, ownership of such stale lock files will be transferred to another spout.   <br/>\n    +The configuration 'hdfsspout.lock.timeout.sec' is used to specify the duration of inactivity after <br/>\n    +which lock files should be considered stale. For lock file ownership transfer to succeed, the HDFS<br/>\n    +lease on the file (from prev lock owner) should have expired. Spouts scan for stale lock files<br/>\n    +before selecting the next file for consumption.<br/>\n    +<br/>\n    +*<b>Lock on *.lock</b> Directory**<br/>\n    +Hdfs spout instances create a <b>DIRLOCK</b> file in the .lock directory to co-ordinate certain accesses to <br/>\n    +the .lock dir itself. A spout will try to create it when it needs access to the .lock directory and<br/>\n    +then delete it when done.  In error conditions such as a topology crash, force kill or untimely death <br/>\n    +of a spout, this file may not get deleted. Future running instances of the spout will eventually recover<br/>\n    +this once the DIRLOCK file becomes stale due to inactivity for hdfsspout.lock.timeout.sec seconds.<br/>\n    +<br/>\n    +## Usage<br/>\n    +<br/>\n    +The following example creates an HDFS spout that reads text files from HDFS path hdfs://localhost:54310/source.<br/>\n    +<br/>\n    +```java<br/>\n    +// Instantiate spout<br/>\n    +HdfsSpout textReaderSpout = new HdfsSpout().withOutputFields(TextFileReader.defaultFields);<br/>\n    +// HdfsSpout seqFileReaderSpout = new HdfsSpout().withOutputFields(SequenceFileReader.defaultFields);<br/>\n    +<br/>\n    +// textReaderSpout.withConfigKey(\"custom.keyname\"); // Optional. Not required normally unless you need to change the keyname use to provide hds settings. This keyname defaults to 'hdfs.config' <br/>\n    +<br/>\n    +// Configure it<br/>\n    +Config conf = new Config();<br/>\n    +conf.put(Configs.SOURCE_DIR, \"hdfs://localhost:54310/source\");<br/>\n    +conf.put(Configs.ARCHIVE_DIR, \"hdfs://localhost:54310/done\");<br/>\n    +conf.put(Configs.BAD_DIR, \"hdfs://localhost:54310/badfiles\");<br/>\n    +conf.put(Configs.READER_TYPE, \"text\"); // or 'seq' for sequence files<br/>\n    +<br/>\n    +// Create & configure topology<br/>\n    +TopologyBuilder builder = new TopologyBuilder();<br/>\n    +builder.setSpout(\"hdfsspout\", textReaderSpout, SPOUT_NUM);<br/>\n    +<br/>\n    +// Setup bolts and other topology configuration<br/>\n    +     ..snip..<br/>\n    +<br/>\n    +// Submit topology with config<br/>\n    +StormSubmitter.submitTopologyWithProgressBar(\"topologyName\", conf, builder.createTopology());<br/>\n    +```<br/>\n    +<br/>\n    +See sample HdfsSpoutTopolgy in storm-starter.<br/>\n    +<br/>\n    +## Configuration Settings<br/>\n    +Class HdfsSpout provided following methods for configuration:<br/>\n    +<br/>\n    +`HdfsSpout withOutputFields(String... fields)` : This sets the names for the output fields. <br/>\n    +The number of fields depends upon the reader being used. For convenience, built-in reader types <br/>\n    +expose a static member called `defaultFields` that can be used for this. <br/>\n    + <br/>\n    + `HdfsSpout withConfigKey(String configKey)`<br/>\n    +Optional setting. It allows overriding the default key name ('hdfs.config') with new name for <br/>\n    +specifying HDFS configs. Typically used to specify kerberos keytab and principal.<br/>\n    +<br/>\n    +*<b>E.g:</b>*<br/>\n    +```java<br/>\n    +    HashMap map = new HashMap();<br/>\n    +    map.put(\"hdfs.keytab.file\", \"/path/to/keytab\");<br/>\n    +    map.put(\"hdfs.kerberos.principal\",\"user@EXAMPLE.com\");<br/>\n    +    conf.set(\"hdfs.config\", map)<br/>\n    +```<br/>\n    +<br/>\n    +Only settings mentioned in *<b>bold</b>* are required.<br/>\n    +<br/>\n    +| Setting      | Default     | Description |<br/>\n    +|-----------------------------<del>|</del>-----------<del>|</del>------------|<br/>\n    +|*<b>hdfsspout.reader.type</b>*     |     | Indicates the reader for the file format. Set to 'seq' for reading sequence files or 'text' for text files. Set to a fully qualified class name if using a custom type (that implements interface org.apache.storm.hdfs.spout.FileReader)|<br/>\n    +|*<b>hdfsspout.hdfs</b>*    |     | HDFS URI. Example:  hdfs://namenodehost:8020<br/>\n    +|*<b>hdfsspout.source.dir</b>*      |     | HDFS location from where to read.  E.g. /data/inputfiles  |<br/>\n    +|*<b>hdfsspout.archive.dir</b>*     |     | After a file is processed completely it will be moved to this directory. E.g. /data/done|<br/>\n    +|*<b>hdfsspout.badfiles.dir</b>*    |     | if there is an error parsing a file's contents, the file is moved to this location.  E.g. /data/badfiles  |<br/>\n    +|hdfsspout.lock.dir    | '.lock' subdirectory under hdfsspout.source.dir | Dir in which lock files will be created. Concurrent HDFS spout instances synchronize using <b>lock</b> files. Before processing a file the spout instance creates a lock file in this directory with same name as input file and deletes this lock file after processing the file. Spouts also periodically makes a note of their progress (wrt reading the input file) in the lock file so that another spout instance can resume progress on the same file if the spout dies for any reason.|<br/>\n    +|hdfsspout.ignore.suffix       |   .ignore   | File names with this suffix in the in the hdfsspout.source.dir location will not be processed|<br/>\n    +|hdfsspout.commit.count|    20000    | Record progress in the lock file after these many records are processed. If set to 0, this criterion will not be used. |<br/>\n    +|hdfsspout.commit.sec  |    10       | Record progress in the lock file after these many seconds have elapsed. Must be greater than 0 |<br/>\n    +|hdfsspout.max.outstanding     |   10000     | Limits the number of unACKed tuples by pausing tuple generation (if ACKers are used in the topology) |</li>\n\t\t</ol>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ol>\n\t</li>\n</ul>\n\n\n<p>    Do we want to explain how this works with max.spout.pending, and why we need both?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631198","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631198","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631198,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExOTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:55:39Z","updated_at":"2025-01-24T14:14:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49210170\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49210170</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/AbstractFileReader.java &#8212;<br/>\n    @@ -0,0 +1,60 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +<br/>\n    +<br/>\n    +abstract class AbstractFileReader implements FileReader {<br/>\n    +<br/>\n    +  private final Path file;<br/>\n    +<br/>\n    +  public AbstractFileReader(FileSystem fs, Path file) {<br/>\n    +    if (fs == null ) </p>\n{\n    +      throw new IllegalArgumentException(\"filesystem arg cannot be null for reader\");\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    Why do we want fs to not be null, if we never actually use it?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631203","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631203","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631203,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T16:59:24Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49210623\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49210623</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,133 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(DirLock.class);<br/>\n    +  private DirLock(FileSystem fs, Path lockFile) throws IOException {<br/>\n    +    if( fs.isDirectory(lockFile) ) </p>\n{\n    +      throw new IllegalArgumentException(lockFile.toString() + \" is not a directory\");\n    +    }\n<p>    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Get a lock on file if not already locked<br/>\n    +   *<br/>\n    +   * @param fs<br/>\n    +   * @param dir  the dir on which to get a lock<br/>\n    +   * @return The lock object if it the lock was acquired. Returns null if the dir is already locked.<br/>\n    +   * @throws IOException if there were errors<br/>\n    +   */<br/>\n    +  public static DirLock tryLock(FileSystem fs, Path dir) throws IOException {<br/>\n    +    Path lockFile = getDirLockFile(dir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    You are correct local file system does not do anything atomic.  Even rename is not atomic, even though the spec says it should be.  we should not test with the local file system if we want things to be atomic.  I think we mostly want to call out in the docs that if it was not obvious already the FileSystem used needs to support a specific set of atomic operations. (MRv2 has similar constraints for AM recovery, but it is not documented very well)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631208","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631208","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631208,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:01:57Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49210908\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49210908</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,133 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(DirLock.class);<br/>\n    +  private DirLock(FileSystem fs, Path lockFile) throws IOException {<br/>\n    +    if( fs.isDirectory(lockFile) ) </p>\n{\n    +      throw new IllegalArgumentException(lockFile.toString() + \" is not a directory\");\n    +    }\n<p>    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Get a lock on file if not already locked<br/>\n    +   *<br/>\n    +   * @param fs<br/>\n    +   * @param dir  the dir on which to get a lock<br/>\n    +   * @return The lock object if it the lock was acquired. Returns null if the dir is already locked.<br/>\n    +   * @throws IOException if there were errors<br/>\n    +   */<br/>\n    +  public static DirLock tryLock(FileSystem fs, Path dir) throws IOException {<br/>\n    +    Path lockFile = getDirLockFile(dir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    +      if (ostream!=null) {<br/>\n    +LOG.debug(\"Thread ({}) Acquired lock on dir {}\", threadInfo(), dir);<br/>\n    +ostream.close();<br/>\n    +return new DirLock(fs, lockFile);<br/>\n    +      } else {<br/>\n    +LOG.debug(\"Thread ({}) cannot lock dir {} as its already locked.\", threadInfo(), dir);<br/>\n    +return null;<br/>\n    +      }<br/>\n    +    } catch (IOException e) </p>\n{\n    +LOG.error(\"Error when acquiring lock on dir \" + dir, e);\n    +throw e;\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  private static Path getDirLockFile(Path dir) </p>\n{\n    +    return new Path(dir.toString() + Path.SEPARATOR_CHAR + DIR_LOCK_FILE );\n    +  }\n<p>    +<br/>\n    +  private static String threadInfo () </p>\n{\n    +    return \"ThdId=\" + Thread.currentThread().getId() + \", ThdName=\"\n    +    + Thread.currentThread().getName();\n    +  }\n<p>    +<br/>\n    +  /** Release lock on dir by deleting the lock file */<br/>\n    +  public void release() throws IOException {<br/>\n    +    if(!fs.delete(lockFile, false)) {<br/>\n    +      LOG.error(\"Thread {} could not delete dir lock {} \", threadInfo(), lockFile);<br/>\n    +    }<br/>\n    +    else {<br/>\n    +      LOG.debug(\"Thread {} Released dir lock {} \", threadInfo(), lockFile);<br/>\n    +    }<br/>\n    +  }<br/>\n    +<br/>\n    +  /** if the lock on the directory is stale, take ownership */<br/>\n    +  public static DirLock takeOwnershipIfStale(FileSystem fs, Path dirToLock, int lockTimeoutSec) {<br/>\n    +    Path dirLockFile = getDirLockFile(dirToLock);<br/>\n    +<br/>\n    +    long now =  System.currentTimeMillis();<br/>\n    +    long expiryTime = now - (lockTimeoutSec*1000);<br/>\n    +<br/>\n    +    try {<br/>\n    +      long modTime = fs.getFileStatus(dirLockFile).getModificationTime();<br/>\n    +      if(modTime <= expiryTime) </p>\n{\n    +return takeOwnership(fs, dirLockFile);\n    +      }\n<p>    +      return null;<br/>\n    +    } catch (IOException e)  </p>\n{\n    +      return  null;\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  private static DirLock takeOwnership(FileSystem fs, Path dirLockFile) throws IOException {<br/>\n    +    if(fs instanceof DistributedFileSystem) {<br/>\n    +      if (!((DistributedFileSystem) fs).recoverLease(dirLockFile)) </p>\n{\n    +LOG.warn(\"Unable to recover lease on dir lock file \" + dirLockFile + \" right now. Cannot transfer ownership. Will need to try later.\");\n    +return null;\n    +      }\n<p>    +    }<br/>\n    +<br/>\n    +    // delete and recreate lock file<br/>\n    +    if( fs.delete(dirLockFile, false) ) { // returns false if somebody else already deleted it (to take ownership)<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, dirLockFile);<br/>\n    +      if(ostream!=null) </p>\n{\n    +ostream.close();\n    +      }\n<p>    +      return new DirLock(fs, dirLockFile);<br/>\n    +    }<br/>\n    +    return null;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Shuldn't we just replace this part with tryLock?  The code is almost identical except for extra debugging that I think would be good.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631213","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631213","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631213,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:04:05Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49211153\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49211153</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java &#8212;<br/>\n    @@ -0,0 +1,328 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataInputStream;<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException;<br/>\n    +import org.apache.hadoop.ipc.RemoteException;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.util.Collection;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS files. Thread gains exclusive access to a file by acquiring<br/>\n    + * a FileLock object. The lock itself is represented as file on HDFS. Relies on atomic file creation.<br/>\n    + * Owning thread must heartbeat periodically on the lock to prevent the lock from being deemed as<br/>\n    + * stale (i.e. lock whose owning thread have died).<br/>\n    + */<br/>\n    +public class FileLock {<br/>\n    +<br/>\n    +  private final FileSystem fs;<br/>\n    +  private final String componentID;<br/>\n    +  private final Path lockFile;<br/>\n    +  private final FSDataOutputStream lockFileStream;<br/>\n    +  private LogEntry lastEntry;<br/>\n    +<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(FileLock.class);<br/>\n    +<br/>\n    +  private FileLock(FileSystem fs, Path lockFile, FSDataOutputStream lockFileStream, String spoutId)<br/>\n    +  throws IOException </p>\n{\n    +    this.fs = fs;\n    +    this.lockFile = lockFile;\n    +    this.lockFileStream = lockFileStream;\n    +    this.componentID = spoutId;\n    +    logProgress(\"0\", false);\n    +  }\n<p>    +<br/>\n    +  private FileLock(FileSystem fs, Path lockFile, String spoutId, LogEntry entry)<br/>\n    +  throws IOException {<br/>\n    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +    this.lockFileStream =  fs.append(lockFile);<br/>\n    +    this.componentID = spoutId;<br/>\n    +    LOG.info(\"Acquired abandoned lockFile {}, Spout {}\", lockFile, spoutId);<br/>\n    +    logProgress(entry.fileOffset, true);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void heartbeat(String fileOffset) throws IOException </p>\n{\n    +    logProgress(fileOffset, true);\n    +  }\n<p>    +<br/>\n    +  // new line is at beginning of each line (instead of end) for better recovery from<br/>\n    +  // partial writes of prior lines<br/>\n    +  private void logProgress(String fileOffset, boolean prefixNewLine)<br/>\n    +  throws IOException {<br/>\n    +    long now = System.currentTimeMillis();<br/>\n    +    LogEntry entry = new LogEntry(now, componentID, fileOffset);<br/>\n    +    String line = entry.toString();<br/>\n    +    if(prefixNewLine) </p>\n{\n    +      lockFileStream.writeBytes(System.lineSeparator() + line);\n    +    }\n<p>    +    else </p>\n{\n    +      lockFileStream.writeBytes(line);\n    +    }\n<p>    +    lockFileStream.hflush();<br/>\n    +<br/>\n    +    lastEntry = entry; // update this only after writing to hdfs<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Release lock by deleting file<br/>\n    +   * @throws IOException if lock file could not be deleted<br/>\n    +   */<br/>\n    +  public void release() throws IOException {<br/>\n    +    lockFileStream.close();<br/>\n    +    if(!fs.delete(lockFile, false)) {<br/>\n    +      LOG.warn(\"Unable to delete lock file, Spout = {}\", componentID);<br/>\n    +      throw new IOException(\"Unable to delete lock file\");<br/>\n    +    }<br/>\n    +    LOG.debug(\"Released lock file {}. Spout {}\", lockFile, componentID);<br/>\n    +  }<br/>\n    +<br/>\n    +  // For testing only.. invoked via reflection<br/>\n    +  private void forceCloseLockFile() throws IOException </p>\n{\n    +    lockFileStream.close();\n    +  }\n<p>    +<br/>\n    +  /** returns lock on file or null if file is already locked. throws if unexpected problem */<br/>\n    +  public static FileLock tryLock(FileSystem fs, Path fileToLock, Path lockDirPath, String spoutId)<br/>\n    +  throws IOException {<br/>\n    +    String lockFileName = lockDirPath.toString() + Path.SEPARATOR_CHAR + fileToLock.getName();<br/>\n    +    Path lockFile = new Path(lockFileName);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It is probably cleaner to just do<br/>\n    ```<br/>\n    Path lockFile = new Path(lockDirPath, fileToLock.getName());<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631219","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631219","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631219,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:06:05Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49211367\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49211367</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/FileLock.java &#8212;<br/>\n    @@ -0,0 +1,328 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataInputStream;<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException;<br/>\n    +import org.apache.hadoop.ipc.RemoteException;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.util.Collection;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS files. Thread gains exclusive access to a file by acquiring<br/>\n    + * a FileLock object. The lock itself is represented as file on HDFS. Relies on atomic file creation.<br/>\n    + * Owning thread must heartbeat periodically on the lock to prevent the lock from being deemed as<br/>\n    + * stale (i.e. lock whose owning thread have died).<br/>\n    + */<br/>\n    +public class FileLock {<br/>\n    +<br/>\n    +  private final FileSystem fs;<br/>\n    +  private final String componentID;<br/>\n    +  private final Path lockFile;<br/>\n    +  private final FSDataOutputStream lockFileStream;<br/>\n    +  private LogEntry lastEntry;<br/>\n    +<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(FileLock.class);<br/>\n    +<br/>\n    +  private FileLock(FileSystem fs, Path lockFile, FSDataOutputStream lockFileStream, String spoutId)<br/>\n    +  throws IOException </p>\n{\n    +    this.fs = fs;\n    +    this.lockFile = lockFile;\n    +    this.lockFileStream = lockFileStream;\n    +    this.componentID = spoutId;\n    +    logProgress(\"0\", false);\n    +  }\n<p>    +<br/>\n    +  private FileLock(FileSystem fs, Path lockFile, String spoutId, LogEntry entry)<br/>\n    +  throws IOException {<br/>\n    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +    this.lockFileStream =  fs.append(lockFile);<br/>\n    +    this.componentID = spoutId;<br/>\n    +    LOG.info(\"Acquired abandoned lockFile {}, Spout {}\", lockFile, spoutId);<br/>\n    +    logProgress(entry.fileOffset, true);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void heartbeat(String fileOffset) throws IOException </p>\n{\n    +    logProgress(fileOffset, true);\n    +  }\n<p>    +<br/>\n    +  // new line is at beginning of each line (instead of end) for better recovery from<br/>\n    +  // partial writes of prior lines<br/>\n    +  private void logProgress(String fileOffset, boolean prefixNewLine)<br/>\n    +  throws IOException {<br/>\n    +    long now = System.currentTimeMillis();<br/>\n    +    LogEntry entry = new LogEntry(now, componentID, fileOffset);<br/>\n    +    String line = entry.toString();<br/>\n    +    if(prefixNewLine) </p>\n{\n    +      lockFileStream.writeBytes(System.lineSeparator() + line);\n    +    }\n<p>    +    else </p>\n{\n    +      lockFileStream.writeBytes(line);\n    +    }\n<p>    +    lockFileStream.hflush();<br/>\n    +<br/>\n    +    lastEntry = entry; // update this only after writing to hdfs<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Release lock by deleting file<br/>\n    +   * @throws IOException if lock file could not be deleted<br/>\n    +   */<br/>\n    +  public void release() throws IOException {<br/>\n    +    lockFileStream.close();<br/>\n    +    if(!fs.delete(lockFile, false)) {<br/>\n    +      LOG.warn(\"Unable to delete lock file, Spout = {}\", componentID);<br/>\n    +      throw new IOException(\"Unable to delete lock file\");<br/>\n    +    }<br/>\n    +    LOG.debug(\"Released lock file {}. Spout {}\", lockFile, componentID);<br/>\n    +  }<br/>\n    +<br/>\n    +  // For testing only.. invoked via reflection<br/>\n    +  private void forceCloseLockFile() throws IOException </p>\n{\n    +    lockFileStream.close();\n    +  }\n<p>    +<br/>\n    +  /** returns lock on file or null if file is already locked. throws if unexpected problem */<br/>\n    +  public static FileLock tryLock(FileSystem fs, Path fileToLock, Path lockDirPath, String spoutId)<br/>\n    +  throws IOException {<br/>\n    +    String lockFileName = lockDirPath.toString() + Path.SEPARATOR_CHAR + fileToLock.getName();<br/>\n    +    Path lockFile = new Path(lockFileName);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    +      if (ostream != null) {<br/>\n    +LOG.debug(\"Acquired lock on file {}. LockFile= {}, Spout = {}\", fileToLock, lockFile, spoutId);<br/>\n    +return new FileLock(fs, lockFile, ostream, spoutId);<br/>\n    +      } else {<br/>\n    +LOG.debug(\"Cannot lock file {} as its already locked. Spout = {}\", fileToLock, spoutId);<br/>\n    +return null;<br/>\n    +      }<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Error when acquiring lock on file \" + fileToLock + \" Spout = \" + spoutId, e);\n    +      throw e;\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  /**<br/>\n    +   * checks if lockFile is older than 'olderThan' UTC time by examining the modification time<br/>\n    +   * on file and (if necessary) the timestamp in last log entry in the file. If its stale, then<br/>\n    +   * returns the last log entry, else returns null.<br/>\n    +   * @param fs<br/>\n    +   * @param lockFile<br/>\n    +   * @param olderThan  time (millis) in UTC.<br/>\n    +   * @return the last entry in the file if its too old. null if last entry is not too old<br/>\n    +   * @throws IOException<br/>\n    +   */<br/>\n    +  public static LogEntry getLastEntryIfStale(FileSystem fs, Path lockFile, long olderThan)<br/>\n    +  throws IOException {<br/>\n    +    long modifiedTime = fs.getFileStatus(lockFile).getModificationTime();<br/>\n    +    if( modifiedTime <= olderThan ) { // look<br/>\n    +      //Impt: HDFS timestamp may not reflect recent appends, so we double check the<br/>\n    +      // timestamp in last line of file to see when the last update was made<br/>\n    +      LogEntry lastEntry =  getLastEntry(fs, lockFile);<br/>\n    +      if(lastEntry==null) {<br/>\n    +throw new RuntimeException(lockFile.getName() + \" is empty. this file is invalid.\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Is blowing up the right thing to do when the file may be in the middle of being written. or the writer failed at a bad time?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631224","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631224","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631224,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:09:10Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49211683\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49211683</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,739 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  // user configurable<br/>\n    +  private String hdfsUri;    // required<br/>\n    +  private String readerType; // required<br/>\n    +  private Fields outputFields;       // required<br/>\n    +  private Path sourceDirPath;// required<br/>\n    +  private Path archiveDirPath;       // required<br/>\n    +  private Path badFilesDirPath;      // required<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxOutstanding = Configs.DEFAULT_MAX_OUTSTANDING;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  // other members<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private ProgressTracker tracker = null;<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private Timer commitTimer;<br/>\n    +  private boolean fileReadCompletely = true;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs Kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +  /** Name of the output field names. Number of fields depends upon the reader type */<br/>\n    +  public HdfsSpout withOutputFields(String... fields) </p>\n{\n    +    outputFields = new Fields(fields);\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  /** set key name under which HDFS options are placed. (similar to HDFS bolt).<br/>\n    +   * default key name is 'hdfs.config' */<br/>\n    +  public HdfsSpout withConfigKey(String configKey) </p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.trace(\"Next Tuple {}\", spoutId);<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending tuple from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>= maxOutstanding) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +      \"Progress tracker size has reached limit {}, SpoutID {}\"<br/>\n    +      , maxOutstanding, spoutId);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Not sure this is worthy or a warn message.  It feels more like debug.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631228","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631228","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631228,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:11:00Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49211864\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49211864</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,739 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  // user configurable<br/>\n    +  private String hdfsUri;    // required<br/>\n    +  private String readerType; // required<br/>\n    +  private Fields outputFields;       // required<br/>\n    +  private Path sourceDirPath;// required<br/>\n    +  private Path archiveDirPath;       // required<br/>\n    +  private Path badFilesDirPath;      // required<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxOutstanding = Configs.DEFAULT_MAX_OUTSTANDING;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  // other members<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private ProgressTracker tracker = null;<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private Timer commitTimer;<br/>\n    +  private boolean fileReadCompletely = true;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs Kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +  /** Name of the output field names. Number of fields depends upon the reader type */<br/>\n    +  public HdfsSpout withOutputFields(String... fields) </p>\n{\n    +    outputFields = new Fields(fields);\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  /** set key name under which HDFS options are placed. (similar to HDFS bolt).<br/>\n    +   * default key name is 'hdfs.config' */<br/>\n    +  public HdfsSpout withConfigKey(String configKey) </p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.trace(\"Next Tuple {}\", spoutId);<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending tuple from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>= maxOutstanding) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +      \"Progress tracker size has reached limit {}, SpoutID {}\"<br/>\n    +      , maxOutstanding, spoutId);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples to be retried, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.debug(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p> else </p>\n{\n    +    fileReadCompletely=false;\n    +  }\n<p>    +}<br/>\n    +if( fileReadCompletely ) </p>\n{ // wait for more ACKs before proceeding\n    +  return;\n    +}\n<p>    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If acks are disabled by storm ack is called as part of the call to emit.  I think you may ahve extra logic in here that you do not need.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170060607","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170060607","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170060607,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA2MDYwNw==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:12:59Z","updated_at":"2016-01-08T17:12:59Z","author_association":"NONE","body":"The one test failure was netty load test. It looks unrelated.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170060607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694689","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694689","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694689,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ2ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:13:00Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170060607\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170060607</a></p>\n\n<p>    The one test failure was netty load test. It looks unrelated.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631232","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631232","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631232,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:13:23Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49212163\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49212163</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,739 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  // user configurable<br/>\n    +  private String hdfsUri;    // required<br/>\n    +  private String readerType; // required<br/>\n    +  private Fields outputFields;       // required<br/>\n    +  private Path sourceDirPath;// required<br/>\n    +  private Path archiveDirPath;       // required<br/>\n    +  private Path badFilesDirPath;      // required<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxOutstanding = Configs.DEFAULT_MAX_OUTSTANDING;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  // other members<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private ProgressTracker tracker = null;<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private Timer commitTimer;<br/>\n    +  private boolean fileReadCompletely = true;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs Kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +  /** Name of the output field names. Number of fields depends upon the reader type */<br/>\n    +  public HdfsSpout withOutputFields(String... fields) </p>\n{\n    +    outputFields = new Fields(fields);\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  /** set key name under which HDFS options are placed. (similar to HDFS bolt).<br/>\n    +   * default key name is 'hdfs.config' */<br/>\n    +  public HdfsSpout withConfigKey(String configKey) </p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.trace(\"Next Tuple {}\", spoutId);<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending tuple from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>= maxOutstanding) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +      \"Progress tracker size has reached limit {}, SpoutID {}\"<br/>\n    +      , maxOutstanding, spoutId);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples to be retried, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.debug(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p> else </p>\n{\n    +    fileReadCompletely=false;\n    +  }\n<p>    +}<br/>\n    +if( fileReadCompletely ) </p>\n{ // wait for more ACKs before proceeding\n    +  return;\n    +}\n<p>    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    ++acksSinceLastCommit; // assume message is immediately ACKed in non-ack mode\n    +    commitProgress(reader.getFileOffset());\n    +  }\n<p> else </p>\n{\n    +    commitProgress(tracker.getCommitPosition());\n    +  }\n<p>    +  return;<br/>\n    +} else {<br/>\n    +  fileReadCompletely = true;<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    markFileAsDone(reader.getFilePath());\n    +  }\n<p>    +}<br/>\n    +      } catch (IOException e) </p>\n{\n    +LOG.error(\"I/O Error processing at file location \" + getFileProgress(reader), e);\n    +// don't emit anything .. allow configured spout wait strategy to kick in\n    +return;\n    +      }\n<p> catch (ParseException e) </p>\n{\n    +LOG.error(\"Parsing error when processing at file location \" + getFileProgress(reader) +\n    +\". Skipping remainder of file.\", e);\n    +markFileAsBad(reader.getFilePath());\n    +// Note: We don't return from this method on ParseException to avoid triggering the\n    +// spout wait strategy (due to no emits). Instead we go back into the loop and\n    +// generate a tuple from next file\n    +      }\n<p>    +    } // while<br/>\n    +  }<br/>\n    +<br/>\n    +  // will commit progress into lock file if commit threshold is reached<br/>\n    +  private void commitProgress(FileOffset position) {<br/>\n    +    if(position==null) </p>\n{\n    +      return;\n    +    }<br/>\n    +    if ( lock!=null && canCommitNow() ) {<br/>\n    +      try {<br/>\n    +String pos = position.toString();<br/>\n    +lock.heartbeat(pos);<br/>\n    +LOG.debug(\"{} Committed progress. {}\", spoutId, pos);<br/>\n    +acksSinceLastCommit = 0;<br/>\n    +commitTimeElapsed.set(false);<br/>\n    +setupCommitElapseTimer();<br/>\n    +      } catch (IOException e) {\n    +LOG.error(\"Unable to commit progress Will retry later. Spout ID = \" + spoutId, e);\n    +      }<br/>\n    +    }<br/>\n    +  }<br/>\n    +<br/>\n    +  private void setupCommitElapseTimer() {<br/>\n    +    if(commitFrequencySec<=0) {    +      return;    +    }\n<p>    +    TimerTask timerTask = new TimerTask() {<br/>\n    +      @Override<br/>\n    +      public void run() </p>\n{\n    +commitTimeElapsed.set(true);\n    +      }\n<p>    +    };<br/>\n    +    commitTimer.schedule(timerTask, commitFrequencySec * 1000);<br/>\n    +  }<br/>\n    +<br/>\n    +  private static String getFileProgress(FileReader reader) </p>\n{\n    +    return reader.getFilePath() + \" \" + reader.getFileOffset();\n    +  }\n<p>    +<br/>\n    +  private void markFileAsDone(Path filePath) {<br/>\n    +    try {<br/>\n    +      Path newFile = renameCompletedFile(reader.getFilePath());<br/>\n    +      LOG.info(\"Completed processing {}. Spout Id = {}\", newFile, spoutId);<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to archive completed file\" + filePath + \" Spout ID \" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void markFileAsBad(Path file) {<br/>\n    +    String fileName = file.toString();<br/>\n    +    String fileNameMinusSuffix = fileName.substring(0, fileName.indexOf(inprogress_suffix));<br/>\n    +    String originalName = new Path(fileNameMinusSuffix).getName();<br/>\n    +    Path  newFile = new Path( badFilesDirPath + Path.SEPARATOR + originalName);<br/>\n    +<br/>\n    +    LOG.info(\"Moving bad file {} to {}. Processed it till offset {}. SpoutID= {}\", originalName, newFile, tracker.getCommitPosition(), spoutId);<br/>\n    +    try {<br/>\n    +      if (!hdfs.rename(file, newFile) ) </p>\n{ // seems this can fail by returning false or throwing exception\n    +throw new IOException(\"Move failed for bad file: \" + file); // convert false ret value to exception\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.warn(\"Error moving bad file: \" + file + \" to destination \" + newFile + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void closeReaderAndResetTrackers() </p>\n{\n    +    inflight.clear();\n    +    tracker.offsets.clear();\n    +    retryList.clear();\n    +\n    +    reader.close();\n    +    reader = null;\n    +    releaseLockAndLog(lock, spoutId);\n    +    lock = null;\n    +  }\n<p>    +<br/>\n    +  private static void releaseLockAndLog(FileLock fLock, String spoutId) {<br/>\n    +    try {<br/>\n    +      if(fLock!=null) {<br/>\n    +fLock.release();<br/>\n    +LOG.debug(\"Spout {} released FileLock. SpoutId = {}\", fLock.getLockFile(), spoutId);<br/>\n    +      }<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to delete lock file : \" +fLock.getLockFile() + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  protected void emitData(List<Object> tuple, MessageId id) {<br/>\n    +    LOG.trace(\"Emitting - {}\", id);<br/>\n    +    this.collector.emit(tuple, id);<br/>\n    +    inflight.put(id, tuple);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {<br/>\n    +    LOG.info(\"Opening HDFS Spout\");<br/>\n    +    this.conf = conf;<br/>\n    +    this.commitTimer = new Timer();<br/>\n    +    this.tracker = new ProgressTracker();<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +<br/>\n    +    this.collector = collector;<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +    this.tupleCounter = 0;<br/>\n    +<br/>\n    +    // Hdfs related settings<br/>\n    +    if( conf.containsKey(Configs.HDFS_URI)) </p>\n{\n    +      this.hdfsUri = conf.get(Configs.HDFS_URI).toString();\n    +    }\n<p> else </p>\n{\n    +      throw new RuntimeException(Configs.HDFS_URI + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    try </p>\n{\n    +      this.hdfs = FileSystem.get(URI.create(hdfsUri), hdfsConfig);\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to instantiate file system\", e);\n    +      throw new RuntimeException(\"Unable to instantiate file system\", e);\n    +    }\n<p>    +<br/>\n    +<br/>\n    +    if ( conf.containsKey(configKey) ) {<br/>\n    +      Map<String, Object> map = (Map<String, Object>)conf.get(configKey);<br/>\n    +if(map != null) {<br/>\n    +  for(String keyName : map.keySet()){<br/>\n    +    LOG.info(\"HDFS Config override : \" + keyName + \" = \" + String.valueOf(map.get(keyName)));<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor nit, can we use \"{}\" for variable substitution.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631238","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631238","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631238,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:14:45Z","updated_at":"2025-01-24T14:14:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49212317\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49212317</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,739 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  // user configurable<br/>\n    +  private String hdfsUri;    // required<br/>\n    +  private String readerType; // required<br/>\n    +  private Fields outputFields;       // required<br/>\n    +  private Path sourceDirPath;// required<br/>\n    +  private Path archiveDirPath;       // required<br/>\n    +  private Path badFilesDirPath;      // required<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxOutstanding = Configs.DEFAULT_MAX_OUTSTANDING;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  // other members<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private ProgressTracker tracker = null;<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private Timer commitTimer;<br/>\n    +  private boolean fileReadCompletely = true;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs Kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +  /** Name of the output field names. Number of fields depends upon the reader type */<br/>\n    +  public HdfsSpout withOutputFields(String... fields) </p>\n{\n    +    outputFields = new Fields(fields);\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  /** set key name under which HDFS options are placed. (similar to HDFS bolt).<br/>\n    +   * default key name is 'hdfs.config' */<br/>\n    +  public HdfsSpout withConfigKey(String configKey) </p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.trace(\"Next Tuple {}\", spoutId);<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending tuple from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>= maxOutstanding) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +      \"Progress tracker size has reached limit {}, SpoutID {}\"<br/>\n    +      , maxOutstanding, spoutId);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples to be retried, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.debug(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p> else </p>\n{\n    +    fileReadCompletely=false;\n    +  }\n<p>    +}<br/>\n    +if( fileReadCompletely ) </p>\n{ // wait for more ACKs before proceeding\n    +  return;\n    +}\n<p>    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    ++acksSinceLastCommit; // assume message is immediately ACKed in non-ack mode\n    +    commitProgress(reader.getFileOffset());\n    +  }\n<p> else </p>\n{\n    +    commitProgress(tracker.getCommitPosition());\n    +  }\n<p>    +  return;<br/>\n    +} else {<br/>\n    +  fileReadCompletely = true;<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    markFileAsDone(reader.getFilePath());\n    +  }\n<p>    +}<br/>\n    +      } catch (IOException e) </p>\n{\n    +LOG.error(\"I/O Error processing at file location \" + getFileProgress(reader), e);\n    +// don't emit anything .. allow configured spout wait strategy to kick in\n    +return;\n    +      }\n<p> catch (ParseException e) </p>\n{\n    +LOG.error(\"Parsing error when processing at file location \" + getFileProgress(reader) +\n    +\". Skipping remainder of file.\", e);\n    +markFileAsBad(reader.getFilePath());\n    +// Note: We don't return from this method on ParseException to avoid triggering the\n    +// spout wait strategy (due to no emits). Instead we go back into the loop and\n    +// generate a tuple from next file\n    +      }\n<p>    +    } // while<br/>\n    +  }<br/>\n    +<br/>\n    +  // will commit progress into lock file if commit threshold is reached<br/>\n    +  private void commitProgress(FileOffset position) {<br/>\n    +    if(position==null) </p>\n{\n    +      return;\n    +    }<br/>\n    +    if ( lock!=null && canCommitNow() ) {<br/>\n    +      try {<br/>\n    +String pos = position.toString();<br/>\n    +lock.heartbeat(pos);<br/>\n    +LOG.debug(\"{} Committed progress. {}\", spoutId, pos);<br/>\n    +acksSinceLastCommit = 0;<br/>\n    +commitTimeElapsed.set(false);<br/>\n    +setupCommitElapseTimer();<br/>\n    +      } catch (IOException e) {\n    +LOG.error(\"Unable to commit progress Will retry later. Spout ID = \" + spoutId, e);\n    +      }<br/>\n    +    }<br/>\n    +  }<br/>\n    +<br/>\n    +  private void setupCommitElapseTimer() {<br/>\n    +    if(commitFrequencySec<=0) {    +      return;    +    }\n<p>    +    TimerTask timerTask = new TimerTask() {<br/>\n    +      @Override<br/>\n    +      public void run() </p>\n{\n    +commitTimeElapsed.set(true);\n    +      }\n<p>    +    };<br/>\n    +    commitTimer.schedule(timerTask, commitFrequencySec * 1000);<br/>\n    +  }<br/>\n    +<br/>\n    +  private static String getFileProgress(FileReader reader) </p>\n{\n    +    return reader.getFilePath() + \" \" + reader.getFileOffset();\n    +  }\n<p>    +<br/>\n    +  private void markFileAsDone(Path filePath) {<br/>\n    +    try {<br/>\n    +      Path newFile = renameCompletedFile(reader.getFilePath());<br/>\n    +      LOG.info(\"Completed processing {}. Spout Id = {}\", newFile, spoutId);<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to archive completed file\" + filePath + \" Spout ID \" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void markFileAsBad(Path file) {<br/>\n    +    String fileName = file.toString();<br/>\n    +    String fileNameMinusSuffix = fileName.substring(0, fileName.indexOf(inprogress_suffix));<br/>\n    +    String originalName = new Path(fileNameMinusSuffix).getName();<br/>\n    +    Path  newFile = new Path( badFilesDirPath + Path.SEPARATOR + originalName);<br/>\n    +<br/>\n    +    LOG.info(\"Moving bad file {} to {}. Processed it till offset {}. SpoutID= {}\", originalName, newFile, tracker.getCommitPosition(), spoutId);<br/>\n    +    try {<br/>\n    +      if (!hdfs.rename(file, newFile) ) </p>\n{ // seems this can fail by returning false or throwing exception\n    +throw new IOException(\"Move failed for bad file: \" + file); // convert false ret value to exception\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.warn(\"Error moving bad file: \" + file + \" to destination \" + newFile + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void closeReaderAndResetTrackers() </p>\n{\n    +    inflight.clear();\n    +    tracker.offsets.clear();\n    +    retryList.clear();\n    +\n    +    reader.close();\n    +    reader = null;\n    +    releaseLockAndLog(lock, spoutId);\n    +    lock = null;\n    +  }\n<p>    +<br/>\n    +  private static void releaseLockAndLog(FileLock fLock, String spoutId) {<br/>\n    +    try {<br/>\n    +      if(fLock!=null) {<br/>\n    +fLock.release();<br/>\n    +LOG.debug(\"Spout {} released FileLock. SpoutId = {}\", fLock.getLockFile(), spoutId);<br/>\n    +      }<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to delete lock file : \" +fLock.getLockFile() + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  protected void emitData(List<Object> tuple, MessageId id) {<br/>\n    +    LOG.trace(\"Emitting - {}\", id);<br/>\n    +    this.collector.emit(tuple, id);<br/>\n    +    inflight.put(id, tuple);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {<br/>\n    +    LOG.info(\"Opening HDFS Spout\");<br/>\n    +    this.conf = conf;<br/>\n    +    this.commitTimer = new Timer();<br/>\n    +    this.tracker = new ProgressTracker();<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +<br/>\n    +    this.collector = collector;<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +    this.tupleCounter = 0;<br/>\n    +<br/>\n    +    // Hdfs related settings<br/>\n    +    if( conf.containsKey(Configs.HDFS_URI)) </p>\n{\n    +      this.hdfsUri = conf.get(Configs.HDFS_URI).toString();\n    +    }\n<p> else </p>\n{\n    +      throw new RuntimeException(Configs.HDFS_URI + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    try </p>\n{\n    +      this.hdfs = FileSystem.get(URI.create(hdfsUri), hdfsConfig);\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to instantiate file system\", e);\n    +      throw new RuntimeException(\"Unable to instantiate file system\", e);\n    +    }\n<p>    +<br/>\n    +<br/>\n    +    if ( conf.containsKey(configKey) ) {<br/>\n    +      Map<String, Object> map = (Map<String, Object>)conf.get(configKey);<br/>\n    +if(map != null) {<br/>\n    +  for(String keyName : map.keySet())</p>\n{\n    +    LOG.info(\"HDFS Config override : \" + keyName + \" = \" + String.valueOf(map.get(keyName)));\n    +    this.hdfsConfig.set(keyName, String.valueOf(map.get(keyName)));\n    +  }\n<p>    +  try </p>\n{\n    +    HdfsSecurityUtil.login(conf, hdfsConfig);\n    +  }\n<p> catch (IOException e) </p>\n{\n    +    LOG.error(\"HDFS Login failed \", e);\n    +    throw new RuntimeException(e);\n    +  }\n<p>    +} // if(map != null)<br/>\n    +      }<br/>\n    +<br/>\n    +    // Reader type config<br/>\n    +    if( conf.containsKey(Configs.READER_TYPE) ) </p>\n{\n    +      readerType = conf.get(Configs.READER_TYPE).toString();\n    +      checkValidReader(readerType);\n    +    }\n<p>    +<br/>\n    +    // &#8211; source dir config<br/>\n    +    if ( !conf.containsKey(Configs.SOURCE_DIR) ) </p>\n{\n    +      LOG.error(Configs.SOURCE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.SOURCE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.sourceDirPath = new Path( conf.get(Configs.SOURCE_DIR).toString() );<br/>\n    +<br/>\n    +    // &#8211; archive dir config<br/>\n    +    if ( !conf.containsKey(Configs.ARCHIVE_DIR) ) </p>\n{\n    +      LOG.error(Configs.ARCHIVE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.ARCHIVE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.archiveDirPath = new Path( conf.get(Configs.ARCHIVE_DIR).toString() );<br/>\n    +    validateOrMakeDir(hdfs, archiveDirPath, \"Archive\");<br/>\n    +<br/>\n    +    // &#8211; bad files dir config<br/>\n    +    if ( !conf.containsKey(Configs.BAD_DIR) ) </p>\n{\n    +      LOG.error(Configs.BAD_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.BAD_DIR + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    this.badFilesDirPath = new Path(conf.get(Configs.BAD_DIR).toString());<br/>\n    +    validateOrMakeDir(hdfs, badFilesDirPath, \"bad files\");<br/>\n    +<br/>\n    +    // &#8211; ignore file names config<br/>\n    +    if ( conf.containsKey(Configs.IGNORE_SUFFIX) ) </p>\n{\n    +      this.ignoreSuffix = conf.get(Configs.IGNORE_SUFFIX).toString();\n    +    }\n<p>    +<br/>\n    +    // &#8211; lock dir config<br/>\n    +    String lockDir = !conf.containsKey(Configs.LOCK_DIR) ? getDefaultLockDir(sourceDirPath) : conf.get(Configs.LOCK_DIR).toString() ;<br/>\n    +    this.lockDirPath = new Path(lockDir);<br/>\n    +    validateOrMakeDir(hdfs,lockDirPath,\"locks\");<br/>\n    +<br/>\n    +    // &#8211; lock timeout<br/>\n    +    if( conf.get(Configs.LOCK_TIMEOUT) !=null ) </p>\n{\n    +      this.lockTimeoutSec = Integer.parseInt(conf.get(Configs.LOCK_TIMEOUT).toString());\n    +    }\n<p>    +<br/>\n    +    // &#8211; enable/disable ACKing<br/>\n    +    Object ackers = conf.get(Config.TOPOLOGY_ACKER_EXECUTORS);<br/>\n    +    if( ackers!=null ) {<br/>\n    +      int ackerCount = Integer.parseInt(ackers.toString());<br/>\n    +      this.ackEnabled = (ackerCount>0);<br/>\n    +      LOG.debug(\"ACKer count = {}\", ackerCount);<br/>\n    +    }<br/>\n    +    else </p>\n{\n    +      this.ackEnabled = false;\n    +      LOG.debug(\"No ACKers config found\");\n    +    }\n<p>    +<br/>\n    +    LOG.info(\"ACK mode is {}\", ackEnabled ? \"enabled\" : \"disabled\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Again.  If acking is disabled ack is called on the spout as part of the emit.  You should not need all of this extra logic.  Storm should handle all of that for you.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170062854","html_url":"https://github.com/apache/storm/pull/936#issuecomment-170062854","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":170062854,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA2Mjg1NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:19:33Z","updated_at":"2016-01-08T17:19:33Z","author_association":"CONTRIBUTOR","body":"Overall things look good, but I did not look too in depth at the code.  I had a few minor nits and potential things for code clean up, but nothing I think would keep this from going in.  Great work.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170062854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631244","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631244","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631244,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEyNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:19:35Z","updated_at":"2025-01-24T14:14:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-170062854\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-170062854</a></p>\n\n<p>    Overall things look good, but I did not look too in depth at the code.  I had a few minor nits and potential things for code clean up, but nothing I think would keep this from going in.  Great work.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170073038","html_url":"https://github.com/apache/storm/pull/889#issuecomment-170073038","issue_url":"https://api.github.com/repos/apache/storm/issues/889","id":170073038,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA3MzAzOA==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:50:49Z","updated_at":"2016-01-08T17:50:49Z","author_association":"NONE","body":"- Downloaded 0.11 source & pulled in this branch\n- ran the move_packages.sh, build and unpacked the tarball\n- launched daemons from the unpacked 0.11+hack build\n- downloaded 0.10 release tarball and unpacked it separately\n- Used the 0.11+hack bin/storm to launch the 0.10 storm.starter.clj.word_count\n  - -> Client failed because of missing StormSubmitter package (good/expected)\n- Did the same adding `-c client.jartransformer.class=org.apache.storm.hack.StormShadeTransformer`\n  - -> topology submitted and ran OK\n  - Checked the stormjar.jar in the supervisor's stormdist directory and looked at the word_count.clj source file inside it, and the source had been rewritten from backtype.storm.... to org.apache.storm...\n\nThe one suggestion is to add to Config what the hack implementation class is (the intended value of the config) for the use case.  Otherwise users might need to hunt around to find the class we provide.\n\nOnce that's added, +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170073038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631754","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631754","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T17:50:50Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#issuecomment-170073038\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#issuecomment-170073038</a></p>\n\n<ul>\n\t<li>Downloaded 0.11 source & pulled in this branch</li>\n\t<li>ran the move_packages.sh, build and unpacked the tarball</li>\n\t<li>launched daemons from the unpacked 0.11+hack build</li>\n\t<li>downloaded 0.10 release tarball and unpacked it separately</li>\n\t<li>Used the 0.11+hack bin/storm to launch the 0.10 storm.starter.clj.word_count</li>\n\t<li>-> Client failed because of missing StormSubmitter package (good/expected)</li>\n\t<li>Did the same adding `-c client.jartransformer.class=org.apache.storm.hack.StormShadeTransformer`</li>\n\t<li>-> topology submitted and ran OK</li>\n\t<li>Checked the stormjar.jar in the supervisor's stormdist directory and looked at the word_count.clj source file inside it, and the source had been rewritten from backtype.storm.... to org.apache.storm...</li>\n</ul>\n\n\n<p>    The one suggestion is to add to Config what the hack implementation class is (the intended value of the config) for the use case.  Otherwise users might need to hunt around to find the class we provide.</p>\n\n<p>    Once that's added, +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170081940","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170081940","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170081940,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4MTk0MA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:26:36Z","updated_at":"2016-01-08T18:26:36Z","author_association":"CONTRIBUTOR","body":"+1. LGTM. It is very helpful to be able to select executor(s) for action while looking at rest of the stats.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170081940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694692","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694692","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694692,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ2OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:26:37Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170081940\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170081940</a></p>\n\n<p>    +1. LGTM. It is very helpful to be able to select executor(s) for action while looking at rest of the stats.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694697","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694697","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694697,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ2OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:43:07Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#discussion_r49221805\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#discussion_r49221805</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/ui/core.clj &#8212;<br/>\n    @@ -1108,12 +1108,8 @@<br/>\n       (GET \"/api/v1/topology/:id/profiling/start/:host-port/:timeout\"<br/>\n    [:as {:keys <span class=\"error\">&#91;servlet-request&#93;</span>} id host-port timeout & m]<br/>\n    (thrift/with-configured-nimbus-connection nimbus<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    These all seem to be missing `(populate-context! servlet-request)` We need to add it as the first thing in each of the REST requests</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170087235","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170087235","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170087235,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4NzIzNQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:44:50Z","updated_at":"2016-01-08T18:44:50Z","author_association":"CONTRIBUTOR","body":"Only one thing with security that looks like a merge error, not related to this, but fixing it here would be trivial. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170087235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694700","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694700","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694700,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ3MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:44:51Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170087235\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170087235</a></p>\n\n<p>    Only one thing with security that looks like a merge error, not related to this, but fixing it here would be trivial. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170087408","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170087408","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170087408,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4NzQwOA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:45:25Z","updated_at":"2016-01-08T18:45:25Z","author_association":"CONTRIBUTOR","body":"Oh +1, even without it, but if you aren't going to do it here let me know and I'll file a JIRA to fix it.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170087408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694705","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694705","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694705,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ3MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:45:26Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170087408\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170087408</a></p>\n\n<p>    Oh +1, even without it, but if you aren't going to do it here let me know and I'll file a JIRA to fix it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170088345","html_url":"https://github.com/apache/storm/pull/889#issuecomment-170088345","issue_url":"https://api.github.com/repos/apache/storm/issues/889","id":170088345,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4ODM0NQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:48:54Z","updated_at":"2016-01-08T18:48:54Z","author_association":"CONTRIBUTOR","body":"@d2r done I updated the comment in Config.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170088345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631759","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631759","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631759,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:48:55Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#issuecomment-170088345\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#issuecomment-170088345</a></p>\n\n<p>    @d2r done I updated the comment in Config.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697828","html_url":"https://github.com/apache/storm/issues/5287#issuecomment-2612697828","issue_url":"https://api.github.com/repos/apache/storm/issues/5287","id":2612697828,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc4Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:50:46Z","updated_at":"2025-01-24T14:43:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p>We also need a fix for <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a>'s <a href=\"https://github.com/apache/storm/pull/995#discussion-diff-49221805\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">comment</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170088938","html_url":"https://github.com/apache/storm/pull/882#issuecomment-170088938","issue_url":"https://api.github.com/repos/apache/storm/issues/882","id":170088938,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4ODkzOA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:51:27Z","updated_at":"2016-01-08T18:51:27Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170088938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593807","html_url":"https://github.com/apache/storm/issues/4847#issuecomment-2612593807","issue_url":"https://api.github.com/repos/apache/storm/issues/4847","id":2612593807,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTM4MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:51:27Z","updated_at":"2025-01-24T13:58:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/882#issuecomment-170088938\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/882#issuecomment-170088938</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170089128","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170089128","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170089128,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA4OTEyOA==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:51:55Z","updated_at":"2016-01-08T18:51:55Z","author_association":"NONE","body":"> Oh +1, even without it, but if you aren't going to do it here let me know and I'll file a JIRA to fix it.\n\nGood catch. Maybe we should fix this as part of [STORM-1452](https://issues.apache.org/jira/browse/STORM-1452). I made a comment pointing back here on that Jira.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170089128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694714","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694714","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694714,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ3MTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:51:56Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170089128\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170089128</a></p>\n\n<p>    > Oh +1, even without it, but if you aren't going to do it here let me know and I'll file a JIRA to fix it.</p>\n\n<p>    Good catch. Maybe we should fix this as part of <a href=\"https://issues.apache.org/jira/browse/STORM-1452\" title=\"Worker \"profiler\" actions broken by default\" class=\"issue-link\" data-issue-key=\"STORM-1452\"><del>STORM-1452</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-1452\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1452</a>). I made a comment pointing back here on that Jira.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593812","html_url":"https://github.com/apache/storm/issues/4847#issuecomment-2612593812","issue_url":"https://api.github.com/repos/apache/storm/issues/4847","id":2612593812,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTM4MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:54:53Z","updated_at":"2025-01-24T13:58:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/882\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/882</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593819","html_url":"https://github.com/apache/storm/issues/4847#issuecomment-2612593819","issue_url":"https://api.github.com/repos/apache/storm/issues/4847","id":2612593819,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTM4MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:58:50Z","updated_at":"2025-01-24T13:58:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/880\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/880</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593826","html_url":"https://github.com/apache/storm/issues/4847#issuecomment-2612593826","issue_url":"https://api.github.com/repos/apache/storm/issues/4847","id":2612593826,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTM4MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T18:59:32Z","updated_at":"2025-01-24T13:58:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jayapriya90\" class=\"user-hover\" rel=\"jayapriya90\">Jayapriya Surendran</a>,</p>\n\n<p>I merged your pull request into master and asf-site.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170093379","html_url":"https://github.com/apache/storm/pull/995#issuecomment-170093379","issue_url":"https://api.github.com/repos/apache/storm/issues/995","id":170093379,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA5MzM3OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:01:43Z","updated_at":"2016-01-08T19:01:43Z","author_association":"CONTRIBUTOR","body":"+1 for fixing it as a part of STORM-1452 and +1 for this pull request.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170093379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694719","html_url":"https://github.com/apache/storm/issues/5265#issuecomment-2612694719","issue_url":"https://api.github.com/repos/apache/storm/issues/5265","id":2612694719,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTQ3MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:01:44Z","updated_at":"2025-01-24T14:41:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/995#issuecomment-170093379\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/995#issuecomment-170093379</a></p>\n\n<p>    +1 for fixing it as a part of <a href=\"https://issues.apache.org/jira/browse/STORM-1452\" title=\"Worker \"profiler\" actions broken by default\" class=\"issue-link\" data-issue-key=\"STORM-1452\"><del>STORM-1452</del></a> and +1 for this pull request.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612694719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598503","html_url":"https://github.com/apache/storm/issues/4876#issuecomment-2612598503","issue_url":"https://api.github.com/repos/apache/storm/issues/4876","id":2612598503,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTg1MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:26:40Z","updated_at":"2025-01-24T14:00:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/728#discussion_r49227072\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/728#discussion_r49227072</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/ISaslClient.java &#8212;<br/>\n    @@ -17,11 +17,9 @@<br/>\n      */<br/>\n     package backtype.storm.messaging.netty;</p>\n\n<p>    -import org.jboss.netty.channel.Channel;<br/>\n    -import backtype.storm.Config;<br/>\n    -<br/>\n     public interface ISaslClient {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>void channelConnected(Channel channel);<br/>\n    +<br/>\n    +    // void channelConnected(Channel channel);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    If this is not needed we should remove it, not comment it out.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698722","html_url":"https://github.com/apache/storm/issues/5292#issuecomment-2612698722","issue_url":"https://api.github.com/repos/apache/storm/issues/5292","id":2612698722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg3MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:26:45Z","updated_at":"2025-01-24T14:43:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/997\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/997</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1457\" title=\"Avoid Unnecessary caching of tuples by executor\" class=\"issue-link\" data-issue-key=\"STORM-1457\"><del>STORM-1457</del></a> Avoid collecting pending tuples if topology.debug is off</p>\n\n<p>    This would help lower heap memory usage when ```topology.debug``` is off.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1457</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/997.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/997.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #997</p>\n\n<hr />\n<p>commit 0f1b14200f8be1f76408d58e71d02226c262e778<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-01-08T19:25:23Z</p>\n\n<p>    Avoid collecting pending tuples if topology.debug is off</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598508","html_url":"https://github.com/apache/storm/issues/4876#issuecomment-2612598508","issue_url":"https://api.github.com/repos/apache/storm/issues/4876","id":2612598508,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTg1MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:27:46Z","updated_at":"2025-01-24T14:00:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/728#discussion_r49227209\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/728#discussion_r49227209</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslClientHandler.java &#8212;<br/>\n    @@ -46,56 +44,48 @@ public KerberosSaslClientHandler(ISaslClient client, Map storm_conf, String jaas<br/>\n }</p>\n\n<p> @Override</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public void channelConnected(ChannelHandlerContext ctx,</li>\n\t<li>ChannelStateEvent event) {<br/>\n    +    public void channelActive(ChannelHandlerContext ctx) throws Exception {<br/>\n     // register the newly established channel</li>\n\t<li>Channel channel = ctx.getChannel();</li>\n\t<li>client.channelConnected(channel);<br/>\n    +Channel channel = ctx.channel();<br/>\n    +client.channelReady();</li>\n</ul>\n\n\n<p>     LOG.info(\"Connection established from {} to {}\",</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>channel.getLocalAddress(), channel.getRemoteAddress());<br/>\n    + channel.localAddress(), channel.localAddress());\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't think channel.getRemoteAddress and channel.localAddress return the same thing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170099926","html_url":"https://github.com/apache/storm/pull/993#issuecomment-170099926","issue_url":"https://api.github.com/repos/apache/storm/issues/993","id":170099926,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDA5OTkyNg==","user":{"login":"haohui","id":1192828,"node_id":"MDQ6VXNlcjExOTI4Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1192828?v=4","gravatar_id":"","url":"https://api.github.com/users/haohui","html_url":"https://github.com/haohui","followers_url":"https://api.github.com/users/haohui/followers","following_url":"https://api.github.com/users/haohui/following{/other_user}","gists_url":"https://api.github.com/users/haohui/gists{/gist_id}","starred_url":"https://api.github.com/users/haohui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haohui/subscriptions","organizations_url":"https://api.github.com/users/haohui/orgs","repos_url":"https://api.github.com/users/haohui/repos","events_url":"https://api.github.com/users/haohui/events{/privacy}","received_events_url":"https://api.github.com/users/haohui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:28:11Z","updated_at":"2016-01-08T19:28:11Z","author_association":"NONE","body":"The test passed locally. Committing.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170099926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690587","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690587","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690587,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:28:12Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993#issuecomment-170099926\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993#issuecomment-170099926</a></p>\n\n<p>    The test passed locally. Committing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598511","html_url":"https://github.com/apache/storm/issues/4876#issuecomment-2612598511","issue_url":"https://api.github.com/repos/apache/storm/issues/4876","id":2612598511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTg1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:29:27Z","updated_at":"2025-01-24T14:00:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/728#discussion_r49227426\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/728#discussion_r49227426</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/NettyUncaughtExceptionHandler.java &#8212;<br/>\n    @@ -21,6 +21,24 @@<br/>\n     import org.slf4j.Logger;<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>    +/*<br/>\n    +public class StormClientErrorHandler extends ChannelInboundHandlerAdapter {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormClientErrorHandler.class);<br/>\n    +    private String name;<br/>\n    +<br/>\n    +    StormClientErrorHandler(String name) </p>\n{\n    +this.name = name;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {<br/>\n    +if (!(cause instanceof ConnectException)) </p>\n{\n    +    LOG.info(\"Connection failed \" + name, cause);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +*/<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We should delete this commented out code.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170100773","html_url":"https://github.com/apache/storm/pull/728#issuecomment-170100773","issue_url":"https://api.github.com/repos/apache/storm/issues/728","id":170100773,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDEwMDc3Mw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:31:50Z","updated_at":"2016-01-08T19:31:50Z","author_association":"CONTRIBUTOR","body":"Everything looks really good now.  just a few minor nits.  I still have not found time to run some performance tests, but I will try to do that today.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170100773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598521","html_url":"https://github.com/apache/storm/issues/4876#issuecomment-2612598521","issue_url":"https://api.github.com/repos/apache/storm/issues/4876","id":2612598521,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTg1MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:31:52Z","updated_at":"2025-01-24T14:00:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/728#issuecomment-170100773\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/728#issuecomment-170100773</a></p>\n\n<p>    Everything looks really good now.  just a few minor nits.  I still have not found time to run some performance tests, but I will try to do that today.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612598521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170101211","html_url":"https://github.com/apache/storm/pull/993#issuecomment-170101211","issue_url":"https://api.github.com/repos/apache/storm/issues/993","id":170101211,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDEwMTIxMQ==","user":{"login":"haohui","id":1192828,"node_id":"MDQ6VXNlcjExOTI4Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1192828?v=4","gravatar_id":"","url":"https://api.github.com/users/haohui","html_url":"https://github.com/haohui","followers_url":"https://api.github.com/users/haohui/followers","following_url":"https://api.github.com/users/haohui/following{/other_user}","gists_url":"https://api.github.com/users/haohui/gists{/gist_id}","starred_url":"https://api.github.com/users/haohui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haohui/subscriptions","organizations_url":"https://api.github.com/users/haohui/orgs","repos_url":"https://api.github.com/users/haohui/repos","events_url":"https://api.github.com/users/haohui/events{/privacy}","received_events_url":"https://api.github.com/users/haohui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:33:48Z","updated_at":"2016-01-08T19:33:48Z","author_association":"NONE","body":"Merged in 1f1ba77be849e50cdc09fcfe08dcec8f4984b4f9\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170101211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690589","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690589","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690589,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:33:51Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993#issuecomment-170101211\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993#issuecomment-170101211</a></p>\n\n<p>    Merged in 1f1ba77be849e50cdc09fcfe08dcec8f4984b4f9</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690593","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690593","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690593,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:33:52Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698728","html_url":"https://github.com/apache/storm/issues/5292#issuecomment-2612698728","issue_url":"https://api.github.com/repos/apache/storm/issues/5292","id":2612698728,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg3Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:40:33Z","updated_at":"2025-01-24T14:43:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/997#discussion_r49228894\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/997#discussion_r49228894</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -572,7 +572,8 @@<br/>\n(do<br/>\n  (.put pending root-id [task-id<br/>\n message-id</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>{:stream out-stream-id :values values}<br/>\n    +    {:stream out-stream-id <br/>\n    +     :values (if (= true (storm-conf TOPOLOGY-DEBUG)) values nil)}\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I would prefer to avoid calculating if TOPOLOGY-DEBUG is true each time.  This is code on the critical path so if we could do it once at the beginning of the thread function and reuse it, that would be great.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170105203","html_url":"https://github.com/apache/storm/pull/991#issuecomment-170105203","issue_url":"https://api.github.com/repos/apache/storm/issues/991","id":170105203,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDEwNTIwMw==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:48:34Z","updated_at":"2016-01-08T19:48:34Z","author_association":"MEMBER","body":"@satishd, @arunmahadevan, @HeartSaVioR Thanks for your reviews. I believe I've addressed all your comments. I've also added documentation.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170105203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690990","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690990","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690990,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T19:48:35Z","updated_at":"2025-01-24T14:40:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#issuecomment-170105203\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#issuecomment-170105203</a></p>\n\n<p>    @satishd, @arunmahadevan, @HeartSaVioR Thanks for your reviews. I believe I've addressed all your comments. I've also added documentation.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698735","html_url":"https://github.com/apache/storm/issues/5292#issuecomment-2612698735","issue_url":"https://api.github.com/repos/apache/storm/issues/5292","id":2612698735,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg3MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T20:34:48Z","updated_at":"2025-01-24T14:43:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/997#discussion_r49234922\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/997#discussion_r49234922</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -572,7 +572,8 @@<br/>\n(do<br/>\n  (.put pending root-id [task-id<br/>\n message-id</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>{:stream out-stream-id :values values}<br/>\n    +    {:stream out-stream-id <br/>\n    +     :values (if (= true (storm-conf TOPOLOGY-DEBUG)) values nil)}\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Agreed. Let me change it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/170122524","html_url":"https://github.com/apache/storm/pull/997#issuecomment-170122524","issue_url":"https://api.github.com/repos/apache/storm/issues/997","id":170122524,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDEyMjUyNA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T21:00:52Z","updated_at":"2016-01-08T21:00:52Z","author_association":"CONTRIBUTOR","body":"@revans2  Moved calculation out of critical path.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/170122524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698739","html_url":"https://github.com/apache/storm/issues/5292#issuecomment-2612698739","issue_url":"https://api.github.com/repos/apache/storm/issues/5292","id":2612698739,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg3Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-08T21:00:53Z","updated_at":"2025-01-24T14:43:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/997#issuecomment-170122524\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/997#issuecomment-170122524</a></p>\n\n<p>    @revans2  Moved calculation out of critical path.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]