[{"url":"https://api.github.com/repos/apache/storm/issues/comments/178345578","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-178345578","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":178345578,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODM0NTU3OA==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T03:28:42Z","updated_at":"2016-02-02T04:44:52Z","author_association":"CONTRIBUTOR","body":"@ptgoetz Ok I will move peek implementation to a separate PR.\n\nAre you suggesting we overload filter api with fields parameter to keep it similar to each(inputFields, filter) ? Typically filter method accepts only the predicate so I did not add that api. E.g. [Java8 filter](https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-). \nWith the inputFields parameter, only those fields of the input trident tuple would be accessible. Without inputFileds param, one could always use convenience methods like `getStringByField` so I don't see a great difference. Let me know if we should add the overload.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178345578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864934","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864934","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864934,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T03:28:43Z","updated_at":"2025-01-24T15:58:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-178345578\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-178345578</a></p>\n\n<p>    @ptgoetz Ok I will move peek implementation to a separate PR.</p>\n\n<p>    Are you suggesting we overload filter api with fields parameter to keep it similar to each(inputFields, filter) ? Typically filter method accepts only the predicate so I did not add that api. E.g. <span class=\"error\">&#91;Java8 filter&#93;</span>(<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-</a>). Let me know if we should add the overload.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178437230","html_url":"https://github.com/apache/storm/pull/868#issuecomment-178437230","issue_url":"https://api.github.com/repos/apache/storm/issues/868","id":178437230,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODQzNzIzMA==","user":{"login":"spicoflorin","id":4939817,"node_id":"MDQ6VXNlcjQ5Mzk4MTc=","avatar_url":"https://avatars.githubusercontent.com/u/4939817?v=4","gravatar_id":"","url":"https://api.github.com/users/spicoflorin","html_url":"https://github.com/spicoflorin","followers_url":"https://api.github.com/users/spicoflorin/followers","following_url":"https://api.github.com/users/spicoflorin/following{/other_user}","gists_url":"https://api.github.com/users/spicoflorin/gists{/gist_id}","starred_url":"https://api.github.com/users/spicoflorin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spicoflorin/subscriptions","organizations_url":"https://api.github.com/users/spicoflorin/orgs","repos_url":"https://api.github.com/users/spicoflorin/repos","events_url":"https://api.github.com/users/spicoflorin/events{/privacy}","received_events_url":"https://api.github.com/users/spicoflorin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T08:07:28Z","updated_at":"2016-02-02T08:07:28Z","author_association":"NONE","body":"Hi!\n  I didn't solve it. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178437230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612629042","html_url":"https://github.com/apache/storm/issues/5027#issuecomment-2612629042","issue_url":"https://api.github.com/repos/apache/storm/issues/5027","id":2612629042,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjkwNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T08:07:31Z","updated_at":"2025-01-24T14:13:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user spicoflorin commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/868#issuecomment-178437230\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/868#issuecomment-178437230</a></p>\n\n<p>    Hi!<br/>\n      I didn't solve it. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612629042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178511982","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-178511982","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":178511982,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODUxMTk4Mg==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T11:06:08Z","updated_at":"2016-02-02T11:06:08Z","author_association":"CONTRIBUTOR","body":"Raised a separate JIRA to track peek - https://issues.apache.org/jira/browse/STORM-1517\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178511982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864941","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864941","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864941,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T11:06:11Z","updated_at":"2025-01-24T15:58:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-178511982\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-178511982</a></p>\n\n<p>    Raised a separate JIRA to track peek - <a href=\"https://issues.apache.org/jira/browse/STORM-1517\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1517</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867007","html_url":"https://github.com/apache/storm/issues/5352#issuecomment-2612867007","issue_url":"https://api.github.com/repos/apache/storm/issues/5352","id":2612867007,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcwMDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T11:20:04Z","updated_at":"2025-01-24T15:59:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1065\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1065</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1517\" title=\"Add peek api in trident stream\" class=\"issue-link\" data-issue-key=\"STORM-1517\"><del>STORM-1517</del></a> add peek api in trident stream</p>\n\n<p>    Similar to the Java 8 peek, the peek api can be used to examine trident tuples at<br/>\n    some point in the stream pipeline or execute some custom actions.</p>\n\n<p>    Note: this includes changes from <a href=\"https://github.com/apache/storm/pull/1050\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050</a> and should go away once that gets merged.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1517\" title=\"Add peek api in trident stream\" class=\"issue-link\" data-issue-key=\"STORM-1517\"><del>STORM-1517</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1065.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1065.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1065</p>\n\n<hr />\n<p>commit 1832c369735576df61c6533ff772814b537e5d68<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-01-27T07:02:33Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1505\" title=\"Add map, flatMap and filter operations in trident api\" class=\"issue-link\" data-issue-key=\"STORM-1505\"><del>STORM-1505</del></a> Add map and flatMap functions in trident stream</p>\n\n<p>    map and flatmap are common stream operations. Right now in trident this has to be<br/>\n    implemented via each() which also sends the input field values<br/>\n    in addition to the mapped field values, so the map and flatmap should make things slightly<br/>\n    more efficient and easy.</p>\n\n<p>commit 77325fdbcc506fa9c75a7b2e39f5b24fcca1e58b<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-01-28T07:16:31Z</p>\n\n<p>    Addressed review comments</p>\n\n<p>    Changed input to the map and flatMap functions from Values to TridentTuple to<br/>\n    make it more easy to use.</p>\n\n<p>commit 8e6bdf3bfde4e24b7b26c8bf74b46edf821fba2e<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-02-02T10:58:59Z</p>\n\n<p>    Added filter api</p>\n\n<p>    filter is a wrapper over each to easily filter out tuples flowing through the pipeline.</p>\n\n<p>commit 04d5dfdfa605cf29b3aa401987f89dc3354918dd<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-02-02T11:12:11Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1517\" title=\"Add peek api in trident stream\" class=\"issue-link\" data-issue-key=\"STORM-1517\"><del>STORM-1517</del></a> add peek api in trident stream</p>\n\n<p>    Similar to the Java 8 peek, the peek api can be used to examine trident tuples at<br/>\n    some point in the stream pipeline or execute some custom actions.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866729","html_url":"https://github.com/apache/storm/issues/5351#issuecomment-2612866729","issue_url":"https://api.github.com/repos/apache/storm/issues/5351","id":2612866729,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjY3Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T13:53:03Z","updated_at":"2025-01-24T15:59:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=satish.duggana\">satish.duggana</a>:</i>\n<p>org.apache.storm.starter.SlidingWindowTopology can be used to reproduce this issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178592968","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-178592968","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":178592968,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODU5Mjk2OA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T14:15:29Z","updated_at":"2016-02-02T14:15:29Z","author_association":"MEMBER","body":"@arunmahadevan Yes, I'm talking about adding the following:\n\n``` java\npublic Stream filter(Fields inputFields, Filter filter)\n```\n\nI know it's minor, but I'm thinking of users having existing `Filter` implementations that may depend on specific fields being selected.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178592968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864951","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864951","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864951,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T14:15:31Z","updated_at":"2025-01-24T15:58:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-178592968\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-178592968</a></p>\n\n<p>    @arunmahadevan Yes, I'm talking about adding the following:</p>\n\n<p>    ```java<br/>\n    public Stream filter(Fields inputFields, Filter filter)<br/>\n    ```</p>\n\n<p>    I know it's minor, but I'm thinking of users having existing `Filter` implementations that may depend on specific fields being selected.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178612406","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-178612406","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":178612406,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODYxMjQwNg==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T14:52:21Z","updated_at":"2016-02-02T14:52:21Z","author_association":"CONTRIBUTOR","body":"@ptgoetz added the overloaded filter api.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178612406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864954","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864954","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864954,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T14:52:22Z","updated_at":"2025-01-24T15:58:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-178612406\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-178612406</a></p>\n\n<p>    @ptgoetz added the overloaded filter api.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178618849","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178618849","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178618849,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODYxODg0OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:01:43Z","updated_at":"2016-02-02T15:01:43Z","author_association":"CONTRIBUTOR","body":"+1 the change looks fine to me.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178618849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178624815","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178624815","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178624815,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODYyNDgxNQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:11:30Z","updated_at":"2016-02-02T15:11:30Z","author_association":"CONTRIBUTOR","body":"@mjsax is there a JIRA associated with this change?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178624815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178630220","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178630220","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178630220,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODYzMDIyMA==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:21:58Z","updated_at":"2016-02-02T15:21:58Z","author_association":"MEMBER","body":"No JIRA. Should I open one?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178630220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178637591","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178637591","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178637591,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODYzNzU5MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:30:54Z","updated_at":"2016-02-02T15:30:54Z","author_association":"CONTRIBUTOR","body":"@dossett \n\nstorm-starter failed the same way in travis for both JDK8 and JDK7 something odd with logging.  I will try to reproduce it and see if it is just a fluke or if it is an actual issue.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178637591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864630","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864630","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864630,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:30:55Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178637591\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178637591</a></p>\n\n<p>    @dossett </p>\n\n<p>    storm-starter failed the same way in travis for both JDK8 and JDK7 something odd with logging.  I will try to reproduce it and see if it is just a fluke or if it is an actual issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178645013","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178645013","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178645013,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY0NTAxMw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:44:05Z","updated_at":"2016-02-02T15:44:05Z","author_association":"CONTRIBUTOR","body":"@dossett yes I have been able to reproduce the error, and it appears to somehow be related to this pull request.\n\n```\nmvn clean install -DskipTests\ncd examples/strom-starter\nmvn clean test\n```\n\nThe above works on master but fails 100% of the time with this pull request.  I see some ClassDef like issues so my guess is that the dependencies are somehow messed up, probably with log4j.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178645013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864635","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864635","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864635,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:44:06Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178645013\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178645013</a></p>\n\n<p>    @dossett yes I have been able to reproduce the error, and it appears to somehow be related to this pull request.</p>\n\n<p>    ```<br/>\n    mvn clean install -DskipTests<br/>\n    cd examples/strom-starter<br/>\n    mvn clean test<br/>\n    ```</p>\n\n<p>    The above works on master but fails 100% of the time with this pull request.  I see some ClassDef like issues so my guess is that the dependencies are somehow messed up, probably with log4j.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178648000","html_url":"https://github.com/apache/storm/pull/1055#issuecomment-178648000","issue_url":"https://api.github.com/repos/apache/storm/issues/1055","id":178648000,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY0ODAwMA==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:47:04Z","updated_at":"2016-02-02T15:47:04Z","author_association":"NONE","body":"@revans2 Can you please take a look at this again. Addressed your comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178648000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178648710","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178648710","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178648710,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY0ODcxMA==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:48:18Z","updated_at":"2016-02-02T15:48:18Z","author_association":"CONTRIBUTOR","body":"Thanks @revans2, I will check it out.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178648710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864640","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864640","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864640,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:48:19Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178648710\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178648710</a></p>\n\n<p>    Thanks @revans2, I will check it out.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178649925","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178649925","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178649925,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY0OTkyNQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:50:49Z","updated_at":"2016-02-02T15:50:49Z","author_association":"CONTRIBUTOR","body":"@dossett I did a difference for running mvn dependency:tree between master and this pull just in storm starter and this is what showed up.\n\n```\n-[INFO] |  \\- org.apache.hadoop:hadoop-auth:jar:2.6.1:compile\n+[INFO] |  +- org.apache.hadoop:hadoop-auth:jar:2.6.1:compile\n+[INFO] |  \\- io.confluent:kafka-avro-serializer:jar:1.0:compile\n+[INFO] |     \\- io.confluent:kafka-schema-registry-client:jar:1.0:compile\n+[INFO] |        \\- org.slf4j:slf4j-log4j12:jar:1.6.6:compile\n```\n\nlooks like we added in a dependency on org.slf4j:slf4j-log4j12:jar:1.6.6:compile I think if you exclude that dependency it should work fine.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178649925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864643","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864643","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864643,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:50:50Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178649925\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178649925</a></p>\n\n<p>    @dossett I did a difference for running mvn dependency:tree between master and this pull just in storm starter and this is what showed up.</p>\n\n<p>    ```<br/>\n    -<span class=\"error\">&#91;INFO&#93;</span> |  &#45; org.apache.hadoop:hadoop-auth:jar:2.6.1:compile<br/>\n    +<span class=\"error\">&#91;INFO&#93;</span> |  +- org.apache.hadoop:hadoop-auth:jar:2.6.1:compile<br/>\n    +<span class=\"error\">&#91;INFO&#93;</span> |  &#45; io.confluent:kafka-avro-serializer:jar:1.0:compile<br/>\n    +<span class=\"error\">&#91;INFO&#93;</span> |     &#45; io.confluent:kafka-schema-registry-client:jar:1.0:compile<br/>\n    +<span class=\"error\">&#91;INFO&#93;</span> |&#45; org.slf4j:slf4j-log4j12:jar:1.6.6:compile<br/>\n    ```</p>\n\n<p>    looks like we added in a dependency on org.slf4j:slf4j-log4j12:jar:1.6.6:compile I think if you exclude that dependency it should work fine.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178667030","html_url":"https://github.com/apache/storm/pull/489#issuecomment-178667030","issue_url":"https://api.github.com/repos/apache/storm/issues/489","id":178667030,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY2NzAzMA==","user":{"login":"reembs","id":3320973,"node_id":"MDQ6VXNlcjMzMjA5NzM=","avatar_url":"https://avatars.githubusercontent.com/u/3320973?v=4","gravatar_id":"","url":"https://api.github.com/users/reembs","html_url":"https://github.com/reembs","followers_url":"https://api.github.com/users/reembs/followers","following_url":"https://api.github.com/users/reembs/following{/other_user}","gists_url":"https://api.github.com/users/reembs/gists{/gist_id}","starred_url":"https://api.github.com/users/reembs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reembs/subscriptions","organizations_url":"https://api.github.com/users/reembs/orgs","repos_url":"https://api.github.com/users/reembs/repos","events_url":"https://api.github.com/users/reembs/events{/privacy}","received_events_url":"https://api.github.com/users/reembs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T16:20:39Z","updated_at":"2016-02-02T16:20:39Z","author_association":"NONE","body":"@HeartSaVioR I see the original bug was already fixed. I like the PR code better, but that's esthetics. Not worth the hassle, Closing.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178667030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534253","html_url":"https://github.com/apache/storm/issues/4574#issuecomment-2612534253","issue_url":"https://api.github.com/repos/apache/storm/issues/4574","id":2612534253,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzQyNTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T16:20:41Z","updated_at":"2025-01-24T13:29:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user reembs commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/489#issuecomment-178667030\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/489#issuecomment-178667030</a></p>\n\n<p>    @HeartSaVioR I see the original bug was already fixed. I like the PR code better, but that's esthetics. Not worth the hassle, Closing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534261","html_url":"https://github.com/apache/storm/issues/4574#issuecomment-2612534261","issue_url":"https://api.github.com/repos/apache/storm/issues/4574","id":2612534261,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzQyNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T16:20:41Z","updated_at":"2025-01-24T13:29:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user reembs closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/489\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/489</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178672701","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178672701","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178672701,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODY3MjcwMQ==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T16:28:51Z","updated_at":"2016-02-02T16:28:51Z","author_association":"CONTRIBUTOR","body":"@revans2 Spot on, I just pushed that change. Thanks for catching that. If the travis builds pass, I will commit today.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178672701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864647","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864647","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864647,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T16:28:54Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178672701\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178672701</a></p>\n\n<p>    @revans2 Spot on, I just pushed that change. Thanks for catching that. If the travis builds pass, I will commit today.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178707222","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-178707222","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":178707222,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODcwNzIyMg==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T17:39:53Z","updated_at":"2016-02-02T17:39:53Z","author_association":"MEMBER","body":"+1 Thanks @arunmahadevan \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178707222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864957","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864957","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864957,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T17:39:54Z","updated_at":"2025-01-24T15:58:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-178707222\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-178707222</a></p>\n\n<p>    +1 Thanks @arunmahadevan </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864654","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864654","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864654,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T17:57:44Z","updated_at":"2025-01-24T15:58:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51607023\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51607023</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/README.md &#8212;<br/>\n    @@ -315,6 +314,18 @@ An `org.apache.avro.Schema` object cannot be directly provided since it does not<br/>\n     The AvroGenericRecordBolt expects to receive tuples containing an Avro GenericRecord that conforms to the provided<br/>\n     schema.</p>\n\n<p>    +To use this bolt you *<b>must</b>* register the appropriate Kryo serializers with your topology configuration.  A convenience<br/>\n    +method is provided for this:<br/>\n    +<br/>\n    +```AvroGenericRecordBolt.addAvroKryoSerializations(conf);```<br/>\n    +<br/>\n    +By default Storm will use the ```GenericAvroSerializer``` to handle serialization.  This will work, but there are much <br/>\n    +faster options available if you can pre-define the schemas you will be using or utilize an external schema registry. An<br/>\n    +implementation using the Confluent Schema Registry is provided, but others can be implemented and provided to Storm.<br/>\n    +Please see the javadoc for classes in org.apache.storm.hdfs.avro for information about using the built-in options or<br/>\n    +creating your own.<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Something's off with the markdown formatting here, such that the content below is all rendered as code/preformatted.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178722021","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178722021","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178722021,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODcyMjAyMQ==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T17:59:05Z","updated_at":"2016-02-02T17:59:05Z","author_association":"MEMBER","body":"One minor issue with the markdown formatting in the README, but I'm +1 once that's fixed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178722021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864661","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864661","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864661,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T17:59:07Z","updated_at":"2025-01-24T15:58:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178722021\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178722021</a></p>\n\n<p>    One minor issue with the markdown formatting in the README, but I'm +1 once that's fixed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864665","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864665","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864665,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:11:53Z","updated_at":"2025-01-24T15:58:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51609059\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51609059</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/README.md &#8212;<br/>\n    @@ -315,6 +314,18 @@ An `org.apache.avro.Schema` object cannot be directly provided since it does not<br/>\n     The AvroGenericRecordBolt expects to receive tuples containing an Avro GenericRecord that conforms to the provided<br/>\n     schema.</p>\n\n<p>    +To use this bolt you *<b>must</b>* register the appropriate Kryo serializers with your topology configuration.  A convenience<br/>\n    +method is provided for this:<br/>\n    +<br/>\n    +```AvroGenericRecordBolt.addAvroKryoSerializations(conf);```<br/>\n    +<br/>\n    +By default Storm will use the ```GenericAvroSerializer``` to handle serialization.  This will work, but there are much <br/>\n    +faster options available if you can pre-define the schemas you will be using or utilize an external schema registry. An<br/>\n    +implementation using the Confluent Schema Registry is provided, but others can be implemented and provided to Storm.<br/>\n    +Please see the javadoc for classes in org.apache.storm.hdfs.avro for information about using the built-in options or<br/>\n    +creating your own.<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It looked good in IntelliJ, thanks for checking it here. Should be fixed now.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178734184","html_url":"https://github.com/apache/storm/pull/1052#issuecomment-178734184","issue_url":"https://api.github.com/repos/apache/storm/issues/1052","id":178734184,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODczNDE4NA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:20:30Z","updated_at":"2016-02-02T18:20:30Z","author_association":"MEMBER","body":"Looks good. +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178734184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864670","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864670","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864670,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:20:32Z","updated_at":"2025-01-24T15:58:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#issuecomment-178734184\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#issuecomment-178734184</a></p>\n\n<p>    Looks good. +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864675","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864675","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864675,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ2NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:58:43Z","updated_at":"2025-01-24T15:58:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178759128","html_url":"https://github.com/apache/storm/pull/1055#issuecomment-178759128","issue_url":"https://api.github.com/repos/apache/storm/issues/1055","id":178759128,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODc1OTEyOA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:59:50Z","updated_at":"2016-02-02T18:59:50Z","author_association":"CONTRIBUTOR","body":"For the most part it looks good.  Just a few things to clean up.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178759128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178787608","html_url":"https://github.com/apache/storm/pull/1055#issuecomment-178787608","issue_url":"https://api.github.com/repos/apache/storm/issues/1055","id":178787608,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODc4NzYwOA==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T19:54:57Z","updated_at":"2016-02-02T19:54:57Z","author_association":"NONE","body":"@revans2 Thanks for reviewing, guess this fixes all your concerns\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178787608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178800030","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178800030","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178800030,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODgwMDAzMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T20:17:18Z","updated_at":"2016-02-02T20:17:18Z","author_association":"CONTRIBUTOR","body":"@mjsax if you want to, if you don't I am happy to merge it in just as a pull request.  I just wanted to check.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178800030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178807187","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178807187","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178807187,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODgwNzE4Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T20:32:20Z","updated_at":"2016-02-02T20:32:20Z","author_association":"CONTRIBUTOR","body":"Thanks @mjsax just merged this into master\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178807187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178809384","html_url":"https://github.com/apache/storm/pull/1031#issuecomment-178809384","issue_url":"https://api.github.com/repos/apache/storm/issues/1031","id":178809384,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODgwOTM4NA==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T20:39:43Z","updated_at":"2016-02-02T20:39:43Z","author_association":"MEMBER","body":"Thanks :)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178809384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867154","html_url":"https://github.com/apache/storm/issues/5353#issuecomment-2612867154","issue_url":"https://api.github.com/repos/apache/storm/issues/5353","id":2612867154,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcxNTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T21:36:35Z","updated_at":"2025-01-24T15:59:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dossett opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1066\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1066</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1518\" title=\"Backport STORM-1504 to 1.0 branch\" class=\"issue-link\" data-issue-key=\"STORM-1518\"><del>STORM-1518</del></a>: Backport of <a href=\"https://issues.apache.org/jira/browse/STORM-1504\" title=\"AvroGenericRecordBolt will not work in a topology with multiple workers\" class=\"issue-link\" data-issue-key=\"STORM-1504\"><del>STORM-1504</del></a></p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dossett/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dossett/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1518\" title=\"Backport STORM-1504 to 1.0 branch\" class=\"issue-link\" data-issue-key=\"STORM-1518\"><del>STORM-1518</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1066.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1066.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1066</p>\n\n<hr />\n<p>commit ea9abeb2d67402cf82e80adf6498a30a38b3a0a4<br/>\nAuthor: Aaron Dossett <aaron.dossett@target.com><br/>\nDate:   2016-02-02T21:35:39Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1518\" title=\"Backport STORM-1504 to 1.0 branch\" class=\"issue-link\" data-issue-key=\"STORM-1518\"><del>STORM-1518</del></a>: Backport of <a href=\"https://issues.apache.org/jira/browse/STORM-1504\" title=\"AvroGenericRecordBolt will not work in a topology with multiple workers\" class=\"issue-link\" data-issue-key=\"STORM-1504\"><del>STORM-1504</del></a></p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178853787","html_url":"https://github.com/apache/storm/pull/1066#issuecomment-178853787","issue_url":"https://api.github.com/repos/apache/storm/issues/1066","id":178853787,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODg1Mzc4Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T22:09:19Z","updated_at":"2016-02-02T22:09:19Z","author_association":"CONTRIBUTOR","body":"+1 looks good to me\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178853787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867158","html_url":"https://github.com/apache/storm/issues/5353#issuecomment-2612867158","issue_url":"https://api.github.com/repos/apache/storm/issues/5353","id":2612867158,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcxNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T22:09:20Z","updated_at":"2025-01-24T15:59:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1066#issuecomment-178853787\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1066#issuecomment-178853787</a></p>\n\n<p>    +1 looks good to me</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866570","html_url":"https://github.com/apache/storm/issues/5350#issuecomment-2612866570","issue_url":"https://api.github.com/repos/apache/storm/issues/5350","id":2612866570,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjY1NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T22:24:27Z","updated_at":"2025-01-24T15:59:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user torbiak opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1067\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1067</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1515\" title=\"LocalState corruption after hard reboot on Windows\" class=\"issue-link\" data-issue-key=\"STORM-1515\"><del>STORM-1515</del></a>: Reset LocalState if corrupted after a hard reboot on Windows</p>\n\n<p>    On Windows LocalState IO requests interrupted by a hard reboot can<br/>\n    result in a file full of NULs, similar to the empty-file corruption seen in <a href=\"https://issues.apache.org/jira/browse/STORM-307\" title=\"After host crash, supervisor is unable to restart itself\" class=\"issue-link\" data-issue-key=\"STORM-307\"><del>STORM-307</del></a>.</p>\n\n<p>    I've fixed this for 0.9.x first since I haven't upgraded to 0.10 yet. The fix for 0.10 will be slightly different due to the move to Thrift for LocalState serialization.</p>\n\n<p>    It might be desirable to catch EOFException instead of checking serialized.length, since it could cover more cases of corruption, like a partially-written serialization stream.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/torbiak/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/torbiak/storm</a> 0.9.x-branch</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1067.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1067.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1067</p>\n\n<hr />\n<p>commit 69c90bdda052e68c18a2ecfe43c34999869aa144<br/>\nAuthor: Jordan Torbiak <jtorbiak@invidi.com><br/>\nDate:   2016-02-02T01:48:53Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1515\" title=\"LocalState corruption after hard reboot on Windows\" class=\"issue-link\" data-issue-key=\"STORM-1515\"><del>STORM-1515</del></a>: Reset LocalState if corrupted after a hard reboot on Windows</p>\n\n<p>    On Windows LocalState IO requests interrupted by a hard reboot can<br/>\n    result in a file full of NULs, similar to the empty-file corruption seen<br/>\n    in <a href=\"https://issues.apache.org/jira/browse/STORM-307\" title=\"After host crash, supervisor is unable to restart itself\" class=\"issue-link\" data-issue-key=\"STORM-307\"><del>STORM-307</del></a>.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867279","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867279","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867279,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcyNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T22:57:35Z","updated_at":"2025-01-24T15:59:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\">jerrypeng</a>:</i>\n<p>though changing the syslog setting in cluster.xml immediateFlush=\"false\" => \"true\" seems to fix the issue<br/>\nDescription from log4j2 website:<br/>\nimmediateFlush - When set to true - the default, each write will be followed by a flush. This will guarantee the data is written to disk but could impact performance.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867285","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867285","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867285,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcyODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T22:57:51Z","updated_at":"2025-01-24T15:59:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user jerrypeng opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1519\" title=\"Storm syslog logging not confirming to RFC5426 3.1\" class=\"issue-link\" data-issue-key=\"STORM-1519\"><del>STORM-1519</del></a> - Storm syslog logging not confirming to RFC5426 3.1</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/jerrypeng/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/jerrypeng/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1519\" title=\"Storm syslog logging not confirming to RFC5426 3.1\" class=\"issue-link\" data-issue-key=\"STORM-1519\"><del>STORM-1519</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1068</p>\n\n<hr />\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178916497","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178916497","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178916497,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODkxNjQ5Nw==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T00:37:47Z","updated_at":"2016-02-03T00:37:47Z","author_association":"CONTRIBUTOR","body":"This seems like it could have a _major_ impact on performance, no?   It's not clear to me what is so horrible in STORM-1519 that we need to force a disk write for every single log message.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178916497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867291","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867291","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867291,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcyOTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T00:37:49Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178916497\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178916497</a></p>\n\n<p>    This seems like it could have a <b>major</b> impact on performance, no?   It's not clear to me what is so horrible in <a href=\"https://issues.apache.org/jira/browse/STORM-1519\" title=\"Storm syslog logging not confirming to RFC5426 3.1\" class=\"issue-link\" data-issue-key=\"STORM-1519\"><del>STORM-1519</del></a> that we need to force a disk write for every single log message.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178962569","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178962569","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178962569,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODk2MjU2OQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:26:51Z","updated_at":"2016-02-03T02:26:51Z","author_association":"CONTRIBUTOR","body":"Well this only changes that config for the syslog appender.  The syslog appender writes data to a network socket.  This doesn't change the other appenders that will actually write to disk.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178962569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867295","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867295","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867295,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcyOTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:26:52Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178962569\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178962569</a></p>\n\n<p>    Well this only changes that config for the syslog appender.  The syslog appender writes data to a network socket.  This doesn't change the other appenders that will actually write to disk.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178963442","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178963442","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178963442,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODk2MzQ0Mg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:28:53Z","updated_at":"2016-02-03T02:28:53Z","author_association":"CONTRIBUTOR","body":"If a user has a log parser that adheres to RFC5426, then how log4j2 is configured to write to syslog is a problem. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178963442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867303","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867303","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867303,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjczMDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:28:55Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178963442\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178963442</a></p>\n\n<p>    If a user has a log parser that adheres to RFC5426, then how log4j2 is configured to write to syslog is a problem. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178964338","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178964338","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178964338,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODk2NDMzOA==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:33:24Z","updated_at":"2016-02-03T02:33:24Z","author_association":"CONTRIBUTOR","body":"@jerrypeng : ahhh.... thanks for the extra info, both points make sense. To be pedantic, that detail woulda been cool in the (empty :wink:) description.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178964338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867309","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867309","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867309,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjczMDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:33:25Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178964338\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178964338</a></p>\n\n<p>    @jerrypeng : ahhh.... thanks for the extra info, both points make sense. To be pedantic, that detail woulda been cool in the (empty :wink<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> description.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178964694","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178964694","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178964694,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODk2NDY5NA==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:35:43Z","updated_at":"2016-02-03T02:35:43Z","author_association":"CONTRIBUTOR","body":"@erikdw the jira i filed contained more detailed information\n\nhttps://issues.apache.org/jira/browse/STORM-1519\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178964694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867313","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867313","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867313,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjczMTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:35:45Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178964694\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178964694</a></p>\n\n<p>    @erikdw the jira i filed contained more detailed information</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1519\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1519</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/178969462","html_url":"https://github.com/apache/storm/pull/1068#issuecomment-178969462","issue_url":"https://api.github.com/repos/apache/storm/issues/1068","id":178969462,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODk2OTQ2Mg==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:51:29Z","updated_at":"2016-02-03T02:51:29Z","author_association":"CONTRIBUTOR","body":"@jerrypeng : heh, yep, I read the whole bug before my first reply.  And it had this note:\n- \"immediateFlush - When set to true - the default, each write will be followed by a flush. This will guarantee the data is written to disk but could impact performance.\"\n\nAnd _that_ is what scared me into replying actually!   The log4j2 docs should probably just be updated to \"written to disk or network\".\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/178969462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867317","html_url":"https://github.com/apache/storm/issues/5354#issuecomment-2612867317","issue_url":"https://api.github.com/repos/apache/storm/issues/5354","id":2612867317,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjczMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T02:51:32Z","updated_at":"2025-01-24T15:59:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1068#issuecomment-178969462\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1068#issuecomment-178969462</a></p>\n\n<p>    @jerrypeng : heh, yep, I read the whole bug before my first reply.  And it had this note:</p>\n<ul>\n\t<li>\"immediateFlush - When set to true - the default, each write will be followed by a flush. This will guarantee the data is written to disk but could impact performance.\"</li>\n</ul>\n\n\n<p>    And <b>that</b> is what scared me into replying actually!   The log4j2 docs should probably just be updated to \"written to disk or network\".</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646967","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646967","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646967,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T08:20:08Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user bastiliu opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1245\" title=\"port backtype.storm.daemon.acker to java\" class=\"issue-link\" data-issue-key=\"STORM-1245\"><del>STORM-1245</del></a> port backtype.storm.daemon.acker to java</p>\n\n<p>    1. Increase bucket number of pending map from 2 to 3 to avoid timeout too fast.<br/>\n    2. In clojure testing, creation of acker bolt will be overridden in with-tracked-cluster. After porting the implementation of acker to java, it seems there is no way to do similar override for java method. So, the mk-acker-bolt of acker.clj was kept as temporary solution to make the clojure testing pass. It can be removed after the porting of common.clj and relative testing modules. <br/>\n    Anyway, if there is a solution or workaround for this issue, please help to comment.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/bastiliu/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bastiliu/storm</a> master</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1069</p>\n\n<hr />\n<p>commit e9dc271f11e311eea2269a8f6035e2c322d8d520<br/>\nAuthor: basti.lj <basti.lj@alibaba-inc.com><br/>\nDate:   2016-02-01T03:17:05Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1245\" title=\"port backtype.storm.daemon.acker to java\" class=\"issue-link\" data-issue-key=\"STORM-1245\"><del>STORM-1245</del></a> port backtype.storm.daemon.acker to java</p>\n\n<p>commit 675b0c4f786838a13122b6743ca6c946aa1d63ee<br/>\nAuthor: basti.lj <basti.lj@alibaba-inc.com><br/>\nDate:   2016-02-03T07:46:08Z</p>\n\n<p>    <span class=\"error\">&#91;Storm 1245&#93;</span> port backtype.storm.daemon.acker to java</p>\n\n<p>commit e50a312f1440131e8b9e0cc055d475cbbe711cb9<br/>\nAuthor: basti.lj <basti.lj@alibaba-inc.com><br/>\nDate:   2016-02-03T08:01:43Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1245\" title=\"port backtype.storm.daemon.acker to java\" class=\"issue-link\" data-issue-key=\"STORM-1245\"><del>STORM-1245</del></a> port backtype.storm.daemon.acker to java</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646976","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646976","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646976,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T08:49:29Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51692811\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51692811</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) {<br/>\n    +// The tuple has been already timeout or failed. So, do nothing<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If the bolt explicitly fails an input tuple, is it possible that bolt's fail is received before the init?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646979","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646979","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646979,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:20:48Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51695817\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51695817</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) {<br/>\n    +// The tuple has been already timeout or failed. So, do nothing<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes, it is possible. But it is difficult to distinguish what the actual root cause is here (\"already timeout\", \"fail\" or \"receive fail before init\"). </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646982","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646982","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646982,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:46:38Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51698463\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51698463</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) {<br/>\n    +// The tuple has been already timeout or failed. So, do nothing<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It shouldn't matter. If you put ackObject again, ackObject will timeout without any harm. This seems to be same implementation in current acker in clojure. can you cross check? I don't trust my clojure skills. </p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646987","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646987","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646987,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:47:05Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51698528\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51698528</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +// The tuple has been already timeout or failed. So, do nothing\n    +return;\n    +    }\n<p>    +    curr.failed = true;<br/>\n    +} else {<br/>\n    +    LOG.warn(\"Unknown source stream {} from task-{}\", streamId, input.getSourceTask());<br/>\n    +    return;<br/>\n    +}<br/>\n    +<br/>\n    +Integer task = curr.spoutTask;<br/>\n    +if (task != null) {<br/>\n    +    if (curr.val == 0) </p>\n{\n    +pending.remove(id);\n    +List values = Utils.mkList(id);\n    +collector.emitDirect(task, ACKER_ACK_STREAM_ID, values);\n    +    }\n<p> else {<br/>\n    +if (curr.failed) </p>\n{\n    +    pending.remove(id);\n    +    List values = Utils.mkList(id);\n    +    collector.emitDirect(task, ACKER_FAIL_STREAM_ID, values);\n    +}\n<p>    +    }<br/>\n    +} else {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    No need of else block</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646990","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612646990","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612646990,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDY5OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:54:22Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51699268\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51699268</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +// The tuple has been already timeout or failed. So, do nothing\n    +return;\n    +    }\n<p>    +    curr.failed = true;<br/>\n    +} else {<br/>\n    +    LOG.warn(\"Unknown source stream {} from task-{}\", streamId, input.getSourceTask());<br/>\n    +    return;<br/>\n    +}<br/>\n    +<br/>\n    +Integer task = curr.spoutTask;<br/>\n    +if (task != null) {<br/>\n    +    if (curr.val == 0) {<br/>\n    +pending.remove(id);<br/>\n    +List values = Utils.mkList(id);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    you can use Values class. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612646990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647000","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647000","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647000,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:56:13Z","updated_at":"2025-01-24T14:21:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51699466\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51699466</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -1374,5 +1374,61 @@ public static RuntimeException wrapInRuntime(Exception e)</p>\n{\n return new RuntimeException(e);\n     }\n<p> }<br/>\n    +<br/>\n    +    public static <T> long bitXorValsSets(java.util.Set<T> vals) {<br/>\n    +long rtn = 0l;<br/>\n    +for (T n : vals) </p>\n{\n    +    rtn = bitXor(rtn, n);\n    +}\n<p>    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static long bitXor(Object a, Object b) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    given that bixXor falls in critical path, is it possible to avoid instanceof checks. why is there special treatment for Set type? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647002","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647002","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647002,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T09:58:36Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51699735\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51699735</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +// The tuple has been already timeout or failed. So, do nothing\n    +return;\n    +    }\n<p>    +    curr.failed = true;<br/>\n    +} else {<br/>\n    +    LOG.warn(\"Unknown source stream {} from task-{}\", streamId, input.getSourceTask());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    this will be called for every tickTuple. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647009","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647009","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647009,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T10:00:39Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51699943\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51699943</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    should the function return from here?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866182","html_url":"https://github.com/apache/storm/issues/5348#issuecomment-2612866182","issue_url":"https://api.github.com/repos/apache/storm/issues/5348","id":2612866182,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjYxODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T10:17:35Z","updated_at":"2025-01-24T15:59:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1070\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1070</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1513\" title=\"Update trident api docs\" class=\"issue-link\" data-issue-key=\"STORM-1513\"><del>STORM-1513</del></a> Added documentation for filter, map and flatMap</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1513\" title=\"Update trident api docs\" class=\"issue-link\" data-issue-key=\"STORM-1513\"><del>STORM-1513</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1070.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1070.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1070</p>\n\n<hr />\n<p>commit 3daf4ae251f23056161d0f4f82c2387f483197e6<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-02-03T08:54:20Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1513\" title=\"Update trident api docs\" class=\"issue-link\" data-issue-key=\"STORM-1513\"><del>STORM-1513</del></a> Added documentation for filter, map and flatMap</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647017","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647017","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647017,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T10:37:41Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51703880\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51703880</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) </p>\n{\n    +    val = Utils.bitXor(val, value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +this.collector = collector;\n    +this.pending = new RotatingMap<Object, AckObject>(TIMEOUT_BUCKET_NUM);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +if (TupleUtils.isTick(input)) {<br/>\n    +    Map<Object, AckObject> tmp = pending.rotate();<br/>\n    +    LOG.debug(\"Number of timeout tuples:{}\", tmp.size());<br/>\n    +}<br/>\n    +<br/>\n    +String streamId = input.getSourceStreamId();<br/>\n    +Object id = input.getValue(0);<br/>\n    +AckObject curr = pending.get(id);<br/>\n    +if (ACKER_INIT_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +curr.spoutTask = input.getInteger(2);\n    +pending.put(id, curr);\n    +    }\n<p> else </p>\n{\n    +// If receiving bolt's ack before the init message from spout, just update the xor value.\n    +curr.updateAck(input.getValue(1));\n    +curr.spoutTask = input.getInteger(2);\n    +    }\n<p>    +} else if (ACKER_ACK_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr != null) </p>\n{\n    +curr.updateAck(input.getValue(1));\n    +    }\n<p> else </p>\n{\n    +curr = new AckObject();\n    +curr.val = input.getLong(1);\n    +pending.put(id, curr);\n    +    }\n<p>    +} else if (ACKER_FAIL_STREAM_ID.equals(streamId)) {<br/>\n    +    if (curr == null) </p>\n{\n    +// The tuple has been already timeout or failed. So, do nothing\n    +return;\n    +    }\n<p>    +    curr.failed = true;<br/>\n    +} else {<br/>\n    +    LOG.warn(\"Unknown source stream {} from task-{}\", streamId, input.getSourceTask());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Addressed. It should return after processing tick tuple.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647024","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647024","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647024,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T10:54:36Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51706061\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51706061</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -1374,5 +1374,61 @@ public static RuntimeException wrapInRuntime(Exception e)</p>\n{\n return new RuntimeException(e);\n     }\n<p> }<br/>\n    +<br/>\n    +    public static <T> long bitXorValsSets(java.util.Set<T> vals) {<br/>\n    +long rtn = 0l;<br/>\n    +for (T n : vals) </p>\n{\n    +    rtn = bitXor(rtn, n);\n    +}\n<p>    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static long bitXor(Object a, Object b) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This piece of code comes from JStorm. There is some purpose for extension in JStorm. But anyway, I will remove the extra checking. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653467","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653467","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653467,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T13:32:25Z","updated_at":"2025-01-24T14:24:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user hustfxj opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1273\" title=\"port backtype.storm.cluster to java\" class=\"issue-link\" data-issue-key=\"STORM-1273\"><del>STORM-1273</del></a> port backtype.storm.cluster to java</p>\n\n<p>     Sorry. Some tests don’t pass, and I will check and fix it. I now check in code,  because I want to get some guidance before the Chinese New Year.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/hustfxj/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/hustfxj/storm</a> cluster</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1071</p>\n\n<hr />\n<p>commit 682d31c8a5f53a59f47b4df4bd35ff828e7e0aa5<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-01T07:17:49Z</p>\n\n<p>    port org.apache.storm.cluster.cluster.clj</p>\n\n<p>commit 9a79fb7de0e824e73c294738521e892f1d81fbb0<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-03T12:28:05Z</p>\n\n<p>    delete zookeeper.clj zookeeper_state_factory.clj cluster.clj, but some tests still can't pass</p>\n\n<p>commit 5916b0b8089f9dd184fdd1ab2f18eb5e5deabc65<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-03T13:15:41Z</p>\n\n<p>    callback maybe null</p>\n\n<p>commit 2a17c45591692b61df0be922fdec9d10a108de27<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-02-03T13:18:13Z</p>\n\n<p>    Merge branch 'master' into cluster</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867165","html_url":"https://github.com/apache/storm/issues/5353#issuecomment-2612867165","issue_url":"https://api.github.com/repos/apache/storm/issues/5353","id":2612867165,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjcxNjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T13:57:09Z","updated_at":"2025-01-24T15:59:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1066\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1066</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/179258530","html_url":"https://github.com/apache/storm/pull/1071#issuecomment-179258530","issue_url":"https://api.github.com/repos/apache/storm/issues/1071","id":179258530,"node_id":"MDEyOklzc3VlQ29tbWVudDE3OTI1ODUzMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:13:59Z","updated_at":"2016-02-03T14:13:59Z","author_association":"CONTRIBUTOR","body":"The travis CI tests failed with\n\n```\n13881 [timer] ERROR o.a.s.d.nimbus - Error when processing event\njava.lang.NullPointerException\n    at org.apache.storm.cluster.Cluster.convertExecutorBeats(Cluster.java:202) ~[classes/:?]\n    at org.apache.storm.cluster.StormZkClusterState.executorBeats(StormZkClusterState.java:327) ~[classes/:?]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_76]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_76]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_76]\n    at java.lang.reflect.Method.invoke(Method.java:606) ~[?:1.7.0_76]\n    at clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93) ~[clojure-1.7.0.jar:?]\n    at clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28) ~[clojure-1.7.0.jar:?]\n    at org.apache.storm.daemon.nimbus$update_heartbeats_BANG_.invoke(nimbus.clj:589) ~[classes/:?]\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/179258530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653477","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653477","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653477,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:14:00Z","updated_at":"2025-01-24T14:24:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#issuecomment-179258530\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#issuecomment-179258530</a></p>\n\n<p>    The travis CI tests failed with</p>\n\n<p>    ```<br/>\n    13881 <span class=\"error\">&#91;timer&#93;</span> ERROR o.a.s.d.nimbus - Error when processing event<br/>\n    java.lang.NullPointerException<br/>\n    \tat org.apache.storm.cluster.Cluster.convertExecutorBeats(Cluster.java:202) ~<span class=\"error\">&#91;classes/:?&#93;</span><br/>\n    \tat org.apache.storm.cluster.StormZkClusterState.executorBeats(StormZkClusterState.java:327) ~<span class=\"error\">&#91;classes/:?&#93;</span><br/>\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~<span class=\"error\">&#91;?:1.7.0_76&#93;</span><br/>\n    \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~<span class=\"error\">&#91;?:1.7.0_76&#93;</span><br/>\n    \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~<span class=\"error\">&#91;?:1.7.0_76&#93;</span><br/>\n    \tat java.lang.reflect.Method.invoke(Method.java:606) ~<span class=\"error\">&#91;?:1.7.0_76&#93;</span><br/>\n    \tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93) ~<span class=\"error\">&#91;clojure-1.7.0.jar:?&#93;</span><br/>\n    \tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28) ~<span class=\"error\">&#91;clojure-1.7.0.jar:?&#93;</span><br/>\n    \tat org.apache.storm.daemon.nimbus$update_heartbeats_BANG_.invoke(nimbus.clj:589) ~<span class=\"error\">&#91;classes/:?&#93;</span><br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653480","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653480","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653480,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:17:04Z","updated_at":"2025-01-24T14:24:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51725134\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51725134</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/common.clj &#8212;<br/>\n    @@ -13,14 +13,16 @@<br/>\n     ;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n     ;; See the License for the specific language governing permissions and<br/>\n     ;; limitations under the License.<br/>\n    +;TopologyActionOptions TopologyStatus StormBase RebalanceOptions KillOptions<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Not sure what this comment means could you remove it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866187","html_url":"https://github.com/apache/storm/issues/5348#issuecomment-2612866187","issue_url":"https://api.github.com/repos/apache/storm/issues/5348","id":2612866187,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjYxODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:24:27Z","updated_at":"2025-01-24T15:59:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1070#discussion_r51726012\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1070#discussion_r51726012</a></p>\n\n<p>    &#8212; Diff: documentation/Trident-API-Overview.md &#8212;<br/>\n    @@ -77,13 +77,67 @@ Now suppose you had these tuples with fields <span class=\"error\">&#91;\"a\", \"b\", \"c\"&#93;</span>:<br/>\n     If you ran this code:</p>\n\n<p>     ```java<br/>\n    -mystream.each(new Fields(\"b\", \"a\"), new MyFilter())<br/>\n    +mystream.filter(new MyFilter())<br/>\n     ```</p>\n\n<p>     The resulting tuples would be:</p>\n\n<p>     ```<br/>\n    -<span class=\"error\">&#91;2, 1, 1&#93;</span><br/>\n    +<span class=\"error\">&#91;1, 2, 3&#93;</span><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    just curious, any reason for changing the tuple content</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653483","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653483","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653483,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:25:30Z","updated_at":"2025-01-24T14:24:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51726152\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51726152</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker_state_factory.clj &#8212;<br/>\n    @@ -47,7 +43,7 @@<br/>\n (reify<br/>\n   ClusterState<br/>\n   ;; Let these pass through to the zk-state. We only want to handle heartbeats.</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(register <span class=\"error\">&#91;this callback&#93;</span> (.register zk-state callback))<br/>\n    +      (register <span class=\"error\">&#91;this callback&#93;</span> (.register zk-state callback))  ; need update callback, have questions?? callback is IFn here\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    If the callback takes a defined set of parameters that are used consistently lets either create or reuse an interface and then wrap the callback function in a reify call to create an instance of the interface for the callback to talk to.</p>\n\n<p>    If it does not take any parameters, it just is a function that is triggered than make it a Runnable.  But I think in this case it is the former, not the latter. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653487","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653487","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653487,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:30:21Z","updated_at":"2025-01-24T14:24:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51726849\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51726849</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/callback/Callback.java &#8212;<br/>\n    @@ -18,6 +18,9 @@</p>\n\n<p>     package org.apache.storm.callback;</p>\n\n<p>    +import clojure.lang.IFn;<br/>\n    +<br/>\n    +// To remove IFn after porting all callbacks to java<br/>\n     public interface Callback {<br/>\n public <T> Object execute(T... args);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I don't like this interface.  The generic <T> for the parameters is just confusing because it implies that all of the parameters should be of the same type, when in reality they are not.  I would much rather see something like</p>\n\n<p>    ```<br/>\n    public interface ZKStateChangedCallback </p>\n{\npublic void changed(Watcher.Event.EventType type, String path);\n    }\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866195","html_url":"https://github.com/apache/storm/issues/5348#issuecomment-2612866195","issue_url":"https://api.github.com/repos/apache/storm/issues/5348","id":2612866195,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjYxOTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:31:58Z","updated_at":"2025-01-24T15:59:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1070#discussion_r51727059\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1070#discussion_r51727059</a></p>\n\n<p>    &#8212; Diff: documentation/Trident-API-Overview.md &#8212;<br/>\n    @@ -77,13 +77,67 @@ Now suppose you had these tuples with fields <span class=\"error\">&#91;\"a\", \"b\", \"c\"&#93;</span>:<br/>\n     If you ran this code:</p>\n\n<p>     ```java<br/>\n    -mystream.each(new Fields(\"b\", \"a\"), new MyFilter())<br/>\n    +mystream.filter(new MyFilter())<br/>\n     ```</p>\n\n<p>     The resulting tuples would be:</p>\n\n<p>     ```<br/>\n    -<span class=\"error\">&#91;2, 1, 1&#93;</span><br/>\n    +<span class=\"error\">&#91;1, 2, 3&#93;</span><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The earlier example had an inputFields param where order of fields were changed (\"b\", \"a\") hence the second tuple would match the filter (slightly confusing). In the updated example, since inputFields are not explicitly mentioned the first tuple would match.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612866195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647027","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647027","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647027,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:32:31Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51727152\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51727152</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/acker.clj &#8212;<br/>\n    @@ -18,74 +18,24 @@<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.tuple Tuple Fields&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils RotatingMap MutableObject&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.util List Map&#93;</span>)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(:import <span class=\"error\">&#91;org.apache.storm Constants&#93;</span>)</li>\n\t<li>(:use <span class=\"error\">&#91;org.apache.storm config util log&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm Constants&#93;</span><br/>\n    +   (org.apache.storm.daemon AckerBolt))<br/>\n    +  (:use <span class=\"error\">&#91;org.apache.storm config util&#93;</span>)<br/>\n       (:gen-class</li>\n\t<li>:init init</li>\n\t<li>:implements <span class=\"error\">&#91;org.apache.storm.task.IBolt&#93;</span></li>\n\t<li>:constructors \n{[] []}<br/>\n    -   :state state ))<br/>\n    +    :init init<br/>\n    +    :implements <span class=\"error\">&#91;org.apache.storm.task.IBolt&#93;</span><br/>\n    +    :constructors {[] []}\n<p>    +    :state state))</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    indentation changed?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653494","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653494","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653494,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM0OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:32:34Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51727157\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51727157</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    I would prefer to see these inlined above, instead of in a static block.</p>\n\n<p>    for example</p>\n\n<p>    ```<br/>\n    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653500","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653500","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653500,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:33:20Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51727250\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51727250</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Please update the comment to be Cluster not Zookeeper</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653512","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653512","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653512,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:34:57Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51727452\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51727452</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Cluster u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String)topoConf.get(Config.STORM_ZOOKEEPER_AUTH_PAYLOAD);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This should be STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647038","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647038","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647038,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcwMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:38:42Z","updated_at":"2025-01-24T14:21:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r51727964\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r51727964</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -1374,5 +1374,61 @@ public static RuntimeException wrapInRuntime(Exception e)</p>\n{\n return new RuntimeException(e);\n     }\n<p> }<br/>\n    +<br/>\n    +    public static <T> long bitXorValsSets(java.util.Set<T> vals) {<br/>\n    +long rtn = 0l;<br/>\n    +for (T n : vals) </p>\n{\n    +    rtn = bitXor(rtn, n);\n    +}\n<p>    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static long bitXor(Object a, Object b) {<br/>\n    +long rtn;<br/>\n    +<br/>\n    +if (a instanceof Long && b instanceof Long) </p>\n{\n    +    rtn = ((Long) a) ^ ((Long) b);\n    +    return rtn;\n    +}\n<p> else if (b instanceof Set) </p>\n{\n    +    long bs = bitXorValsSets((Set) b);\n    +    return bitXor(a, bs);\n    +}\n<p> else if (a instanceof Set) </p>\n{\n    +    long as = bitXorValsSets((Set) a);\n    +    return bitXor(as, b);\n    +}\n<p> else </p>\n{\n    +    long ai = Long.parseLong(String.valueOf(a));\n    +    long bi = Long.parseLong(String.valueOf(b));\n    +    rtn = ai ^ bi;\n    +    return rtn;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static <V> List<V> mkList(V... args) {<br/>\n    +ArrayList<V> rtn = new ArrayList<V>();<br/>\n    +for (V o : args) </p>\n{\n    +    rtn.add(o);\n    +}\n<p>    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static <V> List<V> mkList(java.util.Set<V> args) {<br/>\n    +ArrayList<V> rtn = new ArrayList<V>();<br/>\n    +if (args != null) {<br/>\n    +    for (V o : args) </p>\n{\n    +rtn.add(o);\n    +    }\n<p>    +}<br/>\n    +return rtn;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static <V> List<V> mkList(Collection<V> args) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can we call all these methods makeList, more of javaness then clojureness</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653520","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653520","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653520,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:39:21Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51728055\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51728055</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Cluster u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String)topoConf.get(Config.STORM_ZOOKEEPER_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf))</p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) throws UnsupportedEncodingException {<br/>\n    +return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I know the last time I told you to let the exceptions bubble up, and for the most part I still agree with that, but in this case the UnsupportedEncodingException should never really be thrown.  If \"UTF-8\" is not supported by the JVM, which it should always be supported, we have some really big problems.  So I am OK with wrapping this one in a RuntimeException.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653526","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653526","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653526,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:41:59Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51728386\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51728386</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Cluster u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String)topoConf.get(Config.STORM_ZOOKEEPER_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf))</p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +    }\n<p>    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz){<br/>\n    +if (serialized != null)</p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    //Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Could you make this a javadoc?  That is what the doc string represents in clojure.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653532","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653532","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653532,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:44:24Z","updated_at":"2025-01-24T14:24:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51728719\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51728719</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Cluster u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String)topoConf.get(Config.STORM_ZOOKEEPER_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf))</p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +    }\n<p>    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz){<br/>\n    +if (serialized != null)</p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    //Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +    public static Map<ExecutorInfo, ClusterWorkerHeartbeat> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat){<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Lets make this private.  I know it want before but it is only used in this class so it does not need to be public.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653540","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653540","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653540,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T14:45:12Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51728819\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51728819</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE;<br/>\n    +    public static final String STORMS_SUBTREE;<br/>\n    +    public static final String SUPERVISORS_SUBTREE;<br/>\n    +    public static final String WORKERBEATS_SUBTREE;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE;<br/>\n    +    public static final String ERRORS_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_SUBTREE;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE;<br/>\n    +    public static final String NIMBUSES_SUBTREE;<br/>\n    +    public static final String CREDENTIALS_SUBTREE;<br/>\n    +    public static final String LOGCONFIG_SUBTREE;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE;<br/>\n    +<br/>\n    +    static </p>\n{\n    +ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;\n    +STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;\n    +SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;\n    +WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;\n    +BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;\n    +ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;\n    +BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;\n    +BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;\n    +NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;\n    +CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;\n    +LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;\n    +PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;\n    +    }\n<p>    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Cluster INSTANCE = new Cluster();<br/>\n    +    private static Cluster _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Cluster u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String)topoConf.get(Config.STORM_ZOOKEEPER_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf))</p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +    }\n<p>    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) throws UnsupportedEncodingException </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz){<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Lets make this private.  a ```(defn- ``` means that the definition is private to the namespace.  We should try and follow that where necessary.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867537","html_url":"https://github.com/apache/storm/issues/5356#issuecomment-2612867537","issue_url":"https://api.github.com/repos/apache/storm/issues/5356","id":2612867537,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc1Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T15:01:34Z","updated_at":"2025-01-24T16:00:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dbahir\">dbahir</a>:</i>\n<p>Issue is that current code executes a login from keytab for every instance of the HBase bolt, in a multi threaded environment that corrupts the UGI and the ticket is not renewed.</p>\n\n<p>Added checks around login when using keytab to make sure that is only happens once per process.</p>\n\n<p><a href=\"https://github.com/apache/storm/pull/1064\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1064</a></p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653544","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653544","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653544,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T15:25:51Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51735162\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51735162</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/Cluster.java &#8212;<br/>\n    @@ -0,0 +1,236 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class Cluster {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Lets rename this ClusterUtils, because it really is a Utils class.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653552","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653552","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653552,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T15:29:15Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51735697\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51735697</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/DistributedClusterState.java &#8212;<br/>\n    @@ -0,0 +1,268 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.Callback;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.UUID;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class DistributedClusterState implements ClusterState {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I am trying to understand how mk-distributed-cluster-state and mk-storm-cluster-state relate to DistributedClusterState and StormZKClusterState.</p>\n\n<p>    mk-distributed-cluster-state just instantiates a class pointed to by Config.STORM_CLUSTER_STATE_STORE with a default of \"org.apache.storm.cluster_state.zookeeper_state_factory\" and then calls mkInstance on it.</p>\n\n<p>    That functionality appears to be completely lost in this patch, and the StormZKStateStore is hardcoded everywhere, we need to fix that.<br/>\n    Now DistributedClusterState appears to be the equivalent of what zookeeper_state_factory was doing without the factory pattern, and without any reference to zookeeper in the name, while StormZKClusterState actually looks like the concrete implementation of ClusterState and does not really have any direct dependency on Zookeeper.</p>\n\n<p>    So to clean things up a bit lets do the following.</p>\n\n<p>    Rename the ClusterState interface to be StateStorage and ClusterStateFactory to be StateStorageFactory, all of them in the org.apache.storm.cluster package.  Along with that please change `:cluster-state` in the worker-data to be `:state-store`. This class, DistributedClusterState, would be renamed to ZKStateStorage and an appropriate ZKStateStorageFactory needs to be created.  pacemaker_state_factory.clj needs to be reverted and updated to extend the newly renamed StateStorageFactory, and to return a StateStorage instance.</p>\n\n<p>    ClusterState no longer needs to be an interface and implementation split off from one another.  It should be a single class that uses the StateStore that is passed into it in the constructor.</p>\n\n<p>    mk-distributed-cluster-state should be a static method in mkStateStorage that should probably be a part of ClusterUtils.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/179294019","html_url":"https://github.com/apache/storm/pull/1071#issuecomment-179294019","issue_url":"https://api.github.com/repos/apache/storm/issues/1071","id":179294019,"node_id":"MDEyOklzc3VlQ29tbWVudDE3OTI5NDAxOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T15:30:57Z","updated_at":"2016-02-03T15:30:57Z","author_association":"CONTRIBUTOR","body":"@hustfxj there are some major changes that need to be made to the way you setup your class hierarchy and the naming of those classes.  I stopped looking at the details of the rest of the patch until those changes can be addressed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/179294019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653561","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653561","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653561,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1NjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T15:30:59Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#issuecomment-179294019\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#issuecomment-179294019</a></p>\n\n<p>    @hustfxj there are some major changes that need to be made to the way you setup your class hierarchy and the naming of those classes.  I stopped looking at the details of the rest of the patch until those changes can be addressed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653568","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653568","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653568,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T16:02:03Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51741222\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51741222</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/DistributedClusterState.java &#8212;<br/>\n    @@ -0,0 +1,268 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.Callback;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.UUID;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class DistributedClusterState implements ClusterState {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(DistributedClusterState.class);<br/>\n    +<br/>\n    +    private ConcurrentHashMap<String, Callback> callbacks = new ConcurrentHashMap<String, Callback>();<br/>\n    +    private CuratorFramework zkWriter;<br/>\n    +    private CuratorFramework zkReader;<br/>\n    +    private AtomicBoolean active;<br/>\n    +<br/>\n    +    private boolean isNimbus;<br/>\n    +    private Map authConf;<br/>\n    +    private Map<Object, Object> conf;<br/>\n    +<br/>\n    +    public DistributedClusterState(Map<Object, Object> conf, Map authConf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +this.conf = conf;<br/>\n    +this.authConf = authConf;<br/>\n    +if (context.getDaemonType().equals(DaemonType.NIMBUS)) this.isNimbus = true;<br/>\n    +<br/>\n    +// just mkdir STORM_ZOOKEEPER_ROOT dir<br/>\n    +CuratorFramework zkTemp = mkZk();<br/>\n    +String rootPath = String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT));<br/>\n    +Zookeeper.mkdirs(zkTemp, rootPath, acls);<br/>\n    +zkTemp.close();<br/>\n    +<br/>\n    +active = new AtomicBoolean(true);<br/>\n    +zkWriter = mkZk(new WatcherCallBack() {<br/>\n    +    @Override<br/>\n    +    public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +if (active.get()) {<br/>\n    +    if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +    } else {<br/>\n    +LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +    }<br/>\n    +<br/>\n    +    if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +    Callback fn = e.getValue();\n    +    fn.execute(type, path);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +});<br/>\n    +if (isNimbus) {<br/>\n    +    zkReader = mkZk(new WatcherCallBack() {<br/>\n    +@Override<br/>\n    +public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +    if (active.get()) {<br/>\n    +if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +    LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +} else {<br/>\n    +    LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +}<br/>\n    +<br/>\n    +if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +    for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +Callback fn = e.getValue();\n    +fn.execute(type, path);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    });<br/>\n    +} else </p>\n{\n    +    zkReader = zkWriter;\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk() throws IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT), \"\", authConf);\n    +    }\n<p>    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk(WatcherCallBack watcher) throws NumberFormatException, IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT),\n    +String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT)), watcher, authConf);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node_blobstore(String path, String nimbusHostPortInfo) </p>\n{\n    +\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String register( Callback callback) </p>\n{\n    +String id = UUID.randomUUID().toString();\n    +this.callbacks.put(id,callback);\n    +return id;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void unregister(String id) </p>\n{\n    +this.callbacks.remove(id);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String create_sequential(String path, byte[] data, List<ACL> acls) </p>\n{\n    +return Zookeeper.createNode(zkWriter, path, data, CreateMode.EPHEMERAL_SEQUENTIAL, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void mkdirs(String path, List<ACL> acls) </p>\n{\n    +Zookeeper.mkdirs(zkWriter, path, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node(String path) </p>\n{\n    +Zookeeper.deleteNode(zkWriter, path);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void set_ephemeral_node(String path, byte[] data, List<ACL> acls) {<br/>\n    +Zookeeper.mkdirs(zkWriter, parentPath(path), acls);<br/>\n    +if (Zookeeper.exists(zkWriter, path, false)) {<br/>\n    +    try </p>\n{\n    +Zookeeper.setData(zkWriter, path, data);\n    +    }\n<p> catch (RuntimeException e) {<br/>\n    +if (Utils.exceptionCauseIsInstanceOf(KeeperException.NodeExistsException.class, e)) {<br/>\n    +    Zookeeper.createNode(zkWriter, path, data, CreateMode.EPHEMERAL, acls);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    you want to recreate if it already exists?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653574","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653574","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653574,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T16:02:45Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51741366\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51741366</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/DistributedClusterState.java &#8212;<br/>\n    @@ -0,0 +1,268 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.Callback;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.UUID;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class DistributedClusterState implements ClusterState {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(DistributedClusterState.class);<br/>\n    +<br/>\n    +    private ConcurrentHashMap<String, Callback> callbacks = new ConcurrentHashMap<String, Callback>();<br/>\n    +    private CuratorFramework zkWriter;<br/>\n    +    private CuratorFramework zkReader;<br/>\n    +    private AtomicBoolean active;<br/>\n    +<br/>\n    +    private boolean isNimbus;<br/>\n    +    private Map authConf;<br/>\n    +    private Map<Object, Object> conf;<br/>\n    +<br/>\n    +    public DistributedClusterState(Map<Object, Object> conf, Map authConf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +this.conf = conf;<br/>\n    +this.authConf = authConf;<br/>\n    +if (context.getDaemonType().equals(DaemonType.NIMBUS)) this.isNimbus = true;<br/>\n    +<br/>\n    +// just mkdir STORM_ZOOKEEPER_ROOT dir<br/>\n    +CuratorFramework zkTemp = mkZk();<br/>\n    +String rootPath = String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT));<br/>\n    +Zookeeper.mkdirs(zkTemp, rootPath, acls);<br/>\n    +zkTemp.close();<br/>\n    +<br/>\n    +active = new AtomicBoolean(true);<br/>\n    +zkWriter = mkZk(new WatcherCallBack() {<br/>\n    +    @Override<br/>\n    +    public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +if (active.get()) {<br/>\n    +    if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +    } else {<br/>\n    +LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +    }<br/>\n    +<br/>\n    +    if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +    Callback fn = e.getValue();\n    +    fn.execute(type, path);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +});<br/>\n    +if (isNimbus) {<br/>\n    +    zkReader = mkZk(new WatcherCallBack() {<br/>\n    +@Override<br/>\n    +public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +    if (active.get()) {<br/>\n    +if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +    LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +} else {<br/>\n    +    LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +}<br/>\n    +<br/>\n    +if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +    for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +Callback fn = e.getValue();\n    +fn.execute(type, path);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    });<br/>\n    +} else </p>\n{\n    +    zkReader = zkWriter;\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk() throws IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT), \"\", authConf);\n    +    }\n<p>    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk(WatcherCallBack watcher) throws NumberFormatException, IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT),\n    +String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT)), watcher, authConf);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node_blobstore(String path, String nimbusHostPortInfo) </p>\n{\n    +\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String register( Callback callback) </p>\n{\n    +String id = UUID.randomUUID().toString();\n    +this.callbacks.put(id,callback);\n    +return id;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void unregister(String id) </p>\n{\n    +this.callbacks.remove(id);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String create_sequential(String path, byte[] data, List<ACL> acls) </p>\n{\n    +return Zookeeper.createNode(zkWriter, path, data, CreateMode.EPHEMERAL_SEQUENTIAL, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void mkdirs(String path, List<ACL> acls) </p>\n{\n    +Zookeeper.mkdirs(zkWriter, path, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node(String path) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    should the function names be camelCase instead?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653580","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653580","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653580,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T16:03:56Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51741578\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51741578</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/DistributedClusterState.java &#8212;<br/>\n    @@ -0,0 +1,268 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.Callback;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.UUID;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class DistributedClusterState implements ClusterState {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(DistributedClusterState.class);<br/>\n    +<br/>\n    +    private ConcurrentHashMap<String, Callback> callbacks = new ConcurrentHashMap<String, Callback>();<br/>\n    +    private CuratorFramework zkWriter;<br/>\n    +    private CuratorFramework zkReader;<br/>\n    +    private AtomicBoolean active;<br/>\n    +<br/>\n    +    private boolean isNimbus;<br/>\n    +    private Map authConf;<br/>\n    +    private Map<Object, Object> conf;<br/>\n    +<br/>\n    +    public DistributedClusterState(Map<Object, Object> conf, Map authConf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +this.conf = conf;<br/>\n    +this.authConf = authConf;<br/>\n    +if (context.getDaemonType().equals(DaemonType.NIMBUS)) this.isNimbus = true;<br/>\n    +<br/>\n    +// just mkdir STORM_ZOOKEEPER_ROOT dir<br/>\n    +CuratorFramework zkTemp = mkZk();<br/>\n    +String rootPath = String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT));<br/>\n    +Zookeeper.mkdirs(zkTemp, rootPath, acls);<br/>\n    +zkTemp.close();<br/>\n    +<br/>\n    +active = new AtomicBoolean(true);<br/>\n    +zkWriter = mkZk(new WatcherCallBack() {<br/>\n    +    @Override<br/>\n    +    public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +if (active.get()) {<br/>\n    +    if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +    } else {<br/>\n    +LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +    }<br/>\n    +<br/>\n    +    if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +    Callback fn = e.getValue();\n    +    fn.execute(type, path);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +});<br/>\n    +if (isNimbus) {<br/>\n    +    zkReader = mkZk(new WatcherCallBack() {<br/>\n    +@Override<br/>\n    +public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +    if (active.get()) {<br/>\n    +if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +    LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +} else {<br/>\n    +    LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +}<br/>\n    +<br/>\n    +if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +    for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +Callback fn = e.getValue();\n    +fn.execute(type, path);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    });<br/>\n    +} else </p>\n{\n    +    zkReader = zkWriter;\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk() throws IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT), \"\", authConf);\n    +    }\n<p>    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk(WatcherCallBack watcher) throws NumberFormatException, IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT),\n    +String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT)), watcher, authConf);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node_blobstore(String path, String nimbusHostPortInfo) </p>\n{\n    +\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String register( Callback callback) </p>\n{\n    +String id = UUID.randomUUID().toString();\n    +this.callbacks.put(id,callback);\n    +return id;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void unregister(String id) </p>\n{\n    +this.callbacks.remove(id);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String create_sequential(String path, byte[] data, List<ACL> acls) </p>\n{\n    +return Zookeeper.createNode(zkWriter, path, data, CreateMode.EPHEMERAL_SEQUENTIAL, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void mkdirs(String path, List<ACL> acls) </p>\n{\n    +Zookeeper.mkdirs(zkWriter, path, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node(String path) </p>\n{\n    +Zookeeper.deleteNode(zkWriter, path);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void set_ephemeral_node(String path, byte[] data, List<ACL> acls) {<br/>\n    +Zookeeper.mkdirs(zkWriter, parentPath(path), acls);<br/>\n    +if (Zookeeper.exists(zkWriter, path, false)) {<br/>\n    +    try </p>\n{\n    +Zookeeper.setData(zkWriter, path, data);\n    +    }\n<p> catch (RuntimeException e) {<br/>\n    +if (Utils.exceptionCauseIsInstanceOf(KeeperException.NodeExistsException.class, e)) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It should be NoNodeException. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653585","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653585","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653585,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM1ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-03T16:05:28Z","updated_at":"2025-01-24T14:24:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1071#discussion_r51741856\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1071#discussion_r51741856</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/DistributedClusterState.java &#8212;<br/>\n    @@ -0,0 +1,268 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.state.*;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.Callback;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.zookeeper.Zookeeper;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.Watcher;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.UUID;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +public class DistributedClusterState implements ClusterState {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(DistributedClusterState.class);<br/>\n    +<br/>\n    +    private ConcurrentHashMap<String, Callback> callbacks = new ConcurrentHashMap<String, Callback>();<br/>\n    +    private CuratorFramework zkWriter;<br/>\n    +    private CuratorFramework zkReader;<br/>\n    +    private AtomicBoolean active;<br/>\n    +<br/>\n    +    private boolean isNimbus;<br/>\n    +    private Map authConf;<br/>\n    +    private Map<Object, Object> conf;<br/>\n    +<br/>\n    +    public DistributedClusterState(Map<Object, Object> conf, Map authConf, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +this.conf = conf;<br/>\n    +this.authConf = authConf;<br/>\n    +if (context.getDaemonType().equals(DaemonType.NIMBUS)) this.isNimbus = true;<br/>\n    +<br/>\n    +// just mkdir STORM_ZOOKEEPER_ROOT dir<br/>\n    +CuratorFramework zkTemp = mkZk();<br/>\n    +String rootPath = String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT));<br/>\n    +Zookeeper.mkdirs(zkTemp, rootPath, acls);<br/>\n    +zkTemp.close();<br/>\n    +<br/>\n    +active = new AtomicBoolean(true);<br/>\n    +zkWriter = mkZk(new WatcherCallBack() {<br/>\n    +    @Override<br/>\n    +    public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +if (active.get()) {<br/>\n    +    if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +    } else {<br/>\n    +LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +    }<br/>\n    +<br/>\n    +    if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +    Callback fn = e.getValue();\n    +    fn.execute(type, path);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +});<br/>\n    +if (isNimbus) {<br/>\n    +    zkReader = mkZk(new WatcherCallBack() {<br/>\n    +@Override<br/>\n    +public void execute(Watcher.Event.KeeperState state, Watcher.Event.EventType type, String path) {<br/>\n    +    if (active.get()) {<br/>\n    +if (!(state.equals(Watcher.Event.KeeperState.SyncConnected))) {<br/>\n    +    LOG.warn(\"Received event {} : {}: {} with disconnected Zookeeper.\", state, type, path);<br/>\n    +} else {<br/>\n    +    LOG.info(\"Received event {} : {} : {}\", state, type, path);<br/>\n    +}<br/>\n    +<br/>\n    +if (!type.equals(Watcher.Event.EventType.None)) {<br/>\n    +    for (Map.Entry<String, Callback> e : callbacks.entrySet()) </p>\n{\n    +Callback fn = e.getValue();\n    +fn.execute(type, path);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    });<br/>\n    +} else </p>\n{\n    +    zkReader = zkWriter;\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk() throws IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT), \"\", authConf);\n    +    }\n<p>    +<br/>\n    +    @SuppressWarnings(\"unchecked\")<br/>\n    +    private CuratorFramework mkZk(WatcherCallBack watcher) throws NumberFormatException, IOException </p>\n{\n    +return Zookeeper.mkClient(conf, (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS), conf.get(Config.STORM_ZOOKEEPER_PORT),\n    +String.valueOf(conf.get(Config.STORM_ZOOKEEPER_ROOT)), watcher, authConf);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node_blobstore(String path, String nimbusHostPortInfo) </p>\n{\n    +\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String register( Callback callback) </p>\n{\n    +String id = UUID.randomUUID().toString();\n    +this.callbacks.put(id,callback);\n    +return id;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void unregister(String id) </p>\n{\n    +this.callbacks.remove(id);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public String create_sequential(String path, byte[] data, List<ACL> acls) </p>\n{\n    +return Zookeeper.createNode(zkWriter, path, data, CreateMode.EPHEMERAL_SEQUENTIAL, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void mkdirs(String path, List<ACL> acls) </p>\n{\n    +Zookeeper.mkdirs(zkWriter, path, acls);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void delete_node(String path) </p>\n{\n    +Zookeeper.deleteNode(zkWriter, path);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void set_ephemeral_node(String path, byte[] data, List<ACL> acls) {<br/>\n    +Zookeeper.mkdirs(zkWriter, parentPath(path), acls);<br/>\n    +if (Zookeeper.exists(zkWriter, path, false)) {<br/>\n    +    try </p>\n{\n    +Zookeeper.setData(zkWriter, path, data);\n    +    }\n<p> catch (RuntimeException e) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    you can catch Exception here instead of just RuntimeException.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]