[{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327580168","html_url":"https://github.com/apache/doris/pull/13879#issuecomment-1327580168","issue_url":"https://api.github.com/repos/apache/doris/issues/13879","id":1327580168,"node_id":"IC_kwDOBfSlxs5PIUQI","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T14:42:39Z","updated_at":"2022-11-25T14:42:39Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327580168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327620844","html_url":"https://github.com/apache/doris/pull/14603#issuecomment-1327620844","issue_url":"https://api.github.com/repos/apache/doris/issues/14603","id":1327620844,"node_id":"IC_kwDOBfSlxs5PIeLs","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T15:18:25Z","updated_at":"2022-11-25T15:18:25Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327620844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327620888","html_url":"https://github.com/apache/doris/pull/14603#issuecomment-1327620888","issue_url":"https://api.github.com/repos/apache/doris/issues/14603","id":1327620888,"node_id":"IC_kwDOBfSlxs5PIeMY","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T15:18:28Z","updated_at":"2022-11-25T15:18:28Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327620888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327653304","html_url":"https://github.com/apache/doris/pull/14490#issuecomment-1327653304","issue_url":"https://api.github.com/repos/apache/doris/issues/14490","id":1327653304,"node_id":"IC_kwDOBfSlxs5PImG4","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T15:58:18Z","updated_at":"2022-11-25T15:58:18Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3549277497\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn build-support/shell-check.sh line 266:\n    content=\"$(grep 'sh_checker_exclude:' \"${DORIS_HOME}/.github/workflows/shellcheck.yml\")\"\n                                           ^-----------^ SC2031 (info): DORIS_HOME was modified in a subshell. That change might be lost.\n\n\nIn build-support/shell-check.sh line 271:\n            if echo \"${file:((${#DORIS_HOME} + 1))}\" | grep -E \"${pattern}\" &>/dev/null; then\n                              ^------------^ SC2031 (info): DORIS_HOME was modified in a subshell. That change might be lost.\n\n\nIn build-support/shell-check.sh line 289:\n    pushd \"${DORIS_HOME}\" >/dev/null\n           ^-----------^ SC2031 (info): DORIS_HOME was modified in a subshell. That change might be lost.\n\n\nIn build-support/shell-check.sh line 311:\n    read -r -a files < <(find_shell_scripts \"${DORIS_HOME}\")\n                                             ^-----------^ SC2031 (info): DORIS_HOME was modified in a subshell. That change might be lost.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2031 -- DORIS_HOME was modified in a subs...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n'shfmt ' found no issues.\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327653304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327680929","html_url":"https://github.com/apache/doris/pull/14604#issuecomment-1327680929","issue_url":"https://api.github.com/repos/apache/doris/issues/14604","id":1327680929,"node_id":"IC_kwDOBfSlxs5PIs2h","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T16:31:05Z","updated_at":"2022-11-25T16:31:05Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327680929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327708724","html_url":"https://github.com/apache/doris/pull/14604#issuecomment-1327708724","issue_url":"https://api.github.com/repos/apache/doris/issues/14604","id":1327708724,"node_id":"IC_kwDOBfSlxs5PIzo0","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-25T16:55:35Z","updated_at":"2022-11-25T16:55:35Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.02 seconds\n load time: 438 seconds\n storage size: 17172513012 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221125165531_clickbench_pr_53244.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327708724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327972498","html_url":"https://github.com/apache/doris/pull/14604#issuecomment-1327972498","issue_url":"https://api.github.com/repos/apache/doris/issues/14604","id":1327972498,"node_id":"IC_kwDOBfSlxs5PJ0CS","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T03:40:05Z","updated_at":"2022-11-26T03:40:05Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327972498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327975775","html_url":"https://github.com/apache/doris/pull/14589#issuecomment-1327975775","issue_url":"https://api.github.com/repos/apache/doris/issues/14589","id":1327975775,"node_id":"IC_kwDOBfSlxs5PJ01f","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T04:06:42Z","updated_at":"2022-11-26T04:06:42Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327975775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327975778","html_url":"https://github.com/apache/doris/pull/14589#issuecomment-1327975778","issue_url":"https://api.github.com/repos/apache/doris/issues/14589","id":1327975778,"node_id":"IC_kwDOBfSlxs5PJ01i","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T04:06:44Z","updated_at":"2022-11-26T04:06:44Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327975778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981001","html_url":"https://github.com/apache/doris/pull/14606#issuecomment-1327981001","issue_url":"https://api.github.com/repos/apache/doris/issues/14606","id":1327981001,"node_id":"IC_kwDOBfSlxs5PJ2HJ","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:00:06Z","updated_at":"2022-11-26T05:00:06Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981008","html_url":"https://github.com/apache/doris/pull/14606#issuecomment-1327981008","issue_url":"https://api.github.com/repos/apache/doris/issues/14606","id":1327981008,"node_id":"IC_kwDOBfSlxs5PJ2HQ","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:00:09Z","updated_at":"2022-11-26T05:00:09Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981357","html_url":"https://github.com/apache/doris/pull/14581#issuecomment-1327981357","issue_url":"https://api.github.com/repos/apache/doris/issues/14581","id":1327981357,"node_id":"IC_kwDOBfSlxs5PJ2Mt","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:03:06Z","updated_at":"2022-11-26T05:03:06Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981362","html_url":"https://github.com/apache/doris/pull/14581#issuecomment-1327981362","issue_url":"https://api.github.com/repos/apache/doris/issues/14581","id":1327981362,"node_id":"IC_kwDOBfSlxs5PJ2My","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:03:08Z","updated_at":"2022-11-26T05:03:08Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327981362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327982585","html_url":"https://github.com/apache/doris/pull/14606#issuecomment-1327982585","issue_url":"https://api.github.com/repos/apache/doris/issues/14606","id":1327982585,"node_id":"IC_kwDOBfSlxs5PJ2f5","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:12:30Z","updated_at":"2022-11-26T05:12:30Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.81 seconds\n load time: 449 seconds\n storage size: 17171017047 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221126051227_clickbench_pr_53316.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327982585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327986245","html_url":"https://github.com/apache/doris/pull/14602#issuecomment-1327986245","issue_url":"https://api.github.com/repos/apache/doris/issues/14602","id":1327986245,"node_id":"IC_kwDOBfSlxs5PJ3ZF","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T05:47:06Z","updated_at":"2022-11-26T05:47:06Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327986245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327998339","html_url":"https://github.com/apache/doris/pull/14580#issuecomment-1327998339","issue_url":"https://api.github.com/repos/apache/doris/issues/14580","id":1327998339,"node_id":"IC_kwDOBfSlxs5PJ6WD","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T07:33:24Z","updated_at":"2022-11-29T01:14:51Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.87 seconds\n load time: 432 seconds\n storage size: 17123343153 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221129011447_clickbench_pr_54626.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1327998339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328014107","html_url":"https://github.com/apache/doris/pull/14608#issuecomment-1328014107","issue_url":"https://api.github.com/repos/apache/doris/issues/14608","id":1328014107,"node_id":"IC_kwDOBfSlxs5PJ-Mb","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T09:34:15Z","updated_at":"2022-11-28T11:47:31Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.15 seconds\n load time: 435 seconds\n storage size: 17123394488 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128114728_clickbench_pr_54414.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328014107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328014221","html_url":"https://github.com/apache/doris/pull/14609#issuecomment-1328014221","issue_url":"https://api.github.com/repos/apache/doris/issues/14609","id":1328014221,"node_id":"IC_kwDOBfSlxs5PJ-ON","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T09:35:07Z","updated_at":"2022-11-26T10:14:50Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.05 seconds\n load time: 435 seconds\n storage size: 17125686396 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221126101447_clickbench_pr_53426.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328014221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328020493","html_url":"https://github.com/apache/doris/pull/14610#issuecomment-1328020493","issue_url":"https://api.github.com/repos/apache/doris/issues/14610","id":1328020493,"node_id":"IC_kwDOBfSlxs5PJ_wN","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T10:23:09Z","updated_at":"2022-11-26T10:23:09Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328020493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328020498","html_url":"https://github.com/apache/doris/pull/14610#issuecomment-1328020498","issue_url":"https://api.github.com/repos/apache/doris/issues/14610","id":1328020498,"node_id":"IC_kwDOBfSlxs5PJ_wS","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T10:23:12Z","updated_at":"2022-11-26T10:23:12Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328020498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328033120","html_url":"https://github.com/apache/doris/pull/14611#issuecomment-1328033120","issue_url":"https://api.github.com/repos/apache/doris/issues/14611","id":1328033120,"node_id":"IC_kwDOBfSlxs5PKC1g","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T11:55:40Z","updated_at":"2022-11-29T04:29:38Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.8 seconds\n load time: 461 seconds\n storage size: 17123343124 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221129042935_clickbench_pr_54734.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328033120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328067547","html_url":"https://github.com/apache/doris/pull/14605#issuecomment-1328067547","issue_url":"https://api.github.com/repos/apache/doris/issues/14605","id":1328067547,"node_id":"IC_kwDOBfSlxs5PKLPb","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T15:38:32Z","updated_at":"2022-11-26T15:38:32Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.08 seconds\n load time: 422 seconds\n storage size: 17122692147 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221126153830_clickbench_pr_53497.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328067547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328070682","html_url":"https://github.com/apache/doris/pull/9172#issuecomment-1328070682","issue_url":"https://api.github.com/repos/apache/doris/issues/9172","id":1328070682,"node_id":"IC_kwDOBfSlxs5PKMAa","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-26T15:57:03Z","updated_at":"2022-11-30T09:29:27Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.81 seconds\n load time: 436 seconds\n storage size: 17123343166 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221130092924_clickbench_pr_55460.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328070682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328157457","html_url":"https://github.com/apache/doris/pull/9172#issuecomment-1328157457","issue_url":"https://api.github.com/repos/apache/doris/issues/9172","id":1328157457,"node_id":"IC_kwDOBfSlxs5PKhMR","user":{"login":"caiconghui","id":55968745,"node_id":"MDQ6VXNlcjU1OTY4NzQ1","avatar_url":"https://avatars.githubusercontent.com/u/55968745?v=4","gravatar_id":"","url":"https://api.github.com/users/caiconghui","html_url":"https://github.com/caiconghui","followers_url":"https://api.github.com/users/caiconghui/followers","following_url":"https://api.github.com/users/caiconghui/following{/other_user}","gists_url":"https://api.github.com/users/caiconghui/gists{/gist_id}","starred_url":"https://api.github.com/users/caiconghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/caiconghui/subscriptions","organizations_url":"https://api.github.com/users/caiconghui/orgs","repos_url":"https://api.github.com/users/caiconghui/repos","events_url":"https://api.github.com/users/caiconghui/events{/privacy}","received_events_url":"https://api.github.com/users/caiconghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T02:39:19Z","updated_at":"2022-11-27T02:43:59Z","author_association":"CONTRIBUTOR","body":"1. enable_fqdn_mode is mainly used in k8s environment, not be compatible with old cluster, when set true, the FQDN may not work, because origin's be hostName is null, but would not affect the behavior of the whole cluster.\r\n2. when enable_fqdn_mode is true, the FDQNManager would detect be ip change every some seconds, and would check hostName needed by backend when add backend, you sholud specify \"hostName:port\" or still give \"ip:port\" with that cluster can get hostName by ip, otherwise, add add backend would failed.\r\n3. now for be,  if drop or modify backend cluster would check backend's hostname and port is same or then ip and port is same.\r\n4. check interval is 5 seconds,  it means FDQNManager would check every 5 seconds, and other value is also ok, it just affect the be ip detect time\r\n5. if be's ip change, then the FDQNManager would invalidate all client cache to be, and set the new ip for the be.\r\n6. finally all be and fe connection is still based on ip, this logic keep unchanged","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328157457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328159328","html_url":"https://github.com/apache/doris/pull/14547#issuecomment-1328159328","issue_url":"https://api.github.com/repos/apache/doris/issues/14547","id":1328159328,"node_id":"IC_kwDOBfSlxs5PKhpg","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T02:58:30Z","updated_at":"2022-11-27T02:58:30Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328159328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328159334","html_url":"https://github.com/apache/doris/pull/14547#issuecomment-1328159334","issue_url":"https://api.github.com/repos/apache/doris/issues/14547","id":1328159334,"node_id":"IC_kwDOBfSlxs5PKhpm","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T02:58:32Z","updated_at":"2022-11-27T02:58:32Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328159334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328180677","html_url":"https://github.com/apache/doris/pull/14615#issuecomment-1328180677","issue_url":"https://api.github.com/repos/apache/doris/issues/14615","id":1328180677,"node_id":"IC_kwDOBfSlxs5PKm3F","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T06:25:19Z","updated_at":"2022-11-28T10:07:32Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.71 seconds\n load time: 436 seconds\n storage size: 17122728212 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128100729_clickbench_pr_54326.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328180677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328181475","html_url":"https://github.com/apache/doris/pull/14615#issuecomment-1328181475","issue_url":"https://api.github.com/repos/apache/doris/issues/14615","id":1328181475,"node_id":"IC_kwDOBfSlxs5PKnDj","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T06:33:08Z","updated_at":"2022-11-27T06:33:08Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328181475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328181479","html_url":"https://github.com/apache/doris/pull/14615#issuecomment-1328181479","issue_url":"https://api.github.com/repos/apache/doris/issues/14615","id":1328181479,"node_id":"IC_kwDOBfSlxs5PKnDn","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T06:33:10Z","updated_at":"2022-11-27T06:33:10Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328181479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328184253","html_url":"https://github.com/apache/doris/pull/14616#issuecomment-1328184253","issue_url":"https://api.github.com/repos/apache/doris/issues/14616","id":1328184253,"node_id":"IC_kwDOBfSlxs5PKnu9","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T07:00:01Z","updated_at":"2022-11-29T05:27:44Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.99 seconds\n load time: 431 seconds\n storage size: 17123343163 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221129052741_clickbench_pr_54768.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328184253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328187969","html_url":"https://github.com/apache/doris/pull/14609#issuecomment-1328187969","issue_url":"https://api.github.com/repos/apache/doris/issues/14609","id":1328187969,"node_id":"IC_kwDOBfSlxs5PKopB","user":{"login":"morningman","id":2899462,"node_id":"MDQ6VXNlcjI4OTk0NjI=","avatar_url":"https://avatars.githubusercontent.com/u/2899462?v=4","gravatar_id":"","url":"https://api.github.com/users/morningman","html_url":"https://github.com/morningman","followers_url":"https://api.github.com/users/morningman/followers","following_url":"https://api.github.com/users/morningman/following{/other_user}","gists_url":"https://api.github.com/users/morningman/gists{/gist_id}","starred_url":"https://api.github.com/users/morningman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morningman/subscriptions","organizations_url":"https://api.github.com/users/morningman/orgs","repos_url":"https://api.github.com/users/morningman/repos","events_url":"https://api.github.com/users/morningman/events{/privacy}","received_events_url":"https://api.github.com/users/morningman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T07:31:38Z","updated_at":"2022-11-27T07:31:38Z","author_association":"CONTRIBUTOR","body":"when cardinality is low, is \"in\" better than \"bitmap\"?","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328187969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328189367","html_url":"https://github.com/apache/doris/pull/14609#issuecomment-1328189367","issue_url":"https://api.github.com/repos/apache/doris/issues/14609","id":1328189367,"node_id":"IC_kwDOBfSlxs5PKo-3","user":{"login":"luozenglin","id":37725793,"node_id":"MDQ6VXNlcjM3NzI1Nzkz","avatar_url":"https://avatars.githubusercontent.com/u/37725793?v=4","gravatar_id":"","url":"https://api.github.com/users/luozenglin","html_url":"https://github.com/luozenglin","followers_url":"https://api.github.com/users/luozenglin/followers","following_url":"https://api.github.com/users/luozenglin/following{/other_user}","gists_url":"https://api.github.com/users/luozenglin/gists{/gist_id}","starred_url":"https://api.github.com/users/luozenglin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luozenglin/subscriptions","organizations_url":"https://api.github.com/users/luozenglin/orgs","repos_url":"https://api.github.com/users/luozenglin/repos","events_url":"https://api.github.com/users/luozenglin/events{/privacy}","received_events_url":"https://api.github.com/users/luozenglin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T07:44:37Z","updated_at":"2022-11-27T07:44:37Z","author_association":"CONTRIBUTOR","body":"> when cardinality is low, is \"in\" better than \"bitmap\"?\r\n\r\nMaybe I should apply the zone map index to speed up the bitmap filter. i will close this pr.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328189367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328203930","html_url":"https://github.com/apache/doris/pull/14617#issuecomment-1328203930","issue_url":"https://api.github.com/repos/apache/doris/issues/14617","id":1328203930,"node_id":"IC_kwDOBfSlxs5PKsia","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T09:18:56Z","updated_at":"2022-11-27T09:18:56Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.81 seconds\n load time: 429 seconds\n storage size: 17123391415 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221127091852_clickbench_pr_53610.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328203930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328205066","html_url":"https://github.com/apache/doris/pull/14618#issuecomment-1328205066","issue_url":"https://api.github.com/repos/apache/doris/issues/14618","id":1328205066,"node_id":"IC_kwDOBfSlxs5PKs0K","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T09:26:02Z","updated_at":"2022-11-27T09:26:02Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.74 seconds\n load time: 444 seconds\n storage size: 17120375666 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221127092559_clickbench_pr_53617.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328205066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328207824","html_url":"https://github.com/apache/doris/pull/14619#issuecomment-1328207824","issue_url":"https://api.github.com/repos/apache/doris/issues/14619","id":1328207824,"node_id":"IC_kwDOBfSlxs5PKtfQ","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T09:44:02Z","updated_at":"2022-11-27T11:12:40Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.8 seconds\n load time: 427 seconds\n storage size: 17123417374 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221127111238_clickbench_pr_53701.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328207824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328211563","html_url":"https://github.com/apache/doris/pull/14620#issuecomment-1328211563","issue_url":"https://api.github.com/repos/apache/doris/issues/14620","id":1328211563,"node_id":"IC_kwDOBfSlxs5PKuZr","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T10:05:36Z","updated_at":"2022-11-27T10:05:36Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3557727485\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn docker/runtime/broker/resource/init_broker.sh line 100:\n        \"${is_success}\"=1\n        ^---------------^ SC2276 (error): This is interpreted as a command name containing '='. Bad assignment or comparison?\n         ^-----------^ SC2154 (warning): is_success is referenced but not assigned.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2276 -- This is interpreted as a command ...\n  https://www.shellcheck.net/wiki/SC2154 -- is_success is referenced but not ...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- docker/runtime/broker/resource/init_broker.sh.orig\n+++ docker/runtime/broker/resource/init_broker.sh\n@@ -109,6 +109,3 @@\n         sleep 3\n     fi\n done\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328211563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328216259","html_url":"https://github.com/apache/doris/pull/14621#issuecomment-1328216259","issue_url":"https://api.github.com/repos/apache/doris/issues/14621","id":1328216259,"node_id":"IC_kwDOBfSlxs5PKvjD","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T10:30:55Z","updated_at":"2022-11-27T10:30:55Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3557811580\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn docker/runtime/broker/resource/init_broker.sh line 100:\n        \"${is_success}\"=1\n        ^---------------^ SC2276 (error): This is interpreted as a command name containing '='. Bad assignment or comparison?\n         ^-----------^ SC2154 (warning): is_success is referenced but not assigned.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2276 -- This is interpreted as a command ...\n  https://www.shellcheck.net/wiki/SC2154 -- is_success is referenced but not ...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- docker/runtime/broker/resource/init_broker.sh.orig\n+++ docker/runtime/broker/resource/init_broker.sh\n@@ -109,6 +109,3 @@\n         sleep 3\n     fi\n done\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328216259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328218173","html_url":"https://github.com/apache/doris/pull/14621#issuecomment-1328218173","issue_url":"https://api.github.com/repos/apache/doris/issues/14621","id":1328218173,"node_id":"IC_kwDOBfSlxs5PKwA9","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T10:41:55Z","updated_at":"2022-11-27T10:41:55Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3557850279\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n'shellcheck ' found no issues.\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- docker/runtime/broker/resource/init_broker.sh.orig\n+++ docker/runtime/broker/resource/init_broker.sh\n@@ -108,6 +108,3 @@\n         sleep 3\n     fi\n done\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328218173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328240424","html_url":"https://github.com/apache/doris/pull/14622#issuecomment-1328240424","issue_url":"https://api.github.com/repos/apache/doris/issues/14622","id":1328240424,"node_id":"IC_kwDOBfSlxs5PK1co","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T12:52:14Z","updated_at":"2022-11-27T12:52:14Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3558280032\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n'shellcheck ' found no issues.\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- docker/runtime/broker/resource/init_broker.sh.orig\n+++ docker/runtime/broker/resource/init_broker.sh\n@@ -108,6 +108,3 @@\n         sleep 3\n     fi\n done\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328240424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328257158","html_url":"https://github.com/apache/doris/pull/14623#issuecomment-1328257158","issue_url":"https://api.github.com/repos/apache/doris/issues/14623","id":1328257158,"node_id":"IC_kwDOBfSlxs5PK5iG","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T14:19:40Z","updated_at":"2022-11-28T07:32:34Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 36.68 seconds\n load time: 473 seconds\n storage size: 17122802172 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128073231_clickbench_pr_54243.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328257158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328266994","html_url":"https://github.com/apache/doris/pull/14330#issuecomment-1328266994","issue_url":"https://api.github.com/repos/apache/doris/issues/14330","id":1328266994,"node_id":"IC_kwDOBfSlxs5PK77y","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:12:17Z","updated_at":"2022-11-27T15:12:17Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328266994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267007","html_url":"https://github.com/apache/doris/pull/14330#issuecomment-1328267007","issue_url":"https://api.github.com/repos/apache/doris/issues/14330","id":1328267007,"node_id":"IC_kwDOBfSlxs5PK77_","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:12:20Z","updated_at":"2022-11-27T15:12:20Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267732","html_url":"https://github.com/apache/doris/pull/14240#issuecomment-1328267732","issue_url":"https://api.github.com/repos/apache/doris/issues/14240","id":1328267732,"node_id":"IC_kwDOBfSlxs5PK8HU","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:16:24Z","updated_at":"2022-11-27T15:16:24Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267737","html_url":"https://github.com/apache/doris/pull/14240#issuecomment-1328267737","issue_url":"https://api.github.com/repos/apache/doris/issues/14240","id":1328267737,"node_id":"IC_kwDOBfSlxs5PK8HZ","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:16:27Z","updated_at":"2022-11-27T15:16:27Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328267737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328274504","html_url":"https://github.com/apache/doris/pull/14578#issuecomment-1328274504","issue_url":"https://api.github.com/repos/apache/doris/issues/14578","id":1328274504,"node_id":"IC_kwDOBfSlxs5PK9xI","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:51:25Z","updated_at":"2022-11-27T15:51:25Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328274504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328274514","html_url":"https://github.com/apache/doris/pull/14578#issuecomment-1328274514","issue_url":"https://api.github.com/repos/apache/doris/issues/14578","id":1328274514,"node_id":"IC_kwDOBfSlxs5PK9xS","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T15:51:28Z","updated_at":"2022-11-27T15:51:28Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328274514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328278358","html_url":"https://github.com/apache/doris/pull/14625#issuecomment-1328278358","issue_url":"https://api.github.com/repos/apache/doris/issues/14625","id":1328278358,"node_id":"IC_kwDOBfSlxs5PK-tW","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T16:09:14Z","updated_at":"2022-12-07T10:27:38Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.79 seconds\n load time: 441 seconds\n storage size: 17123356322 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221207102735_clickbench_pr_59263.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328278358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328286794","html_url":"https://github.com/apache/doris/pull/14569#issuecomment-1328286794","issue_url":"https://api.github.com/repos/apache/doris/issues/14569","id":1328286794,"node_id":"IC_kwDOBfSlxs5PLAxK","user":{"login":"morrySnow","id":101034200,"node_id":"U_kgDOBgWo2A","avatar_url":"https://avatars.githubusercontent.com/u/101034200?v=4","gravatar_id":"","url":"https://api.github.com/users/morrySnow","html_url":"https://github.com/morrySnow","followers_url":"https://api.github.com/users/morrySnow/followers","following_url":"https://api.github.com/users/morrySnow/following{/other_user}","gists_url":"https://api.github.com/users/morrySnow/gists{/gist_id}","starred_url":"https://api.github.com/users/morrySnow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morrySnow/subscriptions","organizations_url":"https://api.github.com/users/morrySnow/orgs","repos_url":"https://api.github.com/users/morrySnow/repos","events_url":"https://api.github.com/users/morrySnow/events{/privacy}","received_events_url":"https://api.github.com/users/morrySnow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T16:33:48Z","updated_at":"2022-11-27T16:33:48Z","author_association":"CONTRIBUTOR","body":"current rule is ok, just need to add a check rule","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328286794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328289968","html_url":"https://github.com/apache/doris/pull/14490#issuecomment-1328289968","issue_url":"https://api.github.com/repos/apache/doris/issues/14490","id":1328289968,"node_id":"IC_kwDOBfSlxs5PLBiw","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T16:39:39Z","updated_at":"2022-11-27T16:39:39Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328289968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328290001","html_url":"https://github.com/apache/doris/pull/14490#issuecomment-1328290001","issue_url":"https://api.github.com/repos/apache/doris/issues/14490","id":1328290001,"node_id":"IC_kwDOBfSlxs5PLBjR","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-27T16:39:41Z","updated_at":"2022-11-27T16:39:41Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328290001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385512","html_url":"https://github.com/apache/doris/pull/14559#issuecomment-1328385512","issue_url":"https://api.github.com/repos/apache/doris/issues/14559","id":1328385512,"node_id":"IC_kwDOBfSlxs5PLY3o","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T00:32:49Z","updated_at":"2022-11-28T00:32:49Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385524","html_url":"https://github.com/apache/doris/pull/14559#issuecomment-1328385524","issue_url":"https://api.github.com/repos/apache/doris/issues/14559","id":1328385524,"node_id":"IC_kwDOBfSlxs5PLY30","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T00:32:51Z","updated_at":"2022-11-28T00:32:51Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385803","html_url":"https://github.com/apache/doris/pull/14626#issuecomment-1328385803","issue_url":"https://api.github.com/repos/apache/doris/issues/14626","id":1328385803,"node_id":"IC_kwDOBfSlxs5PLY8L","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T00:33:44Z","updated_at":"2022-11-29T04:49:39Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.64 seconds\n load time: 438 seconds\n storage size: 17123353920 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221129044936_clickbench_pr_54753.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328385803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328398632","html_url":"https://github.com/apache/doris/pull/14627#issuecomment-1328398632","issue_url":"https://api.github.com/repos/apache/doris/issues/14627","id":1328398632,"node_id":"IC_kwDOBfSlxs5PLcEo","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T01:04:35Z","updated_at":"2022-11-28T07:11:37Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.82 seconds\n load time: 426 seconds\n storage size: 17122798379 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128071134_clickbench_pr_54219.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328398632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328414599","html_url":"https://github.com/apache/doris/pull/14545#issuecomment-1328414599","issue_url":"https://api.github.com/repos/apache/doris/issues/14545","id":1328414599,"node_id":"IC_kwDOBfSlxs5PLf-H","user":{"login":"xiaokang","id":680838,"node_id":"MDQ6VXNlcjY4MDgzOA==","avatar_url":"https://avatars.githubusercontent.com/u/680838?v=4","gravatar_id":"","url":"https://api.github.com/users/xiaokang","html_url":"https://github.com/xiaokang","followers_url":"https://api.github.com/users/xiaokang/followers","following_url":"https://api.github.com/users/xiaokang/following{/other_user}","gists_url":"https://api.github.com/users/xiaokang/gists{/gist_id}","starred_url":"https://api.github.com/users/xiaokang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiaokang/subscriptions","organizations_url":"https://api.github.com/users/xiaokang/orgs","repos_url":"https://api.github.com/users/xiaokang/repos","events_url":"https://api.github.com/users/xiaokang/events{/privacy}","received_events_url":"https://api.github.com/users/xiaokang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T01:38:14Z","updated_at":"2022-11-28T01:38:14Z","author_association":"CONTRIBUTOR","body":"Are the changes for FE missed?","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328414599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328437659","html_url":"https://github.com/apache/doris/pull/14545#issuecomment-1328437659","issue_url":"https://api.github.com/repos/apache/doris/issues/14545","id":1328437659,"node_id":"IC_kwDOBfSlxs5PLlmb","user":{"login":"carlvinhust2012","id":11680146,"node_id":"MDQ6VXNlcjExNjgwMTQ2","avatar_url":"https://avatars.githubusercontent.com/u/11680146?v=4","gravatar_id":"","url":"https://api.github.com/users/carlvinhust2012","html_url":"https://github.com/carlvinhust2012","followers_url":"https://api.github.com/users/carlvinhust2012/followers","following_url":"https://api.github.com/users/carlvinhust2012/following{/other_user}","gists_url":"https://api.github.com/users/carlvinhust2012/gists{/gist_id}","starred_url":"https://api.github.com/users/carlvinhust2012/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carlvinhust2012/subscriptions","organizations_url":"https://api.github.com/users/carlvinhust2012/orgs","repos_url":"https://api.github.com/users/carlvinhust2012/repos","events_url":"https://api.github.com/users/carlvinhust2012/events{/privacy}","received_events_url":"https://api.github.com/users/carlvinhust2012/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:11:29Z","updated_at":"2022-11-28T02:11:29Z","author_association":"CONTRIBUTOR","body":"> Any design docs for struct???\r\n\r\nwe will add the docs later","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328437659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328438857","html_url":"https://github.com/apache/doris/pull/14545#issuecomment-1328438857","issue_url":"https://api.github.com/repos/apache/doris/issues/14545","id":1328438857,"node_id":"IC_kwDOBfSlxs5PLl5J","user":{"login":"carlvinhust2012","id":11680146,"node_id":"MDQ6VXNlcjExNjgwMTQ2","avatar_url":"https://avatars.githubusercontent.com/u/11680146?v=4","gravatar_id":"","url":"https://api.github.com/users/carlvinhust2012","html_url":"https://github.com/carlvinhust2012","followers_url":"https://api.github.com/users/carlvinhust2012/followers","following_url":"https://api.github.com/users/carlvinhust2012/following{/other_user}","gists_url":"https://api.github.com/users/carlvinhust2012/gists{/gist_id}","starred_url":"https://api.github.com/users/carlvinhust2012/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carlvinhust2012/subscriptions","organizations_url":"https://api.github.com/users/carlvinhust2012/orgs","repos_url":"https://api.github.com/users/carlvinhust2012/repos","events_url":"https://api.github.com/users/carlvinhust2012/events{/privacy}","received_events_url":"https://api.github.com/users/carlvinhust2012/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:13:21Z","updated_at":"2022-11-28T02:13:21Z","author_association":"CONTRIBUTOR","body":"> Are the changes for FE missed?\r\n\r\nwe will continue to develop this feature.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328438857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328446734","html_url":"https://github.com/apache/doris/pull/14630#issuecomment-1328446734","issue_url":"https://api.github.com/repos/apache/doris/issues/14630","id":1328446734,"node_id":"IC_kwDOBfSlxs5PLn0O","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:28:56Z","updated_at":"2022-11-28T02:28:56Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328446734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328446755","html_url":"https://github.com/apache/doris/pull/14630#issuecomment-1328446755","issue_url":"https://api.github.com/repos/apache/doris/issues/14630","id":1328446755,"node_id":"IC_kwDOBfSlxs5PLn0j","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:28:58Z","updated_at":"2022-11-28T02:28:58Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328446755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328448902","html_url":"https://github.com/apache/doris/pull/14629#issuecomment-1328448902","issue_url":"https://api.github.com/repos/apache/doris/issues/14629","id":1328448902,"node_id":"IC_kwDOBfSlxs5PLoWG","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:32:59Z","updated_at":"2022-11-28T02:32:59Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.89 seconds\n load time: 431 seconds\n storage size: 17122860744 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128023256_clickbench_pr_53958.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328448902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328457649","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1328457649","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1328457649,"node_id":"IC_kwDOBfSlxs5PLqex","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:47:41Z","updated_at":"2022-11-28T02:47:41Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3561246536\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,9 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n-\n-\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328457649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328458108","html_url":"https://github.com/apache/doris/pull/14629#issuecomment-1328458108","issue_url":"https://api.github.com/repos/apache/doris/issues/14629","id":1328458108,"node_id":"IC_kwDOBfSlxs5PLql8","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:48:22Z","updated_at":"2022-11-28T02:48:22Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328458108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328458126","html_url":"https://github.com/apache/doris/pull/14629#issuecomment-1328458126","issue_url":"https://api.github.com/repos/apache/doris/issues/14629","id":1328458126,"node_id":"IC_kwDOBfSlxs5PLqmO","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:48:24Z","updated_at":"2022-11-28T02:48:24Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328458126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328460163","html_url":"https://github.com/apache/doris/pull/14630#issuecomment-1328460163","issue_url":"https://api.github.com/repos/apache/doris/issues/14630","id":1328460163,"node_id":"IC_kwDOBfSlxs5PLrGD","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:51:51Z","updated_at":"2022-11-28T02:51:51Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.56 seconds\n load time: 428 seconds\n storage size: 17123342979 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128025147_clickbench_pr_53970.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328460163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328460698","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1328460698","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1328460698,"node_id":"IC_kwDOBfSlxs5PLrOa","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T02:52:51Z","updated_at":"2022-11-28T02:52:51Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3561265949\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- bin/start_be.sh.orig\n+++ bin/start_be.sh\n@@ -233,4 +233,3 @@\n     export DORIS_LOG_TO_STDERR=1\n     ${LIMIT:+${LIMIT}} \"${DORIS_HOME}/lib/doris_be\" \"$@\" 2>&1 </dev/null\n fi\n-\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,9 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n-\n-\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328460698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328466827","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1328466827","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1328466827,"node_id":"IC_kwDOBfSlxs5PLsuL","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:02:24Z","updated_at":"2022-11-28T03:02:24Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3561307514\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- bin/start_be.sh.orig\n+++ bin/start_be.sh\n@@ -233,4 +233,3 @@\n     export DORIS_LOG_TO_STDERR=1\n     ${LIMIT:+${LIMIT}} \"${DORIS_HOME}/lib/doris_be\" \"$@\" 2>&1 </dev/null\n fi\n-\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,9 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n-\n-\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328466827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328478045","html_url":"https://github.com/apache/doris/pull/14588#issuecomment-1328478045","issue_url":"https://api.github.com/repos/apache/doris/issues/14588","id":1328478045,"node_id":"IC_kwDOBfSlxs5PLvdd","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:13:41Z","updated_at":"2022-11-28T03:13:41Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328478045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328478093","html_url":"https://github.com/apache/doris/pull/14588#issuecomment-1328478093","issue_url":"https://api.github.com/repos/apache/doris/issues/14588","id":1328478093,"node_id":"IC_kwDOBfSlxs5PLveN","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:13:44Z","updated_at":"2022-11-28T03:13:44Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328478093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328485326","html_url":"https://github.com/apache/doris/pull/14605#issuecomment-1328485326","issue_url":"https://api.github.com/repos/apache/doris/issues/14605","id":1328485326,"node_id":"IC_kwDOBfSlxs5PLxPO","user":{"login":"Kikyou1997","id":33112463,"node_id":"MDQ6VXNlcjMzMTEyNDYz","avatar_url":"https://avatars.githubusercontent.com/u/33112463?v=4","gravatar_id":"","url":"https://api.github.com/users/Kikyou1997","html_url":"https://github.com/Kikyou1997","followers_url":"https://api.github.com/users/Kikyou1997/followers","following_url":"https://api.github.com/users/Kikyou1997/following{/other_user}","gists_url":"https://api.github.com/users/Kikyou1997/gists{/gist_id}","starred_url":"https://api.github.com/users/Kikyou1997/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Kikyou1997/subscriptions","organizations_url":"https://api.github.com/users/Kikyou1997/orgs","repos_url":"https://api.github.com/users/Kikyou1997/repos","events_url":"https://api.github.com/users/Kikyou1997/events{/privacy}","received_events_url":"https://api.github.com/users/Kikyou1997/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:23:06Z","updated_at":"2022-11-28T03:23:06Z","author_association":"CONTRIBUTOR","body":"LGTM thanks for fix","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328485326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328485466","html_url":"https://github.com/apache/doris/pull/14605#issuecomment-1328485466","issue_url":"https://api.github.com/repos/apache/doris/issues/14605","id":1328485466,"node_id":"IC_kwDOBfSlxs5PLxRa","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:23:26Z","updated_at":"2022-11-28T03:23:26Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328485466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328491883","html_url":"https://github.com/apache/doris/pull/14619#issuecomment-1328491883","issue_url":"https://api.github.com/repos/apache/doris/issues/14619","id":1328491883,"node_id":"IC_kwDOBfSlxs5PLy1r","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:36:58Z","updated_at":"2022-11-28T03:36:58Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328491883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328491894","html_url":"https://github.com/apache/doris/pull/14619#issuecomment-1328491894","issue_url":"https://api.github.com/repos/apache/doris/issues/14619","id":1328491894,"node_id":"IC_kwDOBfSlxs5PLy12","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T03:37:00Z","updated_at":"2022-11-28T03:37:00Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328491894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328583018","html_url":"https://github.com/apache/doris/pull/14605#issuecomment-1328583018","issue_url":"https://api.github.com/repos/apache/doris/issues/14605","id":1328583018,"node_id":"IC_kwDOBfSlxs5PMJFq","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T06:03:16Z","updated_at":"2022-11-28T06:03:16Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328583018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328625513","html_url":"https://github.com/apache/doris/pull/14632#issuecomment-1328625513","issue_url":"https://api.github.com/repos/apache/doris/issues/14632","id":1328625513,"node_id":"IC_kwDOBfSlxs5PMTdp","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T06:57:22Z","updated_at":"2022-11-28T06:57:22Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328625513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328625594","html_url":"https://github.com/apache/doris/pull/14632#issuecomment-1328625594","issue_url":"https://api.github.com/repos/apache/doris/issues/14632","id":1328625594,"node_id":"IC_kwDOBfSlxs5PMTe6","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T06:57:25Z","updated_at":"2022-11-28T06:57:25Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328625594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328636726","html_url":"https://github.com/apache/doris/pull/14633#issuecomment-1328636726","issue_url":"https://api.github.com/repos/apache/doris/issues/14633","id":1328636726,"node_id":"IC_kwDOBfSlxs5PMWM2","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:07:21Z","updated_at":"2022-11-28T07:07:21Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.1 seconds\n load time: 444 seconds\n storage size: 17123374880 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221128070718_clickbench_pr_54202.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328636726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328663339","html_url":"https://github.com/apache/doris/pull/14627#issuecomment-1328663339","issue_url":"https://api.github.com/repos/apache/doris/issues/14627","id":1328663339,"node_id":"IC_kwDOBfSlxs5PMcsr","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:41:25Z","updated_at":"2022-11-28T07:41:25Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328663339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328663371","html_url":"https://github.com/apache/doris/pull/14627#issuecomment-1328663371","issue_url":"https://api.github.com/repos/apache/doris/issues/14627","id":1328663371,"node_id":"IC_kwDOBfSlxs5PMctL","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:41:27Z","updated_at":"2022-11-28T07:41:27Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328663371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667126","html_url":"https://github.com/apache/doris/pull/14608#issuecomment-1328667126","issue_url":"https://api.github.com/repos/apache/doris/issues/14608","id":1328667126,"node_id":"IC_kwDOBfSlxs5PMdn2","user":{"login":"Gabriel39","id":37700562,"node_id":"MDQ6VXNlcjM3NzAwNTYy","avatar_url":"https://avatars.githubusercontent.com/u/37700562?v=4","gravatar_id":"","url":"https://api.github.com/users/Gabriel39","html_url":"https://github.com/Gabriel39","followers_url":"https://api.github.com/users/Gabriel39/followers","following_url":"https://api.github.com/users/Gabriel39/following{/other_user}","gists_url":"https://api.github.com/users/Gabriel39/gists{/gist_id}","starred_url":"https://api.github.com/users/Gabriel39/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gabriel39/subscriptions","organizations_url":"https://api.github.com/users/Gabriel39/orgs","repos_url":"https://api.github.com/users/Gabriel39/repos","events_url":"https://api.github.com/users/Gabriel39/events{/privacy}","received_events_url":"https://api.github.com/users/Gabriel39/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:46:40Z","updated_at":"2022-11-28T07:46:40Z","author_association":"CONTRIBUTOR","body":"> Please add description for this PR.\r\n\r\ndone","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667480","html_url":"https://github.com/apache/doris/pull/14531#issuecomment-1328667480","issue_url":"https://api.github.com/repos/apache/doris/issues/14531","id":1328667480,"node_id":"IC_kwDOBfSlxs5PMdtY","user":{"login":"meredith620","id":1277190,"node_id":"MDQ6VXNlcjEyNzcxOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1277190?v=4","gravatar_id":"","url":"https://api.github.com/users/meredith620","html_url":"https://github.com/meredith620","followers_url":"https://api.github.com/users/meredith620/followers","following_url":"https://api.github.com/users/meredith620/following{/other_user}","gists_url":"https://api.github.com/users/meredith620/gists{/gist_id}","starred_url":"https://api.github.com/users/meredith620/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meredith620/subscriptions","organizations_url":"https://api.github.com/users/meredith620/orgs","repos_url":"https://api.github.com/users/meredith620/repos","events_url":"https://api.github.com/users/meredith620/events{/privacy}","received_events_url":"https://api.github.com/users/meredith620/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:47:09Z","updated_at":"2022-11-28T07:47:09Z","author_association":"CONTRIBUTOR","body":"@yiguolei It's a good idea, Let me add a session variable.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667893","html_url":"https://github.com/apache/doris/pull/14635#issuecomment-1328667893","issue_url":"https://api.github.com/repos/apache/doris/issues/14635","id":1328667893,"node_id":"IC_kwDOBfSlxs5PMdz1","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:47:44Z","updated_at":"2022-11-30T12:25:14Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.8 seconds\n load time: 436 seconds\n storage size: 17123343162 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221130122512_clickbench_pr_55577.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328667893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328676574","html_url":"https://github.com/apache/doris/pull/14608#issuecomment-1328676574","issue_url":"https://api.github.com/repos/apache/doris/issues/14608","id":1328676574,"node_id":"IC_kwDOBfSlxs5PMf7e","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:59:01Z","updated_at":"2022-11-28T07:59:01Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328676574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328676609","html_url":"https://github.com/apache/doris/pull/14608#issuecomment-1328676609","issue_url":"https://api.github.com/repos/apache/doris/issues/14608","id":1328676609,"node_id":"IC_kwDOBfSlxs5PMf8B","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T07:59:04Z","updated_at":"2022-11-28T07:59:04Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328676609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328687734","html_url":"https://github.com/apache/doris/pull/14302#issuecomment-1328687734","issue_url":"https://api.github.com/repos/apache/doris/issues/14302","id":1328687734,"node_id":"IC_kwDOBfSlxs5PMip2","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T08:08:02Z","updated_at":"2022-11-28T08:08:02Z","author_association":"CONTRIBUTOR","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328687734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328761089","html_url":"https://github.com/apache/doris/pull/14623#issuecomment-1328761089","issue_url":"https://api.github.com/repos/apache/doris/issues/14623","id":1328761089,"node_id":"IC_kwDOBfSlxs5PM0kB","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T09:14:41Z","updated_at":"2022-11-28T09:14:41Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328761089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328761143","html_url":"https://github.com/apache/doris/pull/14623#issuecomment-1328761143","issue_url":"https://api.github.com/repos/apache/doris/issues/14623","id":1328761143,"node_id":"IC_kwDOBfSlxs5PM0k3","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T09:14:43Z","updated_at":"2022-11-28T09:14:43Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328761143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328795362","html_url":"https://github.com/apache/doris/pull/14206#issuecomment-1328795362","issue_url":"https://api.github.com/repos/apache/doris/issues/14206","id":1328795362,"node_id":"IC_kwDOBfSlxs5PM87i","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T09:44:52Z","updated_at":"2022-11-28T09:44:52Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328795362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328795407","html_url":"https://github.com/apache/doris/pull/14206#issuecomment-1328795407","issue_url":"https://api.github.com/repos/apache/doris/issues/14206","id":1328795407,"node_id":"IC_kwDOBfSlxs5PM88P","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T09:44:54Z","updated_at":"2022-11-28T09:44:54Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328795407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328834340","html_url":"https://github.com/apache/doris/pull/14616#issuecomment-1328834340","issue_url":"https://api.github.com/repos/apache/doris/issues/14616","id":1328834340,"node_id":"IC_kwDOBfSlxs5PNGck","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T10:15:21Z","updated_at":"2022-11-28T10:15:21Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328834340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328879070","html_url":"https://github.com/apache/doris/pull/14633#issuecomment-1328879070","issue_url":"https://api.github.com/repos/apache/doris/issues/14633","id":1328879070,"node_id":"IC_kwDOBfSlxs5PNRXe","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T10:54:21Z","updated_at":"2022-11-28T10:54:21Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328879070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328879141","html_url":"https://github.com/apache/doris/pull/14633#issuecomment-1328879141","issue_url":"https://api.github.com/repos/apache/doris/issues/14633","id":1328879141,"node_id":"IC_kwDOBfSlxs5PNRYl","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T10:54:23Z","updated_at":"2022-11-28T10:54:23Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328879141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328889128","html_url":"https://github.com/apache/doris/pull/14641#issuecomment-1328889128","issue_url":"https://api.github.com/repos/apache/doris/issues/14641","id":1328889128,"node_id":"IC_kwDOBfSlxs5PNT0o","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T11:03:07Z","updated_at":"2022-11-29T09:52:30Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.17 seconds\n load time: 458 seconds\n storage size: 17122921389 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221129095227_clickbench_pr_54921.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328889128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328898730","html_url":"https://github.com/apache/doris/pull/14646#issuecomment-1328898730","issue_url":"https://api.github.com/repos/apache/doris/issues/14646","id":1328898730,"node_id":"IC_kwDOBfSlxs5PNWKq","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T11:10:18Z","updated_at":"2022-11-28T11:10:18Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328898730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328898786","html_url":"https://github.com/apache/doris/pull/14646#issuecomment-1328898786","issue_url":"https://api.github.com/repos/apache/doris/issues/14646","id":1328898786,"node_id":"IC_kwDOBfSlxs5PNWLi","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T11:10:21Z","updated_at":"2022-11-28T11:10:21Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328898786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328981230","html_url":"https://github.com/apache/doris/pull/14374#issuecomment-1328981230","issue_url":"https://api.github.com/repos/apache/doris/issues/14374","id":1328981230,"node_id":"IC_kwDOBfSlxs5PNqTu","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:17:53Z","updated_at":"2022-11-28T12:17:53Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328981230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328982104","html_url":"https://github.com/apache/doris/pull/14647#issuecomment-1328982104","issue_url":"https://api.github.com/repos/apache/doris/issues/14647","id":1328982104,"node_id":"IC_kwDOBfSlxs5PNqhY","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:18:32Z","updated_at":"2022-11-28T12:18:32Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328982104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328982163","html_url":"https://github.com/apache/doris/pull/14647#issuecomment-1328982163","issue_url":"https://api.github.com/repos/apache/doris/issues/14647","id":1328982163,"node_id":"IC_kwDOBfSlxs5PNqiT","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:18:34Z","updated_at":"2022-11-28T12:18:34Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1328982163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329002111","html_url":"https://github.com/apache/doris/pull/14624#issuecomment-1329002111","issue_url":"https://api.github.com/repos/apache/doris/issues/14624","id":1329002111,"node_id":"IC_kwDOBfSlxs5PNvZ_","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:35:31Z","updated_at":"2022-11-28T12:35:31Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329002111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329002159","html_url":"https://github.com/apache/doris/pull/14624#issuecomment-1329002159","issue_url":"https://api.github.com/repos/apache/doris/issues/14624","id":1329002159,"node_id":"IC_kwDOBfSlxs5PNvav","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:35:34Z","updated_at":"2022-11-28T12:35:34Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329002159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329031480","html_url":"https://github.com/apache/doris/pull/14616#issuecomment-1329031480","issue_url":"https://api.github.com/repos/apache/doris/issues/14616","id":1329031480,"node_id":"IC_kwDOBfSlxs5PN2k4","user":{"login":"Yukang-Lian","id":88536822,"node_id":"MDQ6VXNlcjg4NTM2ODIy","avatar_url":"https://avatars.githubusercontent.com/u/88536822?v=4","gravatar_id":"","url":"https://api.github.com/users/Yukang-Lian","html_url":"https://github.com/Yukang-Lian","followers_url":"https://api.github.com/users/Yukang-Lian/followers","following_url":"https://api.github.com/users/Yukang-Lian/following{/other_user}","gists_url":"https://api.github.com/users/Yukang-Lian/gists{/gist_id}","starred_url":"https://api.github.com/users/Yukang-Lian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yukang-Lian/subscriptions","organizations_url":"https://api.github.com/users/Yukang-Lian/orgs","repos_url":"https://api.github.com/users/Yukang-Lian/repos","events_url":"https://api.github.com/users/Yukang-Lian/events{/privacy}","received_events_url":"https://api.github.com/users/Yukang-Lian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T12:49:23Z","updated_at":"2022-11-28T12:49:23Z","author_association":"COLLABORATOR","body":"Before this PR\r\n![perf](https://user-images.githubusercontent.com/88536822/204281558-f3aceb61-8c5c-4450-b12e-8b12aaeb5ea6.svg)\r\n\r\nAfter this PR\r\n![perf3](https://user-images.githubusercontent.com/88536822/204281780-9b114a1e-11b5-4e62-bc6b-95d3211b9a14.svg)\r\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1329031480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]