[{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100568386","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2100568386","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2100568386,"node_id":"IC_kwDOAAMmM859NCFC","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-08T13:23:26Z","updated_at":"2024-05-08T13:25:22Z","author_association":"CONTRIBUTOR","body":"@rposts no, unfortunately I don't think we are in a good state to do that on every PR.\r\n\r\n1. I do not think there are enough s390x's build servers to run builds on every PR. \r\n2. Test execution times are long.\r\n \r\nThe ActiveMQ unit tests need to be modernized and optimized. I estimate we could cut test run times in half.\r\n\r\nI kicked a s390x main branch test run just now:\r\nhttps://ci-builds.apache.org/blue/organizations/jenkins/ActiveMQ%2FActiveMQ/detail/main/443/pipeline/\r\n\r\nEDIT: .. and the build failed. No JDK 22 on s390x yet.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100568386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100649233","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2100649233","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2100649233,"node_id":"IC_kwDOAAMmM859NV0R","user":{"login":"rposts","id":12901455,"node_id":"MDQ6VXNlcjEyOTAxNDU1","avatar_url":"https://avatars.githubusercontent.com/u/12901455?v=4","gravatar_id":"","url":"https://api.github.com/users/rposts","html_url":"https://github.com/rposts","followers_url":"https://api.github.com/users/rposts/followers","following_url":"https://api.github.com/users/rposts/following{/other_user}","gists_url":"https://api.github.com/users/rposts/gists{/gist_id}","starred_url":"https://api.github.com/users/rposts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rposts/subscriptions","organizations_url":"https://api.github.com/users/rposts/orgs","repos_url":"https://api.github.com/users/rposts/repos","events_url":"https://api.github.com/users/rposts/events{/privacy}","received_events_url":"https://api.github.com/users/rposts/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-08T14:01:26Z","updated_at":"2024-05-08T14:01:26Z","author_association":"NONE","body":"Thanks @mattrpav for quick response.\r\n\r\nCurrently [Eclipse Temurin](https://adoptium.net/temurin/releases/?version=22&arch=s390x) is releasing `s390x` JDK 22. My colleague @namrata-ibm can raise an issue with Apache Infra team to add JDK 22 to `s390x` nodes.\r\n\r\nI do understand about your point about resources/execution time.  Do you have any suggestions on how we can make this work given these constraints and until unit tests are optimized?  Can we start with weekly/bi-weekly build triggers on `s390x` ?\r\n\r\nThanks for your help!","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100649233/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100695264","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2100695264","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2100695264,"node_id":"IC_kwDOAAMmM859NhDg","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-08T14:18:15Z","updated_at":"2024-05-08T14:18:15Z","author_association":"CONTRIBUTOR","body":"@rposts great, adding JDK 22 to s390x will get us past this current hurdle.\r\n\r\nI'm good w/ adding an updated build trigger, but I currently do not have time to work on it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2100695264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2108232172","html_url":"https://github.com/apache/activemq/pull/1222#issuecomment-2108232172","issue_url":"https://api.github.com/repos/apache/activemq/issues/1222","id":2108232172,"node_id":"IC_kwDOAAMmM859qRHs","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-13T16:58:28Z","updated_at":"2024-05-13T16:58:28Z","author_association":"CONTRIBUTOR","body":"> There are a bunch of varying changes here. Not sure it makes sense as a single commit. Perhaps the iteration Java-language updates go as one easy commit.\r\n> \r\n> I do not see a reason to remove null checks.\r\n> \r\n> Is this PR part of a JIRA or NO-JIRA change?\r\n\r\nThis is part of a NO-JIRA change. I am just trying to clean up the code as I navigate the code :) I moved the removing redundant null checks from this PR to another I will create later to make this PR more about trivial updates. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2108232172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2116266579","html_url":"https://github.com/apache/activemq/pull/1222#issuecomment-2116266579","issue_url":"https://api.github.com/repos/apache/activemq/issues/1222","id":2116266579,"node_id":"IC_kwDOAAMmM85-I6pT","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-16T21:53:58Z","updated_at":"2024-05-16T21:53:58Z","author_association":"CONTRIBUTOR","body":"Hey Matt and JB, are there any more concerns about this PR? I checked the Jenkins failing tests they are about KahaDB\r\n\r\n[INFO] ActiveMQ ........................................... SUCCESS [  0.852 s]\r\n\r\n[INFO] ActiveMQ :: BOM .................................... SUCCESS [  0.248 s]\r\n\r\n[INFO] ActiveMQ :: Openwire Generator ..................... SUCCESS [  1.091 s]\r\n\r\n[INFO] ActiveMQ :: Client ................................. SUCCESS [02:50 min]\r\n\r\n[INFO] ActiveMQ :: Openwire Legacy Support ................ SUCCESS [  2.411 s]\r\n\r\n[INFO] ActiveMQ :: JAAS ................................... SUCCESS [01:46 min]\r\n\r\n[INFO] ActiveMQ :: Broker ................................. SUCCESS [01:18 min]\r\n\r\n[INFO] ActiveMQ :: KahaDB Store ........................... FAILURE [  03:30 h]\r\n\r\n\r\nAnd the broker tests passed.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2116266579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2126991652","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2126991652","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2126991652,"node_id":"IC_kwDOAAMmM85-x1Ek","user":{"login":"rposts","id":12901455,"node_id":"MDQ6VXNlcjEyOTAxNDU1","avatar_url":"https://avatars.githubusercontent.com/u/12901455?v=4","gravatar_id":"","url":"https://api.github.com/users/rposts","html_url":"https://github.com/rposts","followers_url":"https://api.github.com/users/rposts/followers","following_url":"https://api.github.com/users/rposts/following{/other_user}","gists_url":"https://api.github.com/users/rposts/gists{/gist_id}","starred_url":"https://api.github.com/users/rposts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rposts/subscriptions","organizations_url":"https://api.github.com/users/rposts/orgs","repos_url":"https://api.github.com/users/rposts/repos","events_url":"https://api.github.com/users/rposts/events{/privacy}","received_events_url":"https://api.github.com/users/rposts/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-23T12:31:33Z","updated_at":"2024-05-23T12:31:33Z","author_association":"NONE","body":"@mattrpav wrt adding JDK22 to `s390x` nodes, It seems like underlying process for requesting changes to infrastructure has changed recently. As noted in this [issue ](https://issues.apache.org/jira/browse/INFRA-25771) only ActiveMQ PMC member can open such requests. Could you please help us navigate this when you have free cycle?\r\n\r\nThanks so much for your continued assistance.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2126991652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2127383908","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2127383908","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2127383908,"node_id":"IC_kwDOAAMmM85-zU1k","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-23T15:09:12Z","updated_at":"2024-05-23T15:09:12Z","author_association":"CONTRIBUTOR","body":"JIRA created https://issues.apache.org/jira/browse/INFRA-25817","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2127383908/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2130818770","html_url":"https://github.com/apache/activemq/pull/1222#issuecomment-2130818770","issue_url":"https://api.github.com/repos/apache/activemq/issues/1222","id":2130818770,"node_id":"IC_kwDOAAMmM85_AbbS","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-25T05:48:49Z","updated_at":"2024-05-25T05:48:49Z","author_association":"MEMBER","body":"I did a new pass and it looks good to me. If @mattrpav is OK (as he requested a change), I will merge it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2130818770/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137575544","html_url":"https://github.com/apache/activemq/pull/1182#issuecomment-2137575544","issue_url":"https://api.github.com/repos/apache/activemq/issues/1182","id":2137575544,"node_id":"IC_kwDOAAMmM85_aNB4","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-29T14:36:00Z","updated_at":"2024-05-29T14:36:00Z","author_association":"CONTRIBUTOR","body":"It's not really clear to me when I first read this what MessageStrategy was supposed to be from the name so I'm wondering if we should rename it. if this is supposed to be essentially an interceptor framework to mutate a message the maybe we just call it something like MessageInterceptor. However, I know we used the term \"Strategy\" elsewhere \r\n\r\nAlso, the API may need some discussion. A lot of times with something like this you might want to return the message so you can chain it and actually return an entirely different object, but this could have its own problems with things like potential memory usage not being tracked correctly. This only supports mutating in place which can have problems as well.\r\n\r\nAnyways, the main thing is just making sure the public API is well thought out, named well, decide if we want to allow mutating in place only or not, etc because once it's out there it's hard to change it as people will create implementations.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137575544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137597700","html_url":"https://github.com/apache/activemq/pull/1182#issuecomment-2137597700","issue_url":"https://api.github.com/repos/apache/activemq/issues/1182","id":2137597700,"node_id":"IC_kwDOAAMmM85_aScE","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-29T14:45:27Z","updated_at":"2024-05-29T14:45:57Z","author_association":"CONTRIBUTOR","body":"@cshannon agreed, great points.  +1 on returning the object in the API.\r\n\r\n1. Re naming-- there is already a [MessageInterceptor.java](https://github.com/apache/activemq/blob/36da4f0ce329618f4eca280fbea279c64afa7b1b/activemq-broker/src/main/java/org/apache/activemq/broker/inteceptor/MessageInterceptor.java#L22) that is broker-wide, so I went with 'Strategy' since it matches the other sub-items on PolicyEntry -- SlowConsumerStrategy, DeadLetterStrategy, etc. That being said, I'm not married to 'MessageStrategy' as a name in any way.\r\n\r\n2. Great point re memory usage and mutating. I think a key decision is if we have some sort of core MessageStrategy handler that supports memoryUsage on behalf of the extensions, or if each extension is responsible for managing that. I think having a top-level handler would be better, so users could do simple things like 'require this header name' and not worry about queue internals like memoryUsage. The ChainMessageStrategy could do that handling so users could add 'simple' extensions as children to that or replace the strategy altogether and be responsible for memoryUsage and other queue internals themselves. Thoughts?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137597700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137605913","html_url":"https://github.com/apache/activemq/pull/1182#issuecomment-2137605913","issue_url":"https://api.github.com/repos/apache/activemq/issues/1182","id":2137605913,"node_id":"IC_kwDOAAMmM85_aUcZ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-29T14:48:52Z","updated_at":"2024-05-29T14:49:08Z","author_association":"CONTRIBUTOR","body":"So I double checked and yeah we pretty much just used \"Strategy\" for everything. So maybe we could make it more descriptive by adding an extra word to the name that describes it better like `Message<something>Strategy `instead of just MessageStrategy to convey what it is. Not sure... maybe `MessageInterceptorStrategy`, `MessageEnricherStrategy`, `MessageMutatorStrategy`, etc. I'm open for ideas","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2137605913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2142861478","html_url":"https://github.com/apache/activemq/pull/1207#issuecomment-2142861478","issue_url":"https://api.github.com/repos/apache/activemq/issues/1207","id":2142861478,"node_id":"IC_kwDOAAMmM85_uXim","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-31T19:26:38Z","updated_at":"2024-05-31T19:26:38Z","author_association":"CONTRIBUTOR","body":"Closing in favor of https://github.com/apache/activemq/pull/1208","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2142861478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2142874447","html_url":"https://github.com/apache/activemq/pull/1177#issuecomment-2142874447","issue_url":"https://api.github.com/repos/apache/activemq/issues/1177","id":2142874447,"node_id":"IC_kwDOAAMmM85_uatP","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-31T19:37:06Z","updated_at":"2024-05-31T19:37:06Z","author_association":"CONTRIBUTOR","body":"Do you have a thread dump of the deadlock occurring?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2142874447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2143330637","html_url":"https://github.com/apache/activemq/pull/1177#issuecomment-2143330637","issue_url":"https://api.github.com/repos/apache/activemq/issues/1177","id":2143330637,"node_id":"IC_kwDOAAMmM85_wKFN","user":{"login":"thezbyg","id":129256,"node_id":"MDQ6VXNlcjEyOTI1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/129256?v=4","gravatar_id":"","url":"https://api.github.com/users/thezbyg","html_url":"https://github.com/thezbyg","followers_url":"https://api.github.com/users/thezbyg/followers","following_url":"https://api.github.com/users/thezbyg/following{/other_user}","gists_url":"https://api.github.com/users/thezbyg/gists{/gist_id}","starred_url":"https://api.github.com/users/thezbyg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thezbyg/subscriptions","organizations_url":"https://api.github.com/users/thezbyg/orgs","repos_url":"https://api.github.com/users/thezbyg/repos","events_url":"https://api.github.com/users/thezbyg/events{/privacy}","received_events_url":"https://api.github.com/users/thezbyg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-01T06:54:58Z","updated_at":"2024-06-01T06:54:58Z","author_association":"CONTRIBUTOR","body":"Yes. This is the stack trace of \"JobScheduler:JMS\" thread blocked by itself due to acquiring read lock on store while iterating scheduled jobs in mainLoop() method and then attempting to acquire write lock to write a new scheduled job information:\r\n`\r\n\"JobScheduler:JMS\" #28 daemon prio=5 os_prio=0 cpu=11.62ms elapsed=117.73s tid=0x00007f43d1344b50 nid=0x185b waiting on condition  [0x00007f4356cfe000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n\tat jdk.internal.misc.Unsafe.park(java.base@17.0.8/Native Method)\r\n\t- parking to wait for  <0x000000008bd25150> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\n\tat java.util.concurrent.locks.LockSupport.park(java.base@17.0.8/LockSupport.java:211)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(java.base@17.0.8/AbstractQueuedSynchronizer.java:715)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(java.base@17.0.8/AbstractQueuedSynchronizer.java:938)\r\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(java.base@17.0.8/ReentrantReadWriteLock.java:959)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerStoreImpl$8.visit(JobSchedulerStoreImpl.java:684)\r\n\tat org.apache.activemq.store.kahadb.data.KahaAddScheduledJobCommand.visit(KahaAddScheduledJobCommand.java:283)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerStoreImpl.process(JobSchedulerStoreImpl.java:679)\r\n\tat org.apache.activemq.store.kahadb.AbstractKahaDBStore.store(AbstractKahaDBStore.java:495)\r\n\tat org.apache.activemq.store.kahadb.AbstractKahaDBStore.store(AbstractKahaDBStore.java:403)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerImpl.doSchedule(JobSchedulerImpl.java:252)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerImpl.schedule(JobSchedulerImpl.java:100)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerImpl.mainLoop(JobSchedulerImpl.java:782)\r\n\tat org.apache.activemq.store.kahadb.scheduler.JobSchedulerImpl.run(JobSchedulerImpl.java:699)\r\n\tat java.lang.Thread.run(java.base@17.0.8/Thread.java:833)\r\n`\r\n\r\nFull dump:\r\n[dump.txt](https://github.com/user-attachments/files/15520722/dump.txt)\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2143330637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219076568","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2219076568","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2219076568,"node_id":"IC_kwDOAAMmM86ERGvY","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T00:03:22Z","updated_at":"2024-07-10T00:03:22Z","author_association":"CONTRIBUTOR","body":"What is the use case for this?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219076568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219181991","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2219181991","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2219181991,"node_id":"IC_kwDOAAMmM86ERgen","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T00:35:42Z","updated_at":"2024-07-10T00:35:42Z","author_association":"NONE","body":"> What is the use case for this?\r\n\r\nyou mean the use case of having a DestinationFilter after SelectorAwareVirtualTopicInterceptor?\r\n\r\nI my case I add an interceptor to all topics. and that interceptor coexists with the rest of interceptors. and some topics can be vistual topics. it's technically possible on the plugin side to check if there is a virtual topic interceptor and not add my interceptor. But I checked other interceptors([this one](https://github.com/apache/activemq/blob/main/activemq-broker/src/main/java/org/apache/activemq/broker/region/virtual/MappedQueueFilter.java#L68) for example) and they handle this situation correctly, so I thought it would be a positive change in general. In case people decide to do something similar in the future, they will not need to work around the edge case.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219181991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219627312","html_url":"https://github.com/apache/activemq/pull/1244#issuecomment-2219627312","issue_url":"https://api.github.com/repos/apache/activemq/issues/1244","id":2219627312,"node_id":"IC_kwDOAAMmM86ETNMw","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T06:00:44Z","updated_at":"2024-07-10T06:00:44Z","author_association":"MEMBER","body":"I think in the future, we can also focus only on LTS version. It will limit and \"guarantee\" the Camel updates.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219627312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219722145","html_url":"https://github.com/apache/activemq/pull/1239#issuecomment-2219722145","issue_url":"https://api.github.com/repos/apache/activemq/issues/1239","id":2219722145,"node_id":"IC_kwDOAAMmM86ETkWh","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T07:07:14Z","updated_at":"2024-07-10T07:07:14Z","author_association":"MEMBER","body":"@mattrpav I consider like a behavior change as we don't check the stream length anymore. It's potentially a security/performance issue: we introduced stream limit to avoid to flood the REST client with long message.\r\nI would rather keep the same behavior, but replace common-io with our own method to define the stream length.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2219722145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2220606146","html_url":"https://github.com/apache/activemq/pull/1244#issuecomment-2220606146","issue_url":"https://api.github.com/repos/apache/activemq/issues/1244","id":2220606146,"node_id":"IC_kwDOAAMmM86EW8LC","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T14:05:45Z","updated_at":"2024-07-10T14:05:45Z","author_association":"CONTRIBUTOR","body":"Right, Camel 4.4.x is an LTS release","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2220606146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2221358517","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2221358517","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2221358517,"node_id":"IC_kwDOAAMmM86EZz21","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T20:15:44Z","updated_at":"2024-07-10T20:15:44Z","author_association":"CONTRIBUTOR","body":"A couple of points:\r\n\r\n1. This change needs to be a JIRA\r\n2. This needs a unit test with an example configured w/ another DestinationFilter on top of Virtual Topic\r\n3. If we are going to fix it, we should adapt all the Virtual Destinations to use the same set of methods.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2221358517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2221666756","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2221666756","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2221666756,"node_id":"IC_kwDOAAMmM86Ea_HE","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-10T23:02:09Z","updated_at":"2024-07-10T23:02:09Z","author_association":"NONE","body":">     1. This change needs to be a JIRA\r\nDone. https://issues.apache.org/jira/browse/AMQ-9530\r\n>     2. This needs a unit test with an example configured w/ another DestinationFilter on top of Virtual Topic\r\nUpdated `VirtualTopicSelectorTest,` as it's basically tests `SelectorAwareVirtualTopicInterceptor`. Also used it to initially reproduce the issue(see the ticket).\r\n>     3. If we are going to fix it, we should adapt all the Virtual Destinations to use the same set of methods.\r\nThere are no issues like this in other pars of the Virtual Destination code. only in `SelectorAwareVirtualTopicInterceptor`","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2221666756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2223100275","html_url":"https://github.com/apache/activemq/pull/1251#issuecomment-2223100275","issue_url":"https://api.github.com/repos/apache/activemq/issues/1251","id":2223100275,"node_id":"IC_kwDOAAMmM86EgdFz","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-11T14:33:19Z","updated_at":"2024-07-11T14:33:19Z","author_association":"CONTRIBUTOR","body":"I'm mostly -1 on this change.\r\n\r\nI think this should be handled by configuring a filter at the logging framework level.\r\n\r\nSome users may want body redacted, others certain header or properties fields.. or even just specific fields within the body.\r\n\r\nLogging frameworks support configurable filters for this, I think this can be handled as a FAQ in ActiveMQ about how to add a logging filter.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2223100275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2223492085","html_url":"https://github.com/apache/activemq/pull/1251#issuecomment-2223492085","issue_url":"https://api.github.com/repos/apache/activemq/issues/1251","id":2223492085,"node_id":"IC_kwDOAAMmM86Eh8v1","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-11T17:24:16Z","updated_at":"2024-07-11T17:24:16Z","author_association":"CONTRIBUTOR","body":"> I'm mostly -1 on this change.\r\n> \r\n> I think this should be handled by configuring a filter at the logging framework level.\r\n> \r\n> Some users may want body redacted, others certain header or properties fields.. or even just specific fields within the body.\r\n> \r\n> Logging frameworks support configurable filters for this, I think this can be handled as a FAQ in ActiveMQ about how to add a logging filter.\r\n\r\nHi Matt, thanks for the feedback.\r\n\r\nThat's a good idea. Let me look into it today. Instead of making this change, we will ship a default configuration for audit log to mask that information and add a FAQ in ActiveMQ to instruct users on how to add their own or override the default. Does it sound good to you? ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2223492085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2224116671","html_url":"https://github.com/apache/activemq/pull/1251#issuecomment-2224116671","issue_url":"https://api.github.com/repos/apache/activemq/issues/1251","id":2224116671,"node_id":"IC_kwDOAAMmM86EkVO_","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-11T23:32:46Z","updated_at":"2024-07-11T23:32:46Z","author_association":"CONTRIBUTOR","body":"> we will ship a default configuration for audit log ..\r\n\r\nIf by 'we' you mean your organization, good to go =)\r\n\r\nIf by 'we' you mean Apache, then I don't see us changing the default Apache distribution config for this. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2224116671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2224762134","html_url":"https://github.com/apache/activemq/pull/1251#issuecomment-2224762134","issue_url":"https://api.github.com/repos/apache/activemq/issues/1251","id":2224762134,"node_id":"IC_kwDOAAMmM86Emy0W","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-12T05:45:51Z","updated_at":"2024-07-12T05:45:51Z","author_association":"CONTRIBUTOR","body":"> > we will ship a default configuration for audit log ..\r\n> \r\n> If by 'we' you mean your organization, good to go =)\r\n> \r\n> If by 'we' you mean Apache, then I don't see us changing the default Apache distribution config for this.\r\n\r\nI can see your concern. By \"we\" I meant developers in this community :) When developers deploy ActiveMQ for their customers, their customers may want sensitive data to be redacted. For instance, in `AuditLogEntry.java` fields that are annotated by `@Sensitive` (such as password) are redacted in the audit.log. So in my opinion, it is probably better to have it default redacted (possibly other fields in the HTTP parameters as well) to avoid potential compliance issues. I will focus on documenting the instructions to configure the log filter nevertheless. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2224762134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2226878464","html_url":"https://github.com/apache/activemq/pull/1261#issuecomment-2226878464","issue_url":"https://api.github.com/repos/apache/activemq/issues/1261","id":2226878464,"node_id":"IC_kwDOAAMmM86Eu3gA","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-13T12:08:08Z","updated_at":"2024-07-13T12:08:08Z","author_association":"CONTRIBUTOR","body":"@jbonofre this change is incomplete and should be closed in favor of [#1257]. The Export command needed a patch b/c the introspection wasn't working with the method overload.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2226878464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2226879044","html_url":"https://github.com/apache/activemq/pull/1261#issuecomment-2226879044","issue_url":"https://api.github.com/repos/apache/activemq/issues/1261","id":2226879044,"node_id":"IC_kwDOAAMmM86Eu3pE","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-13T12:09:53Z","updated_at":"2024-07-13T12:09:53Z","author_association":"MEMBER","body":"The other PR seems larger than just a fix and that's a concern to me for 5.18.x. That's why I would like to only fix the export. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2226879044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230849862","html_url":"https://github.com/apache/activemq/pull/1256#issuecomment-2230849862","issue_url":"https://api.github.com/repos/apache/activemq/issues/1256","id":2230849862,"node_id":"IC_kwDOAAMmM86E-BFG","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-16T13:08:46Z","updated_at":"2024-07-16T13:08:46Z","author_association":"CONTRIBUTOR","body":"replaced by #1258","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230849862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230851047","html_url":"https://github.com/apache/activemq/pull/1208#issuecomment-2230851047","issue_url":"https://api.github.com/repos/apache/activemq/issues/1208","id":2230851047,"node_id":"IC_kwDOAAMmM86E-BXn","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-16T13:09:18Z","updated_at":"2024-07-16T13:09:18Z","author_association":"CONTRIBUTOR","body":"Replaced with #1258","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230851047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230869694","html_url":"https://github.com/apache/activemq/pull/1254#issuecomment-2230869694","issue_url":"https://api.github.com/repos/apache/activemq/issues/1254","id":2230869694,"node_id":"IC_kwDOAAMmM86E-F6-","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-16T13:17:48Z","updated_at":"2024-07-16T13:17:48Z","author_association":"CONTRIBUTOR","body":"@Nikita-Shupletsov how many is too-many nodes to trigger a stack overflow? What was the -Xss setting when the SO occurred?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230869694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230917315","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2230917315","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2230917315,"node_id":"IC_kwDOAAMmM86E-RjD","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-16T13:37:46Z","updated_at":"2024-07-16T13:37:46Z","author_association":"CONTRIBUTOR","body":"> There are no issues like this in other pars of the Virtual Destination code. only in `SelectorAwareVirtualTopicInterceptor`\r\n\r\nMappedQueueFilter has a nearly identical method:\r\n\r\nref: https://github.com/apache/activemq/blob/5309352e12c1d5f05c027331f49cc1caa6a62f2f/activemq-broker/src/main/java/org/apache/activemq/broker/region/virtual/MappedQueueFilter.java#L90\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2230917315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2232215667","html_url":"https://github.com/apache/activemq/pull/1254#issuecomment-2232215667","issue_url":"https://api.github.com/repos/apache/activemq/issues/1254","id":2232215667,"node_id":"IC_kwDOAAMmM86FDOhz","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-17T02:16:31Z","updated_at":"2024-07-17T02:16:31Z","author_association":"NONE","body":"> @Nikita-Shupletsov how many is too-many nodes to trigger a stack overflow? What was the -Xss setting when the SO occurred?\r\n\r\nwith `-Xss256k` it's around 1300\r\n\r\ni've encountered the issue due to this: https://activemq.apache.org/components/classic/documentation/message-redelivery-and-dlq-handling#setting-expiration-on-messages-in-the-dlq\r\nthere were DLQs for DlQs and so on\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2232215667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2232219598","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2232219598","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2232219598,"node_id":"IC_kwDOAAMmM86FDPfO","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-17T02:20:34Z","updated_at":"2024-07-17T02:20:34Z","author_association":"NONE","body":"> > There are no issues like this in other pars of the Virtual Destination code. only in `SelectorAwareVirtualTopicInterceptor`\r\n> \r\n> MappedQueueFilter has a nearly identical method:\r\n> \r\n> ref:\r\n> \r\n> https://github.com/apache/activemq/blob/5309352e12c1d5f05c027331f49cc1caa6a62f2f/activemq-broker/src/main/java/org/apache/activemq/broker/region/virtual/MappedQueueFilter.java#L90\r\n\r\nare you proposing to extract this method to a helper class? If I create a new class, let's say VirtualTopicSupport or VistualTopicHelper, will it be okay? or do you have a particular place in mind fir it?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2232219598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2246349566","html_url":"https://github.com/apache/activemq/pull/1272#issuecomment-2246349566","issue_url":"https://api.github.com/repos/apache/activemq/issues/1272","id":2246349566,"node_id":"IC_kwDOAAMmM86F5JL-","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-23T21:28:05Z","updated_at":"2024-07-23T21:28:05Z","author_association":"CONTRIBUTOR","body":"If you need to open five \"no jira\" PRs for cleaning up unit tests, then you probably need a JIRA for cleaning up unit tests.  ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2246349566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2246380383","html_url":"https://github.com/apache/activemq/pull/1272#issuecomment-2246380383","issue_url":"https://api.github.com/repos/apache/activemq/issues/1272","id":2246380383,"node_id":"IC_kwDOAAMmM86F5Qtf","user":{"login":"AlexejTimonin","id":8479582,"node_id":"MDQ6VXNlcjg0Nzk1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/8479582?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexejTimonin","html_url":"https://github.com/AlexejTimonin","followers_url":"https://api.github.com/users/AlexejTimonin/followers","following_url":"https://api.github.com/users/AlexejTimonin/following{/other_user}","gists_url":"https://api.github.com/users/AlexejTimonin/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexejTimonin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexejTimonin/subscriptions","organizations_url":"https://api.github.com/users/AlexejTimonin/orgs","repos_url":"https://api.github.com/users/AlexejTimonin/repos","events_url":"https://api.github.com/users/AlexejTimonin/events{/privacy}","received_events_url":"https://api.github.com/users/AlexejTimonin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-23T21:54:07Z","updated_at":"2024-07-23T21:54:07Z","author_association":"CONTRIBUTOR","body":"> If you need to open five \"no jira\" PRs for cleaning up unit tests, then you probably need a JIRA for cleaning up unit tests.\r\n\r\nFair enough. At first it was going to be one PR, but I split it up to keep changes related, hence 5 PRs. I will create a ticket.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2246380383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2271731997","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2271731997","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2271731997,"node_id":"IC_kwDOAAMmM86HZ-Ed","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-06T16:54:45Z","updated_at":"2024-08-06T16:54:45Z","author_association":"CONTRIBUTOR","body":"Yes, a base class that contains the lookup method to unwrap the destination to get to the root (real) destination that can be used by VirtualTopic and MappedQueueFilter.\r\n\r\nie BaseVirtualDestination(Inteceptor|Filter) ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2271731997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278156442","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278156442","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278156442,"node_id":"IC_kwDOAAMmM86Hyeia","user":{"login":"namrata-ibm","id":21953668,"node_id":"MDQ6VXNlcjIxOTUzNjY4","avatar_url":"https://avatars.githubusercontent.com/u/21953668?v=4","gravatar_id":"","url":"https://api.github.com/users/namrata-ibm","html_url":"https://github.com/namrata-ibm","followers_url":"https://api.github.com/users/namrata-ibm/followers","following_url":"https://api.github.com/users/namrata-ibm/following{/other_user}","gists_url":"https://api.github.com/users/namrata-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namrata-ibm/subscriptions","organizations_url":"https://api.github.com/users/namrata-ibm/orgs","repos_url":"https://api.github.com/users/namrata-ibm/repos","events_url":"https://api.github.com/users/namrata-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/namrata-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:00:47Z","updated_at":"2024-08-09T15:00:47Z","author_association":"NONE","body":"@mattrpav JDK22 is now available on s390x nodes, could you please trigger a build? \r\nThank you very much","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278156442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278196788","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278196788","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278196788,"node_id":"IC_kwDOAAMmM86HyoY0","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:22:22Z","updated_at":"2024-08-09T15:22:22Z","author_association":"CONTRIBUTOR","body":"@namrata-ibm I attempted to kick a job, but all s390x nodes are offline at the moment.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278196788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278201767","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278201767","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278201767,"node_id":"IC_kwDOAAMmM86Hypmn","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:25:12Z","updated_at":"2024-08-09T15:25:12Z","author_association":"NONE","body":"Offline, how, where ?\r\n\r\nNote that all Shared nodes live on the main Operations Center and get leased out to ci-builds. ci-cassandra, etc, etc\r\n\r\nhttps://jenkins-ccos.apache.org/view/Shared%20-%20s390x%20nodes/ \r\n\r\nAll are available and currently 2 in use. \r\nIt can take a few minutes for a build to grab one. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278201767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278212632","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278212632","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278212632,"node_id":"IC_kwDOAAMmM86HysQY","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:31:01Z","updated_at":"2024-08-09T15:31:10Z","author_association":"CONTRIBUTOR","body":"Hi @gmcdonald-- good call. Yes, the Jenkins job page flashed a message that s390x nodes were offline, then picked up a node a few minutes later.\r\n\r\nThe job did fail on 'mvn' not being found. Perhaps s390x needs different 'mvn' tool name from other platforms in the Jenkinsfile?  \r\n\r\nlink to job: https://ci-builds.apache.org/job/ActiveMQ/job/ActiveMQ/job/main/476\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278212632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278226465","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278226465","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278226465,"node_id":"IC_kwDOAAMmM86Hyvoh","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:37:43Z","updated_at":"2024-08-09T15:37:43Z","author_association":"NONE","body":"Can I get a link to the JenkinsFile ?\r\nNote that Maven is not usually installed by default as a system tool. \r\n\r\nSee : https://cwiki.apache.org/confluence/display/INFRA/Maven+Installation+Matrix for usual locations we install various Maven versions across the board.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278226465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278263069","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278263069","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278263069,"node_id":"IC_kwDOAAMmM86Hy4kd","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:56:47Z","updated_at":"2024-08-09T15:59:41Z","author_association":"CONTRIBUTOR","body":"Hi @gmcdonald - Thanks, see Jenkinsfile below. \r\n\r\nref: https://github.com/apache/activemq/blob/main/Jenkinsfile\r\n\r\nOne thing I noted was that the names of the tools can change between platforms (see the Windows JDKs). If the Jenkins tool alias is the same across all, it would make for simpler to define multi-platform jobs. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278263069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278277801","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2278277801","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2278277801,"node_id":"IC_kwDOAAMmM86Hy8Kp","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T16:04:28Z","updated_at":"2024-08-09T16:04:28Z","author_association":"NONE","body":"ergh ok, thanks, looks like maven_3_latest is broken, give me a bit for fix and deploy and new one","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2278277801/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2279529141","html_url":"https://github.com/apache/activemq/pull/1277#issuecomment-2279529141","issue_url":"https://api.github.com/repos/apache/activemq/issues/1277","id":2279529141,"node_id":"IC_kwDOAAMmM86H3tq1","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T05:56:47Z","updated_at":"2024-08-10T05:56:47Z","author_association":"CONTRIBUTOR","body":"Did you mean to merge it to `main` branch instead of 1apache:activemq-6.1.x` branch? Why is the fix 6.1.x specific?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2279529141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281145757","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2281145757","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2281145757,"node_id":"IC_kwDOAAMmM86H94Wd","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T11:24:13Z","updated_at":"2024-08-10T11:24:13Z","author_association":"NONE","body":"See: https://github.com/apache/infrastructure-p6/pull/1909/files","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281145757/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281516171","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2281516171","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2281516171,"node_id":"IC_kwDOAAMmM86H_SyL","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T12:38:09Z","updated_at":"2024-08-10T12:38:09Z","author_association":"NONE","body":"ok Maven 3 issue should be resolved now, please test. @mattrpav ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281516171/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281643775","html_url":"https://github.com/apache/activemq/pull/1277#issuecomment-2281643775","issue_url":"https://api.github.com/repos/apache/activemq/issues/1277","id":2281643775,"node_id":"IC_kwDOAAMmM86H_x7_","user":{"login":"Bizman345","id":3988564,"node_id":"MDQ6VXNlcjM5ODg1NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3988564?v=4","gravatar_id":"","url":"https://api.github.com/users/Bizman345","html_url":"https://github.com/Bizman345","followers_url":"https://api.github.com/users/Bizman345/followers","following_url":"https://api.github.com/users/Bizman345/following{/other_user}","gists_url":"https://api.github.com/users/Bizman345/gists{/gist_id}","starred_url":"https://api.github.com/users/Bizman345/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bizman345/subscriptions","organizations_url":"https://api.github.com/users/Bizman345/orgs","repos_url":"https://api.github.com/users/Bizman345/repos","events_url":"https://api.github.com/users/Bizman345/events{/privacy}","received_events_url":"https://api.github.com/users/Bizman345/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T13:03:37Z","updated_at":"2024-08-10T13:03:37Z","author_association":"NONE","body":"> Did you mean to merge it to `main` branch instead of 1apache:activemq-6.1.x` branch? Why is the fix 6.1.x specific?\r\n\r\nHello.\r\nYes. I meant merge it to main.\r\nAs I understand, I need to close this PR and create new one for `main` branch(this branch was created from apache:activemq-6.1.x). Am I right?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281643775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281893331","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2281893331","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2281893331,"node_id":"IC_kwDOAAMmM86IAu3T","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T13:52:53Z","updated_at":"2024-08-10T13:52:53Z","author_association":"CONTRIBUTOR","body":"Build started: https://ci-builds.apache.org/blue/organizations/jenkins/ActiveMQ%2FActiveMQ/detail/main/478","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2281893331/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2282250510","html_url":"https://github.com/apache/activemq/pull/1277#issuecomment-2282250510","issue_url":"https://api.github.com/repos/apache/activemq/issues/1277","id":2282250510,"node_id":"IC_kwDOAAMmM86ICGEO","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T19:13:51Z","updated_at":"2024-08-10T19:13:51Z","author_association":"CONTRIBUTOR","body":"> Hello.\r\n> Yes. I meant merge it to main.\r\n> As I understand, I need to close this PR and create new one for main branch(this branch was created from > apache:activemq-6.1.x). Am I right?\r\n\r\nCorrect. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2282250510/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2282302455","html_url":"https://github.com/apache/activemq/pull/1277#issuecomment-2282302455","issue_url":"https://api.github.com/repos/apache/activemq/issues/1277","id":2282302455,"node_id":"IC_kwDOAAMmM86ICSv3","user":{"login":"Bizman345","id":3988564,"node_id":"MDQ6VXNlcjM5ODg1NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3988564?v=4","gravatar_id":"","url":"https://api.github.com/users/Bizman345","html_url":"https://github.com/Bizman345","followers_url":"https://api.github.com/users/Bizman345/followers","following_url":"https://api.github.com/users/Bizman345/following{/other_user}","gists_url":"https://api.github.com/users/Bizman345/gists{/gist_id}","starred_url":"https://api.github.com/users/Bizman345/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bizman345/subscriptions","organizations_url":"https://api.github.com/users/Bizman345/orgs","repos_url":"https://api.github.com/users/Bizman345/repos","events_url":"https://api.github.com/users/Bizman345/events{/privacy}","received_events_url":"https://api.github.com/users/Bizman345/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T22:41:07Z","updated_at":"2024-08-10T22:41:07Z","author_association":"NONE","body":"Close this PR.\r\nThe new one - https://github.com/apache/activemq/pull/1279","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2282302455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2283182041","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2283182041","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2283182041,"node_id":"IC_kwDOAAMmM86IFpfZ","user":{"login":"namrata-ibm","id":21953668,"node_id":"MDQ6VXNlcjIxOTUzNjY4","avatar_url":"https://avatars.githubusercontent.com/u/21953668?v=4","gravatar_id":"","url":"https://api.github.com/users/namrata-ibm","html_url":"https://github.com/namrata-ibm","followers_url":"https://api.github.com/users/namrata-ibm/followers","following_url":"https://api.github.com/users/namrata-ibm/following{/other_user}","gists_url":"https://api.github.com/users/namrata-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namrata-ibm/subscriptions","organizations_url":"https://api.github.com/users/namrata-ibm/orgs","repos_url":"https://api.github.com/users/namrata-ibm/repos","events_url":"https://api.github.com/users/namrata-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/namrata-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T06:16:37Z","updated_at":"2024-08-12T06:16:37Z","author_association":"NONE","body":"Thank you @gmcdonald for helping with the infra.\r\n\r\n@mattrpav The above job triggered on s390x - failed with error:\r\n```\r\nJournalArchiveTest.testRecoveryOnArchiveFailure:122 » UnsupportedOperation The Security Manager is deprecated and will be removed in a future release\r\n```\r\nThis fails on s390x as tests were run with jdk22 whereas on amd, [jdk 17 is used](https://ci-builds.apache.org/job/ActiveMQ/job/ActiveMQ/job/main/474/) and the tests pass with a warning about The Security Manager:\r\n```\r\n[INFO] Running org.apache.activemq.store.kahadb.JournalArchiveTest\r\nWARNING: A terminally deprecated method in java.lang.System has been called\r\nWARNING: System::setSecurityManager has been called by org.apache.activemq.store.kahadb.JournalArchiveTest (file:/home/jenkins/jenkins-agent/workspace/ActiveMQ_ActiveMQ_main/activemq-kahadb-store/target/test-classes/)\r\nWARNING: Please consider reporting this to the maintainers of org.apache.activemq.store.kahadb.JournalArchiveTest\r\nWARNING: System::setSecurityManager will be removed in a future release\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.645 s -- in org.apache.activemq.store.kahadb.JournalArchiveTest\r\n```\r\nCould you please trigger a job with jdk 17?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2283182041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2285339179","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2285339179","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2285339179,"node_id":"IC_kwDOAAMmM86IN4Ir","user":{"login":"namrata-ibm","id":21953668,"node_id":"MDQ6VXNlcjIxOTUzNjY4","avatar_url":"https://avatars.githubusercontent.com/u/21953668?v=4","gravatar_id":"","url":"https://api.github.com/users/namrata-ibm","html_url":"https://github.com/namrata-ibm","followers_url":"https://api.github.com/users/namrata-ibm/followers","following_url":"https://api.github.com/users/namrata-ibm/following{/other_user}","gists_url":"https://api.github.com/users/namrata-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namrata-ibm/subscriptions","organizations_url":"https://api.github.com/users/namrata-ibm/orgs","repos_url":"https://api.github.com/users/namrata-ibm/repos","events_url":"https://api.github.com/users/namrata-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/namrata-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-13T04:55:21Z","updated_at":"2024-08-13T04:55:21Z","author_association":"NONE","body":"The latest build for s390x is passing, Thank you @mattrpav!\r\nhttps://ci-builds.apache.org/job/ActiveMQ/job/ActiveMQ/job/main/479/","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2285339179/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2285702670","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2285702670","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2285702670,"node_id":"IC_kwDOAAMmM86IPQ4O","user":{"login":"gmcdonald","id":287517,"node_id":"MDQ6VXNlcjI4NzUxNw==","avatar_url":"https://avatars.githubusercontent.com/u/287517?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcdonald","html_url":"https://github.com/gmcdonald","followers_url":"https://api.github.com/users/gmcdonald/followers","following_url":"https://api.github.com/users/gmcdonald/following{/other_user}","gists_url":"https://api.github.com/users/gmcdonald/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcdonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcdonald/subscriptions","organizations_url":"https://api.github.com/users/gmcdonald/orgs","repos_url":"https://api.github.com/users/gmcdonald/repos","events_url":"https://api.github.com/users/gmcdonald/events{/privacy}","received_events_url":"https://api.github.com/users/gmcdonald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-13T08:46:13Z","updated_at":"2024-08-13T08:46:13Z","author_association":"NONE","body":"awesome","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2285702670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2294028618","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2294028618","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2294028618,"node_id":"IC_kwDOAAMmM86IvBlK","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T19:14:38Z","updated_at":"2024-08-16T19:14:38Z","author_association":"NONE","body":"> Yes, a base class that contains the lookup method to unwrap the destination to get to the root (real) destination that can be used by VirtualTopic and MappedQueueFilter.\r\n> \r\n> ie BaseVirtualDestination(Inteceptor|Filter)\r\n\r\nsounds good! done","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2294028618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2294954600","html_url":"https://github.com/apache/activemq/pull/1281#issuecomment-2294954600","issue_url":"https://api.github.com/repos/apache/activemq/issues/1281","id":2294954600,"node_id":"IC_kwDOAAMmM86Iyjpo","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-17T19:32:33Z","updated_at":"2024-08-17T19:32:33Z","author_association":"CONTRIBUTOR","body":"You probably need to re-run the tests. It seems to fail due to flakiness.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2294954600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2298212408","html_url":"https://github.com/apache/activemq/pull/1285#issuecomment-2298212408","issue_url":"https://api.github.com/repos/apache/activemq/issues/1285","id":2298212408,"node_id":"IC_kwDOAAMmM86I-_A4","user":{"login":"ggkochanski","id":8193600,"node_id":"MDQ6VXNlcjgxOTM2MDA=","avatar_url":"https://avatars.githubusercontent.com/u/8193600?v=4","gravatar_id":"","url":"https://api.github.com/users/ggkochanski","html_url":"https://github.com/ggkochanski","followers_url":"https://api.github.com/users/ggkochanski/followers","following_url":"https://api.github.com/users/ggkochanski/following{/other_user}","gists_url":"https://api.github.com/users/ggkochanski/gists{/gist_id}","starred_url":"https://api.github.com/users/ggkochanski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ggkochanski/subscriptions","organizations_url":"https://api.github.com/users/ggkochanski/orgs","repos_url":"https://api.github.com/users/ggkochanski/repos","events_url":"https://api.github.com/users/ggkochanski/events{/privacy}","received_events_url":"https://api.github.com/users/ggkochanski/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-20T07:57:02Z","updated_at":"2024-08-20T07:57:02Z","author_association":"NONE","body":"Some examples per threshold of this metric from real life implementation:\r\n\r\n![image](https://github.com/user-attachments/assets/c2e1a1a9-db3b-4b4e-8d0e-e1147073f7a5)\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2298212408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2298665843","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2298665843","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2298665843,"node_id":"IC_kwDOAAMmM86JAttz","user":{"login":"namrata-ibm","id":21953668,"node_id":"MDQ6VXNlcjIxOTUzNjY4","avatar_url":"https://avatars.githubusercontent.com/u/21953668?v=4","gravatar_id":"","url":"https://api.github.com/users/namrata-ibm","html_url":"https://github.com/namrata-ibm","followers_url":"https://api.github.com/users/namrata-ibm/followers","following_url":"https://api.github.com/users/namrata-ibm/following{/other_user}","gists_url":"https://api.github.com/users/namrata-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namrata-ibm/subscriptions","organizations_url":"https://api.github.com/users/namrata-ibm/orgs","repos_url":"https://api.github.com/users/namrata-ibm/repos","events_url":"https://api.github.com/users/namrata-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/namrata-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-20T11:49:53Z","updated_at":"2024-08-20T11:49:53Z","author_association":"NONE","body":"@mattrpav can we enable regular s390x builds ? The last s390x job took similar time as Intel job to pass.\r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2298665843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302455494","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2302455494","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2302455494,"node_id":"IC_kwDOAAMmM86JPK7G","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-21T16:06:34Z","updated_at":"2024-08-21T16:06:34Z","author_association":"CONTRIBUTOR","body":"@tabish121 - Do you have any thoughts on this PR (or know who else would know?)\r\n\r\nI'm not too familiar with the UTF-8 encoding stuff or the history of why we custom rolled the encoding. Obviously changing anything with the encoding utility is a high risk change so I want to make sure we don't break things (ie make sure we can still read old stuff stored in KahaDB as i think it uses the same utilities).\r\n\r\nI'm open to either using the changes here or the JDK implementation if we can get that to work (like I quickly added a test in my branch https://github.com/cshannon/activemq/commit/e68021d33bbc1396d7e72083ee17fd00b620e374 , although it's not quite workign all the way as i noted). The main thing is making sure it's correct and we don't introduce a bug","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302455494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302514843","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2302514843","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2302514843,"node_id":"IC_kwDOAAMmM86JPZab","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-21T16:34:43Z","updated_at":"2024-08-21T16:34:43Z","author_association":"CONTRIBUTOR","body":"> @tabish121 - Do you have any thoughts on this PR (or know who else would know?)\r\n> \r\n> I'm not too familiar with the UTF-8 encoding stuff or the history of why we custom rolled the encoding. Obviously changing anything with the encoding utility is a high risk change so I want to make sure we don't break things (ie make sure we can still read old stuff stored in KahaDB as i think it uses the same utilities).\r\n\r\nI think one reason that a custom versions was created is that there isn't any tooling in the JDK to get the encoded size without actually encoding it, which requires a buffer sized to the expected output encoding size so to allow the openwire encoder to not have to guess (possibly more than once) the code was created.  We do something similar in the AMQP codec in proton-j for this same reason. I think the broker uses this API everywhere an openwire message has its string encoded or decoded so it should be safe but I guess you might need to audit that to be certain.\r\n\r\nAt a glance the changes seem okay, although it has been awhile since I did this sort of thing.  \r\n\r\n> \r\n> I'm open to either using the changes here or the JDK implementation if we can get that to work (like I quickly added a test in my branch [cshannon@e68021d](https://github.com/cshannon/activemq/commit/e68021d33bbc1396d7e72083ee17fd00b620e374) , although it's not quite workign all the way as i noted). The main thing is making sure it's correct and we don't introduce a bug\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302514843/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302718069","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2302718069","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2302718069,"node_id":"IC_kwDOAAMmM86JQLB1","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-21T18:33:54Z","updated_at":"2024-08-21T18:33:54Z","author_association":"CONTRIBUTOR","body":"I don't think my branch trying to use the JDK will necessarily work based on what @tabish121 pointed out for encoding, and on the decoding side there seems to be issues with compatibility. (probably the same problem seen with the Stomp conversion)\r\n\r\n@azotcsit - can you explain a bit about your changes and how they were in terms of compatibility with things encoded with the existing/old encoder? Specifically for 4-byte unicode because i'm sure it works fine with 3 byte. This will probably need some tests written to demonstrate the compatibility as well.\r\n\r\nI tried testing writing a string with 4 byte unicode (the same one in the unit test in this PR) with the old/existing encoder and then decoding it using the JDK UTF-8 decoder in my branch and it breaks. What's interesting is things decode fine with the modified method in this PR to decode. What's even more interesting to me is that even though the existnig code is only supposed to handle 3 byte unicode, i tried testing writing/reading the 4 byte unicode string and it worked (which I guess there's a bug or some other special handling in the custom code)\r\n\r\nSo I'm curious what the big differences are between the JDK version and the modified version in this PR. It's critical to make sure things will be able communicate across versions if sending 4 byte unicode. For example, any old messages in a data store would need to be able to be decoded still after upgrade and another example could be old clients with the old encoding logic sending messages with 4 byte unicode to a broker that has been updated.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302718069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302726857","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2302726857","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2302726857,"node_id":"IC_kwDOAAMmM86JQNLJ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-21T18:39:39Z","updated_at":"2024-08-21T18:39:39Z","author_association":"CONTRIBUTOR","body":"Oh and something I should point out for anyone that looked at my branch, I noticed there's an [unused](https://github.com/cshannon/activemq/commit/e68021d33bbc1396d7e72083ee17fd00b620e374#diff-1a5b28d9d02ca1bd9d8c9c08c3111a03de1c5765850f824a8778cfc632404376L213) allocated buffer that needs to be removed in DataByteArrayOutputStream that has been there since 2017\r\n\r\nLooks like it was introduced as part of https://issues.apache.org/jira/browse/AMQ-6651","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2302726857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2305477143","html_url":"https://github.com/apache/activemq/pull/1286#issuecomment-2305477143","issue_url":"https://api.github.com/repos/apache/activemq/issues/1286","id":2305477143,"node_id":"IC_kwDOAAMmM86JasoX","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-22T19:26:12Z","updated_at":"2024-08-22T19:26:12Z","author_association":"CONTRIBUTOR","body":"so re-reading what you wrote, you said it applies to a DLQ which would be an edge case but your change seems like it changes the behavior for every consumer and every queue and not just DLQs which we would not want.\r\n\r\nIf the goal is to simply be able to browse the DLQ and preventing not being able to read messages that were previously exceeding the redelivery policy then for your DLQ consumer can you simply disable the redelivery policy? Seems like a simple solution.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2305477143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2306307575","html_url":"https://github.com/apache/activemq/pull/1238#issuecomment-2306307575","issue_url":"https://api.github.com/repos/apache/activemq/issues/1238","id":2306307575,"node_id":"IC_kwDOAAMmM86Jd3X3","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-23T05:14:42Z","updated_at":"2024-08-23T05:14:42Z","author_association":"CONTRIBUTOR","body":"Messed up branch history due to outdated branch and wrong operation with git.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2306307575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307393555","html_url":"https://github.com/apache/activemq/pull/1286#issuecomment-2307393555","issue_url":"https://api.github.com/repos/apache/activemq/issues/1286","id":2307393555,"node_id":"IC_kwDOAAMmM86JiAgT","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-23T16:12:00Z","updated_at":"2024-08-23T16:14:35Z","author_association":"CONTRIBUTOR","body":"@cshannon the updated test has the full repro scenario. \r\n\r\ncommit: a7df4ca485859a7817a717b852667519ce875c0f\r\n\r\nThe issue comes down to:\r\n\r\n1. Should a browser send a poison ack if the message reaches max redelivery count and treat the browse as a delivery?\r\n\r\nCurrently, ActiveMQMessageConsumer _does_ send a poison ack. The problem with that is it creates two messages, as the original stays on the source queue (dlq or otherwise) AND a message to a DLQ (or .DLQ.DLQ when browsing a .DLQ).\r\n\r\nMy argument is that browser should _not_ send a poison ack if the max redelivery count is reached.\r\n\r\nNote: This _only_ occurs if QueueBrowser is created off of a transacted session.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307393555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307425808","html_url":"https://github.com/apache/activemq/pull/1286#issuecomment-2307425808","issue_url":"https://api.github.com/repos/apache/activemq/issues/1286","id":2307425808,"node_id":"IC_kwDOAAMmM86JiIYQ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-23T16:32:19Z","updated_at":"2024-08-23T16:32:19Z","author_association":"CONTRIBUTOR","body":"If you don't want to create the poison ack then couldn't you simply disable the redelivery policy when browsing the DLQ since it's an edge case? This seems like a client side config issue because you are setting that policy....so just don't set it when browsing the DLQ.\r\n\r\nConsumers (including browsers) are designed to process the messages and check things like the redelivery counter or even expiration.  A browser should not increment the redelivery counter, but I don't see how checking that counter and sending a poison ack is any different than checking expiration and expiring a message which it will do. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307425808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307543705","html_url":"https://github.com/apache/activemq/pull/1285#issuecomment-2307543705","issue_url":"https://api.github.com/repos/apache/activemq/issues/1285","id":2307543705,"node_id":"IC_kwDOAAMmM86JilKZ","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-23T17:49:06Z","updated_at":"2024-08-23T17:49:06Z","author_association":"CONTRIBUTOR","body":"I have started a capability to put additional statistics behind a config flag, so adding new metrics such as lastMessageTimestamp, lastMessageId, etc.. do not add computation overhead to all queues by default to all users.\r\n\r\nThe statistics broker update should wait to follow the work done for the core capability.\r\n\r\nThe field names should be consistent across all APIs and functions. There are other requests to add deeper observability fields -- firstEnqueue, lastEnqueue, firstDequeue, etc.. so 'lastMessageTimestamp' as a field name is not specific enough to meet all the requests.\r\n\r\nref: [AMQ-9426]\r\n\r\nThe initial work for the feature is here: https://github.com/apache/activemq/pull/1156","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2307543705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2309353953","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2309353953","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2309353953,"node_id":"IC_kwDOAAMmM86JpfHh","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-26T05:33:17Z","updated_at":"2024-08-26T05:33:17Z","author_association":"CONTRIBUTOR","body":"Thanks to everyone for the comments! They were very helpful!\r\n\r\n@cshannon \r\n> So something needs fixing but I was just curious if using the built in JDK support might be a better option for maintainability going forward.\r\n\r\nThanks for pointing this out! I checked https://issues.apache.org/jira/browse/AMQ-8122 ticket; I totally agree with the points mentioned in this ticket. So I re-wrote the existing test and split it to separate scenarios for 1,2,3,4 bytes characters.\r\n\r\n> I'm open to either using the changes here or the JDK implementation if we can get that to work (like I quickly added a test in my branch https://github.com/cshannon/activemq/commit/e68021d33bbc1396d7e72083ee17fd00b620e374 , although it's not quite workign all the way as i noted). The main thing is making sure it's correct and we don't introduce a bug\r\n\r\nI totally support moving to standard Java utilities/implementation. The only reason I had not done that initially - I thought that we wanted to minimize amount of changes. But since community seems to be open to getting rid of the custom implementation, I'd be glad to migrate to the standard implementation.\r\n\r\n@tabish121 \r\n> We do something similar in the AMQP codec in proton-j for this same reason.\r\n\r\nCould you please share a link to the corresponding codebase, so I can explore it. I'm not sure it is necessary, but I might find something that could be missed in this PR.\r\n\r\n> which requires a buffer sized to the expected output encoding size so to allow the openwire encoder to not have to guess (possibly more than once) the code was created.\r\n\r\nI had not found a standard method for calculating the encoded size, so I kept the custom implementation for that. The rest, I moved to standard methods. It should be still compatible with all existing protocols.\r\n\r\n@cshannon\r\n\r\n> I tried testing writing a string with 4 byte unicode (the same one in the unit test in this PR) with the old/existing encoder and then decoding it using the JDK UTF-8 decoder in my branch and it breaks. What's interesting is things decode fine with the modified method in this PR to decode. \r\n\r\nIt is expected for the JDK UTF-8 decoder to fail as the existing encoder does not support 4-bytes characters. But the modified logic in the first commit should also fail to read data written by the existing encoder. Could you please double check this? I believe it did not work for me.\r\n\r\n> What's even more interesting to me is that even though the existnig code is only supposed to handle 3 byte unicode, i tried testing writing/reading the 4 byte unicode string and it worked (which I guess there's a bug or some other special handling in the custom code)\r\n\r\nYes, this is tricky! If the old/existing logic is used for both writing and reading, then it works even for 4-byte characters. In fact, 3-bytes logic serializes 4-bytes data incorrectly, but since it reads data back (and expects incorrect bytes), it works.\r\n\r\n> So I'm curious what the big differences are between the JDK version and the modified version in this PR. \r\n\r\nIdeally, there should be no difference. In fact, I changed custom logic to the standard JDK methods and everything seems to be working the same way.\r\n\r\n> It's critical to make sure things will be able communicate across versions if sending 4 byte unicode. For example, any old messages in a data store would need to be able to be decoded still after upgrade and another example could be old clients with the old encoding logic sending messages with 4 byte unicode to a broker that has been updated.\r\n\r\nThis is a very great point! I think the current changes are not backward-compatible. I'll give a few rounds of testing to backward-compatibility to make sure there is a problem. Most probably, it will require to develop some additional logic for that. Could you please point me to some code where there is some compatibility-related logic. I'd like to understand how this type of problems are handled currently.\r\n\r\n---\r\n\r\nSummary for the second commit:\r\n* replaced custom serialization/deserialization logic with standard JDK methods\r\n* improved `DataByteArrayInputStreamTest.testNonAscii()` as per https://issues.apache.org/jira/browse/AMQ-8122\r\n\r\nNext steps:\r\n* test current logic for compatibility between JMS and STOMP protocols\r\n* test compatibility for old client connected to new server\r\n* test compatibility for new client connected to old server\r\n* test compatibility for persisted messages after upgrade\r\n* further development based on testing results and PR comments\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2309353953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311204044","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2311204044","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2311204044,"node_id":"IC_kwDOAAMmM86JwizM","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-26T22:19:01Z","updated_at":"2024-08-26T22:19:01Z","author_association":"CONTRIBUTOR","body":"@azotcsit - Here is the link to the protonj code where they have a custom impl https://github.com/apache/qpid-proton-j/blob/main/proton-j/src/main/java/org/apache/qpid/proton/codec/WritableBuffer.java\r\n\r\nI think the idea is you don't know the length using the built in JDK version so this gets the length to allocate the buffer size first. I believe protonj uses the JDK though for decoding even if using a custom impl for encoding.\r\n\r\n@tabish121 - does that sound right?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311204044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311222596","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2311222596","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2311222596,"node_id":"IC_kwDOAAMmM86JwnVE","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-26T22:32:47Z","updated_at":"2024-08-26T22:32:47Z","author_association":"CONTRIBUTOR","body":"> @azotcsit - Here is the link to the protonj code where they have a custom impl https://github.com/apache/qpid-proton-j/blob/main/proton-j/src/main/java/org/apache/qpid/proton/codec/WritableBuffer.java\r\n> \r\n> I think the idea is you don't know the length using the built in JDK version so this gets the length to allocate the buffer size first. I believe protonj uses the JDK though for decoding even if using a custom impl for encoding.\r\n> \r\n> @tabish121 - does that sound right?\r\n\r\nSounds right, the codec doesn't want to incur overhead of writing into buffers and later copying them into the resulting output buffer so it does the encode itself directly, but uses the JDK to decode the string by providing a slice that provides the limit to the JDK on which bytes comprise the encoded string.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311222596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311244331","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2311244331","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2311244331,"node_id":"IC_kwDOAAMmM86Jwsor","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-26T22:51:48Z","updated_at":"2024-08-26T22:51:48Z","author_association":"CONTRIBUTOR","body":"I haven't had a change to look at all the changes yet but wanted to respond to a few comments:\r\n\r\n> Yes, this is tricky! If the old/existing logic is used for both writing and reading, then it works even for 4-byte characters. In fact, 3-bytes logic serializes 4-bytes data incorrectly, but since it reads data back (and expects incorrect bytes), it works.\r\n> \r\n\r\nThis is pretty much what I was assuming, that the current code works because the decoding handles the incorrect format, otherwise I didn't see how it could be working.\r\n\r\n> This is a very great point! I think the current changes are not backward-compatible. I'll give a few rounds of testing to backward-compatibility to make sure there is a problem. Most probably, it will require to develop some additional logic for that. Could you please point me to some code where there is some compatibility-related logic. I'd like to understand how this type of problems are handled currently.\r\n\r\nI'm not sure if we really have anything to work for compatibility for something like this because it's a bug and not designed. For OpenWire, the version is negotiated so old versions of clients/brokers can communicate by using the same version. \r\n\r\nTo handle it I thought of 3 quick ways but all seem pretty terrible but figured I'd list them anyways:\r\n1. We just fix it but only apply to a major version and say it's incompatible but this is not really practical because one of the core parts of OpenWire is old clients should be able to communicate. So I don't think this is a good idea.\r\n2. We provide a way to make the fix optional, maybe a flag to fall back to the old logic. This also seems like a bad idea though because we'd either have to make the default the old buggy way (and no one would change it)...or if the default is the new fixed way then there's a risk of breaking if someone sends data that needs 4 byte encoding which may or may not be rare depending on the use case. \r\n3. We fix it and then just try and handle errors automatically and fall back. For example, if on deserialization it blows up maybe we try using the old logic. I feel like this might work only sometimes because it requires an exception to be thrown but I assume it could be possible for things to fail in such a way where it doesn't error and just ends up with the wrong result which is not detectable and much worse. It also requires keeping around all the old logic which isn't great.\r\n\r\nAbout the only thing I can think of that might work and be reliable would be to generate a new OpenWire version and for the new version the marshaller will just use the fixed UTF-8 encoding/decoding. This works for the datastore as well as KahaDB also tracks the openwrie version used to store. This method still requires keeping around the old broken logic as well but at least if we negotiated the new version we would know the client could support it. Although as I type this it makes me wonder about other non-java clients. I'm wondering if the C++ client or .NET clients (for example) are currently broken if they properly handle UTF-8 encoding already.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311244331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311258403","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2311258403","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2311258403,"node_id":"IC_kwDOAAMmM86JwwEj","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-26T23:04:46Z","updated_at":"2024-08-26T23:07:17Z","author_association":"CONTRIBUTOR","body":"@cshannon a couple of brainstorms from your ideas:\r\n\r\nWhat about a blend of a few things?\r\n\r\n1. WireFormat flag to track the behavior change for older versions:\r\nlegacyUTF8EncodingEnabled = true (default in 6.x )\r\n\r\n2. New OpenWire version bump that implements the new change by default\r\n\r\n3. In ActiveMQ 7.x, we either drop the old OpenWire protocol versions (or move them to openwire-legacy to allow users to optionally add them back in), and/or toggle the legacyUTF8EncodingEnabled to 'false' by default\r\n\r\nAn advantage of using a new OpenWire version is that the non-Java clients could add the specific test when adding support for the new rev.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2311258403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313728021","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2313728021","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2313728021,"node_id":"IC_kwDOAAMmM86J6LAV","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-27T23:06:40Z","updated_at":"2024-08-27T23:06:40Z","author_association":"CONTRIBUTOR","body":"@mattrpav - I think something like that with OpenWire may work but still need to figure out the exact details.\r\n\r\nI checked the CPP andNMS clients and they have the same logic/bug, so another advantage of tying the fix to a new OpenWire version is those clients will not break since we would keep the existing broken logic for old openwire.\r\n\r\nhttps://github.com/apache/activemq-cpp/blob/d6f76ede90d21b7ee2f0b5d4648e440e66d63003/activemq-cpp/src/main/decaf/io/DataOutputStream.cpp#L272-L339\r\n\r\nhttps://github.com/apache/activemq-nms-api/blob/93eacbe7a258518cd5f12642c62d28aed0d6d1bc/src/nms-api/Util/EndianBinaryWriter.cs#L200\r\n\r\nSomething else as I was looking at openwire that looks fishy and may suffer the same issue is this: https://github.com/apache/activemq/blob/e45ee4aae5b49986750d5a2feb171f36cf432fca/activemq-client/src/main/java/org/apache/activemq/openwire/v12/BaseDataStreamMarshaller.java#L308-L342 \r\n\r\nSo we may need to fix the marshallers. There's also the issue that we need to use the new OpenWire project as the current generation doesn't work unless you use JDK 8 and 5.x version (which we could do and cherry pick). The new OpenWire project may not be quite ready yet and also has common marshalling code for all versions so that might be a problem if we fix the bug in BaseDataStreamMarshaller in that project for the old versions.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313728021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313738960","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2313738960","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2313738960,"node_id":"IC_kwDOAAMmM86J6NrQ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-27T23:16:20Z","updated_at":"2024-08-27T23:16:20Z","author_association":"CONTRIBUTOR","body":"@azotcsit and @mattrpav and @tabish121  - \r\n\r\nSo I'm starting to think, what if we are thinking about this backwards? \r\n\r\nThe entire ecosystem around ActiveMQ has been modified when encoding strings as UTF-8, including the C++ and NMS and Java clients and broker to use the same modified UTF-8 encoding. The encoding/decoding is not standard UTF-8 but is a modified version of course because it only uses 3 bytes and doesn't work correctly with 4 byte encoding the \"standard\" UTF-8 way.\r\n\r\nBut what if that is ok? Everything works just fine with the modified encoding as long as you use the same encoding logic and decoding logic and don't try and mix it like STOMP does (ie don't use the jdk encoder that uses 4 bytes). I verified this by testing the provided example with the emojis. It works just fine with the current encoder and decoder.\r\n\r\nSo you could actually argue that the bug here is not with the modified encoding/decoding itself as there's nothing saying we can't do it that way.\r\n\r\nGoing back to it being backwards...what if the bug is actually in STOMP? We've been assuming the bug is the encoder on the OpenWire side but in reality the more I think about it the ACTUAL bug seems to be that STOMP uses the JDK encoder/decoder and not the modified version. I think the MUCH simpler solution here is we leave everything as it is since it works and  we update the STOMP protocol that uses the JDK 8 and normal UTF-8 encoding to instead using the modified encoding utility which should solve the entire issue.\r\n\r\nUnless the modified encoder/decoder would actually result in not being able to decode correctly (which seems to not be the case as long as they match) I think it's fine to keep it and just fix STOMP.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313738960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313740187","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2313740187","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2313740187,"node_id":"IC_kwDOAAMmM86J6N-b","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-27T23:17:45Z","updated_at":"2024-08-27T23:17:45Z","author_association":"CONTRIBUTOR","body":"@cshannon good catch on the tight marshaller. Moving the encoding logic to a UTF8Util or similar probably a good step to catch these locations and centralize. We could then include the legacy handling as an overload method.\r\n\r\nDraft steps:\r\n1. Create new OpenWire version with support for full length utf8 strings\r\n2. Update existing OpenWire code generation out-of-tree using JDK 8 and ActiveMQ 5\r\n3. Update WireFormat to support the optional flag to perform legacy utf8 handling\r\n\r\nDocumentation notes:\r\n\r\nFor applications that need old and new handling with the new OpenWire version in the same broker, they would need to configure separate transport connectors. One with the legacy utf8 encoding configured via wireformat config flag and another one that supports the new option. Older OpenWire versions just 'get' the old utf8 string handling.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313740187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313768493","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2313768493","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2313768493,"node_id":"IC_kwDOAAMmM86J6U4t","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-27T23:53:17Z","updated_at":"2024-08-28T12:15:32Z","author_association":"CONTRIBUTOR","body":"To illustrate my last point about fixing stomp, here is a quick proof of concept in a [branch](https://github.com/cshannon/activemq/commits/stomp-modified-utf8/) that just modifies the Stomp frame to decode using the write utility (we would need to modify the parts of the code that encode elsewhere).\r\n\r\nhttps://github.com/cshannon/activemq/commit/2885b713cd58ceb7c2543629112e809bef0a3490\r\n\r\n**Edit:** The translation is done in `JmsFrameTranslator` and `LegacyFrameTranslator` classes so those would need to be analyzed for this so what needs to be done.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313768493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313785899","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2313785899","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2313785899,"node_id":"IC_kwDOAAMmM86J6ZIr","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T00:13:47Z","updated_at":"2024-08-28T00:13:47Z","author_association":"CONTRIBUTOR","body":"One last thought on changing STOMP... I haven't looked at the exact STOMP translator in detail but I should point out that we would need to make sure we use the correct encoding depending on which direction things are going. A normal STOMP client would use regular UTF-8 encoding.\r\n\r\nSo I'm wondering if this would cause extra overhead but it needs to be investigated. When sending messages to a STOMP client, we would need to decode using the ActiveMQ modified logic and then re-encode using the JDK UTF-8 version. And when receiving from a client we would need decode using the JDK standard UTF 8 version and re-encode back into bytes using the modified ActiveMQ logic so this could add an extra processing step depending on how this works. But we may not care for STOMP anyways.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2313785899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315277363","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2315277363","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2315277363,"node_id":"IC_kwDOAAMmM86KAFQz","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T13:09:46Z","updated_at":"2024-08-28T17:15:57Z","author_association":"CONTRIBUTOR","body":"I took a look a bit more today and I think I identified the source of the bugs:\r\n\r\nBug with `Stomp -> AMQ`: https://github.com/apache/activemq/blob/e45ee4aae5b49986750d5a2feb171f36cf432fca/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/LegacyFrameTranslator.java#L54-L65\r\n\r\n**Edit:** `AMQ -> Stomp` is broken in one case and works in another. It works if compressed as it [translates](https://github.com/apache/activemq/blob/e45ee4aae5b49986750d5a2feb171f36cf432fca/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/LegacyFrameTranslator.java#L116) back to text already in one case but is broken in [another](https://github.com/apache/activemq/blob/e45ee4aae5b49986750d5a2feb171f36cf432fca/activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/LegacyFrameTranslator.java#L112) case when not compressed. \r\n\r\nIn my proof of concept, it changes `getBody()` in stomp frame as I just tried something quickly but that is not the right spot to change it. By the time we set data on a `StompFrame`, we should make sure that it is proper UTF-8 encoding, so that original getBody() method is fine.\r\n\r\nThe actual issue is just making sure that we are always doing the following when converting:\r\n\r\n```\r\nStomp Frame -> decode UTF-8 to String -> encode with modified UTF-8 -> set on ActiveMQ message\r\nActiveMQ message -> decode modified UTF-8 to String -> encode with standard UTF-8 -> set on Stomp frame\r\n```\r\n\r\nIn the example above, it's wrong because it's trying to take a short cut (probably for performance) by using the already existing encoding when creating the AMQ message when sending using Stomp and setting the content body. To fix it, we need to make sure we always go back to a string first and re-encode.\r\n\r\nWe could still potentially try and change the encoding for future OpenWire versions, but I think it's tricky because the OpenWire objects themselves like ActiveMQTextMessage, handle the encoding/decoding of the data by [calling](https://github.com/apache/activemq/blob/e45ee4aae5b49986750d5a2feb171f36cf432fca/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQTextMessage.java#L91) off to the utility. So I'm not sure how that would work because the objects are not tied to a specific open wire version, that's independent of the encoding so it would not know which version of the encoder to use.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315277363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315853731","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2315853731","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2315853731,"node_id":"IC_kwDOAAMmM86KCR-j","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T17:01:00Z","updated_at":"2024-08-28T17:01:00Z","author_association":"CONTRIBUTOR","body":"I opened up a PR which I think is a better solution, at least in the short term. https://github.com/apache/activemq/pull/1290\r\n\r\ni think if we want to change the encoding format to standard UTF-8 that could still happen but should be done as a separate issue and would need to be part as an OpenWire version upgrade and is a much larger effort so may not be worth it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315853731/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315915166","html_url":"https://github.com/apache/activemq/pull/1290#issuecomment-2315915166","issue_url":"https://api.github.com/repos/apache/activemq/issues/1290","id":2315915166,"node_id":"IC_kwDOAAMmM86KCg-e","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T17:36:11Z","updated_at":"2024-08-28T17:36:11Z","author_association":"CONTRIBUTOR","body":"Something else is I didn't look to see if the conversion is correct for other protocols such as AMQP or MQTT. We should probably look at that too and apply the same or similar fix if needed. Also, we should check things like Websockets although websockets should just delegate to the same conversion logic I would think for STOMP/MQTT.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315915166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315963408","html_url":"https://github.com/apache/activemq/pull/1290#issuecomment-2315963408","issue_url":"https://api.github.com/repos/apache/activemq/issues/1290","id":2315963408,"node_id":"IC_kwDOAAMmM86KCswQ","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T18:04:14Z","updated_at":"2024-08-28T18:04:14Z","author_association":"CONTRIBUTOR","body":"Change seems reasonable to me.  The idea that you need to change the openwire bits might be going to far given the expectation is that those bits are using modified UTF8 and has been for ages.  What really matters is the protocols on the periphery which are less likely to be expecting modified UTF8 vs the standard UTF8 encoding like AMQP.\r\n\r\nFor AMQP the proton-j bits will be doing that work to encode and decode and should only be populating the ActiveMQ message types with the decoded String content on ingress and then encoding the Strings from TextMessage and message properties as they move out of the broker (If the transformer is configured to 'jms').  \r\n\r\nFor MQTT the protocol is a binary encoding and as far as I'm aware there is nothing internal that's creating TextMessage views of those MQTT messages so that should be safe (probably want to check for some weird option that does though). ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2315963408/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2316071122","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2316071122","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2316071122,"node_id":"IC_kwDOAAMmM86KDHDS","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T19:10:11Z","updated_at":"2024-08-28T19:10:11Z","author_association":"CONTRIBUTOR","body":"AMQ-8398 has been resolved and closed after merging #1290 \r\n\r\nIf you still want to pursue this, then a new Jira should be open as this is a much more complex issue. But honestly I'm not really inclined to make any changes at this point unless we can show there's an issue with the encoding/decoding because of how wide spread the existing logic is. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2316071122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317422844","html_url":"https://github.com/apache/activemq/pull/1172#issuecomment-2317422844","issue_url":"https://api.github.com/repos/apache/activemq/issues/1172","id":2317422844,"node_id":"IC_kwDOAAMmM86KIRD8","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-29T11:49:09Z","updated_at":"2024-08-29T11:49:09Z","author_association":"CONTRIBUTOR","body":"ARTEMIS-4937 reminded me to ask this question as I forgot, have you tried benchmarking this all or trying to verify we won't run into performance issues with pinning? I know your PR mentions refactoring but it hasn't been done and synchronized blocks are used all over the place. So I assume this will suffer from that for now, but it of course depends if it's a real issue but something we should communicate if it is.\r\n\r\nLooks like at least the issue is on it's way to being solved (hopefully for the next LTS release): https://mail.openjdk.org/pipermail/loom-dev/2024-May/006632.html","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317422844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317462596","html_url":"https://github.com/apache/activemq/pull/1172#issuecomment-2317462596","issue_url":"https://api.github.com/repos/apache/activemq/issues/1172","id":2317462596,"node_id":"IC_kwDOAAMmM86KIaxE","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-29T12:06:56Z","updated_at":"2024-08-29T12:06:56Z","author_association":"CONTRIBUTOR","body":"If testing shows there are issues with performance/pinning (and I'm sure there are) we may want to wait to release this as experimental or not, it would defeat the purpose of releasing it. Or at the very least have a big warning etc.\r\n\r\nI personally don't think we should go around and just start messing with replacing a bunch of synchronized blocks just because of this. While we do need to fix the locking and synchronization in the broker, that is a major effort and needs to be well planned and is non-trival and not something that would likely happen in a 6.x release as it would be nice to modernize things for 7.x. And because there's a fix coming in the JDK (hopefully with the 25 LTS release) we could just wait for that. \r\n\r\nOther projects like Caffeine are [waiting](https://github.com/ben-manes/caffeine/issues/1468) for the fix as well. \r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317462596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317498051","html_url":"https://github.com/apache/activemq/pull/1172#issuecomment-2317498051","issue_url":"https://api.github.com/repos/apache/activemq/issues/1172","id":2317498051,"node_id":"IC_kwDOAAMmM86KIjbD","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-29T12:21:24Z","updated_at":"2024-08-29T12:21:24Z","author_association":"CONTRIBUTOR","body":"@cshannon agree. Whether it is called “tech preview” or “experimental” is not a big deal to me. \r\n\r\nThis first pass is about getting some modules so unit/itests and profiling work can begin. Having a module allows other contributors start looking at it as well. This is sufficiently complex to get going, there is no user “accidentally” turns this on in production. \r\n\r\nI will post test tool commands and results before merging any of this. \r\n\r\nAs far as refactoring goes, I agree. I don’t think any wholesale search+replace of synchronized is a safe approach for stability. I was thinking about modernization of the code base, and there are plenty of extension points we could leverage to test new code paths that are more VT-friendly using new impls vs refactor-in-place. \r\n\r\nTransportConnector\r\nPersistenceAdapter\r\nQueueFactory (new idea to return different queue impls based on policy entry)\r\n.. etc\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317498051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317560930","html_url":"https://github.com/apache/activemq/pull/1172#issuecomment-2317560930","issue_url":"https://api.github.com/repos/apache/activemq/issues/1172","id":2317560930,"node_id":"IC_kwDOAAMmM86KIyxi","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-29T12:49:06Z","updated_at":"2024-08-29T12:49:17Z","author_association":"CONTRIBUTOR","body":"The problem here is the stated goals you just listed argue for NOT releasing this. Releases are for delivering to end users, but the goal here is not that. The goals are for profiling, testing, unit tests and for other contributors to get involved.\r\n\r\nThe more I think about this the more I think it's just a really bad idea to deliver something that is completely untested and not even close to ready and likely has actual problems to end users.\r\n\r\nInstead i think a better approach is what we did on Accumulo when we had our long running \"elasticity\" branch. We can create a branch for this work in repo that way others can contribute and we can work on the feature until it's closer to being ready.\r\n\r\n1. We should create a new branch (call it something like virtual-threads or whatever you want) and use that as the basis of this work.\r\n2. We can keep it up to date by periodically merging main into the branch (merge only, no rebases as we don't want to break history)\r\n3. Developers can open up Pull Requests against this new branch for virtual thread changes so that we can work on pieces at a time and merge them in as they are done.\r\n4. When it's ready, we merge this branch back into main.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317560930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317628563","html_url":"https://github.com/apache/activemq/pull/1172#issuecomment-2317628563","issue_url":"https://api.github.com/repos/apache/activemq/issues/1172","id":2317628563,"node_id":"IC_kwDOAAMmM86KJDST","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-29T13:14:41Z","updated_at":"2024-08-29T13:14:41Z","author_association":"CONTRIBUTOR","body":"So I will say that maintaining another branch can be a bit of a pain so I think the other option I would be ok with if we want to release this now would be to just improve the documentation a lot. \r\n\r\nThe feature is of course marked as a tech preview and experimental but it's not super clear as to the drawbacks or warnings if you try and use it. This [page](https://activemq.apache.org/components/classic/documentation/virtual-threads) only currently lists benefits and why you would want to use it so it's kind of almost tempting an end user to want to turn it on prematurely. \r\n\r\nSo I think maybe the following:\r\n1. Update the [documentation](https://activemq.apache.org/components/classic/documentation/virtual-threads) page to talk about more about the current state and how far a long the implementation is. We should make it clear it's just for testing and evaluation  and basically define why it's a Tech Preview and experimental.\r\n2. The page has a benefits section but we could also add a section on potential problems and warnings for now.\r\n3. Update all the Javadocs for the new classes to give information on potential warnings and pitfalls. They are marked with the experimental annotation but there's not a lot of information as to why.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2317628563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2322958044","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2322958044","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2322958044,"node_id":"IC_kwDOAAMmM86KdYbc","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-31T16:34:50Z","updated_at":"2024-08-31T16:34:50Z","author_association":"CONTRIBUTOR","body":"Thanks @cshannon!\r\n\r\nI gave a round of testing with your fix. It seems to be working fine:\r\n```\r\n./bin/activemq consumer --destination queue://test --messageCount 1                                    \r\nINFO: Loading '/Users/alekseizotov/opt/apache-activemq-5.18.5//bin/env'\r\nINFO: Using java '/Users/alekseizotov/opt/jdk/current/Contents/Home/bin/java'\r\nACTIVEMQ_HOME: /Users/alekseizotov/opt/apache-activemq-5.18.5\r\nACTIVEMQ_BASE: /Users/alekseizotov/opt/apache-activemq-5.18.5\r\nACTIVEMQ_CONF: /Users/alekseizotov/opt/apache-activemq-5.18.5/conf\r\nACTIVEMQ_DATA: /Users/alekseizotov/opt/apache-activemq-5.18.5/data\r\n INFO | Connecting to URL: failover://tcp://localhost:61616 as user: null\r\n INFO | Consuming queue://test\r\n INFO | Sleeping between receives 0 ms\r\n INFO | Running 1 parallel threads\r\n INFO | Successfully connected to tcp://localhost:61616\r\n INFO | consumer-1 wait until 1 messages are consumed\r\n INFO | consumer-1 Received 🙃🙂\r\n INFO | consumer-1 Consumed: 1 messages\r\n INFO | consumer-1 Consumer thread finished\r\n```\r\n\r\nThe current UTF-8 encoding/decoding is strictly speaking incorrect, however, since it is consistent and encapsulated on server side (not exposed to clients), I do not see any real harm of having it. So, I totally support the idea of https://github.com/apache/activemq/pull/1290 fix. Thank you for doing that!\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2322958044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2323393463","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2323393463","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2323393463,"node_id":"IC_kwDOAAMmM86KfCu3","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-01T15:24:29Z","updated_at":"2024-09-01T15:26:26Z","author_association":"CONTRIBUTOR","body":"Hmm.. PR failed with the same error. This change helped in my local, but not on CI server.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2323393463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2324675331","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2324675331","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2324675331,"node_id":"IC_kwDOAAMmM86Kj7sD","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-02T12:44:21Z","updated_at":"2024-09-02T12:44:21Z","author_association":"MEMBER","body":"@azotcsit I don't think it's related to #1290 : the test is flaky for a while afair.\r\nI can take a look as well.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2324675331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2325828711","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2325828711","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2325828711,"node_id":"IC_kwDOAAMmM86KoVRn","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-03T07:48:30Z","updated_at":"2024-09-03T07:48:30Z","author_association":"MEMBER","body":"The test failure seems indeed related to client still connected:\r\n\r\n```\r\n\r\n[ERROR] org.apache.activemq.transport.stomp.StompNIOSSLTest.testSend4ByteUtf8StompToStomp -- Time elapsed: 0.123 s <<< FAILURE!\r\n--\r\n  | 11779 | 06:56:59 AM | org.junit.ComparisonFailure:\r\n  | 11780 | 06:56:59 AM | expected:<[!®౩🙂]> but was:<[jakarta.jms.InvalidClientIDException: Broker: localhost - Client: ID:asf928.gq1.ygridcore.net-39889-1725339354177-3:33 already connected from tcp://127.0.0.1:37786\r\n```\r\n\r\nLet me try on my machine.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2325828711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326591876","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2326591876","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2326591876,"node_id":"IC_kwDOAAMmM86KrPmE","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-03T13:54:38Z","updated_at":"2024-09-03T13:54:38Z","author_association":"MEMBER","body":"@azotcsit weird, it works without problem on my machine (even without this fix). I'm trying to increate the maven threads to see if it's race condition.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326591876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326632416","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2326632416","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2326632416,"node_id":"IC_kwDOAAMmM86KrZfg","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-03T14:11:33Z","updated_at":"2024-09-03T14:11:33Z","author_association":"CONTRIBUTOR","body":"There is probably just a race condition based on timing, I agree it's not related to the changes I made but an existing issue to resolve with the tests","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326632416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326655388","html_url":"https://github.com/apache/activemq/pull/1284#issuecomment-2326655388","issue_url":"https://api.github.com/repos/apache/activemq/issues/1284","id":2326655388,"node_id":"IC_kwDOAAMmM86KrfGc","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-03T14:20:40Z","updated_at":"2024-09-03T14:21:11Z","author_association":"CONTRIBUTOR","body":"> The current UTF-8 encoding/decoding is strictly speaking incorrect, however, since it is consistent and encapsulated on server side (not exposed to clients), I do not see any real harm of having it. So, I totally support the idea of #1290 fix. Thank you for doing that!\r\n\r\nYeah, it's definitely incorrect in terms of proper UTF-8 encoding but it still works fine as pointed out since it's encapsulated and it would be a major breaking change that would affect every OpenWire client that has been released for the last however many (probably 20+) years.\r\n\r\nI'm not against changing the encoding, but it just has to be done in a major version and a new OpenWire version. So it might be something to target for AMQ 7.x. I guess it could be done earlier if we create a new OpenWire version but seems better to just target for a major version because it's working fine as it is.\r\n\r\nThe super annoying thing is that we will have to keep support for the existing non-standard/incorrect encoding no matter what in order to support older OpenWire clients if we do decide to change it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2326655388/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329754052","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2329754052","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2329754052,"node_id":"IC_kwDOAAMmM86K3TnE","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-04T18:49:21Z","updated_at":"2024-09-04T18:49:21Z","author_association":"CONTRIBUTOR","body":"The root cause is dangling sockets that are not being properly closed by some tests and those sockets contain data on the wire, and it seems like on restart the frames get sent along to the broker. I noticed multiple connection attempts being created by previous tests.\r\n\r\nI am going to push up a fix in a minute.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329754052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329807517","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2329807517","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2329807517,"node_id":"IC_kwDOAAMmM86K3gqd","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-04T19:22:57Z","updated_at":"2024-09-04T19:22:57Z","author_association":"CONTRIBUTOR","body":"Hmm nevermind, something else weird is still going on. I thought I had it fixed but it's not with the NIO ssl tests, even closing sockets is still an issue so I don't think it's that. I'm still trying to figure it out...it's super weird but clearly there's another test interfering because if I run the new test in a loop by itself it doesn't have issues.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329807517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329830803","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2329830803","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2329830803,"node_id":"IC_kwDOAAMmM86K3mWT","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-04T19:37:39Z","updated_at":"2024-09-04T19:37:39Z","author_association":"CONTRIBUTOR","body":"This StompNIOSSLTest was breaking every time for me locally and now passes after I pushed this fixed to main: https://github.com/apache/activemq/commit/f5fb6c91b2f302459ab13b247630d4869ed8ce75\r\n\r\nThe receive for the CONNECTED frame was happening out of order, fixing that and now the test seems to pass reliably.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2329830803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2330209001","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2330209001","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2330209001,"node_id":"IC_kwDOAAMmM86K5Crp","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-04T21:53:05Z","updated_at":"2024-09-04T21:53:05Z","author_association":"CONTRIBUTOR","body":"Good catch @cshannon ! \r\n\r\n> This StompNIOSSLTest was breaking every time for me locally\r\n\r\nIt is interesting as the test worked fine in my local.\r\n\r\nThis is the only change from this PR that still seems to be useful: https://github.com/apache/activemq/pull/1292/files#diff-258971427cd19a158ba8586ba4977966b86d26771749b265355e7781463fc9e8R106. Do you think we can/should merge that?\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2330209001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2331889388","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2331889388","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2331889388,"node_id":"IC_kwDOAAMmM86K_c7s","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-05T14:44:31Z","updated_at":"2024-09-05T14:44:31Z","author_association":"CONTRIBUTOR","body":"Even though the build failed, the failure is not related to these changes: https://ci-builds.apache.org/job/ActiveMQ/job/ActiveMQ/job/PR-1291/2/cloudbees-pipeline-explorer/#line-11324-11325","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2331889388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2331894417","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2331894417","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2331894417,"node_id":"IC_kwDOAAMmM86K_eKR","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-05T14:45:36Z","updated_at":"2024-09-05T14:45:36Z","author_association":"CONTRIBUTOR","body":"@cshannon could you please take a look at this PR when you have a chance.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2331894417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2332319465","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2332319465","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2332319465,"node_id":"IC_kwDOAAMmM86LBF7p","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-05T17:51:21Z","updated_at":"2024-09-05T17:51:21Z","author_association":"CONTRIBUTOR","body":"The call to the teardown for super makes sense, if you want to create a quick PR for that you can or I can make a quick commit, up to you.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2332319465/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]