[{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2547666361","html_url":"https://github.com/apache/openwhisk/issues/5477#issuecomment-2547666361","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5477","id":2547666361,"node_id":"IC_kwDOAxoOzc6X2k25","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-17T07:13:25Z","updated_at":"2024-12-17T07:13:25Z","author_association":"NONE","body":"> I'm encountering an issue after replacing ElasticSearchDurationCheckerProvider. Could you please let me know if you've faced this problem and how you resolved it?fatal: [controller0]: FAILED! => {\"cache_control\": \"must-revalidate\", \"changed\": false, \"connection\": \"close\", \"content\": \"\", \"content_length\": \"58\", \"content_type\": \"application/json\", \"date\": \"Wed, 02 Oct 2024 11:08:35 GMT\", \"msg\": \"Status code was 404 and not [200]: HTTP Error 404: Object Not Found\", \"redirected\": false, \"server\": \"CouchDB/2.3.1 (Erlang OTP/19)\", \"status\": 404, \"url\": \"http://172.17.0.1:5984/whisk_local_subjects\", \"x_couch_request_id\": \"fcb33f3516\", \"x_couchdb_body_time\": \"0\"}\r\n> \r\n> Status code was 404 and not [200]: HTTP Error 404: Object Not Found\r\n> \r\n> PLAY RECAP ****************************************************************************************************************************************************************************************************************************** controller0 : ok=12 changed=4 unreachable=0 failed=1\r\n\r\nYou need to go to go to`/openwhisk/ansible/environments/local/group_vars/all` and add this:\r\n`db_activation_backend: ElasticSearch`\r\n","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2547666361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2563412576","html_url":"https://github.com/apache/openwhisk/issues/5524#issuecomment-2563412576","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5524","id":2563412576,"node_id":"IC_kwDOAxoOzc6YypJg","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-27T07:31:34Z","updated_at":"2024-12-27T07:31:34Z","author_association":"MEMBER","body":"If you are using ElasticSearchActivation, they would be stored in ES.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2563412576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2564984302","html_url":"https://github.com/apache/openwhisk/issues/5525#issuecomment-2564984302","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5525","id":2564984302,"node_id":"IC_kwDOAxoOzc6Y4o3u","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-30T03:18:05Z","updated_at":"2024-12-30T03:18:05Z","author_association":"NONE","body":"## Issue Resolved\r\n\r\nThe issue has been resolved successfully. The problem was related to how the invoker image was specified and deployed across multiple machines. Here’s the detailed explanation:\r\n\r\n## Root Cause\r\n\r\nThe problem occurred because:\r\n1. Deployment Across Multiple Machines: I have a setup with two machines – one for the controller and one for the invoker. During the deployment process, there was a mismatch in how the invoker image was configured and deployed.\r\n2. Temporary Ansible Configuration Change: At some point, I modified the ansible/roles/invoker/tasks/deploy.yml file to force the invoker to use the nightly tag from the Docker registry:\r\n```\r\nimage: \"{{ docker_registry }}openwhisk/invoker:nightly\"\r\n```\r\nThis change caused the deployment process to always pull the nightly image from the registry, ignoring any locally built or customized images.\r\n\r\n## Solution\r\n\r\nTo resolve the issue, I followed these steps:\r\n1. Reverted the Ansible Configuration:\r\nI updated the ansible/roles/invoker/tasks/deploy.yml file to use the correct dynamic image configuration:\r\n```\r\nimage: \"{{ docker_registry }}{{ docker.image.prefix }}/invoker:{{ 'cov' if (coverage_enabled) else docker.image.tag }}\"\r\n```\r\nThis ensures that the invoker deployment respects the tag specified in the docker.image.tag variable.\r\n\r\n2. Built the Invoker Image Locally:\r\nOn the machine where the invoker image was being built (controller machine), I ran:\r\n```\r\n./gradlew :core:invoker:clean :core:invoker:distDocker\r\n```\r\n3. Transferred the Image to the Invoker Machine:\r\n- I exported the built image as invoker.tar:\r\n- docker save -o invoker.tar whisk/invoker:latest\r\n- Then transferred it to the invoker machine:\r\n```\r\nscp invoker.tar user@invoker-machine:~\r\n```\r\n4. Loaded the Image on the Invoker Machine:\r\nOn the invoker machine, I loaded the image:\r\n```\r\ndocker load -i ~/invoker.tar\r\n```\r\n5. Redeployed OpenWhisk:\r\nFinally, I redeployed OpenWhisk to ensure the correct image was used:\r\n```\r\ncd ansible\r\nsudo ansible-playbook -i environments/local openwhisk.yml\r\n```\r\n## Outcome\r\n\r\nAfter completing the above steps:\r\n1. The invoker is now using the correct image.\r\n2. My code changes are reflected in the invoker logs, confirming that the updated image is being used.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2564984302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2564986243","html_url":"https://github.com/apache/openwhisk/issues/5525#issuecomment-2564986243","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5525","id":2564986243,"node_id":"IC_kwDOAxoOzc6Y4pWD","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-30T03:22:29Z","updated_at":"2024-12-30T03:22:29Z","author_association":"NONE","body":"## Question: Simplifying Invoker Deployment in Distributed Setup\r\n\r\nIn a distributed OpenWhisk setup (separate machines for Controller and Invokers), updating the Invoker source code requires building the Docker image on the Controller machine, exporting it, transferring it to all Invoker machines, and then loading it.\r\n\r\nIs there a simpler way to handle Invoker updates? For example:\r\n- Can Ansible automate the image transfer?\r\n- Is it possible to build the image directly on Invoker machines?\r\n\r\nLooking for best practices to streamline this process. Thank you!","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2564986243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565051167","html_url":"https://github.com/apache/openwhisk/issues/5525#issuecomment-2565051167","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5525","id":2565051167,"node_id":"IC_kwDOAxoOzc6Y45Mf","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-30T05:49:56Z","updated_at":"2024-12-30T05:49:56Z","author_association":"NONE","body":"I resolved the issue by adding the following tasks to ansible/roles/invoker/tasks/deploy.yml:\r\n```yml\r\n- name: Save invoker Docker image\r\n  command: docker save -o /tmp/invoker.tar whisk/invoker:latest\r\n  delegate_to: localhost\r\n  run_once: true\r\n\r\n- name: Copy invoker image to all Invoker machines\r\n  copy:\r\n    src: /tmp/invoker.tar\r\n    dest: /tmp/invoker.tar\r\n\r\n- name: Load invoker Docker image on Invoker machines\r\n  command: docker load -i /tmp/invoker.tar\r\n```\r\nThis worked successfully, and the updated Invoker image was deployed across all machines.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565051167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565076548","html_url":"https://github.com/apache/openwhisk/issues/5525#issuecomment-2565076548","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5525","id":2565076548,"node_id":"IC_kwDOAxoOzc6Y4_ZE","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-30T06:28:48Z","updated_at":"2024-12-30T06:28:48Z","author_association":"MEMBER","body":"You can use a private registry to share images in a distributed environment.\r\n`dockerRegistry` options is available while building images.\r\n\r\nhttps://github.com/apache/openwhisk/tree/master/gradle#build","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565076548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565133163","html_url":"https://github.com/apache/openwhisk/issues/5525#issuecomment-2565133163","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5525","id":2565133163,"node_id":"IC_kwDOAxoOzc6Y5NNr","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-30T07:48:45Z","updated_at":"2024-12-30T07:48:45Z","author_association":"NONE","body":"Thank you! I’ve learned something new, and I really appreciate it!","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2565133163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2590974066","html_url":"https://github.com/apache/openwhisk/pull/5527#issuecomment-2590974066","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5527","id":2590974066,"node_id":"IC_kwDOAxoOzc6abyBy","user":{"login":"bdoyle0182","id":11879547,"node_id":"MDQ6VXNlcjExODc5NTQ3","avatar_url":"https://avatars.githubusercontent.com/u/11879547?v=4","gravatar_id":"","url":"https://api.github.com/users/bdoyle0182","html_url":"https://github.com/bdoyle0182","followers_url":"https://api.github.com/users/bdoyle0182/followers","following_url":"https://api.github.com/users/bdoyle0182/following{/other_user}","gists_url":"https://api.github.com/users/bdoyle0182/gists{/gist_id}","starred_url":"https://api.github.com/users/bdoyle0182/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdoyle0182/subscriptions","organizations_url":"https://api.github.com/users/bdoyle0182/orgs","repos_url":"https://api.github.com/users/bdoyle0182/repos","events_url":"https://api.github.com/users/bdoyle0182/events{/privacy}","received_events_url":"https://api.github.com/users/bdoyle0182/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-14T19:49:02Z","updated_at":"2025-01-14T19:49:02Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2590974066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2591489009","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2591489009","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2591489009,"node_id":"IC_kwDOAxoOzc6advvx","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-15T02:12:27Z","updated_at":"2025-01-15T02:12:27Z","author_association":"MEMBER","body":"I don't think a prewarm start is slower than a cold start, at least not in my experience.\nMany factors affect performance, such as the number of inflight actions, the use of the scheduler component, whether the queue is already created (when the scheduler is used), and the performance of the docker, etc.\n\nIf you share more about your test setup, I can share the expected performance-impacting points.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2591489009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2591651091","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2591651091","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2591651091,"node_id":"IC_kwDOAxoOzc6aeXUT","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-15T04:55:18Z","updated_at":"2025-01-15T04:55:18Z","author_association":"NONE","body":"Hi! Thank you for your response!\nI did not use the FPCpoolBalancer, so I did not use the scheduler.\n# Prewarm Duration Discrepancy\n## Experiment Setup: \nI performed five separate experiments.\n1. Using ansible to deploy a new openwhisk service every time.\n2. Invoke the first action from a Prewarm container.\n3. Invoke subsequent actions from the same setup, but using different Prewarm containers.\n![Image](https://github.com/user-attachments/assets/fc686dc0-1861-446f-a636-b01cb2a28d85)\n## Observations:\n1. The first invocation consistently exhibited a higher duration compared to subsequent invocations, even though all were executed from Prewarm containers (not Cold Start or Warm Start).\n2. This discrepancy is primarily due to increased initialization time.\n\n## Hypotheses\nI guess it might have something to do with the File System and Linux Page Cache.\nSo I deployed Openwhisk one more time and performed five invocations from the same deployment. However, before each invocation, I cleared the system cache using the following command:\n```\nsudo sync; echo 3 > /proc/sys/vm/drop_caches\n```\n## New Observations: \nAs shown in the figure below , each invocation took similar time ( 1600ms for the ”TN” action), regardless of whether it was the first or a subsequent invocation. This duration matched the first invocation times of the first invocation from the previous experiments.\n\n![Image](https://github.com/user-attachments/assets/eb40d1fe-c91d-47a3-b586-23f3339173f4)\n\n#  Prewarm vs. Cold Start\n## Experiment Setup:\nA comparison was made between the Prewarm container’s first invocation duration and the Cold Start duration.\n## Observations:\nInitial observations suggested that Prewarm container initialization could occasionally be slower than Cold Start. However, further experiments revealed that this is not consistently the case. For example, the first Cold Start invocation of the ”TN” action occasionally reached durations of 2000ms or 1800ms, which exceeded the Prewarm container’s first invocation duration. So my previous discovery may only be an accidental phenomenon.\n\n# Question\nIs my hypothesis correct that the discrepancy in Prewarm container initialization time is caused by the absence of file system caching during the first invocation?\n\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2591651091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2593679347","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2593679347","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2593679347,"node_id":"IC_kwDOAxoOzc6amGfz","user":{"login":"bdoyle0182","id":11879547,"node_id":"MDQ6VXNlcjExODc5NTQ3","avatar_url":"https://avatars.githubusercontent.com/u/11879547?v=4","gravatar_id":"","url":"https://api.github.com/users/bdoyle0182","html_url":"https://github.com/bdoyle0182","followers_url":"https://api.github.com/users/bdoyle0182/followers","following_url":"https://api.github.com/users/bdoyle0182/following{/other_user}","gists_url":"https://api.github.com/users/bdoyle0182/gists{/gist_id}","starred_url":"https://api.github.com/users/bdoyle0182/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdoyle0182/subscriptions","organizations_url":"https://api.github.com/users/bdoyle0182/orgs","repos_url":"https://api.github.com/users/bdoyle0182/repos","events_url":"https://api.github.com/users/bdoyle0182/events{/privacy}","received_events_url":"https://api.github.com/users/bdoyle0182/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-15T18:37:11Z","updated_at":"2025-01-15T18:37:11Z","author_association":"CONTRIBUTOR","body":"The first invocation on an invoker will require pulling the runtime image used for the prewarm if don't have tooling to do this before running the invoker and downloading the function / action code from the db. The function code is then cached on the invoker for some period of time / x different functions are attempted to run on it. That is likely what you're seeing.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2593679347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2594106141","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2594106141","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2594106141,"node_id":"IC_kwDOAxoOzc6anusd","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-15T22:57:21Z","updated_at":"2025-01-15T22:57:21Z","author_association":"MEMBER","body":"Since he used Ansible to deploy OW, I believe images are already pulled on invoker machines.\nWhen it comes to the difference between two subsequent prewarm starts, along with what Brendan shared above, I also observed that each component needs to create a connection to the other as well. \nThat's the reason why I added explicit [warm-up steps](https://github.com/apache/openwhisk/blob/364ace7a7e670815aa0cf8fccb3de081fa3ad1b9/core/invoker/src/main/scala/org/apache/openwhisk/core/invoker/FPCInvokerReactive.scala#L425) when designing the scheduler.\nThe warming stage in each component uses [a non-existent action](https://github.com/apache/openwhisk/blob/364ace7a7e670815aa0cf8fccb3de081fa3ad1b9/common/scala/src/main/scala/org/apache/openwhisk/core/WarmUp.scala#L32), so it is not related to cache, but it does have effect to reduce the initial invocation time.\nSince there are less number of components with ShardingPoolBalancer, it might have less impact but I believe network connection would make a difference.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2594106141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2594577231","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2594577231","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2594577231,"node_id":"IC_kwDOAxoOzc6aphtP","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-16T05:38:12Z","updated_at":"2025-01-16T05:38:12Z","author_association":"NONE","body":"Hello! Thank you for your attention to this issue and your detailed explanation.\n\nI tried using a new scheduler, like the FPCPoolBalancer and the FunctionPullingContainerProxy/Pool, and conducted several deployments and experiments again. However, I still observed the same issue: the first prewarm invocation is significantly slower, while subsequent invocations from different prewarm containers are faster.\n\nAdditionally, I noticed that the duration of subsequent invocations from prewarm containers is slightly longer when using the scheduler compared to when the scheduler is not used.\n\nAnd I did observe warm-up logs in the system, such as the following:\n```\n[2025-01-16T05:12:55.996Z] [INFO] [#tid_sid_warmUp] [FPCInvokerReactive] Warm up scheduler <ByteString@92c1745a size=17 contents=\"whisk/scheduler/0\">.\n```\n\nDoes this indicate that the warm-up process is not working as intended?","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2594577231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2597061549","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2597061549","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2597061549,"node_id":"IC_kwDOAxoOzc6azAOt","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-16T22:47:45Z","updated_at":"2025-01-16T22:47:45Z","author_association":"MEMBER","body":"Yes, with the FPCPoolBalancer, a dedicated queue is dynamically created/deleted for each action.\nAt the very beginning, there would no queue for your action, and the PoolBalancer will try to create a queue. Activations are concurrently sent to the scheduler via Kafka. Once the queue is created, activations will be forwarded to the queue.\nThen the scheduler tries to create a container(s) for the given action. The number of containers to be created depends on the number of inflight activations, the average execution time of the action(in the past), etc. The queue(scheduler) considers those factors and periodically decides the number of containers to create(or not).\n\nOnce a container is created, it will access the queue to fetch activations and execute them repeatedly.\nSo the initial invocation is supposed to be slow because there is no a queue yet but subsequent invocation is much faster.\nThe queue is running for [10 minutes](https://github.com/apache/openwhisk/blob/master/ansible/group_vars/all#L545) by default even if there is no activation at all. After 10 minutes, it goes to the idle state and after another [10 minutes](https://github.com/apache/openwhisk/blob/master/ansible/group_vars/all#L547C15-L547C51), it stops. These are configurable and designed to keep them running to avoid too frequent queue creation/deletion.\nIt's a different aspect from the network-level \"warming up\".\n\nAs you can see, it could theoretically take longer because of the additional network hop, the queue component.\nBut in the real world, you have many concurrent requests and populating requests into a queue and consuming requests from the queue are working fully asynchronous. FPCPoolBalancer keeps sending requests to a queue while containers keep fetching requests as soon as they finish invocation. With ShardingPoolBalancer, the two parts are combined and performance is severely degraded when multiple actions are invoked. For more information, you can refer to [this document](https://cwiki.apache.org/confluence/display/OPENWHISK/New+architecture+proposal) and [my paper](https://ieeexplore.ieee.org/document/9499544).\n\nAside from this, how many invokers and prewarm containers did you use?\nWhat is the value of `userMemory` of your invokers?\nHow many concurrent activations did you make at a given time?\nI think there are still many things that possibly affect your result.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2597061549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2597507712","html_url":"https://github.com/apache/openwhisk/issues/5526#issuecomment-2597507712","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5526","id":2597507712,"node_id":"IC_kwDOAxoOzc6a0tKA","user":{"login":"HaoWang9909","id":111634164,"node_id":"U_kgDOBqdm9A","avatar_url":"https://avatars.githubusercontent.com/u/111634164?v=4","gravatar_id":"","url":"https://api.github.com/users/HaoWang9909","html_url":"https://github.com/HaoWang9909","followers_url":"https://api.github.com/users/HaoWang9909/followers","following_url":"https://api.github.com/users/HaoWang9909/following{/other_user}","gists_url":"https://api.github.com/users/HaoWang9909/gists{/gist_id}","starred_url":"https://api.github.com/users/HaoWang9909/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaoWang9909/subscriptions","organizations_url":"https://api.github.com/users/HaoWang9909/orgs","repos_url":"https://api.github.com/users/HaoWang9909/repos","events_url":"https://api.github.com/users/HaoWang9909/events{/privacy}","received_events_url":"https://api.github.com/users/HaoWang9909/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-17T06:09:46Z","updated_at":"2025-01-17T06:09:46Z","author_association":"NONE","body":"Thank you once again for your detailed explanation! The diagrams in your document and your paper have indeed given me a deeper understanding of how the scheduler operates.\n\nFrom your response, may I infer that I should focus more on the system’s concurrency handling capabilities rather than the slower first prewarm invocation? It seems that this initial delay is a necessary trade-off to achieve better concurrency performance, and thus, it is worthwhile in a concurrent context.\n\nIn my setup, I used 6 invokers, each with 2 prewarm containers.\nThe userMemory configuration for each invoker is 512MB.\nFor testing, I only ran a single activation.","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2597507712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2625631633","html_url":"https://github.com/apache/openwhisk/issues/5529#issuecomment-2625631633","issue_url":"https://api.github.com/repos/apache/openwhisk/issues/5529","id":2625631633,"node_id":"IC_kwDOAxoOzc6cf_WR","user":{"login":"style95","id":3447251,"node_id":"MDQ6VXNlcjM0NDcyNTE=","avatar_url":"https://avatars.githubusercontent.com/u/3447251?v=4","gravatar_id":"","url":"https://api.github.com/users/style95","html_url":"https://github.com/style95","followers_url":"https://api.github.com/users/style95/followers","following_url":"https://api.github.com/users/style95/following{/other_user}","gists_url":"https://api.github.com/users/style95/gists{/gist_id}","starred_url":"https://api.github.com/users/style95/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/style95/subscriptions","organizations_url":"https://api.github.com/users/style95/orgs","repos_url":"https://api.github.com/users/style95/repos","events_url":"https://api.github.com/users/style95/events{/privacy}","received_events_url":"https://api.github.com/users/style95/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2025-01-30T21:27:25Z","updated_at":"2025-01-30T21:27:25Z","author_association":"MEMBER","body":"That's because you didn't provide any codes to run, only the docker image.\n","reactions":{"url":"https://api.github.com/repos/apache/openwhisk/issues/comments/2625631633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]