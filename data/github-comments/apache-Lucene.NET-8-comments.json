[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212072","html_url":"https://github.com/apache/lucenenet/issues/272#issuecomment-624212072","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/272","id":624212072,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjA3Mg==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-09-30T17:17:53Z","updated_at":"2020-05-05T17:56:56Z","author_association":"NONE","body":"<p>Thanks for the report. Could you please provide a reproduction case, either in the form of an integration test or a console app?</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211944","html_url":"https://github.com/apache/lucenenet/issues/265#issuecomment-624211944","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/265","id":624211944,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTk0NA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-10T18:22:05Z","updated_at":"2020-05-05T17:56:40Z","author_association":"NONE","body":"<p>It is believed that IncrementToken() was being called after Dispose() because of a bug in the test framework that has been addressed. We need verification that this issue is no longer happening.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211926","html_url":"https://github.com/apache/lucenenet/issues/264#issuecomment-624211926","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/264","id":624211926,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTkyNg==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-20T18:25:17Z","updated_at":"2020-05-05T17:56:38Z","author_association":"NONE","body":"<p>I have opened a dialog with the NUnit team, trying to gauge whether we can get them to add the most important features we need, whether it will be entirely up to us to port the test runner and create our own Visual Studio / dotnet test adapters, or somewhere in the middle: <a href=\"https://github.com/nunit/nunit/issues/3405\" class=\"external-link\" rel=\"nofollow\">https://github.com/nunit/nunit/issues/3405</a></p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212076","html_url":"https://github.com/apache/lucenenet/issues/272#issuecomment-624212076","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/272","id":624212076,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjA3Ng==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-26T20:07:03Z","updated_at":"2020-05-05T17:56:56Z","author_association":"NONE","body":"<p>While having a thread safe collection would be ideal, that is not how it was implemented in Lucene. However, I took a look at the implementation of <tt>WeakDictionary</tt> and it is dissimilar to that of the <tt>java.util.WeakHashMap</tt> that was used in the OpenJDK. In particular the <tt>CleanIfNeeded()</tt> method moves the entries from one dictionary instance to another every time it is called, which is less than ideal.</p>\n\n<p>According to <a href=\"https://stackoverflow.com/a/2081664\" class=\"external-link\" rel=\"nofollow\">this StackOverflow answer</a>, it may be possible to use a <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2?redirectedfrom=MSDN&view=netframework-4.8\" class=\"external-link\" rel=\"nofollow\">ConditionalWeakTable<TKey,TValue></a> as a replacement.</p>\n\n<p>However, before it is attempted, it would be nice to have a reproduction case so it is possible to see whether we are indeed solving the issue or making it worse. Could you please provide one?</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212153","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212153","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212153,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE1Mw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-31T11:12:29Z","updated_at":"2020-05-05T17:57:04Z","author_association":"NONE","body":"<p>Hi Shad,</p>\n\n<p>we encountered the same issue about LurchTable reported by Axel, while using the facets on Xamarin iOS.</p>\n\n<p>If it can help, we've found this issue, where the same problem is discussed: <a href=\"https://github.com/mono/mono/issues/7016\" class=\"external-link\" rel=\"nofollow\">https://github.com/mono/mono/issues/7016</a></p>\n\n<p>The problem is due to the the use, in LurchTable, of some structs that implement some generic interfaces.<br/>\nIt seems that they tried to handle this situation in Mono, but actually it doesn't work yet.</p>\n\n<p>At the end of the discussion, they says here <a href=\"https://github.com/mono/sysdrawing-coregraphics/pull/24\" class=\"external-link\" rel=\"nofollow\">https://github.com/mono/sysdrawing-coregraphics/pull/24</a><br/>\n\"Replace LurchTable with much simpler LruCache.<br/>\nThe LurchTable was quite a complex code that was not necessary for the particular use. In fact it used so complex generics that it managed to break Mono AOT in some cases (mono/mono#7016).\" </p>\n\n<p>We tried the other fixes you proposed in the previous comments, but they didn't work.<br/>\nIt worked by replacing the structs in LurchTable with classes, but actually we don't know which other problems this can create, so I think this is not a good solution.</p>\n\n<p>Do you suggest any other solution?<br/>\nWe are available for further test.</p>\n<i>by ottaviani</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212159","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212159","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212159,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE1OQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-31T20:24:54Z","updated_at":"2020-05-05T17:57:47Z","author_association":"NONE","body":"<p>Stefano,</p>\n\n<p>Thanks for the report. We used to use <tt>LruCache</tt> (or some similar class) and it was compatible with the facet functionality, but we got some complaints about performance. <tt>LurchTable</tt> was found to perform much better (on Windows, anyway), primarily due to the locking contention that is present in <tt>LruCache</tt>. Therefore, using <tt>LruCache</tt> as-is for any platforms that fully support <tt>LurchTable</tt> is not an acceptable trade-off due to the performance penalty.</p>\n\n<p>Note that although no users have reported problems with it, this issue affects some parts of Lucene.Net.QueryParser in addition to Lucene.Net.Facet.</p>\n\n<p>I agree fixing the LRU cache is something that needs to be done but so far there hasn't been enough information provided for us to fix it without taking a performance hit. Of course, it would definitely help if our tests were setup to run on Xamarin.iOS so we have a way to confirm that any change has a positive effect, which is something that is currently up-for-grabs (see <a href=\"https://issues.apache.org/jira/browse/GH-633\" class=\"external-link\" rel=\"nofollow\">GH-633</a>). Adding testing support should be simpler to do now that we are setup on Azure DevOps via YAML configuration.</p>\n\n<p>If we cannot somehow patch <tt>LurchTable</tt> to make it work with Xamarin.iOS, the next best option would be to detect when we are running on Xamarin.iOS and swap the implementation to <tt>LruCache</tt> during initialization for only that case. I found some information <a href=\"https://stackoverflow.com/a/48260863\" class=\"external-link\" rel=\"nofollow\">on this StackOverflow answer</a> (which coincidentally is one that I also answered) that seems like it might be a way to detect that specific case, especially if you click through to the related documents. So, it seems there is a way to detect <tt>Xamarin</tt> and a way to detect <tt>Device.iOS</tt>, and hopefully combining the two methods should give us the specific behavior we need to provide this swap only in the case where it is needed.</p>\n\n<p>It would be extremely helpful if you could verify that the combination of the above methods will indeed detect only Xamarin.iOS and not trigger on Xamarin in general or iOS in general. It would be even more helpful if you could setup our tests to run on Xamarin.iOS and provide tests we can run that confirm the platform detection will work. Do note that the general place where we do platform detection is in <a href=\"https://github.com/apache/lucenenet/blob/5c434545b31e8131485e00657b37685610358677/src/Lucene.Net/Util/Constants.cs\" class=\"external-link\" rel=\"nofollow\">Lucene.Net.Util.Constants.cs</a>.</p>\n\n<p>The current thinking is to clean up all of our collections (including those that we have absorbed from 3rd parties) and make them into 1st class features that can be used by end users (see <a href=\"https://issues.apache.org/jira/browse/GH-616\" class=\"external-link\" rel=\"nofollow\">GH-616</a>). However, it goes beyond that - we have also absorbed a handful of Java-like types that really need to be polished and put into a separate, stable general library that can be utilized by Lucene.NET's dependencies to share interfaces, collections, and other compatibility functionality that hasn't yet debuted in the .NET ecosystem. We are sometimes running into issues where we cannot pass a type in library A to library B because there is no common interface in the BCL to pass it like there is in Java.</p>\n\n<p>While it would certainly be better to submit PRs and get the collection libraries up to speed as far as behavior, interfaces, and platform compatibility is concerned, I am becoming convinced that it is not likely going to happen. I <a href=\"https://github.com/sestoft/C5/issues/53\" class=\"external-link\" rel=\"nofollow\">reported back in 2016 to the maintainers of C5 that their sets don't support <tt>ISet<T></tt></a> and although they thought it might be a good idea to do, it still hasn't been done. I recently started working on a PR, but found that C5 would require breaking API changes to their dictionaries (or alternatively a compatibility wrapper) just to make them compatible with common collection interfaces in the BCL. Furthermore, they are already dropping support for .NET Framework 4.5 and .NET Standard 1.x. So, we are likely going to have to build our own library of collections in order to get the level of compatibility, stability, and most importantly end-user usability we will need.</p>\n\n<p>Anyway, any assistance that is provided to help us get to the bottom of this without it costing us dearly in terms of performance would be appreciated.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212164","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212164","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212164,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE2NA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T14:46:07Z","updated_at":"2020-05-05T17:57:05Z","author_association":"NONE","body":"<p>Hi Shad,</p>\n\n<p>a way to detect at runtime if the library is running on Xamarin.iOS is:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">\n<span class=\"code-keyword\">var</span> assembly = Assembly.GetEntryAssembly()?.GetReferencedAssemblies().FirstOrDefault(x => x.Name == <span class=\"code-quote\">\"Xamarin.iOS\"</span>);\n<span class=\"code-keyword\">return</span> assembly != <span class=\"code-keyword\">null</span>;</pre>\n</div></div>\n<p> </p>\n\n<p> </p>\n<i>by francescob</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553637226","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-553637226","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":553637226,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzYzNzIyNg==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T22:38:36Z","updated_at":"2019-11-13T22:38:36Z","author_association":"CONTRIBUTOR","body":"Hi @stevetemple thanks for this. The way that the docs are produced goes through quite a process of converting the docs from the java source to the .net source through various processes of transformation. In order to get this fixed we'll need to adjust the transformation process to make sure this is output correctly otherwise these changes will just get overwritten next time we build the docs.\r\n\r\nThat said, this is a great start for me to know what needs changing and to document how this process works. For this fix, we'll need to adjust this project: https://github.com/apache/lucenenet/tree/master/src/dotnet/tools/JavaDocToMarkdownConverter\r\n\r\nwhich is the tool that is run against the java source (zip output) https://github.com/apache/lucene-solr/releases/tag/releases%2Flucene-solr%2F4.8.0","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553637226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553638448","html_url":"https://github.com/apache/lucenenet/pull/232#issuecomment-553638448","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/232","id":553638448,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzYzODQ0OA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T22:42:51Z","updated_at":"2019-11-13T22:42:51Z","author_association":"CONTRIBUTOR","body":"Hi @stevetemple this is great! Like I mentioned in the other PR https://github.com/apache/lucenenet/pull/231 we'll need to find a way specifically to deal with code snippets when running the tool to transform from the Java source to the .net docs. This is on my todo list to figure out the best approach for this. \r\n\r\nI think what it will come down to is being able to parse out their inline code snippets during transformation and then looking for replacement snippets that exist in another file that we manage in our source that replaces it. Or something along those lines. \r\n\r\nThat part of the transform process isn't quite in place yet","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553638448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553640774","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-553640774","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":553640774,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzY0MDc3NA==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T22:50:26Z","updated_at":"2019-11-13T22:50:26Z","author_association":"CONTRIBUTOR","body":"Oh wow, I thought there was something odd about the docs. \r\n\r\nThis just got more fun... will take a look in the morning","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/553640774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211929","html_url":"https://github.com/apache/lucenenet/issues/264#issuecomment-624211929","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/264","id":624211929,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTkyOQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T14:24:48Z","updated_at":"2020-05-05T17:56:38Z","author_association":"NONE","body":"<p>After updating the test framework to utilize the <tt>NUnit.Framework.TestContext.CurrentContext.Random</tt> property, I noticed that random test failures now repeat reliably until the next build. Whether or not there is a way to lock in that behavior from one build to the next, this is probably adequate enough to avoid porting the entire RandomizedTesting framework.</p>\n\n<p>That said, it would probably make sense to create a new library with the random generators so they can be shared without a reference to our test framework and all of the dependencies that come with it. We should also migrate the extension methods for the <tt>Random</tt> class.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563217567","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-563217567","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":563217567,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzIxNzU2Nw==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-09T12:33:00Z","updated_at":"2019-12-09T12:33:00Z","author_association":"CONTRIBUTOR","body":"Have created another PR https://github.com/apache/lucenenet/pull/233 that should fix the namespaces that 404","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563217567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563261314","html_url":"https://github.com/apache/lucenenet/pull/232#issuecomment-563261314","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/232","id":563261314,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzI2MTMxNA==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-09T14:24:12Z","updated_at":"2019-12-09T14:24:12Z","author_association":"CONTRIBUTOR","body":"I started to look at this.\r\n\r\nI'm thinking we could have a folder structure that mirrors the javadoc one, and put files in there let's say codesample-1.cs and codesample-2.cs. We could then swap the first code sample with codesample-1.cs and 2nd with codesample-2.cs etc.\r\n\r\nThe 2 problems I see with this. The currently Html2Markdown version encodes `pre` as just exact markup rather than a code sample. So there is no way of spotting code samples post conversion. It needs to be done pre/during conversion. The latest Html2Markdown has a way of overriding the behaviour, upgrading to that and having code that jumps in and replaces `<pre class=\"prettyprint\"></pre>` samples should be possible. We could also then put in some sort of markup to indicate this is the original java code sample where a c# version can't be found.\r\n\r\nHow does that sound? I've seen a comment in the code somewhere saying the latest Html2Markdown breaks some conversion.\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563261314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563914429","html_url":"https://github.com/apache/lucenenet/pull/232#issuecomment-563914429","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/232","id":563914429,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzkxNDQyOQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T08:03:17Z","updated_at":"2019-12-10T08:03:17Z","author_association":"CONTRIBUTOR","body":"Hi @stevetemple I think if you would like to make a proof of concept/prototype to see how this could work it will be a good start. We will need to do something so any start on this would be good and then can iterate from there. IIRC the Html2Markdown latest version isn't an issue anymore ... but its been a while since i looked into it. \r\n\r\nI did recently update the docs converter to ensure that bold and italics were done correctly by implementing a custom `IScheme`, you can see the changes here https://github.com/apache/lucenenet/pull/230, the custom `IScheme` is here https://github.com/apache/lucenenet/pull/230/files#diff-45541bf79c42108aca6173ab1c872005\r\n\r\nI need to get that PR merged soon... just got too busy recently but should prob just merge","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563914429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563937999","html_url":"https://github.com/apache/lucenenet/pull/232#issuecomment-563937999","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/232","id":563937999,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzkzNzk5OQ==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T09:10:49Z","updated_at":"2019-12-10T09:10:49Z","author_association":"CONTRIBUTOR","body":"Well it seems like I've at least solved your TODO! \r\n\r\nI will try and get a prototype together today, I'll base it off the #230 branch. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/563937999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564891052","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-564891052","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":564891052,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDg5MTA1Mg==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T07:49:53Z","updated_at":"2019-12-12T07:49:53Z","author_association":"CONTRIBUTOR","body":"Great stuff @stevetemple , should this PR be closed then?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564891052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564891247","html_url":"https://github.com/apache/lucenenet/pull/233#issuecomment-564891247","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/233","id":564891247,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDg5MTI0Nw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T07:50:39Z","updated_at":"2019-12-12T07:50:39Z","author_association":"CONTRIBUTOR","body":"Looks good! I'll get a build running and see how it goes","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564891247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564966088","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-564966088","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":564966088,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk2NjA4OA==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T11:21:21Z","updated_at":"2019-12-12T11:21:21Z","author_association":"CONTRIBUTOR","body":"@Shazwazza I think there are two more things I've spotted which would be nice to get working before closing this as matching the output of the automated conversion:\r\n1. New paras appear to be starting with a space which messes up formatting following the list\r\n2. The code samples aren't getting tripple back ticked\r\n\r\nNow we're on latest Html2Markdown I think they will be trivial to solve","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564966088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564992350","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-564992350","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":564992350,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDk5MjM1MA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T12:46:06Z","updated_at":"2019-12-12T12:46:06Z","author_association":"CONTRIBUTOR","body":"OK, i uploaded the build output of the docs but i don't think it fixed the issues expected but maybe i did something wrong. I'll need to run locally and test too but won't be able to till next week.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/564992350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565000247","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-565000247","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":565000247,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTAwMDI0Nw==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T13:10:03Z","updated_at":"2019-12-12T13:10:03Z","author_association":"CONTRIBUTOR","body":"Oh, where did you upload them?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565000247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565003656","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-565003656","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":565003656,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTAwMzY1Ng==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T13:19:42Z","updated_at":"2019-12-12T13:19:42Z","author_association":"CONTRIBUTOR","body":"Just to the main docs site https://lucenenetdocs.azurewebsites.net/","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565003656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565004495","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-565004495","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":565004495,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NTAwNDQ5NQ==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-12T13:22:13Z","updated_at":"2019-12-12T13:22:13Z","author_association":"CONTRIBUTOR","body":"Oh that looks disappointly unchanged, even the namespace update hasn't happened","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/565004495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212167","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212167","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212167,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE2Nw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-16T19:04:11Z","updated_at":"2020-05-05T17:57:05Z","author_association":"NONE","body":"<p>Thanks for that.</p>\n\n<p>Although, I was able to <a href=\"https://github.com/csharptest/CSharpTest.Net.Collections/issues/16#issuecomment-564505408\" class=\"external-link\" rel=\"nofollow\">get a bit more information</a> about what specifically not working with <tt>LurchTable</tt>. It turns out that simply changing the <tt>AddInfo</tt> struct to a class will solve the problem. However, since doing so will likely negatively affect performance to some extent, I would like to try to find another solution.</p>\n\n<p>Could someone please attempt to resolve this by de-nesting the <tt>AddInfo</tt> struct, and changing its signature to the following?</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-c#\">\n<span class=\"code-keyword\">struct</span> AddInfo<TKey, TValue> : ICreateOrUpdateValue<TKey, TValue>\n</pre>\n</div></div>\n\n<p>Do note that I am working on getting beta00007 out within the next few days. We'd like to include a fix for this, if possible.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566363983","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-566363983","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":566363983,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NjM2Mzk4Mw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-17T03:28:34Z","updated_at":"2019-12-17T03:28:34Z","author_association":"CONTRIBUTOR","body":"yeah i think i must have deployed it incorrectly, i'll test, etc... this week","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566363983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212174","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212174","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212174,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE3NA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-17T09:30:44Z","updated_at":"2021-04-16T05:40:47Z","author_association":"NONE","body":"Hi Shad,\r\n\r\nI de-nested the struct AddInfo and Add2Info changing the signature:\r\n\r\n```c#\r\nstruct AddInfo<TKey, TValue> : ICreateOrUpdateValue<TKey, TValue>;\r\nstruct Add2Info<TKey, TValue> : ICreateOrUpdateValue<TKey, TValue>;\r\n```\r\n\r\nand it works on real device (ipad running iOS 13)\r\n\r\n\r\n<i>by berardi</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212180","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212180","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212180,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE4MA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-17T18:22:36Z","updated_at":"2020-05-05T17:57:06Z","author_association":"NONE","body":"<p>Thank you. I have pushed the patch <a href=\"https://github.com/apache/lucenenet/commit/4eb9e8d68cc18b10503e90241af995e03187dd06\" class=\"external-link\" rel=\"nofollow\">4eb9e8d68cc18b10503e90241af995e03187dd06</a> to the master branch.</p>\n\n<p>If you have a chance, please download the NuGet packages from <a href=\"https://dev.azure.com/LuceneNET-Temp/Lucene.NET/_build/results?buildId=530&view=artifacts&type=publishedArtifacts\" class=\"external-link\" rel=\"nofollow\">here</a> or build the source to try it again with <tt>Lucene.Net.Facet</tt>.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566829856","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-566829856","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":566829856,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NjgyOTg1Ng==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-18T01:49:22Z","updated_at":"2019-12-18T01:49:22Z","author_association":"CONTRIBUTOR","body":"@stevetemple ah it was because i just didn't re-run the docs migrator and commit the changes 🤦‍♂ I've done that now and things look much better. I've deployed those changes to the site  https://lucenenetdocs.azurewebsites.net/","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566829856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566933293","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-566933293","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":566933293,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NjkzMzI5Mw==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-18T08:39:45Z","updated_at":"2019-12-18T08:39:45Z","author_association":"CONTRIBUTOR","body":"That looks a look a lot better. Any idea how best to tackle method names being different casing between java and C# getTopGroups -> GetTopGroups etc.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/566933293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/567005551","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-567005551","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":567005551,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NzAwNTU1MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-18T12:08:09Z","updated_at":"2019-12-18T12:08:09Z","author_association":"CONTRIBUTOR","body":"Just FYI, the original idea behind the Javadoc to Markdown converter was to clean up the \"namespace\" documents to a level of around 80-90% and then do the rest of the work manually. Generally speaking, that would not include the code samples. The idea was that it would only be run one time per Lucene port to Lucene.NET manually, not be put into a pipeline.\r\n\r\nThat said, if you manage to get it to get it to port the documents to 100%, my hat's off to you. The code samples in the \"namespace\" documents are probably simple enough to do automation on by setting up specific rules. Short of that, we could probably rig up something with a hash code to alert us to when the code changes in the pipeline so they can be manually dealt with.\r\n\r\nOf course, in the code examples we should try to put our best foot forward. We have managed to take advantage of some of .NET's type initializers to significantly improve the readability/reduce verbosity of the code (for an example, the \"Add to the Index\" section of the [home page](https://lucenenet.apache.org/)), and we should try to make our documents reflect those changes rather than just a carbon copy of the Java code.\r\n\r\nSpeaking of which, the \"Construct a Query\" section on the home page could also be simplified from:\r\n\r\n```c#\r\n// search with a phrase\r\nvar phrase = new MultiPhraseQuery();\r\nphrase.Add(new Term(\"favoritePhrase\", \"brown\"));\r\nphrase.Add(new Term(\"favoritePhrase\", \"fox\"));\r\n```\r\n\r\nto: \r\n\r\n```c#\r\n// search with a phrase\r\nvar phrase = new MultiPhraseQuery\r\n{\r\n    new Term(\"favoritePhrase\", \"brown\"),\r\n    new Term(\"favoritePhrase\", \"fox\")\r\n};\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/567005551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/567014422","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-567014422","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":567014422,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NzAxNDQyMg==","user":{"login":"stevetemple","id":113788,"node_id":"MDQ6VXNlcjExMzc4OA==","avatar_url":"https://avatars.githubusercontent.com/u/113788?v=4","gravatar_id":"","url":"https://api.github.com/users/stevetemple","html_url":"https://github.com/stevetemple","followers_url":"https://api.github.com/users/stevetemple/followers","following_url":"https://api.github.com/users/stevetemple/following{/other_user}","gists_url":"https://api.github.com/users/stevetemple/gists{/gist_id}","starred_url":"https://api.github.com/users/stevetemple/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevetemple/subscriptions","organizations_url":"https://api.github.com/users/stevetemple/orgs","repos_url":"https://api.github.com/users/stevetemple/repos","events_url":"https://api.github.com/users/stevetemple/events{/privacy}","received_events_url":"https://api.github.com/users/stevetemple/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-18T12:37:29Z","updated_at":"2019-12-18T12:37:29Z","author_association":"CONTRIBUTOR","body":"I think we could get this pretty close. The code samples being the most difficult part. \r\n\r\nI agree that at some point it would make sense to say this is as good as it's going to get and switch to manual updates then a notification of something changed and put in a queue to review.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/567014422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211933","html_url":"https://github.com/apache/lucenenet/issues/264#issuecomment-624211933","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/264","id":624211933,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTkzMw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-25T21:08:44Z","updated_at":"2020-05-05T17:56:38Z","author_association":"NONE","body":"<p>Lowering priority of this and removing the 4.8.0 version, as it is not required for the Lucene.NET release. It might still be useful to do this someday, so I am keeping the issue open.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212184","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212184","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212184,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE4NA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-29T08:00:13Z","updated_at":"2020-05-05T17:57:06Z","author_association":"NONE","body":"<p>This should now be resolved in Lucene.NET 4.8.0-beta00007. Could someone please confirm the problem no longer exists?</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212078","html_url":"https://github.com/apache/lucenenet/issues/272#issuecomment-624212078","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/272","id":624212078,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjA3OA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-29T08:06:52Z","updated_at":"2020-05-05T17:56:56Z","author_association":"NONE","body":"<p>We have replaced WeakDictionary with ConditionalWeakTable in Lucene.NET 4.8.0-beta00007, but some of the APIs of ConditionalWeakTable that Lucene.NET requires are only available on .NET Standard 2.1.</p>\n\n<p>If you are using a platform that supports .NET Standard 2.1, could you please check out whether this change resolves the issue you are experiencing?</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571050447","html_url":"https://github.com/apache/lucenenet/pull/234#issuecomment-571050447","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/234","id":571050447,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTA1MDQ0Nw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-06T08:28:18Z","updated_at":"2020-01-06T08:28:18Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 you ok with this? it's just moving a proj","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571050447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571052460","html_url":"https://github.com/apache/lucenenet/pull/234#issuecomment-571052460","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/234","id":571052460,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTA1MjQ2MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-06T08:35:57Z","updated_at":"2020-01-06T08:35:57Z","author_association":"CONTRIBUTOR","body":"I don't see an issue. It would be good to have all of the doc build stuff in the same folder.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571052460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571076777","html_url":"https://github.com/apache/lucenenet/pull/234#issuecomment-571076777","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/234","id":571076777,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTA3Njc3Nw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-06T09:56:34Z","updated_at":"2020-01-06T09:56:34Z","author_association":"CONTRIBUTOR","body":"great, will merge (trying to get some of this docs work done this week)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571076777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571816066","html_url":"https://github.com/apache/lucenenet/pull/232#issuecomment-571816066","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/232","id":571816066,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTgxNjA2Ng==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-07T23:10:20Z","updated_at":"2020-01-07T23:10:20Z","author_association":"CONTRIBUTOR","body":"Just posting this link here so its not lost, this was a writeup about an idea of how to possibly handle code blocks going forward https://github.com/apache/lucenenet/pull/229#issuecomment-520831453\r\n\r\nI have some other ideas too but nothing concrete at the moment. \r\n\r\nAs I make more changes (see current WIP https://github.com/apache/lucenenet/pull/235) i'll try to get my head back into this challenge.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/571816066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574128082","html_url":"https://github.com/apache/lucenenet/pull/236#issuecomment-574128082","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/236","id":574128082,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDEyODA4Mg==","user":{"login":"Matt2843","id":11424782,"node_id":"MDQ6VXNlcjExNDI0Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/11424782?v=4","gravatar_id":"","url":"https://api.github.com/users/Matt2843","html_url":"https://github.com/Matt2843","followers_url":"https://api.github.com/users/Matt2843/followers","following_url":"https://api.github.com/users/Matt2843/following{/other_user}","gists_url":"https://api.github.com/users/Matt2843/gists{/gist_id}","starred_url":"https://api.github.com/users/Matt2843/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Matt2843/subscriptions","organizations_url":"https://api.github.com/users/Matt2843/orgs","repos_url":"https://api.github.com/users/Matt2843/repos","events_url":"https://api.github.com/users/Matt2843/events{/privacy}","received_events_url":"https://api.github.com/users/Matt2843/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T11:20:23Z","updated_at":"2020-01-14T11:20:23Z","author_association":"NONE","body":"Further testing shows that this fix may slow down single Lucene index writing. And the unmanaged resource gcHandle must be freed where neccessarry.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574128082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211705","html_url":"https://github.com/apache/lucenenet/issues/252#issuecomment-624211705","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/252","id":624211705,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTcwNQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T11:22:28Z","updated_at":"2020-05-05T17:57:48Z","author_association":"NONE","body":"<p>Hi Mathais,</p>\n\n<p>Thanks for the report and the PR.</p>\n\n<p>Correct me if I am wrong, but wouldn't a better fix for this to be to replace <a href=\"https://github.com/apache/lucenenet/blob/master/src/Lucene.Net/Util/WeakIdentityMap.cs\" class=\"external-link\" rel=\"nofollow\"><tt>WeakIdentityMap</tt></a> with the thread-safe <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2\" class=\"external-link\" rel=\"nofollow\"><tt>ConditionalWeakTable</tt></a>? We may still need to utilize <tt>IdentityWeakReference</tt>, but it would need to be a class since <tt>ConditionalWeakTable</tt> has a class constraint on <tt>TKey</tt>.</p>\n\n<p>Do note that Microsoft didn't expose the enumerator or the <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2.addorupdate\" class=\"external-link\" rel=\"nofollow\">AddOrUpdate</a> method of <tt>ConditionalWeakTable</tt> until .NET Standard 2.1. However, Lucene requires one or the other in every (other) place where <tt>ConditionalWeakTable</tt> would be useful (specifically, as a replacement for <a href=\"https://github.com/apache/lucenenet/blob/01d65bb1409cb34a8bc1444b67dd1ab011d6d4fa/src/Lucene.Net/Support/WeakDictionary.cs\" class=\"external-link\" rel=\"nofollow\"><tt>Lucene.Net.Support.WeakDictionary</tt></a>). An effort to port <tt>ConditionalWeakTable</tt> from .NET Standard 2.1 back to .NET Standard 2.0 (<a href=\"https://issues.apache.org/jira/browse/GH-636\" title=\"Port ConditionalWeakTable from .NET Core 3.x to .NET Standard 2.0\" class=\"issue-link\" data-issue-key=\"GH-636\">GH-636</a>) is currently underway, but stalled on <a href=\"https://github.com/NightOwl888/J2N/tree/feature/conditional-weak-table/src/J2N/Runtime/CompilerServices\" class=\"external-link\" rel=\"nofollow\">this J2N branch</a>. Unfortunately, it depends on unmanaged resources that somehow need to be re-mapped or embedded in order to make it functional. Perhaps there is also a way to cut through at a lower level and make a <tt>ConditionalWeakIdentityTable</tt> that could be used as a direct replacement for <tt>WeakIdentityMap</tt> instead of using <tt>IdentityWeakReference</tt>.</p>\n\n<p>If you could take a look at using <tt>ConditionalWeakTable</tt> to solve this issue, it would be much appreciated. Since there appears to be one place where the enumerator is required <a href=\"https://github.com/apache/lucenenet/blob/01d65bb1409cb34a8bc1444b67dd1ab011d6d4fa/src/Lucene.Net/Store/ByteBufferIndexInput.cs#L377\" class=\"external-link\" rel=\"nofollow\">here</a>, the best approach would be to first check for compatibility on .NET Standard 2.1 and if that works, help us to complete the port of <tt>ConditionalWeakTable</tt> for .NET Framework 4.5 and .NET Standard 2.0 by submitting a PR to <a href=\"https://github.com/NightOwl888/J2N/tree/feature/conditional-weak-table\" class=\"external-link\" rel=\"nofollow\">the J2N project</a> so the same fix can also be applied to those platforms.</p>\n\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574129590","html_url":"https://github.com/apache/lucenenet/pull/236#issuecomment-574129590","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/236","id":574129590,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDEyOTU5MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T11:24:31Z","updated_at":"2020-01-14T11:24:31Z","author_association":"CONTRIBUTOR","body":"Replied @ https://jira.apache.org/jira/projects/LUCENENET/issues/LUCENENET-640","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574129590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574637660","html_url":"https://github.com/apache/lucenenet/pull/236#issuecomment-574637660","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/236","id":574637660,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDYzNzY2MA==","user":{"login":"Matt2843","id":11424782,"node_id":"MDQ6VXNlcjExNDI0Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/11424782?v=4","gravatar_id":"","url":"https://api.github.com/users/Matt2843","html_url":"https://github.com/Matt2843","followers_url":"https://api.github.com/users/Matt2843/followers","following_url":"https://api.github.com/users/Matt2843/following{/other_user}","gists_url":"https://api.github.com/users/Matt2843/gists{/gist_id}","starred_url":"https://api.github.com/users/Matt2843/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Matt2843/subscriptions","organizations_url":"https://api.github.com/users/Matt2843/orgs","repos_url":"https://api.github.com/users/Matt2843/repos","events_url":"https://api.github.com/users/Matt2843/events{/privacy}","received_events_url":"https://api.github.com/users/Matt2843/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T12:26:01Z","updated_at":"2020-01-15T12:26:01Z","author_association":"NONE","body":"This is my original code and I License it under Apache License, Version 2.0. Unfortunately I don't have time to follow-up on this issue, but hope that my contributions here have helped in some way nevertheless :)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574637660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574703221","html_url":"https://github.com/apache/lucenenet/pull/236#issuecomment-574703221","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/236","id":574703221,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDcwMzIyMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T15:11:00Z","updated_at":"2020-01-15T15:11:00Z","author_association":"CONTRIBUTOR","body":"Thanks. Identifying the problem was certainly helpful. We may also need to use this as an interim solution for < .NET Standard 2.1.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/574703221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/577786411","html_url":"https://github.com/apache/lucenenet/pull/236#issuecomment-577786411","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/236","id":577786411,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzc4NjQxMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T17:31:12Z","updated_at":"2020-01-23T17:31:12Z","author_association":"CONTRIBUTOR","body":"On second pass, the `ConditionalWeakTable` internally uses `RuntimeHelpers.GetHashCode()` to find the item in the table. Therefore, technically it is a direct replacement for `WeakIdentityMap`.\r\n\r\nI have factored out `WeakIdentityMap` and replaced it with `ConditionalWeakTable`. The tests pass, and there doesn't appear to be any memory leaks. Please give it a try and let us know if you are still experiencing problems.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/577786411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212190","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212190","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212190,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE5MA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T22:43:37Z","updated_at":"2020-05-05T17:57:06Z","author_association":"NONE","body":"<p>I suspect this issue may crop up again due to the new collections in <a href=\"https://github.com/NightOwl888/J2N/tree/ca9ee8a343960970a3fb41d8b207fd68916747f0/src/J2N/Collections/Generic\" class=\"external-link\" rel=\"nofollow\">J2N</a> which Lucene.NET now uses. Although, there may be no issue for interfaces with 1 generic parameter, such as <tt>IEnumerable<T></tt> so we might be okay. Basically, we have copied the structure of the collections in <tt>System.Collections.Generic</tt>, which use nested structs as enumerators, and each implements a generic interface:</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-c#\">\n<span class=\"code-keyword\">public</span> <span class=\"code-keyword\">class </span>LinkedDictionary<TKey, TValue>\n{\n    <span class=\"code-keyword\">internal</span> <span class=\"code-keyword\">struct</span> Enumerator : IEnumerator<KeyValuePair<TKey, TValue>> {}\n}\n</pre>\n</div></div>\n\n<p>Could someone please do a test with <a href=\"https://www.nuget.org/packages/J2N/2.0.0-beta-0001\" class=\"external-link\" rel=\"nofollow\">J2N 2.0.0-beta-0001</a> on Xamarin.iOS to ensure this problem isn't going to creep in again? A good test would be to enumerate the <tt>LinkedDictanary<TKey, TValue></tt> (the dictionary, the keys, and the values). We have replaced most of the collections in Lucene.NET with the ones from J2N, so if this is a problem, it will affect more than just <tt>Lucene.Net.Facet</tt> in the next Lucene.NET release, it will affect practically every module.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212197","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212197","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212197,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjE5Nw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T10:07:40Z","updated_at":"2020-05-05T17:57:07Z","author_association":"NONE","body":"<p>Hi Shad,</p>\n\n<p>we are planning to take the tests in the next few days. We will let you know.</p>\n<i>by francescob</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/580135014","html_url":"https://github.com/apache/lucenenet/pull/237#issuecomment-580135014","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/237","id":580135014,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDEzNTAxNA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T08:16:27Z","updated_at":"2020-01-30T08:16:27Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/580135014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212204","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212204","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212204,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjIwNA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T16:53:10Z","updated_at":"2020-05-05T17:57:07Z","author_association":"NONE","body":"<p>Hi Shad,</p>\n\n<p>I create a new Xamarin.iOS project,  imported <a href=\"https://www.nuget.org/packages/J2N/2.0.0-beta-0001\" class=\"external-link\" rel=\"nofollow\">J2N 2.0.0-beta-0001</a> and tested this code:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">\n<span class=\"code-keyword\">var</span> linkedDictionary = <span class=\"code-keyword\">new</span> LinkedDictionary<<span class=\"code-object\">int</span>, string>();\n<span class=\"code-keyword\">for</span> (<span class=\"code-object\">int</span> i = 0 ; i < 100; i++) {\n linkedDictionary.Add(i, i.ToString());\n}\nforeach(<span class=\"code-keyword\">var</span> entry in linkedDictionary) {\n Console.WriteLine($<span class=\"code-quote\">\"Key: {entry.Key.ToString()} - Value: {entry.Value}\"</span>);\n}\nforeach(<span class=\"code-keyword\">var</span> entry in linkedDictionary.Keys) {\n Console.WriteLine($<span class=\"code-quote\">\"Key: {entry.ToString()}\"</span>);\n}\nforeach(<span class=\"code-keyword\">var</span> entry in linkedDictionary.Values) {\n Console.WriteLine($<span class=\"code-quote\">\"Value: {entry}\"</span>);\n}\nusing(<span class=\"code-keyword\">var</span> enumerator = linkedDictionary.GetEnumerator()) {\n <span class=\"code-keyword\">while</span>(enumerator.MoveNext()) {\n <span class=\"code-keyword\">var</span> current = enumerator.Current;\n Console.WriteLine($<span class=\"code-quote\">\"Key: {current.Key.ToString()} - Value: {current.Value}\"</span>);\n }\n}</pre>\n</div></div>\n<p>   It works without problems. Let me know if it is enough or you need more tests.</p>\n<i>by francescob</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211706","html_url":"https://github.com/apache/lucenenet/issues/252#issuecomment-624211706","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/252","id":624211706,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTcwNg==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-07T15:15:33Z","updated_at":"2020-05-05T17:56:12Z","author_association":"NONE","body":"<p>Hi <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nightowl888\" class=\"user-hover\" rel=\"nightowl888\">Shad Storhaug</a>,</p>\n\n<p>I think <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ayende\" class=\"user-hover\" rel=\"ayende\">Ayende Rahien</a> faced same issue, </p>\n\n<p>take a look <a href=\"https://ayende.com/blog/189793-A/the-design-and-implementation-of-a-better-threadlocal-t\" class=\"external-link\" rel=\"nofollow\">here</a></p>\n<i>by eladmarg</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211709","html_url":"https://github.com/apache/lucenenet/issues/252#issuecomment-624211709","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/252","id":624211709,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTcwOQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-07T20:39:13Z","updated_at":"2020-05-05T17:57:49Z","author_association":"NONE","body":"<p>Elad,</p>\n\n<p>Well, this particular issue has been addressed by swapping ConditionalWeakTable for WeakIdentityMap. However, we are still using WeakDictionary in several places, most notably in the FieldCacheImpl (see <a href=\"https://issues.apache.org/jira/projects/LUCENENET/issues/GH-610\" class=\"external-link\" rel=\"nofollow\">GH-610</a>). This is due to the lack of enumerator support before .NET Standard 2.1 primarily.</p>\n\n<p>That said, the article that describes the problem specifically mentions it is <a href=\"https://ayende.com/blog/189761-A/production-postmortem-the-slow-slowdown-of-large-systems\" class=\"external-link\" rel=\"nofollow\">a problem with Lucene.NET</a>. Thanks for the link. Hopefully, he is planning to submit the fix back to us after he thoroughly tests it.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211711","html_url":"https://github.com/apache/lucenenet/issues/252#issuecomment-624211711","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/252","id":624211711,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTcxMQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-09T07:34:42Z","updated_at":"2020-05-05T17:56:12Z","author_association":"NONE","body":"<p>We are using an old version of Lucene at the moment, so I don't think that a PR from my current codebase would be very helpful.</p>\n\n<p>The PRs for the changes in Lucene 3.0.3 are here:</p>\n\n<p><a href=\"https://github.com/ravendb/lucenenet/pull/10\" class=\"external-link\" rel=\"nofollow\">https://github.com/ravendb/lucenenet/pull/10</a></p>\n\n<p><a href=\"https://github.com/ravendb/lucenenet/pull/11\" class=\"external-link\" rel=\"nofollow\">https://github.com/ravendb/lucenenet/pull/11</a></p>\n\n<p> </p>\n\n<p>Feel free to make use of them as you see fit.</p>\n\n<p>This is currently under testing, we saw GC time reduced from GEN 0 ~0.9 seconds to 0.125 seconds. GEN 2 from 0.9 to 0.5.</p>\n<i>by ayende</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211648","html_url":"https://github.com/apache/lucenenet/issues/250#issuecomment-624211648","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/250","id":624211648,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTY0OA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T16:37:55Z","updated_at":"2020-05-05T17:56:07Z","author_association":"NONE","body":"<p>Version 3.x is no longer being actively supported, and anyone who was involved with supporting that version is no longer involved in the project.</p>\n\n<p>So, you basically have 3 options:</p>\n\n<p>1. Upgrade to 4.8.0 beta. According to <a href=\"https://code972.com/blog/2016/07/98-lucene-net-4-8-is-in-beta-and-we-need-your-help\" class=\"external-link\" rel=\"nofollow\">Itamar's blog post from 2016</a>, it was then more stable then than 3.0.3 is. Since 2016, 4.8.0 has been improved quite a bit. We have fixed all known crashes and cross-platform issues as well as made several impactful performance improvements. Most importantly, we are actively fixing any bugs that are reported.<br/>\n 2. Clone the repo and from the <a href=\"https://github.com/apache/lucenenet/tree/3.0.3\" class=\"external-link\" rel=\"nofollow\">3.0.3 branch</a>, fix the issue you are having, submit a PR back here and we will do what we can to get it released on NuGet.<br/>\n 3. Fork the repo and from the <a href=\"https://github.com/apache/lucenenet/tree/3.0.3\" class=\"external-link\" rel=\"nofollow\">3.0.3 branch</a>, fix the issue, and deploy a private copy by your own means.</p>\n\n<p>If you are using at least .NET Framework 4.5, I strongly urge you to consider upgrading to 4.8.0-beta.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/591068437","html_url":"https://github.com/apache/lucenenet/pull/238#issuecomment-591068437","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/238","id":591068437,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTA2ODQzNw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-25T21:04:37Z","updated_at":"2020-02-25T21:04:37Z","author_association":"CONTRIBUTOR","body":"Thanks for the report and the PR.\r\n\r\nI am not sure if disabling the cache is the right fix for everyone on `Xamarin.iOS`, as that will likely negatively affect performance. On the other hand, maybe such a feature isn't entirely a bad thing, so please leave this PR open for now.\r\n\r\nHowever, since it seems that the fix from [LUCENENET-602](https://issues.apache.org/jira/projects/LUCENENET/issues/LUCENENET-602) isn't working in every case (even after we had confirmation it worked for others), perhaps it is time to take a different approach.\r\n\r\n- **Option 1**: There was [a report](https://github.com/csharptest/CSharpTest.Net.Collections/issues/16#issuecomment-564505408) that changing the structs to classes in `LurchTable` will fix the problem. We could create a target for `Xamarin.iOS` on `J2N` and only apply the patch only to that target with conditional compilation.\r\n\r\n- **Option 2**: There was [a report](https://issues.apache.org/jira/browse/LUCENENET-602?focusedCommentId=16902515&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16902515) that swapping in `LruCache` instead of `LurchTable` will also work. We could create a target for `Xamarin.iOS` on `Lucene.Net.Facet` and `Lucene.Net.QueryParser` and only apply the patch only to that target with conditional compilation.\r\n\r\nIf you are willing to do the testing and submit a PR with either of those solutions, it would be much appreciated. Ideally, we would have it setup to run tests on `Xamarin.iOS`, too, but we can probably get by without those tests if you don't have the time to get them working.\r\n\r\nAlso, if attempting #1, it would be helpful to know whether the fix works without having to target `Xamarin.iOS` directly in `Lucene.Net.Facet` and `Lucene.Net.QueryParser`.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/591068437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/591127500","html_url":"https://github.com/apache/lucenenet/pull/238#issuecomment-591127500","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/238","id":591127500,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTEyNzUwMA==","user":{"login":"rohitkumbhar","id":5626102,"node_id":"MDQ6VXNlcjU2MjYxMDI=","avatar_url":"https://avatars.githubusercontent.com/u/5626102?v=4","gravatar_id":"","url":"https://api.github.com/users/rohitkumbhar","html_url":"https://github.com/rohitkumbhar","followers_url":"https://api.github.com/users/rohitkumbhar/followers","following_url":"https://api.github.com/users/rohitkumbhar/following{/other_user}","gists_url":"https://api.github.com/users/rohitkumbhar/gists{/gist_id}","starred_url":"https://api.github.com/users/rohitkumbhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rohitkumbhar/subscriptions","organizations_url":"https://api.github.com/users/rohitkumbhar/orgs","repos_url":"https://api.github.com/users/rohitkumbhar/repos","events_url":"https://api.github.com/users/rohitkumbhar/events{/privacy}","received_events_url":"https://api.github.com/users/rohitkumbhar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-25T23:15:51Z","updated_at":"2020-02-25T23:15:51Z","author_association":"NONE","body":"Hi! Thank you for checking this. As-is, the PR will not disable cache and existing performance will not be affected. I set the `CacheDisabled` to `true` explicitly in my code to avoid the crash. I'll look at the linked options as well.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/591127500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211602","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-624211602","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":624211602,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTYwMg==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T16:24:50Z","updated_at":"2020-05-05T17:56:03Z","author_association":"NONE","body":"<p>I faced the same performance degradation. <br/>\n <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nightowl888\" class=\"user-hover\" rel=\"nightowl888\">Shad Storhaug</a> , I saw some commits on this issue, any chance to release newer beta?</p>\n<i>by eladmarg</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211609","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-624211609","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":624211609,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTYwOQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T17:30:02Z","updated_at":"2020-05-05T17:56:03Z","author_association":"NONE","body":"<p>maybe its because of compression by default.<br/>\n<a href=\"https://stegard.net/2015/05/performance-of-stored-field-compression-in-lucene-4-1/\" class=\"external-link\" rel=\"nofollow\">https://stegard.net/2015/05/performance-of-stored-field-compression-in-lucene-4-1/</a></p>\n<i>by eladmarg</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211613","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-624211613","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":624211613,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTYxMw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T10:06:13Z","updated_at":"2020-05-05T17:56:04Z","author_association":"NONE","body":"<p>Yes I read this article. There is a little improvement by doing the hack presented in this article but there is still a serious gap with the previous version in terms of response time.</p>\n<i>by mo dje</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211618","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-624211618","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":624211618,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTYxOA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-09T08:42:32Z","updated_at":"2020-05-05T17:56:04Z","author_association":"NONE","body":"<p>Thanks for the report.</p>\n\n<p>However, without more information there isn't much we can do on our end. Specifically, what is slow? Searching, indexing, analyzing?</p>\n\n<p>Without seeing some code, it is hard to put together any advice on what to do about it. Could you please provide a sample configuration that runs fast in Lucene.NET 3.0.3 and is measurably slower when running with Lucene.NET 4.8.0?</p>\n\n<p>Also, can you please confirm you are using 4.8.0-beta00007? It has several performance improvements over the previous betas.</p>\n\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eladmarg\" class=\"user-hover\" rel=\"eladmarg\">Elad Margalit</a> - Yes, there are some additional performance improvements in the trunk that haven't been released yet. Most of them only apply to very specific configurations, though. I am hoping to eliminate the \"Support\" namespace on ICU4N before doing that release.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211623","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-624211623","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":624211623,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTYyMw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-10T09:22:20Z","updated_at":"2020-05-05T17:56:04Z","author_association":"NONE","body":"<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nightowl888\" class=\"user-hover\" rel=\"nightowl888\">Shad Storhaug</a>, the slowness issue is for searching operation.</p>\n\n<p>Here is an example of a piece of code used to do a search :</p>\n\n<p>var queryBuilder = new QueryBuilder(new MyAnalyzer());</p>\n\n<p>var scoreDocs = indexSearcher.Search(queryBuilder.CreateBooleanQuery(field, value), 1).ScoreDocs;</p>\n\n<p>I confirm that I am using 4.8.0 beta00007.</p>\n<i>by mo dje</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/606935826","html_url":"https://github.com/apache/lucenenet/pull/239#issuecomment-606935826","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/239","id":606935826,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjkzNTgyNg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-31T23:19:33Z","updated_at":"2020-03-31T23:19:33Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR.\r\n\r\nI have reviewed and will accept this PR, provided you please [submit an ICLA or CCLA to Apache](https://www.apache.org/licenses/contributor-agreements.html#clas). You will only need to submit this document once for this and all future contributions.\r\n\r\nI will accept **without any additional changes on your part**, but for future reference please follow these guidelines when submitting pull requests:\r\n\r\n1. Please limit PRs to a single focused task, when possible, and provide a more descriptive title on each PR. For example, for these changes I would recommend you submit 3 separate PRs, but given the fact that you were having trouble getting builds to function, what you did here is understandable.\r\n2. Please provide more descriptive commit message headings.\r\n\r\nAgain, I will fix up the changes (including the failing build process) and merge them from here, no changes are required on your part. Thanks for finding and reporting the Azure DevOps build issue so we can take care of it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/606935826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/609558514","html_url":"https://github.com/apache/lucenenet/pull/231#issuecomment-609558514","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/231","id":609558514,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1ODUxNA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T04:28:21Z","updated_at":"2020-04-06T04:28:21Z","author_association":"CONTRIBUTOR","body":"Hi all, i'll close this PR as many things have been resolved in the #235 changes and many of those changes have already been applied to the live docs site. I'll try to get some final changes in to #325 and merge and start a new one with any pending changes. I have ideas for the code snippets too, i think we can still get quite far with the automation side of things before we have to start thinking of modifying the docs directly.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/609558514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212055","html_url":"https://github.com/apache/lucenenet/issues/271#issuecomment-624212055","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/271","id":624212055,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjA1NQ==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-09T21:16:42Z","updated_at":"2020-05-05T17:56:54Z","author_association":"NONE","body":"<p>It is possible that this issue was due to a bug in <tt>Lucene.Net.TestFramework</tt> that has been addressed already. We need to confirm that it was the test framework that was errantly causing the double-call, not a feature of Lucene.NET.</p>\n\n\n<p>Also, the <tt>ICUCollationKeyFilter</tt> no longer implements <tt>Dispose()</tt> - that was when we were referencing icu-dotnet (which had unmanaged resources) instead of ICU4N. However, the behavior can be observed in any existing disposable <tt>TokenStream</tt> or by overriding <tt>Dispose(bool)</tt> in one that isn't disposable.</p>\n<i>by nightowl888</i>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/613211703","html_url":"https://github.com/apache/lucenenet/issues/242#issuecomment-613211703","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/242","id":613211703,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzIxMTcwMw==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-14T03:52:37Z","updated_at":"2020-04-14T03:52:37Z","author_association":"CONTRIBUTOR","body":"nightowl888Shad Storhaug added a comment - 15/Jun/18 03:04\r\nThanks for the report.\r\n\r\nI took a look and it really isn't very clear what the future holds for this problem. According to Microsoft this is a current issue and it isn't clear whether they intend to address it. However, according to this page it sounds like this should be currently supported. Microsoft's documentation was apparently copied from this page, which was last updated in 2009. Then again, according to this comment:\r\n\r\nAs of Mono 2.0, AOT compilation is only supported for non-generic methods. support for generics is currently under development.\r\n\r\nSince I can't seem to find a way to detect whether the AOT compilation is enabled and there are clear advantages (optimizations) for calling System.Collections.Generic.EqualityComparer<T>.Default on other platforms, I ended up wrapping it in a new comparer Lucene.Net.Support.EqualityComparer<T>.Default, which attempts to call System.Collections.Generic.EqualityComparer<T>.Default the first time and if there is an exception it will store a nullable boolean in a static field to indicate whether value types are supported, or null to indicate the check hasn't yet been done. After the initial attempt, it will simply call the correct comparer depending on the state of the boolean. That should fix the issue and also cover the case where it is eventually patched.\r\n\r\nThis could be improved if there were a specific exception to catch (you didn't include it in the stack trace) to narrow down the field - right now it catches when any exception is thrown and the type is a value type, but allows all other exceptions to be thrown.\r\n\r\nVersion 4.8.0-ci0000001189 on the CI Feed has the update - let us know if that fixes the problem.\r\n\r\nWe'd appreciate a pull request to update the Powershell build script so it works on Xamarin.iOS, Xamarin.Android, and UWP, and then we can set it up in TeamCity to continually test these platforms and help us track down issues (if you have the time, we should also do Mono and Xamarin.Mac). Unfortunately, I don't currently have access to all of these platforms nor the space that would be required to virtualize/emulate them in order to ensure the script works, and doing it all on the TeamCity server would be slow going.\r\n\r\nThe test task begins here - we would need an update to that and might need to update the tasks to install platforms, if required (we had to do that for dotnet core because the TeamCity servers don't necessarily have the version we need installed and end users might not, as well).\r\n\r\nTo test, the build/build.ps1 script is run with the following command from TeamCity:\r\n\r\nImport-Module .\\build\\psake.psm1; Invoke-Psake .\\build\\build.ps1 -Task Test -properties @{frameworks_to_test='netcoreapp2.0';backup_files='false';prepareForBuild='false'}\r\nTo build, pack and then test (which we use from the command line), the command looks like:\r\n\r\nImport-Module .\\build\\psake.psm1; Invoke-Psake .\\build\\build.ps1 Default,Test -properties @{configuration='Release'} -parameters @{ packageVersion='4.8.0-beta00006';version='0.0.0' }\r\nWe are using PSake as a task manager, and the documentation for it is here.\r\n\r\nAlso, we currently only have a build.bat file to launch the command manually, which needs to be translated into a build.sh to run cross-platform. Note that TeamCity does not use this file, it is only for end users who want to build/test. Also note this file is automatically re-generated during a release by the PSake script so the user only needs to type \"build\" on the command line and the version of the current release will be baked in - we would want to do that for a build.sh file, too.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/613211703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/613975368","html_url":"https://github.com/apache/lucenenet/pull/240#issuecomment-613975368","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/240","id":613975368,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMzk3NTM2OA==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-15T11:12:49Z","updated_at":"2020-04-15T11:12:49Z","author_association":"CONTRIBUTOR","body":"Modified with your changes","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/613975368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/620808822","html_url":"https://github.com/apache/lucenenet/issues/246#issuecomment-620808822","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/246","id":620808822,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDgwODgyMg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-28T19:28:39Z","updated_at":"2020-04-28T19:28:39Z","author_association":"CONTRIBUTOR","body":"As `CreateComponents()` is a factory method (meaning it is a creational operation), only short-lived dependencies should be disposed there. Since you are disposing the stream first before returning it, it is not in a state where the caller of `CreateComponents()` can utilize it.\r\n\r\nTo make a customized standard analyzer, the best approach would be to model your new class after the [existing StandardAnalyzer class](https://github.com/apache/lucenenet/blob/8cf15f7fd0bb7b22bb2e865895998583d049ab92/src/Lucene.Net.Analysis.Common/Analysis/Standard/StandardAnalyzer.cs).\r\n\r\n```c#\r\n    public sealed class MyStopwordAnalyzer : StopwordAnalyzerBase\r\n    {\r\n        /// <summary>\r\n        /// An unmodifiable set containing some common English words that are usually not\r\n        /// useful for searching. \r\n        /// </summary>\r\n        public static readonly CharArraySet STOP_WORDS_SET = LoadEnglishStopWordsSet();\r\n\r\n        private static CharArraySet LoadEnglishStopWordsSet() // LUCENENET: Avoid static constructors (see https://github.com/apache/lucenenet/pull/224#issuecomment-469284006)\r\n        {\r\n            IList<string> stopWords = new string[] { \"a\", \"an\", \"and\", \"are\", \"as\", \"at\", \"be\",\r\n                \"but\", \"by\", \"for\", \"if\", \"in\", \"into\", \"is\", \"it\", \"no\", \"not\", \"of\", \"on\",\r\n                \"or\", \"such\", \"that\", \"the\", \"their\", \"then\", \"there\", \"these\", \"they\", \"this\",\r\n                \"to\", \"was\", \"will\", \"with\" };\r\n#pragma warning disable 612, 618\r\n            var stopSet = new CharArraySet(LuceneVersion.LUCENE_CURRENT, stopWords, false);\r\n#pragma warning restore 612, 618\r\n            return CharArraySet.UnmodifiableSet(stopSet);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Builds an analyzer with the given stop words. </summary>\r\n        /// <param name=\"matchVersion\"> Lucene compatibility version - See <see cref=\"MyStopwordAnalyzer\"/> </param>\r\n        /// <param name=\"stopWords\"> stop words  </param>\r\n        public MyStopwordAnalyzer(LuceneVersion matchVersion, CharArraySet stopWords)\r\n            : base(matchVersion, stopWords)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Builds an analyzer with the default stop words (<see cref=\"STOP_WORDS_SET\"/>). </summary>\r\n        /// <param name=\"matchVersion\"> Lucene compatibility version - See <see cref=\"MyStopwordAnalyzer\"/> </param>\r\n        public MyStopwordAnalyzer(LuceneVersion matchVersion)\r\n            : this(matchVersion, STOP_WORDS_SET)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Builds an analyzer with the stop words from the given reader. </summary>\r\n        /// <seealso cref=\"WordlistLoader.GetWordSet(TextReader, LuceneVersion)\"/>\r\n        /// <param name=\"matchVersion\"> Lucene compatibility version - See <see cref=\"MyStopwordAnalyzer\"/> </param>\r\n        /// <param name=\"stopwords\"> <see cref=\"TextReader\"/> to read stop words from  </param>\r\n        public MyStopwordAnalyzer(LuceneVersion matchVersion, TextReader stopwords)\r\n            : this(matchVersion, LoadStopwordSet(stopwords, matchVersion))\r\n        {\r\n        }\r\n\r\n        protected override TokenStreamComponents CreateComponents(string fieldName, TextReader reader)\r\n        {\r\n            var src = new StandardTokenizer(m_matchVersion, reader);\r\n            TokenStream tok = new StandardFilter(m_matchVersion, src);\r\n            // tok = new LowerCaseFilter(m_matchVersion, tok); // optional\r\n            tok = new StopFilter(m_matchVersion, tok, m_stopwords);\r\n            return new TokenStreamComponents(src, tok);\r\n        }\r\n    }\r\n```\r\n\r\nDo note that the existing `StandardAnalyzer` class also allows passing in a `CharArraySet` containing stopwords, which may meet your needs if you wish to use the `LowerCaseFilter` to normalize your text.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/620808822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211776","html_url":"https://github.com/apache/lucenenet/issues/256#issuecomment-624211776","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/256","id":624211776,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMTc3Ng==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-05T17:56:21Z","updated_at":"2020-05-05T17:57:51Z","author_association":"NONE","body":"Is related to: GH-610","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624211776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212207","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-624212207","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":624212207,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjIwNw==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-05T17:57:07Z","updated_at":"2020-05-05T17:57:51Z","author_association":"NONE","body":"Is related to: GH-633","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212324","html_url":"https://github.com/apache/lucenenet/issues/278#issuecomment-624212324","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/278","id":624212324,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDIxMjMyNA==","user":{"login":"clambertus","id":8631661,"node_id":"MDQ6VXNlcjg2MzE2NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8631661?v=4","gravatar_id":"","url":"https://api.github.com/users/clambertus","html_url":"https://github.com/clambertus","followers_url":"https://api.github.com/users/clambertus/followers","following_url":"https://api.github.com/users/clambertus/following{/other_user}","gists_url":"https://api.github.com/users/clambertus/gists{/gist_id}","starred_url":"https://api.github.com/users/clambertus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clambertus/subscriptions","organizations_url":"https://api.github.com/users/clambertus/orgs","repos_url":"https://api.github.com/users/clambertus/repos","events_url":"https://api.github.com/users/clambertus/events{/privacy}","received_events_url":"https://api.github.com/users/clambertus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-05T17:57:18Z","updated_at":"2020-05-05T17:57:52Z","author_association":"NONE","body":"Is related to: GH-633","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624212324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624406460","html_url":"https://github.com/apache/lucenenet/issues/248#issuecomment-624406460","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/248","id":624406460,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDQwNjQ2MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-06T02:10:52Z","updated_at":"2020-05-06T02:10:52Z","author_association":"CONTRIBUTOR","body":"The issue here is described in #255. The issue is that `IChecksum` was ported over from Java when .NET already has an abstraction for this purpose, namely, `HashAlgorithm`.\r\n\r\nAn [attempt was made](https://github.com/NightOwl888/lucenenet/tree/fix/hashalgorithm) to make the conversion using [Crc32.NET](https://www.nuget.org/packages/Crc32.NET/), an implementation of `HashAlgorithm` that implements CRC32. Some of the tests pass, but the CheckIndex functionality is no longer functional with this draft implementation.\r\n\r\nSince this wasn't considered to be a primary interface and we didn't expect any users to utilize it, it has been made internal until a `HashAlgorithm`-derived implementation of CRC32 can be properly implemented and tested. Issue #255 is up for grabs if you would like to proceed with it to make a public implementation again.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/624406460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/625552314","html_url":"https://github.com/apache/lucenenet/issues/255#issuecomment-625552314","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/255","id":625552314,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTU1MjMxNA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-07T23:46:19Z","updated_at":"2020-05-07T23:46:19Z","author_association":"CONTRIBUTOR","body":"For now, `IChecksum` and its only implementation, `BufferedChecksum` have been marked internal. We will fix this before the release of Lucene.NET 4.8.0 if there is time, but it is only guaranteed to make it into the release if someone contributes it.\r\n\r\nSee [https://github.com/apache/lucenenet/issues/248#issuecomment-624406460](https://github.com/apache/lucenenet/issues/248#issuecomment-624406460) for details of what is required.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/625552314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/627164664","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-627164664","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":627164664,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzE2NDY2NA==","user":{"login":"lazcool","id":12608907,"node_id":"MDQ6VXNlcjEyNjA4OTA3","avatar_url":"https://avatars.githubusercontent.com/u/12608907?v=4","gravatar_id":"","url":"https://api.github.com/users/lazcool","html_url":"https://github.com/lazcool","followers_url":"https://api.github.com/users/lazcool/followers","following_url":"https://api.github.com/users/lazcool/following{/other_user}","gists_url":"https://api.github.com/users/lazcool/gists{/gist_id}","starred_url":"https://api.github.com/users/lazcool/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazcool/subscriptions","organizations_url":"https://api.github.com/users/lazcool/orgs","repos_url":"https://api.github.com/users/lazcool/repos","events_url":"https://api.github.com/users/lazcool/events{/privacy}","received_events_url":"https://api.github.com/users/lazcool/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-12T07:27:20Z","updated_at":"2020-05-12T07:27:20Z","author_association":"NONE","body":"Actually it's only a warning - I had `TreatWarningsAsErrors` enabled.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/627164664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/628955511","html_url":"https://github.com/apache/lucenenet/issues/247#issuecomment-628955511","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/247","id":628955511,"node_id":"MDEyOklzc3VlQ29tbWVudDYyODk1NTUxMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-15T00:27:08Z","updated_at":"2020-05-15T00:27:08Z","author_association":"CONTRIBUTOR","body":"For user related issues, you will be much more likely to get a response if you subscribe to and then post your question on the [user mailing list](https://lucenenet.apache.org/contributing/index.html#ask-a-question) or by posting your question on StackOverflow. Our GitHub issue tracker is for bug reports and tasks only.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/628955511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/629753027","html_url":"https://github.com/apache/lucenenet/pull/287#issuecomment-629753027","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/287","id":629753027,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTc1MzAyNw==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-17T07:00:10Z","updated_at":"2020-05-17T07:00:10Z","author_association":"CONTRIBUTOR","body":"I have been unable to read test parameters from the command line. This impacts on the TestParametersConfigurationSource implementation. \r\n\r\nhttps://github.com/Microsoft/vstest-docs/blob/master/docs/RunSettingsArguments.md suggests you can pass a runsettings file and args via dotnet test but I was unable to get this to work.\r\n\r\nThis test would not pick up any args via CLI. \r\n\r\n        [Test]\r\n        public virtual void TestCommandLineProperty()\r\n        {\r\n            TestContext.Progress.WriteLine(\"TestContext.Parameters ({0})\", TestContext.Parameters.Count);\r\n            foreach (var x in TestContext.Parameters.Names)\r\n                TestContext.Progress.WriteLine(string.Format(\"{0}={1}\", x, TestContext.Parameters[x]));\r\n\r\n        }\r\n\r\nFurther, and more importantly, even when passing args via CLI i was not able to use a : colon as a separator. This is possible in a runsettings file but not on the CLI it seems:\r\ndotnet test  -- tests:seed=0x00000010\r\nreturns\r\n\"One or more runsettings provided contain invalid token\"\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/629753027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/629946019","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-629946019","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":629946019,"node_id":"MDEyOklzc3VlQ29tbWVudDYyOTk0NjAxOQ==","user":{"login":"dotnetshadow","id":296247,"node_id":"MDQ6VXNlcjI5NjI0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/296247?v=4","gravatar_id":"","url":"https://api.github.com/users/dotnetshadow","html_url":"https://github.com/dotnetshadow","followers_url":"https://api.github.com/users/dotnetshadow/followers","following_url":"https://api.github.com/users/dotnetshadow/following{/other_user}","gists_url":"https://api.github.com/users/dotnetshadow/gists{/gist_id}","starred_url":"https://api.github.com/users/dotnetshadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dotnetshadow/subscriptions","organizations_url":"https://api.github.com/users/dotnetshadow/orgs","repos_url":"https://api.github.com/users/dotnetshadow/repos","events_url":"https://api.github.com/users/dotnetshadow/events{/privacy}","received_events_url":"https://api.github.com/users/dotnetshadow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-18T04:58:03Z","updated_at":"2020-05-18T04:58:03Z","author_association":"NONE","body":"Getting the same warning when building. Is another package required?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/629946019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/630043779","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-630043779","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":630043779,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMDA0Mzc3OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-18T08:56:19Z","updated_at":"2020-05-18T08:56:19Z","author_association":"CONTRIBUTOR","body":"We were able to remove a bit of runtime Reflection code by making the functionality into a [Roslyn Analyzer Code Fix](https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/tutorials/how-to-write-csharp-analyzer-code-fix).\r\n\r\nA [single assembly](https://github.com/apache/lucenenet/tree/master/src/dotnet/Lucene.Net.CodeAnalysis) was used for both the C# and VB analyzers, therefore that assembly has dependencies on both\r\n\r\n- [Microsoft.CodeAnalysis.CSharp.Workspaces](https://www.nuget.org/packages/Microsoft.CodeAnalysis.CSharp.Workspaces)\r\n- [Microsoft.CodeAnalysis.VisualBasic.Workspaces](https://www.nuget.org/packages/Microsoft.CodeAnalysis.VisualBasic.Workspaces)\r\n\r\nThis appears to be the problem, but what isn't clear is why it is a problem as it is supposed to be possible to put multiple language support into the same analyzer.\r\n\r\nA clue can be found in [the documentation](https://docs.microsoft.com/en-us/archive/msdn-magazine/2015/october/code-analysis-build-and-deploy-libraries-with-integrated-roslyn-code-analysis-to-nuget#building-a-nuget-package-that-includes-apis-and-analyzers) in that it is not clear on what to do in the case where you are supporting 2 languages only without having a language-agnostic library (as in our case).\r\n\r\n> analyzers folder: This folder contains analyzer .dll files organized into particular subfolders. **Agnostic analyzer libraries (that is, targeting all languages) reside in a subfolder called dotnet. Analyzers targeting C# reside in a subfolder called dotnet\\cs, whereas analyzers targeting Visual Basic reside in a folder called dotnet\\vb.** It’s worth mentioning that dotnet represents the NuGet profile for .NET Core, and supports projects types such as Universal Windows apps and ASP.NET 5 projects.\r\n\r\nSince the answer was **not** to put the same compiled DLL into both the `dotnet\\cs` and `dotnet\\vb` folders, the only options that seem to remain are:\r\n\r\n1. Put the assembly into the `dotnet` folder\r\n2. Add conditional compilation and/or multiple projects to the assembly so only one language is supported per assembly (with only the `PackageReference` dependencies that apply to that language)\r\n\r\nSo, this is a bug. \r\n\r\nIf someone were to be so kind as to solve this puzzle for us and submit a PR we would appreciate it. Note that the deployment code that packs the analyzer into the Lucene.Net NuGet package is located [here](https://github.com/apache/lucenenet/blob/00680bad64adf0842cebe9aa5d9855544b7512b0/src/Lucene.Net/Lucene.Net.csproj#L37-L46).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/630043779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/630669310","html_url":"https://github.com/apache/lucenenet/pull/287#issuecomment-630669310","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/287","id":630669310,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMDY2OTMxMA==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-19T08:28:44Z","updated_at":"2020-05-19T08:28:44Z","author_association":"CONTRIBUTOR","body":"Hi Shad, updated ill mark for review\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/630669310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/633938890","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-633938890","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":633938890,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzkzODg5MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-26T10:19:06Z","updated_at":"2020-05-26T10:19:06Z","author_association":"CONTRIBUTOR","body":"I just noticed that the [docs for lucene-cli in the repository](https://github.com/apache/lucenenet/blob/master/src/dotnet/tools/lucene-cli/docs/index.md) haven't been updated to match the NuGet version. I realize you haven't actually built the Lucene.NET 4.8.0-beta00008 docs yet, but has updating the docs in the repository factored into the deployment process of the docs? Or would it be better if we did it at some other stage in the release?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/633938890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634426133","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-634426133","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":634426133,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDQyNjEzMw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T04:48:57Z","updated_at":"2020-05-27T04:48:57Z","author_association":"CONTRIBUTOR","body":"Good catch, i actually build and deployed the docs a few days ago and was just about to update the website with the new links. \r\n\r\nThat said, part of the docs building and automation process that I've already made is to be able to have custom token replacements for environment variables within the docs which is a perfect for this scenario. I'll update the docs to use this variable for this page.\r\n\r\nI'll keep going with my tasks for now but I can re-generate this specific doc page and re-deploy once everything is done.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634426133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634428211","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-634428211","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":634428211,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDQyODIxMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T04:56:56Z","updated_at":"2020-05-27T04:56:56Z","author_association":"CONTRIBUTOR","body":"> That said, part of the docs building and automation process that I've already made is to be able to have custom token replacements for environment variables within the docs \r\n\r\nCan you think of a way we might tackle this while keeping the Markdown doc readable within GitHub on the current version, or is that too big of an ask?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634428211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634429945","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-634429945","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":634429945,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDQyOTk0NQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T05:02:50Z","updated_at":"2020-05-27T05:02:50Z","author_association":"CONTRIBUTOR","body":"The MD doc will be readable it will just look like this: \r\n\r\ndotnet tool install lucene-cli -g --version [EnvVar:LuceneNetVersion]\r\n\r\nit isn't going to show the current version though and I can't really make that happen and not really sure that adds much benefit. That would mean that the docs build has to update both the source and resulting files and commit all of that which isn't too nice IMO.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634429945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634435705","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-634435705","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":634435705,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDQzNTcwNQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T05:23:02Z","updated_at":"2020-05-27T05:23:02Z","author_association":"CONTRIBUTOR","body":"My concern is if a Google search ends up on [this page](https://github.com/apache/lucenenet/blob/master/src/dotnet/tools/lucene-cli/docs/index.md). GitHub has a nice markdown processor and prints it out in human-readable form, but the page has no link to the \"finished\" documentation so it might not be obvious how to get there.\r\n\r\nBut looking at that page again, if the token were made to be human readable, it would be a reasonable tradeoff. Something like\r\n\r\n```\r\ndotnet tool install lucene-cli -g --version <currentVersion>\r\n```\r\n\r\nDo note the problem will go away when we release a production version. At that point, specifying a version will become optional and omitting it will install the latest version of the tool.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634435705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634445473","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-634445473","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":634445473,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDQ0NTQ3Mw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T05:57:22Z","updated_at":"2020-05-27T05:57:36Z","author_association":"CONTRIBUTOR","body":"Currently it will show up like:\r\n\r\n```\r\ndotnet tool install lucene-cli -g --version [EnvVar:LuceneNetVersion]\r\n```\r\n\r\nSince that is the custom markdown token. I can modify this if it's that important? Just not sure if <> chars can be used. \r\n\r\nFYI: I've deployed the updated site with links to the download files and docs and documentation on building the docs/apis. The download links are also fixed and linking through to the correct mirror site, etc... \r\n* https://lucenenet.apache.org/docs.html\r\n* https://lucenenet.apache.org/download/version-4.8.0-beta00008.html\r\n* https://lucenenet.apache.org/contributing/documentation.html\r\n\r\n(you might need to ctrl + f5)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634445473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634664029","html_url":"https://github.com/apache/lucenenet/pull/287#issuecomment-634664029","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/287","id":634664029,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNDY2NDAyOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-27T13:32:43Z","updated_at":"2020-05-27T13:32:43Z","author_association":"CONTRIBUTOR","body":"These changes have now been merged to master in commit 4ef61cba234ab87f9751c07f278a833d311d2c7a.\r\n\r\n## Dependency Injection Proof-of-Concept\r\n\r\nNote that I fixed the integration point for adding dependencies to the test framework and added a [Lucene.Net.Tests.TestFramework.DependencyInjection](https://github.com/apache/lucenenet/tree/4ef61cba234ab87f9751c07f278a833d311d2c7a/src/Lucene.Net.Tests.TestFramework.DependencyInjection) project as proof-of-concept for supplying dependencies via `Microsoft.Extensions.DependencyInjection`. The project contains both an `IConfigurationFactory` and a `ICodecFactory` implementation to fill the gap and let the DI container manage the lifetime of the services.\r\n\r\nTo fit more in line with the Microsoft convention, the `LuceneTestFrameworkInitializer` implementations were named [`Startup.cs`](https://github.com/apache/lucenenet/blob/4ef61cba234ab87f9751c07f278a833d311d2c7a/src/Lucene.Net.Tests.TestFramework.DependencyInjection/Startup.cs), as they technically serve the same purpose as the application's composition root.\r\n\r\n> **NOTE:** For a custom `LuceneTestFrameworkInitializer` subclass to function correctly, [NUnit requires it to be placed outside of any namespace](https://stackoverflow.com/a/3188421). This ensures it will run before and after any tests in any namespace. Each test assembly can have exactly 1 `LuceneTestFrameworkInitializer` subclass (by convention, named `Startup.cs`).\r\n\r\n## Toxic Method Calls in Tests\r\n\r\nCalling `ConfigurationSettings.SetConfigurationFactory()` from `LuceneTestCase.BeforeClass()`, `LuceneTestCase.SetUp()` or within tests is not a supported scenario and will lead to undefined behavior.\r\n\r\nThe implementation of `IConfiguartionFactory` has been changed to return `IConfiguration` rather than `IConfigurationRoot` for the following reasons:\r\n\r\n1. To hide the toxic `Reload()` method which is not supported in test scenarios and will lead to undefined behavior.\r\n2. To fit more in line with the default ASP.NET Core template, which uses `IConfiguration` in its `Startup` class.\r\n\r\nThe only scenario where `Reload()` makes sense is to test the implementation of it in our custom `IConfiguartionBuilder` implementation. This feature may be used in a real-world application, but has no valid purpose in the test framework for end users.\r\n\r\nThe name of the method in `IConfigurationFactory` was also changed to `GetConfiguration()` to match the convention of the codec factories.\r\n\r\n## Test Configuration Files\r\n\r\nThe tests were changed to embed the configuration files and output them to the user's temp directory and to use mock names so they don't interfere with the test framework itself.\r\n\r\nThe [`src/lucene.testSettings.json`](https://github.com/bongohrtech/lucenenet/blob/feature/LUCENENET-638/src/lucene.testSettings.json) file was also removed (also to keep it from interfering with the tests) and only exists in this branch. We may need a cut down version of it for documentation purposes, but most of the settings there only apply to Java Lucene.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/634664029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635037848","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635037848","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635037848,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTAzNzg0OA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T01:31:30Z","updated_at":"2020-05-28T01:31:30Z","author_association":"CONTRIBUTOR","body":"> Currently it will show up like:\r\n\r\n> ```\r\n> dotnet tool install lucene-cli -g --version [EnvVar:LuceneNetVersion]\r\n> ```\r\n\r\nThat format should be fine.\r\n\r\n### View Source Links\r\n\r\nI noticed that the \"View Source\" links are broken in the latest docs ([example](https://lucenenet.apache.org/docs/4.8.0-beta00008/api/Lucene.Net.Demo/Lucene.Net.Demo.IndexFiles.html)). It is going to a personal GitHub account of yours:\r\n\r\nhttps://github.com/Shazwazza/lucenenet/blob/docs-may/src/Lucene.Net.Demo/IndexFiles.cs/#L40\r\n\r\nbut there is a 404 page.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635037848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635049301","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635049301","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635049301,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTA0OTMwMQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T02:06:27Z","updated_at":"2020-05-28T02:07:48Z","author_association":"CONTRIBUTOR","body":"oops, i'll fix up and must have missed that part in my process/docs/automation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635049301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635345730","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635345730","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635345730,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTM0NTczMA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T13:20:33Z","updated_at":"2020-05-28T13:20:33Z","author_association":"CONTRIBUTOR","body":"## Codecs Documentation Links\r\n\r\nI am working on documenting the configuration of codecs #266, and I noticed that the documentation on the [beta-00008 file is now linking to the wrong document](https://lucenenet.apache.org/docs/4.8.0-beta00008/api/Lucene.Net.TestFramework/Lucene.Net.Codecs.html) (looks like it was the right document in the [beta-00007 document](https://lucenenet.apache.org/docs/4.8.0-beta00007/api/Lucene.Net.TestFramework/Lucene.Net.Codecs.html)).\r\n\r\nThis is by first navigating to the API docs home page, then clicking `Lucene.Net > Lucene.Net.Codecs` under the menu (which looks correct).\r\n\r\nOddly, both of them have an incorrect URL and breadcrumbs (that are pointing to the test framework).\r\n\r\n![image](https://user-images.githubusercontent.com/1538288/83135589-3b9e4c00-a110-11ea-9eea-f0522b3bd59d.png)\r\n\r\nIt would seem that the correct breadcrumb should be just\r\n\r\n![image](https://user-images.githubusercontent.com/1538288/83135836-a5b6f100-a110-11ea-8720-3aed6b766994.png)\r\n\r\n## New \"Namespace\" Document\r\n\r\nIt feels like the right place for adding a tutorial-style document would be in the \"namespace\" documentation (correct me if I am wrong).\r\n\r\nHowever, what I am grappling with is how to update the document so it has the updated information for the .NET way of configuring codecs while fitting into the current document pipeline. Looking at the [new API doc generation procedure](https://lucenenet.apache.org/contributing/documentation.html),\r\n\r\n> The documentation generation is a complex process because it needs to convert the Java Lucene project's documentation into a usable format to produce the output Lucene.Net's documentation.\r\n\r\n> The process overview is:\r\n\r\n> - Use the JavaDocToMarkdownConverter project within the DocumentationTools.sln solution to run the conversion of the Java Lucene projects docs into a useable format for DocFx. This tool takes uses a release tag output of the Java Lucene project as it's source to convert against the Lucene.Net's source.\r\n> - Run the documentation build script to produce the documentation site\r\n> - Publish the output to the lucenenet-site repository into a correpsonding named version directory\r\n\r\n> **We don't want to manually change the converted resulting markdown files (.md) because they would get overwritten again** when the conversion process is re-executed. Therefor to fix any formatting issues or customized output of the project docs, **these customizations/fixes/tweaks are built directly in to the conversion process itself** in the `JavaDocToMarkdownConverter.csproj` project.\r\n\r\nJust what is the plan to update the documents to eliminate all of the Java-centric instructions and replace them with .NET equivalents? Can we expand the API doc generation document to include an example of just that?\r\n\r\n#### Original Plan for JavaDocToMarkdownConverter\r\n\r\nDo note that the original idea behind the JavaDocToMarkdownConverter project was to get it to a point where we are happy that it will automate around 80-90% of the work, and then do a **final automated conversion for 4.8.0** followed by a **manual cleanup operation** to replace the Java-centric text and code examples with its .NET equivalent. The plan was to freeze the automated generation once we were happy with the automated tokens and URL locations so we could then update the `.md` documents with the correct info.\r\n\r\nThis automated generation would take place once each time we port a new Lucene version from Java to .NET, and we would need to use some kind of text cleanup procedure to make sure we don't accidentally roll back to Java instructions, but still detect changes in the Java documentation so we can integrate them, if needed.\r\n\r\nWe can leave this in the pipeline if it is possible, but we are in need of a solution to update the documents to include .NET information that is totally missing and remove the irrelevant Java configuration information and code examples.\r\n\r\n## Short Term Plan\r\n\r\nSo, in the near term, where is the best place to put the new namespace documentation for Codecs?\r\n\r\n## Long Term Plan\r\n\r\nThis is my proposal, but feel free to improve upon this idea or propose a different one. Perhaps we should aim to break this into 2 phases:\r\n\r\n1. JavaDoc to Markdown phase\r\n    - Converts the URLs into specialized tokens\r\n    - Converts namespaces\r\n    - Saves any additional state needed for the second phase (TOC, etc)\r\n    - Run via command line manually when we target a new Lucene version (happens rarely)\r\n    - Updates \"stepping stone\" documents that will be checked into the repo so it is easy to detect changes\r\n    - The command line tool could also automatically make a backup of just the \"stepping stone\" documents before the conversion to a directory outside of the repo so they can be compared with BeyondCompare\r\n    - The \"stepping stone\" documents will each have a header to inform developers\r\n       - The information doesn't apply to .NET\r\n       - The documents are automated and should not be updated manually\r\n    - Changes are moved from the \"stepping stone\" documents into the actual markdown documents manually\r\n2. Markdown to API website phase\r\n    - Actual markdown documents are updated manually (this will happen frequently, as we have many changes to document)\r\n      - Stripped of any irrelevant Java information\r\n      - Add relevant .NET information\r\n      - Code examples converted\r\n      - May include tokens for generating URLs that are the same format as the \"stepping stone\" documents\r\n      - May need to add additional pages that don't correspond to anything in Java\r\n    - API doc generation from these documents is fully automated\r\n    - Converts tokens into actual URLs\r\n\r\nEffectively the \"stepping stone\" documents (for lack of a better term) would simply be there to detect changes from the Java world (only happens when *we* port a new version of Lucene), which would then be manually copied (or simply ignored) on the .NET documentation side of things. I suppose the \"stepping stone\" documents don't even have to be in the same repo, as they are only for tracking changes.\r\n\r\nKeep in mind there are only ~250 namespace documents and only a few dozen of them have more than a single line description. There isn't much manual work involved in converting them initially, and there will be even less manual work to convert the changes when we upgrade to the next version of Lucene. The laborious part of the cleanup is to convert all of the URLs into tokens, convert namespaces, and JavaDoc format into Markdown, which we have covered (mostly?) with automation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635345730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635382437","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635382437","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635382437,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTM4MjQzNw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T14:24:52Z","updated_at":"2020-05-28T14:24:52Z","author_association":"CONTRIBUTOR","body":"> I noticed that the documentation on the beta-00008 file is now linking to the wrong document (looks like it was the right document in the beta-00007 document).\r\n\r\nWill be some annoying issue with namespace project changes from before to now and not tracking, i'll have to track it down and fix. The fix will be part of the conversion tool to put files into the right places.\r\n\r\n> and breadcrumbs (that are pointing to the test framework).\r\n\r\nDue to so many overlapping namespaces breadcrumbs can be annoying it's a known issue with docfx and I haven't heard a reply from them. If/when we think it's important enough we'll probably have to write javascript to fix, see https://github.com/dotnet/docfx/issues/2041#issuecomment-328394103\r\n\r\nThe rest of your info is stuff that we need to do and figure out. Before we consider doing that we need to ensure the files are in the right places (i.e. not all of them are as you have seen from the Codec thing, but i worked on this for a long time so it there's probably very few that are incorrect. The problem is that so much of this was entirely changed again 2 versions ago so i had to re-map everything). \r\n\r\nBut yes at the end of the day it's going to be much easier for us to just change the converted files and commit then, just means we'll need to figure out a way to re-execute the conversion docs and merging new changes. Keep in mind that we may end up needing to re-run the conversion tool because even after we've started manually editing files even before another major because we may discover that a ton of markdown has been converted incorrectly due to the source java files being very odd. This has happened frequently in this process because the java docs are so inconsistent. But maybe we deal with that on a case by case basis, i don't think there's going to be a magic way of automating the re-merge. Only feasible thing i can think of is to save the automated docs to a 'baseline' (possibly a git branch). Then we edit all the files we want to and if we need to re-execute the conversion tool, we do so on the baseline git branch and merge that forward to ours. Might work.\r\n\r\nDocfx also has something called 'overwrite' files which I was going to use for namespace docs that weren't converted from javadocs, this also means we wouldn't need to worry about them re-overwriting our files. I just haven't go to this stage of the process yet.\r\n\r\n> So, in the near term, where is the best place to put the new namespace documentation for Codecs?\r\n\r\nFirst i need to fix the codec mappings. Then the javadoc file that you can edit will exist here `/src/Lucene.Net/Codecs/package.md`\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635382437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635409939","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635409939","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635409939,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQwOTkzOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T15:08:48Z","updated_at":"2020-05-28T15:08:48Z","author_association":"CONTRIBUTOR","body":">>  So, in the near term, where is the best place to put the new namespace documentation for Codecs?\r\n\r\n> First i need to fix the codec mappings. Then the javadoc file that you can edit will exist here /src/Lucene.Net/Codecs/package.md\r\n\r\nGot it. I will update the document in a branch and submit a PR so you can do updates to master. Then I can fix any conflicts before merging.\r\n\r\nAny thoughts on how to add additional documents? For example, it might be best to separate ASP.NET Core configuration examples from command line examples or other application frameworks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635409939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635428716","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635428716","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635428716,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQyODcxNg==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T15:42:16Z","updated_at":"2020-05-28T15:42:16Z","author_association":"CONTRIBUTOR","body":"For the short term of fixing this codec issue - and there are others similar:\r\n\r\nThe issue is that the way lucene classes/namespaces are structures overlap with each other. This also why we have the breadcrumb issue. Because of this we get overlapping `uid` values where a `uid` is the unique name of a document. For example, the UID for the codec namespace within lucene 'core' package is `uid: Lucene.Net.Codecs` and the UID for the codec namespace within lucene's 'codec' package is `uid: Lucene.Net.Codecs` and again this overlaps with the code package in the test-framework: `uid: Lucene.Net.Codecs`\r\n\r\nThe reason this didn't behave this way in the previous docs version was because the converter wasn't picking up all of the namespace files and including them in the conversion which meant a lot of docs were missing, however it meant because we were missing docs we probably didn't have `uid` collisions. \r\n\r\nThere's a couple ways to fix this:\r\n\r\n* Change the uid values to include the orig package name like `core/Lucene.Net.Codecs` (or similar). \r\n* Change the way the docs are structure - similar to how the javadocs are - which would basically be that each 'package' has it's own separate 'mini site'\r\n\r\nI'll try to the first one now since it's easier, but both have pros/cons, i actually think the second option might be safest but i'm unsure how it will work just yet. I'll just to have give these a shot.\r\n\r\n> Any thoughts on how to add additional documents? For example, it might be best to separate ASP.NET Core configuration examples from command line examples or other application frameworks.\r\n\r\nThere's a few ways to do examples. DocFx supports 'overwrite files' like i mentioned and this is already configured but i haven't played around with it much yet. Basically it allows you to add metadata to any conceptual (i.e. code) document. So for example, in c# you might have a class but you didn't add `/// <example> put code here </example>` inline in your code. Well you can add this metadata to that class via overwrite files. There can be a number of examples per class or method too. So that's one way, but depends on where you want the docs or examples to live. Each 'namespace' or 'class' page can have any amount of information on it before it starts listing members, etc... \r\nThere's a tabbed markdown feature https://dotnet.github.io/docfx/spec/docfx_flavored_markdown.html#tabbed-content which might work for varying frameworks, but i'm unsure if that would work for overwrite files for /// <example> style code but maybe. \r\nI guess there's a lot of ways to do things so would need a concrete example of what you 'want' to do .\r\n\r\n\r\n\r\nhttps://dotnet.github.io/docfx/tutorial/intro_overwrite_files.html\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635428716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635436009","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635436009","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635436009,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQzNjAwOQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T15:55:07Z","updated_at":"2020-05-28T15:55:07Z","author_association":"CONTRIBUTOR","body":"Actually this isn't going to work:\r\n\r\n> Change the uid values to include the orig package name like core/Lucene.Net.Codecs (or similar).\r\n\r\nThis is because internally for each namespace an automatic UID will be assigned to it by docfx and we cannot change it. This is really why there's odd behavior especially for the Lucene.Net.Codec one because it exists in 3 places. This is also the problem with the breadcrumb. Changing the structure to be more like the java docs i think is the only good way forward. For example, you start at the landing page https://lucene.apache.org/core/8_5_2/index.html and click on a package, it will take you to a docs 'mini site' only for that package, if you want to go see another package you have to come back to this landing page. We can do the same, but at least ours will have a link back to the landing page.\r\n\r\nI'll see what i can do but this will solve a lot of issues.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635436009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635477815","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635477815","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635477815,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQ3NzgxNQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T17:07:32Z","updated_at":"2020-05-28T17:33:50Z","author_association":"CONTRIBUTOR","body":"> I guess there's a lot of ways to do things so would need a concrete example of what you 'want' to do .\r\n\r\nThe example that was followed to extend both codecs and \"system properties\" is outlined in [DI-Friendly Framework](https://blog.ploeh.dk/2014/05/19/di-friendly-framework/). The concept is rather abstract, and I was hoping to provide some specific examples that pertain only to codecs (in particular for ASP.NET Core and in console applications).\r\n\r\nMicrosoft has a [Dependency Injection in ASP.NET Core](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1) that gives a high-level overview. However, when searching for a similar document for console applications, there are only examples such as [this one by a 3rd party](https://andrewlock.net/using-dependency-injection-in-a-net-core-console-application/).\r\n\r\nEffectively, what I am hoping for is\r\n\r\n- A general overview of abstract types of codecs (like what [already exists](https://lucenenet.apache.org/docs/4.8.0-beta00007/api/Lucene.Net.TestFramework/Lucene.Net.Codecs.html)) *\r\n- A how-to on creating a custom codec * ([example](https://dzone.com/articles/build-your-own-lucene-codec))\r\n- A how-to for testing a custom codec using the test framework * ([example](https://github.com/apache/lucenenet/blob/4ef61cba234ab87f9751c07f278a833d311d2c7a/src/Lucene.Net.Tests.TestFramework.DependencyInjection/Startup.cs))\r\n- A how-to for manual registration of custom codecs when not using DI *\r\n- A how-to for DI registration of codecs with ASP.NET Core *\r\n- A how-to for DI registration of codecs with a console application using Microsoft.Extensions.DependencyInjection\r\n- A how-to for DI registration of codecs using a 3rd party DI framework\r\n\r\nI think the ones with the asterisk are the most important.\r\n\r\nIdeally, they would be separate documents that are referenced in other relevant places. For example, there should eventually be a document that explains how to configure the test framework with DI in general, which would link over to the how-to on testing a codec.\r\n\r\nI am also kicking around the idea of making extension methods for `Microsoft.Extensions.DependencyInjection` to make registration of common Lucene.NET services seamless (which of course would simplify the configuration and the docs). For example:\r\n\r\n```c#\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddRazorPages();\r\n    services.AddDefaultLuceneCodecs(); // Register Lucene.NET Codecs with DI in one line\r\n\r\n    services.AddScoped<IMyDependency, MyDependency>();\r\n    services.AddTransient<IOperationTransient, Operation>();\r\n}\r\n```\r\n\r\nOne issue with doing so is whether we should take a dependency on `Micorsoft.Extensions.DependencyInjection.Abstractions` to build the functionality into our existing assemblies, or create additional integration assemblies (and there would need to be several of them). The cost of taking on a non-invasive dependency to make it \"just work\" with Microsoft apps seems low compared to creating several packages for the sake of integration, so I am leaning toward that approach, especially since we have already taken a dependency on `Microsoft.Extensions.Configuration.Abstractions` for a similar reason.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635477815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635487700","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635487700","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635487700,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTQ4NzcwMA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T17:26:12Z","updated_at":"2020-05-28T17:26:12Z","author_association":"CONTRIBUTOR","body":"> Actually this isn't going to work:\r\n\r\n   >> Change the uid values to include the orig package name like core/Lucene.Net.Codecs (or similar).\r\n\r\n> This is because internally for each namespace an automatic UID will be assigned to it by docfx and we cannot change it. This is really why there's odd behavior especially for the Lucene.Net.Codec one because it exists in 3 places.\r\n\r\nSeems a bit odd that it is not supported, as it is quite common for Microsoft .NET assemblies to extend namespaces. In fact, in the [Dependency injection in ASP.NET Core]() document, they specifically recommend putting extension methods in the `Microsoft.Extensions.DependencyInjection` namespace even though the assembly name will have to be different to avoid a collision.\r\n\r\nAny chance we could contribute it back to docFx?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635487700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635661501","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-635661501","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":635661501,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNTY2MTUwMQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-28T23:06:34Z","updated_at":"2020-05-28T23:06:34Z","author_association":"CONTRIBUTOR","body":"Right well if you just want to be able to have pure documentation pages like how-to's then we just make normal pages and table of contents, just like the normal lucene website. Like the MS docs you mentioned https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1 these are not based on API generated docs, these are just pages which of course we can do. If you want to put docs/examples directly into the namespace generated code for namespaces/classes that is fine too and that is how the current lucene 'overview' files work. Apart from that though we can just make our own pages do to whatever we want like the website.\r\n\r\n> Seems a bit odd that it is not supported, as it is quite common for Microsoft .NET assemblies to extend namespaces\r\n\r\nYep i know and it's been mentioned a few times in that docfx thread but they aren't responded to that and I'm unsure what the story is for this for DocFx 3 (or when that is ever released). The end result though is trying to change the UIDs for namespaces is going to result in huge changes to everything and I don't really want to go down that rabbit hole since I think the get that right is going to take weeks of my time. I'm pretty sure I can get the site build with sub-sites and have it looking/working relatively similar. The challenge from there is not being able to cross reference a doc by ID between different site builds but I don't think the lucene docs can do that either. Though at least for that scenario it would be fairly easy to build a plugin to enhance cross referencing. There's still a bunch of docfx features I'm investigating for this, it might turn out that there's work arounds for this already.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/635661501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/636520319","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-636520319","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":636520319,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNjUyMDMxOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-05-31T19:54:10Z","updated_at":"2020-05-31T19:54:10Z","author_association":"CONTRIBUTOR","body":"I have created the new PR #291, which contains the draft of codec documentation updates. I ended up putting all of the documentation in the `package.md` file since it turned out to be much less text than I had envisioned.\r\n\r\nHowever, since it is all in one document, there are several places where it references types in `Lucene.Net.Codecs.dll` and `Lucene.Net.TestFramework.dll`. For now, I just use the same `xref` links for everything. Is there a convention you have in mind to use for referencing the sub-sites?\r\n\r\nI would appreciate a review of the PR. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/636520319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/636592141","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-636592141","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":636592141,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNjU5MjE0MQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-01T03:22:55Z","updated_at":"2020-06-01T03:22:55Z","author_association":"CONTRIBUTOR","body":"I've spent quite a lot of time over the weekend investigating options for this issue. Going with the option of creating 'mini sites' has shortcomings as well because the xref won't resolve between sites since they would be compiled separately from each other. I haven't had enough time to see what extending the xref behavior requires and hope that might be possible. I've looked into potentially keeping our structure so that xref behavior 'just works' and was hoping to change the behavior of docfx to be in control over how the api docs are produced. I've tried creating a researching any type of docfx plugin I can find and trawling through the source code to try to figure out if the API builder can be extended and unfortunately I'm coming up short of a hopeful solution. I've asked questions on their gitter channel as well as re-asking them on GH but have received no response. From what I can tell in the docfx code, the API docs and metadata for them are generated directly from using Roslyn which is done in [this class](https://github.com/dotnet/docfx/blob/dev/src/Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn/Visitors/VisitorHelper.cs) and the process [starts here](https://github.com/dotnet/docfx/blob/dev/src/Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn/ExtractMetadata/RoslynIntermediateMetadataExtractor.cs) but none of it is extendable that I can see and the API docs extraction doesn't use their regular pluggable techniques. The only possible extendable place I can see is some obscure [roslyn extension methods](https://github.com/dotnet/docfx/blob/54c9e0593acde8aac9450592ad8fe7268b226d19/src/Microsoft.DocAsCode.Metadata.ManagedReference/ExtractMetadataWorker.cs#L291) but all of this is entirely undocumented so I don't even know if i want to attempt to go down that avenue. Ideally, if we could 'just' change the root namespace UID for each 'package' to be specific to that 'package' then all classes/namespaces in that tree would inherit that base UID which in turn would make unique xref's. But I do not see this as a possibility in docfx. So am left with 2 options:\r\n\r\n* Pursue the 'mini site' method which will require additional research into figuring out how that can work since while somehow allowing cross xref's between sites\r\n* Try modifying docfx core to see if it can produce what we need with changing the base namespace UID's, though i think that's going to consume a lot of research time too and might not end up being 'possible'\r\n\r\nThat's the status so far, i wish there was an actual documented way to do this.  I'll spend a bit more time this week to see what I can find and hopefully come up with some proof of concept.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/636592141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637180074","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-637180074","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":637180074,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzE4MDA3NA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-01T23:32:11Z","updated_at":"2020-06-01T23:32:11Z","author_association":"CONTRIBUTOR","body":"Have had success with the mini site option! I don't think option 2 is feasible as there would be huge amounts of changes needed to docfx. Will keep plugging away at this but i think it's a winner and will actually end up being nicer to use. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637180074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637429897","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-637429897","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":637429897,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzQyOTg5Nw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-02T09:54:33Z","updated_at":"2020-06-02T09:54:33Z","author_association":"CONTRIBUTOR","body":"Great. If that works, we can use it.\r\n\r\nHowever, I took a look at the source code and it seems that the UID functionality can be overridden by injecting a custom `IAssemblySymbol` (which can be a decorator around the original). While it will take more than just this one decorator to ensure that this can be injected, the difficult part is getting to the point where the top level dependency can be overridden to inject our custom decorators.\r\n\r\nI walked up the class dependencies:\r\n\r\n```\r\ninternal class RoslynMetadataExtractor (Inject IAssemblySymbol into constructor)\r\npublic class RoslynIntermediateMetadataExtractor : IExtractor (Extract())\r\npublic class RoslynSourceFileBuildController : IRoslynBuildController (ExtractMetadata())\r\npublic sealed class ExtractMetadataWorker : IDisposable (SaveAllMembersFromCacheAsync())\r\ninternal sealed class MetadataCommand : ISubCommand (Exec())\r\n\r\n[CommandOption(\"metadata\", \"Generate YAML files from source code\")]\r\ninternal sealed class MetadataCommandCreator : CommandCreator<MetadataCommandOptions, MetadataCommand>\r\n{\r\n    public override MetadataCommand CreateCommand(MetadataCommandOptions options, ISubCommandController controller)\r\n    {\r\n        return new MetadataCommand(options);\r\n    }\r\n}\r\n```\r\n\r\nSo, at the top level, we end up with an abstract factory, which is perfect for injecting a custom class with dependencies. The command is being exported using the MEF `ExportAttribute` which is subclassed by `CommandOptionAttribute`.\r\n\r\nI did a bit of research, and it seems that [adding an `ExportMetadataAttribute` can be used to create a custom component with a higher priority than the original component](https://greenicicle.wordpress.com/2010/07/19/replacing-components-with-mef/) in order to replace the built-in factory with a custom one.\r\n\r\nUltimately, it is the [CompositionContainer](https://github.com/dotnet/docfx/blob/dev/src/Microsoft.DocAsCode.Build.Engine/CompositionContainer.cs) that is responsible for resolving the instance of the `MetadataCommandCreator ` class, which is what needs to be tested to verify that we can override the default `MetadataCommandCreator` with a custom one. From that point, replacing and/or decorating the components with custom ones is fairly straightforward.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637429897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637878874","html_url":"https://github.com/apache/lucenenet/issues/282#issuecomment-637878874","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/282","id":637878874,"node_id":"MDEyOklzc3VlQ29tbWVudDYzNzg3ODg3NA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-03T00:09:10Z","updated_at":"2020-06-03T00:09:10Z","author_association":"CONTRIBUTOR","body":"Hi @NightOwl888 thanks for having a peek through the source too. We are already using extensions for DocFx, that is what our `LuceneDocsPlugins` csproj is all about and that is using MEF to extend the functionality. I also discovered that `IAssemblySymbol` is what sets the UID based on the namespace but that is a Roslyn object and not part of docfx and as far as I can tell none of the `ManagedReference` functionality that puts together the API docs isn't using MEF for composing itself though it is used in other places like generating `Conception` (i.e. non API docs) . I didn't see that the `IExtractor` was public, perhaps there's a way to override that but because MEF isn't used in composing this part of the app I'm just not sure. There was a single extension point I did find for the `ManagedReference` which are part of `ExtractMetadataOptions.RoslynExtensionMethods` and these extensions are discovered by `RoslynIntermediateMetadataExtractor.GetAllExtensionMethodsFromCompilation` though i didn't spend much more time to see if this can work.\r\n\r\nThe mini site approach seems to be the preferred approach to multi-project systems. That is what Microsoft are doing (MS docs are built with docfx with probably a lot of customization and knowledge of work arounds), for example: https://docs.microsoft.com/en-us/dotnet/api/?view=aspnetcore-3.1 this is their landing page and each links off to a 'sub site' which is essentially what I'm doing now. Have also chatted with another project and their usage of docfx and that is what they do as well. \r\n\r\nI've discovered more extensibility too which I'm now using. For each subsite an xrefdoc.yml is generated which is a list of cross reference links. Then for each build of each site and main site you can feed in external xrefdoc.yml so that cross references work between projects. I'm trialing this now but there will still be some interesting 'gotchas' because there will still be overlapping namespace UIDs which I still need to figure out. There's also something called a pre-processor which is done at the template building level via nodejs and you can completely override all metadata for each page including namespace information, etc.. .but for some reason i think the UID is protected. I still haven't fully pursued this entirely but it's on my list of tools that we can use.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/637878874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/639110200","html_url":"https://github.com/apache/lucenenet/issues/293#issuecomment-639110200","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/293","id":639110200,"node_id":"MDEyOklzc3VlQ29tbWVudDYzOTExMDIwMA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-04T20:52:43Z","updated_at":"2020-06-04T20:52:43Z","author_association":"CONTRIBUTOR","body":"As this is Lucene's design, not our own, we don't really have the latitude to make changes of this nature. We have been careful to preserve the accessibility of each class and member to match Lucene and to provide the same amount of extensibility in most cases.\r\n\r\nThat being said, as you have already discovered the \"untouched, original value of the query\" is already exposed as a protected `Term` property. I believe it was done this way because in Java it is possible to make \"anonymous classes\". For example, you could declare a new class inline that subclasses `RegexpQuery` in which the `Term` property would automatically be exposed. In C# you have to hand-roll a subclass, which makes it less convenient, but still exposes the same accessibility. Unfortunately, as the intent of the design is lost when converting code line by line, we can't really be sure of all of the places the Lucene designers intended to use \"anonymous classes\" that would potentially be suited for a better approach in .NET.\r\n\r\nAs for a deeper in-depth discussion of the reasoning behind the design, please contact the  [dk.brics.automaton authors](https://www.brics.dk/automaton/) or the [Lucene team](https://lucene.apache.org/core/discussion.html). \r\n\r\nFWIW, the internals of regular expression engines always throw away consumed characters by default and only capture if the regular expression engine supports it, such as with [capturing groups](https://www.regular-expressions.info/refcapture.html). If you are going to argue to support something like this, I would suggest arguing for a standardized capture of some kind rather than a one-off.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/639110200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/639135680","html_url":"https://github.com/apache/lucenenet/issues/293#issuecomment-639135680","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/293","id":639135680,"node_id":"MDEyOklzc3VlQ29tbWVudDYzOTEzNTY4MA==","user":{"login":"43081j","id":5677153,"node_id":"MDQ6VXNlcjU2NzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/5677153?v=4","gravatar_id":"","url":"https://api.github.com/users/43081j","html_url":"https://github.com/43081j","followers_url":"https://api.github.com/users/43081j/followers","following_url":"https://api.github.com/users/43081j/following{/other_user}","gists_url":"https://api.github.com/users/43081j/gists{/gist_id}","starred_url":"https://api.github.com/users/43081j/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/43081j/subscriptions","organizations_url":"https://api.github.com/users/43081j/orgs","repos_url":"https://api.github.com/users/43081j/repos","events_url":"https://api.github.com/users/43081j/events{/privacy}","received_events_url":"https://api.github.com/users/43081j/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-04T21:45:00Z","updated_at":"2020-06-04T21:45:00Z","author_association":"NONE","body":"In this case, this is not a regular expression engine, so I would have expected a regular expression query to be a representation of a \"field\" and a regular expression. It still seems a strange design since a parser should only really be responsible for parsing into a syntax tree. \r\n\r\nEither way what you say makes sense since you can't change the design. We can use a workaround for now.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/639135680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/641981819","html_url":"https://github.com/apache/lucenenet/pull/294#issuecomment-641981819","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/294","id":641981819,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTk4MTgxOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-10T12:44:29Z","updated_at":"2020-06-10T12:44:29Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/641981819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]