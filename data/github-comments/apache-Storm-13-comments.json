[{"url":"https://api.github.com/repos/apache/storm/issues/comments/43094798","html_url":"https://github.com/apache/storm/pull/70#issuecomment-43094798","issue_url":"https://api.github.com/repos/apache/storm/issues/70","id":43094798,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDk0Nzk4","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:22:19Z","updated_at":"2014-05-14T15:22:19Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43094798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458524","html_url":"https://github.com/apache/storm/issues/4122#issuecomment-2612458524","issue_url":"https://api.github.com/repos/apache/storm/issues/4122","id":2612458524,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTg1MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:22:23Z","updated_at":"2025-01-24T12:50:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/70#issuecomment-43094798\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/70#issuecomment-43094798</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458531","html_url":"https://github.com/apache/storm/issues/4122#issuecomment-2612458531","issue_url":"https://api.github.com/repos/apache/storm/issues/4122","id":2612458531,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTg1MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:26:06Z","updated_at":"2025-01-24T12:50:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/70\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/70</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458538","html_url":"https://github.com/apache/storm/issues/4122#issuecomment-2612458538","issue_url":"https://api.github.com/repos/apache/storm/issues/4122","id":2612458538,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTg1Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:26:50Z","updated_at":"2025-01-24T12:50:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks to everyone that helped with this.  I merged the final pull request into master.  Future windows failures should probably have separate JIRA that are more specific to the exact failure.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612458538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462436","html_url":"https://github.com/apache/storm/issues/4147#issuecomment-2612462436","issue_url":"https://api.github.com/repos/apache/storm/issues/4147","id":2612462436,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI0MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:33:39Z","updated_at":"2025-01-24T12:52:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/112\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/112</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462441","html_url":"https://github.com/apache/storm/issues/4147#issuecomment-2612462441","issue_url":"https://api.github.com/repos/apache/storm/issues/4147","id":2612462441,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI0NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:34:55Z","updated_at":"2025-01-24T12:52:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks Michael,</p>\n\n<p>I merged this into master.  You may want to close pull request 104, it is out of date, and will likely not be closed automatically.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463127","html_url":"https://github.com/apache/storm/issues/4152#issuecomment-2612463127","issue_url":"https://api.github.com/repos/apache/storm/issues/4152","id":2612463127,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjMxMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:40:39Z","updated_at":"2025-01-24T12:52:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/62\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/62</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463130","html_url":"https://github.com/apache/storm/issues/4152#issuecomment-2612463130","issue_url":"https://api.github.com/repos/apache/storm/issues/4152","id":2612463130,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjMxMzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:40:42Z","updated_at":"2025-01-24T12:52:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks Prabeesh,</p>\n\n<p>I pulled this into master.  Keep up the good work.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463984","html_url":"https://github.com/apache/storm/issues/4159#issuecomment-2612463984","issue_url":"https://api.github.com/repos/apache/storm/issues/4159","id":2612463984,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjM5ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:46:12Z","updated_at":"2025-01-24T12:53:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks Michael,</p>\n\n<p>I pull this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463991","html_url":"https://github.com/apache/storm/issues/4159#issuecomment-2612463991","issue_url":"https://api.github.com/repos/apache/storm/issues/4159","id":2612463991,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjM5OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T15:46:15Z","updated_at":"2025-01-24T12:53:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/111\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/111</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463132","html_url":"https://github.com/apache/storm/issues/4152#issuecomment-2612463132","issue_url":"https://api.github.com/repos/apache/storm/issues/4152","id":2612463132,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjMxMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T17:22:32Z","updated_at":"2025-01-24T12:52:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=prabeeshk\">prabeeshk</a>:</i>\n<p>Thank you</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464431","html_url":"https://github.com/apache/storm/issues/4162#issuecomment-2612464431","issue_url":"https://api.github.com/repos/apache/storm/issues/4162","id":2612464431,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQ0MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T18:02:03Z","updated_at":"2025-01-24T12:53:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user chu11 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/114\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/114</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-320\" title=\"Support STORM_CONF_DIR environment variable for alternate conf dir\" class=\"issue-link\" data-issue-key=\"STORM-320\"><del>STORM-320</del></a>: Support STORM_CONF_DIR environment variable to support</p>\n\n<p>    Support STORM_CONF_DIR environment variable to support alternate location of storm.yaml file.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/chu11/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/chu11/incubator-storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-320\" title=\"Support STORM_CONF_DIR environment variable for alternate conf dir\" class=\"issue-link\" data-issue-key=\"STORM-320\"><del>STORM-320</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/114.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/114.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #114</p>\n\n<hr />\n<p>commit c7b223824df12858f3029010d655b72f13d777fb<br/>\nAuthor: Albert Chu <chu11@llnl.gov><br/>\nDate:   2014-05-14T17:37:09Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-320\" title=\"Support STORM_CONF_DIR environment variable for alternate conf dir\" class=\"issue-link\" data-issue-key=\"STORM-320\"><del>STORM-320</del></a>: Support STORM_CONF_DIR environment variable to support<br/>\n    alternate location of storm.yaml file.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462442","html_url":"https://github.com/apache/storm/issues/4147#issuecomment-2612462442","issue_url":"https://api.github.com/repos/apache/storm/issues/4147","id":2612462442,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI0NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T20:02:14Z","updated_at":"2025-01-24T12:52:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/104\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/104</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462446","html_url":"https://github.com/apache/storm/issues/4147#issuecomment-2612462446","issue_url":"https://api.github.com/repos/apache/storm/issues/4147","id":2612462446,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI0NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T20:03:03Z","updated_at":"2025-01-24T12:52:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=miguno\">miguno</a>:</i>\n<p>Thanks for merging, Bobby.  I closed the old pull request.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43137832","html_url":"https://github.com/apache/storm/pull/45#issuecomment-43137832","issue_url":"https://api.github.com/repos/apache/storm/issues/45","id":43137832,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTM3ODMy","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:08:00Z","updated_at":"2014-05-14T21:08:00Z","author_association":"CONTRIBUTOR","body":"Please add the JIRA number to the title of the pull request, not just in the description.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43137832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43140198","html_url":"https://github.com/apache/storm/pull/33#issuecomment-43140198","issue_url":"https://api.github.com/repos/apache/storm/issues/33","id":43140198,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQwMTk4","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:29:14Z","updated_at":"2014-05-14T21:29:14Z","author_association":"NONE","body":"@xiaokang, Looks good.  I wrote a quick unit test for this, and sent a [pull request](https://github.com/xiaokang/incubator-storm/pull/1) to you.  Could you take a look?\n\nIf not, I am happy to add the test sometime later.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43140198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612431586","html_url":"https://github.com/apache/storm/issues/3905#issuecomment-2612431586","issue_url":"https://api.github.com/repos/apache/storm/issues/3905","id":2612431586,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0MzE1ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:29:15Z","updated_at":"2025-01-24T12:35:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/33#issuecomment-43140198\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/33#issuecomment-43140198</a></p>\n\n<p>    @xiaokang, Looks good.  I wrote a quick unit test for this, and sent a <span class=\"error\">&#91;pull request&#93;</span>(<a href=\"https://github.com/xiaokang/incubator-storm/pull/1\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/xiaokang/incubator-storm/pull/1</a>) to you.  Could you take a look?</p>\n\n<p>    If not, I am happy to add the test sometime later.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612431586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43140840","html_url":"https://github.com/apache/storm/pull/87#issuecomment-43140840","issue_url":"https://api.github.com/repos/apache/storm/issues/87","id":43140840,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQwODQw","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:35:38Z","updated_at":"2014-05-14T21:35:38Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43140840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460269","html_url":"https://github.com/apache/storm/issues/4137#issuecomment-2612460269","issue_url":"https://api.github.com/repos/apache/storm/issues/4137","id":2612460269,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjAyNjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:35:39Z","updated_at":"2025-01-24T12:51:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/87#issuecomment-43140840\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/87#issuecomment-43140840</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43141466","html_url":"https://github.com/apache/storm/pull/43#issuecomment-43141466","issue_url":"https://api.github.com/repos/apache/storm/issues/43","id":43141466,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQxNDY2","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:41:35Z","updated_at":"2014-05-14T21:41:35Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43141466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612454389","html_url":"https://github.com/apache/storm/issues/4087#issuecomment-2612454389","issue_url":"https://api.github.com/repos/apache/storm/issues/4087","id":2612454389,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTQzODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T21:41:37Z","updated_at":"2025-01-24T12:48:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/43#issuecomment-43141466\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/43#issuecomment-43141466</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612454389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145276","html_url":"https://github.com/apache/storm/pull/51#issuecomment-43145276","issue_url":"https://api.github.com/repos/apache/storm/issues/51","id":43145276,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQ1Mjc2","user":{"login":"nathanmarz","id":131416,"node_id":"MDQ6VXNlcjEzMTQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/131416?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanmarz","html_url":"https://github.com/nathanmarz","followers_url":"https://api.github.com/users/nathanmarz/followers","following_url":"https://api.github.com/users/nathanmarz/following{/other_user}","gists_url":"https://api.github.com/users/nathanmarz/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanmarz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanmarz/subscriptions","organizations_url":"https://api.github.com/users/nathanmarz/orgs","repos_url":"https://api.github.com/users/nathanmarz/repos","events_url":"https://api.github.com/users/nathanmarz/events{/privacy}","received_events_url":"https://api.github.com/users/nathanmarz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:19:12Z","updated_at":"2014-05-14T22:19:12Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456540","html_url":"https://github.com/apache/storm/issues/4106#issuecomment-2612456540","issue_url":"https://api.github.com/repos/apache/storm/issues/4106","id":2612456540,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTY1NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:19:13Z","updated_at":"2025-01-24T12:49:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nathanmarz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/51#issuecomment-43145276\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/51#issuecomment-43145276</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145410","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43145410","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43145410,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQ1NDEw","user":{"login":"nathanmarz","id":131416,"node_id":"MDQ6VXNlcjEzMTQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/131416?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanmarz","html_url":"https://github.com/nathanmarz","followers_url":"https://api.github.com/users/nathanmarz/followers","following_url":"https://api.github.com/users/nathanmarz/following{/other_user}","gists_url":"https://api.github.com/users/nathanmarz/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanmarz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanmarz/subscriptions","organizations_url":"https://api.github.com/users/nathanmarz/orgs","repos_url":"https://api.github.com/users/nathanmarz/repos","events_url":"https://api.github.com/users/nathanmarz/events{/privacy}","received_events_url":"https://api.github.com/users/nathanmarz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:20:35Z","updated_at":"2014-05-14T22:20:35Z","author_association":"CONTRIBUTOR","body":"Why does this avoid being killed when under heavy ZK load?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452671","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452671","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452671,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:20:36Z","updated_at":"2025-01-24T12:47:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nathanmarz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43145410\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43145410</a></p>\n\n<p>    Why does this avoid being killed when under heavy ZK load?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440266","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440266","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440266,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:11Z","updated_at":"2025-01-24T12:40:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665246\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665246</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/multilang/JsonSerializer.java &#8212;<br/>\n    @@ -0,0 +1,164 @@<br/>\n    +package backtype.storm.multilang;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.DataOutputStream;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStream;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.io.OutputStream;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.json.simple.JSONObject;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +<br/>\n    +/**<br/>\n    + * JsonSerializer implements the JSON multilang protocol.<br/>\n    + */<br/>\n    +public class JsonSerializer implements ISerializer {<br/>\n    +    private DataOutputStream processIn;<br/>\n    +    private BufferedReader processOut;<br/>\n    +<br/>\n    +    public void initialize(OutputStream processIn, InputStream processOut) </p>\n{\n    +this.processIn = new DataOutputStream(processIn);\n    +this.processOut = new BufferedReader(new InputStreamReader(processOut));\n    +    }\n<p>    +<br/>\n    +    public Number connect(Map conf, TopologyContext context)<br/>\n    +    throws IOException, NoOutputException </p>\n{\n    +JSONObject setupInfo = new JSONObject();\n    +setupInfo.put(\"pidDir\", context.getPIDDir());\n    +setupInfo.put(\"conf\", conf);\n    +setupInfo.put(\"context\", context);\n    +writeMessage(setupInfo);\n    +\n    +Number pid = (Number) ((JSONObject) readMessage()).get(\"pid\");\n    +return pid;\n    +    }\n<p>    +<br/>\n    +    public void writeBoltMsg(BoltMsg boltMsg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"id\", boltMsg.getId());\n    +obj.put(\"comp\", boltMsg.getComp());\n    +obj.put(\"stream\", boltMsg.getStream());\n    +obj.put(\"task\", boltMsg.getTask());\n    +obj.put(\"tuple\", boltMsg.getTuple());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeSpoutMsg(SpoutMsg msg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"command\", msg.getCommand());\n    +obj.put(\"id\", msg.getId());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeTaskIds(List<Integer> taskIds) throws IOException </p>\n{\n    +writeMessage(taskIds);\n    +    }\n<p>    +<br/>\n    +    private void writeMessage(Object msg) throws IOException </p>\n{\n    +writeString(JSONValue.toJSONString(msg));\n    +    }\n<p>    +<br/>\n    +    private void writeString(String str) throws IOException </p>\n{\n    +byte[] strBytes = str.getBytes(\"UTF-8\");\n    +processIn.write(strBytes, 0, strBytes.length);\n    +processIn.writeBytes(\"\\nend\\n\");\n    +processIn.flush();\n    +    }\n<p>    +<br/>\n    +    public ShellMsg readShellMsg() throws IOException, NoOutputException {<br/>\n    +JSONObject msg = (JSONObject) readMessage();<br/>\n    +ShellMsg shellMsg = new ShellMsg();<br/>\n    +<br/>\n    +String command = (String) msg.get(\"command\");<br/>\n    +shellMsg.setCommand(command);<br/>\n    +<br/>\n    +Object id = msg.get(\"id\");<br/>\n    +shellMsg.setId(id);<br/>\n    +<br/>\n    +String log = (String) msg.get(\"msg\");<br/>\n    +shellMsg.setMsg(log);<br/>\n    +<br/>\n    +String stream = (String) msg.get(\"stream\");<br/>\n    +if (stream == null)<br/>\n    +    stream = Utils.DEFAULT_STREAM_ID;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Tiny nit: Can we put this in a block?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440272","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440272","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440272,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyNzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:12Z","updated_at":"2025-01-24T12:40:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665250\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665250</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/multilang/JsonSerializer.java &#8212;<br/>\n    @@ -0,0 +1,164 @@<br/>\n    +package backtype.storm.multilang;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.DataOutputStream;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStream;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.io.OutputStream;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.json.simple.JSONObject;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +<br/>\n    +/**<br/>\n    + * JsonSerializer implements the JSON multilang protocol.<br/>\n    + */<br/>\n    +public class JsonSerializer implements ISerializer {<br/>\n    +    private DataOutputStream processIn;<br/>\n    +    private BufferedReader processOut;<br/>\n    +<br/>\n    +    public void initialize(OutputStream processIn, InputStream processOut) </p>\n{\n    +this.processIn = new DataOutputStream(processIn);\n    +this.processOut = new BufferedReader(new InputStreamReader(processOut));\n    +    }\n<p>    +<br/>\n    +    public Number connect(Map conf, TopologyContext context)<br/>\n    +    throws IOException, NoOutputException </p>\n{\n    +JSONObject setupInfo = new JSONObject();\n    +setupInfo.put(\"pidDir\", context.getPIDDir());\n    +setupInfo.put(\"conf\", conf);\n    +setupInfo.put(\"context\", context);\n    +writeMessage(setupInfo);\n    +\n    +Number pid = (Number) ((JSONObject) readMessage()).get(\"pid\");\n    +return pid;\n    +    }\n<p>    +<br/>\n    +    public void writeBoltMsg(BoltMsg boltMsg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"id\", boltMsg.getId());\n    +obj.put(\"comp\", boltMsg.getComp());\n    +obj.put(\"stream\", boltMsg.getStream());\n    +obj.put(\"task\", boltMsg.getTask());\n    +obj.put(\"tuple\", boltMsg.getTuple());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeSpoutMsg(SpoutMsg msg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"command\", msg.getCommand());\n    +obj.put(\"id\", msg.getId());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeTaskIds(List<Integer> taskIds) throws IOException </p>\n{\n    +writeMessage(taskIds);\n    +    }\n<p>    +<br/>\n    +    private void writeMessage(Object msg) throws IOException </p>\n{\n    +writeString(JSONValue.toJSONString(msg));\n    +    }\n<p>    +<br/>\n    +    private void writeString(String str) throws IOException </p>\n{\n    +byte[] strBytes = str.getBytes(\"UTF-8\");\n    +processIn.write(strBytes, 0, strBytes.length);\n    +processIn.writeBytes(\"\\nend\\n\");\n    +processIn.flush();\n    +    }\n<p>    +<br/>\n    +    public ShellMsg readShellMsg() throws IOException, NoOutputException {<br/>\n    +JSONObject msg = (JSONObject) readMessage();<br/>\n    +ShellMsg shellMsg = new ShellMsg();<br/>\n    +<br/>\n    +String command = (String) msg.get(\"command\");<br/>\n    +shellMsg.setCommand(command);<br/>\n    +<br/>\n    +Object id = msg.get(\"id\");<br/>\n    +shellMsg.setId(id);<br/>\n    +<br/>\n    +String log = (String) msg.get(\"msg\");<br/>\n    +shellMsg.setMsg(log);<br/>\n    +<br/>\n    +String stream = (String) msg.get(\"stream\");<br/>\n    +if (stream == null)<br/>\n    +    stream = Utils.DEFAULT_STREAM_ID;<br/>\n    +shellMsg.setStream(stream);<br/>\n    +<br/>\n    +Object taskObj = msg.get(\"task\");<br/>\n    +if (taskObj != null) </p>\n{\n    +    shellMsg.setTask((Long) taskObj);\n    +}\n<p> else </p>\n{\n    +    shellMsg.setTask(0);\n    +}\n<p>    +<br/>\n    +Object need_task_ids = msg.get(\"need_task_ids\");<br/>\n    +if (need_task_ids == null || ((Boolean) need_task_ids).booleanValue()) </p>\n{\n    +    shellMsg.setNeedTaskIds(true);\n    +}\n<p> else </p>\n{\n    +    shellMsg.setNeedTaskIds(false);\n    +}\n<p>    +<br/>\n    +shellMsg.setTuple((List) msg.get(\"tuple\"));<br/>\n    +<br/>\n    +List<Tuple> anchors = new ArrayList<Tuple>();<br/>\n    +Object anchorObj = msg.get(\"anchors\");<br/>\n    +if (anchorObj != null) {<br/>\n    +    if (anchorObj instanceof String) </p>\n{\n    +anchorObj = Arrays.asList(anchorObj);\n    +    }\n<p>    +    for (Object o : (List) anchorObj) </p>\n{\n    +shellMsg.addAnchor((String) o);\n    +    }\n<p>    +}<br/>\n    +<br/>\n    +return shellMsg;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Object readMessage() throws IOException, NoOutputException {<br/>\n    +String string = readString();<br/>\n    +Object msg = JSONValue.parse(string);<br/>\n    +if (msg != null) </p>\n{\n    +    return msg;\n    +}\n<p> else </p>\n{\n    +    throw new IOException(\"unable to parse: \" + string);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private String readString() throws IOException, NoOutputException {<br/>\n    +StringBuilder line = new StringBuilder();<br/>\n    +<br/>\n    +// synchronized (processOut) {<br/>\n    +while (true) {<br/>\n    +    String subline = processOut.readLine();<br/>\n    +    if (subline == null) {<br/>\n    +StringBuilder errorMessage = new StringBuilder();<br/>\n    +errorMessage.append(\"Pipe to subprocess seems to be broken!\");<br/>\n    +if (line.length() == 0) </p>\n{\n    +    errorMessage.append(\" No output read.\\n\");\n    +}\n<p> else </p>\n{\n    +    errorMessage.append(\" Currently read output: \"\n    +    + line.toString() + \"\\n\");\n    +}\n<p>    +errorMessage.append(\"Serializer Exception:\\n\");<br/>\n    +throw new NoOutputException(errorMessage.toString());<br/>\n    +    }<br/>\n    +    if (subline.equals(\"end\")) </p>\n{\n    +break;\n    +    }\n<p>    +    if (line.length() != 0) </p>\n{\n    +line.append(\"\\n\");\n    +    }\n<p>    +    line.append(subline);<br/>\n    +}<br/>\n    +// }<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    commented `synchronized` can be removed if it is not needed.  Looks like it may have come from other code that already had it commented out.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440275","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440275","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440275,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyNzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:18Z","updated_at":"2025-01-24T12:40:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665255\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665255</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we rename `spoutMsg` to `_spoutMsg` to match the other private fields?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440281","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440281","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440281,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:36Z","updated_at":"2025-01-24T12:40:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665267\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665267</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Do we still need to set a default stream id if we get a null?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440285","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440285","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440285,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:37Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665268\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665268</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");</li>\n\t<li>Object messageId = (Object) action.get(\"id\");</li>\n\t<li>if (task == null) {<br/>\n    +    String stream = shellMsg.getStream();<br/>\n    +    Long task = shellMsg.getTask();<br/>\n    +    List<Object> tuple = shellMsg.getTuple();<br/>\n    +    Object messageId = shellMsg.getId();<br/>\n    +    if (task == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Could this also be null?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440287","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440287","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440287,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:21:44Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12665273\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12665273</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/task/ShellBolt.java &#8212;<br/>\n    @@ -204,38 +196,31 @@ private void handleFail(Map action) </p>\n{\n     _collector.fail(failed);\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleError(Map action) {</li>\n\t<li>String msg = (String) action.get(\"msg\");<br/>\n    +    private void handleError(String msg) \n{\n     _collector.reportError(new Exception(\"Shell Process Exception: \" + msg));\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleEmit(Map action) throws InterruptedException {</li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if(stream==null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");<br/>\n    +    private void handleEmit(ShellMsg shellMsg) throws InterruptedException {<br/>\n     List<Tuple> anchors = new ArrayList<Tuple>();</li>\n\t<li>Object anchorObj = action.get(\"anchors\");</li>\n\t<li>if(anchorObj!=null) {</li>\n\t<li>if(anchorObj instanceof String) \n{\n    -anchorObj = Arrays.asList(anchorObj);\n    -    }</li>\n\t<li>for(Object o: (List) anchorObj) {</li>\n\t<li>Tuple t = _inputs.get((String) o);<br/>\n    +List<String> recvAnchors = shellMsg.getAnchors();<br/>\n    +if (recvAnchors != null) {<br/>\n    +    for (String anchor : recvAnchors) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +Tuple t = _inputs.get(anchor);     if (t == null) {\n    -    throw new RuntimeException(\"Anchored onto \" + o + \" after ack/fail\");\n    +    throw new RuntimeException(\"Anchored onto \" + anchor + \" after ack/fail\");\n     }     anchors.add(t); }</span> </div>\n<p>     }</p></li>\n\t<li>if(task==null) {</li>\n\t<li>List<Integer> outtasks = _collector.emit(stream, anchors, tuple);</li>\n\t<li>Object need_task_ids = action.get(\"need_task_ids\");</li>\n\t<li>if (need_task_ids == null || ((Boolean) need_task_ids).booleanValue()) {<br/>\n    +<br/>\n    +if(shellMsg.getTask() == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Could this be null here too?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145614","html_url":"https://github.com/apache/storm/pull/84#issuecomment-43145614","issue_url":"https://api.github.com/repos/apache/storm/issues/84","id":43145614,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQ1NjE0","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:22:58Z","updated_at":"2014-05-14T22:22:58Z","author_association":"NONE","body":"Just had some minor questions/comments.  Looks good.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440292","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440292","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440292,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:23:00Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#issuecomment-43145614\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#issuecomment-43145614</a></p>\n\n<p>    Just had some minor questions/comments.  Looks good.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145721","html_url":"https://github.com/apache/storm/pull/84#issuecomment-43145721","issue_url":"https://api.github.com/repos/apache/storm/issues/84","id":43145721,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTQ1NzIx","user":{"login":"nathanmarz","id":131416,"node_id":"MDQ6VXNlcjEzMTQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/131416?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanmarz","html_url":"https://github.com/nathanmarz","followers_url":"https://api.github.com/users/nathanmarz/followers","following_url":"https://api.github.com/users/nathanmarz/following{/other_user}","gists_url":"https://api.github.com/users/nathanmarz/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanmarz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanmarz/subscriptions","organizations_url":"https://api.github.com/users/nathanmarz/orgs","repos_url":"https://api.github.com/users/nathanmarz/repos","events_url":"https://api.github.com/users/nathanmarz/events{/privacy}","received_events_url":"https://api.github.com/users/nathanmarz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:24:13Z","updated_at":"2014-05-14T22:24:13Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43145721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440294","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440294","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440294,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyOTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-14T22:24:15Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nathanmarz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#issuecomment-43145721\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#issuecomment-43145721</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464200","html_url":"https://github.com/apache/storm/issues/4161#issuecomment-2612464200","issue_url":"https://api.github.com/repos/apache/storm/issues/4161","id":2612464200,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQyMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T01:15:15Z","updated_at":"2025-01-24T12:53:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=clockfly\">clockfly</a>:</i>\n<p>This may happen when you are on Windows or copy source code from Windows.<br/>\nTo verify this, please make sure file \"storm-core/src/dev/resources/storm.rb\"(another file is storm.py) is a symbol link. If it is not, you need to use git to download fresh code on Linux.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456840","html_url":"https://github.com/apache/storm/issues/4109#issuecomment-2612456840","issue_url":"https://api.github.com/repos/apache/storm/issues/4109","id":2612456840,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTY4NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T04:33:38Z","updated_at":"2025-01-24T12:49:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user stphung opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/115\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/115</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-267\" title=\"storm.yaml references invalid package for LoggingMetricsConsumer\" class=\"issue-link\" data-issue-key=\"STORM-267\"><del>STORM-267</del></a> - Corrected namespace for LoggingMetricsConsumer</p>\n\n<p>    Simple change from plural to non-plural to match the namespace as described in the JIRA ticket.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/stphung/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/stphung/incubator-storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-267\" title=\"storm.yaml references invalid package for LoggingMetricsConsumer\" class=\"issue-link\" data-issue-key=\"STORM-267\"><del>STORM-267</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/115.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/115.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #115</p>\n\n<hr />\n<p>commit b75e433b07b3459d31a67ce8b446333380078e48<br/>\nAuthor: Steven Phung <stphung@gmail.com><br/>\nDate:   2014-05-15T04:30:26Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-267\" title=\"storm.yaml references invalid package for LoggingMetricsConsumer\" class=\"issue-link\" data-issue-key=\"STORM-267\"><del>STORM-267</del></a> - Corrected namespace for LoggingMetricsConsumer</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440299","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440299","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440299,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAyOTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T04:43:18Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jsgilmore commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12673977\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12673977</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    We do, since the user does not have to specify an output stream, in which case it must go out on the default stream.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440305","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440305","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440305,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T04:46:48Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jsgilmore commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12674019\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12674019</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");</li>\n\t<li>Object messageId = (Object) action.get(\"id\");</li>\n\t<li>if (task == null) {<br/>\n    +    String stream = shellMsg.getStream();<br/>\n    +    Long task = shellMsg.getTask();<br/>\n    +    List<Object> tuple = shellMsg.getTuple();<br/>\n    +    Object messageId = shellMsg.getId();<br/>\n    +    if (task == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This is interesting. My idea was that it would be an error for a serializer to return a null message and the current JSON serializer will never return null, but because the serializer is pluggable, I should probably enforce it here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440314","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440314","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440314,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T04:51:16Z","updated_at":"2025-01-24T12:40:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jsgilmore commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12674118\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12674118</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/multilang/JsonSerializer.java &#8212;<br/>\n    @@ -0,0 +1,164 @@<br/>\n    +package backtype.storm.multilang;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.DataOutputStream;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStream;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.io.OutputStream;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.json.simple.JSONObject;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +<br/>\n    +/**<br/>\n    + * JsonSerializer implements the JSON multilang protocol.<br/>\n    + */<br/>\n    +public class JsonSerializer implements ISerializer {<br/>\n    +    private DataOutputStream processIn;<br/>\n    +    private BufferedReader processOut;<br/>\n    +<br/>\n    +    public void initialize(OutputStream processIn, InputStream processOut) </p>\n{\n    +this.processIn = new DataOutputStream(processIn);\n    +this.processOut = new BufferedReader(new InputStreamReader(processOut));\n    +    }\n<p>    +<br/>\n    +    public Number connect(Map conf, TopologyContext context)<br/>\n    +    throws IOException, NoOutputException </p>\n{\n    +JSONObject setupInfo = new JSONObject();\n    +setupInfo.put(\"pidDir\", context.getPIDDir());\n    +setupInfo.put(\"conf\", conf);\n    +setupInfo.put(\"context\", context);\n    +writeMessage(setupInfo);\n    +\n    +Number pid = (Number) ((JSONObject) readMessage()).get(\"pid\");\n    +return pid;\n    +    }\n<p>    +<br/>\n    +    public void writeBoltMsg(BoltMsg boltMsg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"id\", boltMsg.getId());\n    +obj.put(\"comp\", boltMsg.getComp());\n    +obj.put(\"stream\", boltMsg.getStream());\n    +obj.put(\"task\", boltMsg.getTask());\n    +obj.put(\"tuple\", boltMsg.getTuple());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeSpoutMsg(SpoutMsg msg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"command\", msg.getCommand());\n    +obj.put(\"id\", msg.getId());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeTaskIds(List<Integer> taskIds) throws IOException </p>\n{\n    +writeMessage(taskIds);\n    +    }\n<p>    +<br/>\n    +    private void writeMessage(Object msg) throws IOException </p>\n{\n    +writeString(JSONValue.toJSONString(msg));\n    +    }\n<p>    +<br/>\n    +    private void writeString(String str) throws IOException </p>\n{\n    +byte[] strBytes = str.getBytes(\"UTF-8\");\n    +processIn.write(strBytes, 0, strBytes.length);\n    +processIn.writeBytes(\"\\nend\\n\");\n    +processIn.flush();\n    +    }\n<p>    +<br/>\n    +    public ShellMsg readShellMsg() throws IOException, NoOutputException {<br/>\n    +JSONObject msg = (JSONObject) readMessage();<br/>\n    +ShellMsg shellMsg = new ShellMsg();<br/>\n    +<br/>\n    +String command = (String) msg.get(\"command\");<br/>\n    +shellMsg.setCommand(command);<br/>\n    +<br/>\n    +Object id = msg.get(\"id\");<br/>\n    +shellMsg.setId(id);<br/>\n    +<br/>\n    +String log = (String) msg.get(\"msg\");<br/>\n    +shellMsg.setMsg(log);<br/>\n    +<br/>\n    +String stream = (String) msg.get(\"stream\");<br/>\n    +if (stream == null)<br/>\n    +    stream = Utils.DEFAULT_STREAM_ID;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Sorry, but I don't understand what you mean with block here? Do you mean functional block {}?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440318","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440318","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440318,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T04:57:06Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jsgilmore commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12674208\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12674208</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/task/ShellBolt.java &#8212;<br/>\n    @@ -204,38 +196,31 @@ private void handleFail(Map action) </p>\n{\n     _collector.fail(failed);\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleError(Map action) {</li>\n\t<li>String msg = (String) action.get(\"msg\");<br/>\n    +    private void handleError(String msg) \n{\n     _collector.reportError(new Exception(\"Shell Process Exception: \" + msg));\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleEmit(Map action) throws InterruptedException {</li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if(stream==null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");<br/>\n    +    private void handleEmit(ShellMsg shellMsg) throws InterruptedException {<br/>\n     List<Tuple> anchors = new ArrayList<Tuple>();</li>\n\t<li>Object anchorObj = action.get(\"anchors\");</li>\n\t<li>if(anchorObj!=null) {</li>\n\t<li>if(anchorObj instanceof String) \n{\n    -anchorObj = Arrays.asList(anchorObj);\n    -    }</li>\n\t<li>for(Object o: (List) anchorObj) {</li>\n\t<li>Tuple t = _inputs.get((String) o);<br/>\n    +List<String> recvAnchors = shellMsg.getAnchors();<br/>\n    +if (recvAnchors != null) {<br/>\n    +    for (String anchor : recvAnchors) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +Tuple t = _inputs.get(anchor);     if (t == null) {\n    -    throw new RuntimeException(\"Anchored onto \" + o + \" after ack/fail\");\n    +    throw new RuntimeException(\"Anchored onto \" + anchor + \" after ack/fail\");\n     }     anchors.add(t); }</span> </div>\n<p>     }</p></li>\n\t<li>if(task==null) {</li>\n\t<li>List<Integer> outtasks = _collector.emit(stream, anchors, tuple);</li>\n\t<li>Object need_task_ids = action.get(\"need_task_ids\");</li>\n\t<li>if (need_task_ids == null || ((Boolean) need_task_ids).booleanValue()) {<br/>\n    +<br/>\n    +if(shellMsg.getTask() == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The getTask method returns a long and as far as I understand it: primitive types in Java can't be null.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440324","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440324","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440324,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T05:02:29Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jsgilmore commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12674263\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12674263</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");</li>\n\t<li>Object messageId = (Object) action.get(\"id\");</li>\n\t<li>if (task == null) {<br/>\n    +    String stream = shellMsg.getStream();<br/>\n    +    Long task = shellMsg.getTask();<br/>\n    +    List<Object> tuple = shellMsg.getTuple();<br/>\n    +    Object messageId = shellMsg.getId();<br/>\n    +    if (task == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    So currently m y thinking is that if any of these fields are null, it's a critical error. So I'm fine with a NullPointerException being thrown when another serializer developer returns null for any of these values. If I check that these are null, I'll just throw a NullPointerException anyway, but I'm open to other suggestions.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43171080","html_url":"https://github.com/apache/storm/pull/102#issuecomment-43171080","issue_url":"https://api.github.com/repos/apache/storm/issues/102","id":43171080,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMTcxMDgw","user":{"login":"ChitturiPadma","id":5779462,"node_id":"MDQ6VXNlcjU3Nzk0NjI=","avatar_url":"https://avatars.githubusercontent.com/u/5779462?v=4","gravatar_id":"","url":"https://api.github.com/users/ChitturiPadma","html_url":"https://github.com/ChitturiPadma","followers_url":"https://api.github.com/users/ChitturiPadma/followers","following_url":"https://api.github.com/users/ChitturiPadma/following{/other_user}","gists_url":"https://api.github.com/users/ChitturiPadma/gists{/gist_id}","starred_url":"https://api.github.com/users/ChitturiPadma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChitturiPadma/subscriptions","organizations_url":"https://api.github.com/users/ChitturiPadma/orgs","repos_url":"https://api.github.com/users/ChitturiPadma/repos","events_url":"https://api.github.com/users/ChitturiPadma/events{/privacy}","received_events_url":"https://api.github.com/users/ChitturiPadma/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T05:54:59Z","updated_at":"2014-05-15T05:54:59Z","author_association":"CONTRIBUTOR","body":"Any more comments on this pull request ? \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43171080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462804","html_url":"https://github.com/apache/storm/issues/4150#issuecomment-2612462804","issue_url":"https://api.github.com/repos/apache/storm/issues/4150","id":2612462804,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI4MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T05:55:00Z","updated_at":"2025-01-24T12:52:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ChitturiPadma commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/102#issuecomment-43171080\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/102#issuecomment-43171080</a></p>\n\n<p>    Any more comments on this pull request ? </p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462629","html_url":"https://github.com/apache/storm/issues/4149#issuecomment-2612462629","issue_url":"https://api.github.com/repos/apache/storm/issues/4149","id":2612462629,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI2Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T10:36:49Z","updated_at":"2025-01-24T12:52:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thecoop1984\">thecoop1984</a>:</i>\n<p>Deleting the supervisor and worker state directories and unzipping this tar into storm.home will reproduce this bug.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440329","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440329","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440329,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T12:50:10Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12686513\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12686513</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/multilang/JsonSerializer.java &#8212;<br/>\n    @@ -0,0 +1,164 @@<br/>\n    +package backtype.storm.multilang;<br/>\n    +<br/>\n    +import java.io.BufferedReader;<br/>\n    +import java.io.DataOutputStream;<br/>\n    +import java.io.IOException;<br/>\n    +import java.io.InputStream;<br/>\n    +import java.io.InputStreamReader;<br/>\n    +import java.io.OutputStream;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.json.simple.JSONObject;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +<br/>\n    +/**<br/>\n    + * JsonSerializer implements the JSON multilang protocol.<br/>\n    + */<br/>\n    +public class JsonSerializer implements ISerializer {<br/>\n    +    private DataOutputStream processIn;<br/>\n    +    private BufferedReader processOut;<br/>\n    +<br/>\n    +    public void initialize(OutputStream processIn, InputStream processOut) </p>\n{\n    +this.processIn = new DataOutputStream(processIn);\n    +this.processOut = new BufferedReader(new InputStreamReader(processOut));\n    +    }\n<p>    +<br/>\n    +    public Number connect(Map conf, TopologyContext context)<br/>\n    +    throws IOException, NoOutputException </p>\n{\n    +JSONObject setupInfo = new JSONObject();\n    +setupInfo.put(\"pidDir\", context.getPIDDir());\n    +setupInfo.put(\"conf\", conf);\n    +setupInfo.put(\"context\", context);\n    +writeMessage(setupInfo);\n    +\n    +Number pid = (Number) ((JSONObject) readMessage()).get(\"pid\");\n    +return pid;\n    +    }\n<p>    +<br/>\n    +    public void writeBoltMsg(BoltMsg boltMsg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"id\", boltMsg.getId());\n    +obj.put(\"comp\", boltMsg.getComp());\n    +obj.put(\"stream\", boltMsg.getStream());\n    +obj.put(\"task\", boltMsg.getTask());\n    +obj.put(\"tuple\", boltMsg.getTuple());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeSpoutMsg(SpoutMsg msg) throws IOException </p>\n{\n    +JSONObject obj = new JSONObject();\n    +obj.put(\"command\", msg.getCommand());\n    +obj.put(\"id\", msg.getId());\n    +writeMessage(obj);\n    +    }\n<p>    +<br/>\n    +    public void writeTaskIds(List<Integer> taskIds) throws IOException </p>\n{\n    +writeMessage(taskIds);\n    +    }\n<p>    +<br/>\n    +    private void writeMessage(Object msg) throws IOException </p>\n{\n    +writeString(JSONValue.toJSONString(msg));\n    +    }\n<p>    +<br/>\n    +    private void writeString(String str) throws IOException </p>\n{\n    +byte[] strBytes = str.getBytes(\"UTF-8\");\n    +processIn.write(strBytes, 0, strBytes.length);\n    +processIn.writeBytes(\"\\nend\\n\");\n    +processIn.flush();\n    +    }\n<p>    +<br/>\n    +    public ShellMsg readShellMsg() throws IOException, NoOutputException {<br/>\n    +JSONObject msg = (JSONObject) readMessage();<br/>\n    +ShellMsg shellMsg = new ShellMsg();<br/>\n    +<br/>\n    +String command = (String) msg.get(\"command\");<br/>\n    +shellMsg.setCommand(command);<br/>\n    +<br/>\n    +Object id = msg.get(\"id\");<br/>\n    +shellMsg.setId(id);<br/>\n    +<br/>\n    +String log = (String) msg.get(\"msg\");<br/>\n    +shellMsg.setMsg(log);<br/>\n    +<br/>\n    +String stream = (String) msg.get(\"stream\");<br/>\n    +if (stream == null)<br/>\n    +    stream = Utils.DEFAULT_STREAM_ID;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes, that's what I meant.  Not a big deal though.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440332","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440332","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440332,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T12:52:21Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12686601\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12686601</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/task/ShellBolt.java &#8212;<br/>\n    @@ -204,38 +196,31 @@ private void handleFail(Map action) </p>\n{\n     _collector.fail(failed);\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleError(Map action) {</li>\n\t<li>String msg = (String) action.get(\"msg\");<br/>\n    +    private void handleError(String msg) \n{\n     _collector.reportError(new Exception(\"Shell Process Exception: \" + msg));\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void handleEmit(Map action) throws InterruptedException {</li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if(stream==null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");<br/>\n    +    private void handleEmit(ShellMsg shellMsg) throws InterruptedException {<br/>\n     List<Tuple> anchors = new ArrayList<Tuple>();</li>\n\t<li>Object anchorObj = action.get(\"anchors\");</li>\n\t<li>if(anchorObj!=null) {</li>\n\t<li>if(anchorObj instanceof String) \n{\n    -anchorObj = Arrays.asList(anchorObj);\n    -    }</li>\n\t<li>for(Object o: (List) anchorObj) {</li>\n\t<li>Tuple t = _inputs.get((String) o);<br/>\n    +List<String> recvAnchors = shellMsg.getAnchors();<br/>\n    +if (recvAnchors != null) {<br/>\n    +    for (String anchor : recvAnchors) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +Tuple t = _inputs.get(anchor);     if (t == null) {\n    -    throw new RuntimeException(\"Anchored onto \" + o + \" after ack/fail\");\n    +    throw new RuntimeException(\"Anchored onto \" + anchor + \" after ack/fail\");\n     }     anchors.add(t); }</span> </div>\n<p>     }</p></li>\n\t<li>if(task==null) {</li>\n\t<li>List<Integer> outtasks = _collector.emit(stream, anchors, tuple);</li>\n\t<li>Object need_task_ids = action.get(\"need_task_ids\");</li>\n\t<li>if (need_task_ids == null || ((Boolean) need_task_ids).booleanValue()) {<br/>\n    +<br/>\n    +if(shellMsg.getTask() == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    You are correct.  I thought it was a `Long` with a capital L.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440338","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440338","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440338,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T13:07:24Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12687438\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12687438</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I see, so do we want to leave that up to the ISerializer implementation to return the default stream id when we call readShellMsg, in that case?  Would we ever want to do anything else?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440340","html_url":"https://github.com/apache/storm/issues/3980#issuecomment-2612440340","issue_url":"https://api.github.com/repos/apache/storm/issues/3980","id":2612440340,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDAzNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T13:07:52Z","updated_at":"2025-01-24T12:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/84#discussion_r12687467\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/84#discussion_r12687467</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/ShellSpout.java &#8212;<br/>\n    @@ -35,91 +35,84 @@<br/>\n private SpoutOutputCollector _collector;<br/>\n private String[] _command;<br/>\n private ShellProcess _process;<br/>\n    +    private SpoutMsg spoutMsg;</p>\n\n<p> public ShellSpout(ShellComponent component) </p>\n{\n     this(component.get_execution_command(), component.get_script());\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n public ShellSpout(String... command) </p>\n{\n     _command = command;\n }</li>\n\t<li><p>    +<br/>\n public void open(Map stormConf, TopologyContext context,<br/>\n  SpoutOutputCollector collector) {</p></li>\n\t<li>_process = new ShellProcess(_command);<br/>\n     _collector = collector;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>try \n{\n    -    Number subpid = _process.launch(stormConf, context);\n    -    LOG.info(\"Launched subprocess with pid \" + subpid);\n    -}\n<p> catch (IOException e) </p>\n{\n    -    throw new RuntimeException(\"Error when launching multilang subprocess\\n\" + _process.getErrorsString(), e);\n    -}\n<p>    +_process = new ShellProcess(_command);<br/>\n    +<br/>\n    +Number subpid = _process.launch(stormConf, context);<br/>\n    +LOG.info(\"Launched subprocess with pid \" + subpid);<br/>\n }</p></li>\n</ul>\n\n\n<p> public void close() </p>\n{\n     _process.destroy();\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _next;<br/>\n public void nextTuple() {</li>\n\t<li>if (_next == null) {</li>\n\t<li>_next = new JSONObject();</li>\n\t<li>_next.put(\"command\", \"next\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }<br/>\n    -<br/>\n    -querySubprocess(_next);<br/>\n    +spoutMsg.setCommand(\"next\");<br/>\n    +spoutMsg.setId(\"\");<br/>\n    +querySubprocess();<br/>\n }<br/>\n     <br/>\n    -    private JSONObject _ack;<br/>\n public void ack(Object msgId) {<br/>\n    -if (_ack == null) {<br/>\n    -    _ack = new JSONObject();<br/>\n    -    _ack.put(\"command\", \"ack\");<br/>\n    +if (spoutMsg == null) {    +    spoutMsg = new SpoutMsg();     }\n<p>    -</p></li>\n\t<li>_ack.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_ack);<br/>\n    +spoutMsg.setCommand(\"ack\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private JSONObject _fail;<br/>\n public void fail(Object msgId) {</li>\n\t<li>if (_fail == null) {</li>\n\t<li>_fail = new JSONObject();</li>\n\t<li>_fail.put(\"command\", \"fail\");<br/>\n    +if (spoutMsg == null) \n{\n    +    spoutMsg = new SpoutMsg();\n     }\n<p>    -</p></li>\n\t<li>_fail.put(\"id\", msgId);</li>\n\t<li>querySubprocess(_fail);<br/>\n    +spoutMsg.setCommand(\"fail\");<br/>\n    +spoutMsg.setId(msgId);<br/>\n    +querySubprocess();<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private void querySubprocess(Object query) {<br/>\n    +    private void querySubprocess() {<br/>\n     try {</li>\n\t<li>_process.writeMessage(query);<br/>\n    +    _process.writeSpoutMsg(spoutMsg);</li>\n</ul>\n\n\n<p> while (true) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>JSONObject action = _process.readMessage();</li>\n\t<li>String command = (String) action.get(\"command\");<br/>\n    +ShellMsg shellMsg = _process.readShellMsg();<br/>\n    +String command = shellMsg.getCommand();<br/>\n     if (command.equals(\"sync\")) \n{\n return;\n     }\n<p> else if (command.equals(\"log\")) </p>\n{\n    -    String msg = (String) action.get(\"msg\");\n    +    String msg = shellMsg.getMsg();\n LOG.info(\"Shell msg: \" + msg);\n     }\n<p> else if (command.equals(\"emit\")) {</p></li>\n\t<li>String stream = (String) action.get(\"stream\");</li>\n\t<li>if (stream == null) stream = Utils.DEFAULT_STREAM_ID;</li>\n\t<li>Long task = (Long) action.get(\"task\");</li>\n\t<li>List<Object> tuple = (List) action.get(\"tuple\");</li>\n\t<li>Object messageId = (Object) action.get(\"id\");</li>\n\t<li>if (task == null) {<br/>\n    +    String stream = shellMsg.getStream();<br/>\n    +    Long task = shellMsg.getTask();<br/>\n    +    List<Object> tuple = shellMsg.getTuple();<br/>\n    +    Object messageId = shellMsg.getId();<br/>\n    +    if (task == 0) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    That's reasonable.  No need to change.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612440340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43210740","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43210740","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43210740,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjEwNzQw","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T13:45:20Z","updated_at":"2014-05-15T13:45:20Z","author_association":"CONTRIBUTOR","body":"After  `_ (heartbeat-fn)` the supervisor gives the worker 5 seconds, by default, to heartbeat in again or it thinks it has died.  If ZK is taking a long time, which it can do under heavy load, the supervisor shoots the worker.  Without the call the supervisor gives the worker 120 seconds by default to heartbeat in the first time.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43210740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452675","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452675","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452675,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T13:45:22Z","updated_at":"2025-01-24T12:47:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43210740\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43210740</a></p>\n\n<p>    After  ```_ (heartbeat-fn)``` the supervisor gives the worker 5 seconds, by default, to heartbeat in again or it thinks it has died.  If ZK is taking a long time, which it can do under heavy load, the supervisor shoots the worker.  Without the call the supervisor gives the worker 120 seconds by default to heartbeat in the first time.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464204","html_url":"https://github.com/apache/storm/issues/4161#issuecomment-2612464204","issue_url":"https://api.github.com/repos/apache/storm/issues/4161","id":2612464204,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQyMDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T15:33:05Z","updated_at":"2025-01-24T12:53:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=moongod\">moongod</a>:</i>\n<p>thanks a lot.I follow your suggestions,and use git to download code and compile,the above error has disappeared. But the below errors are born,is it normal? and what's the problem? thanks in advance.</p>\n\n<p>869128 <span class=\"error\">&#91;CuratorFramework-0-EventThread&#93;</span> INFO  org.apache.curator.framework.state.ConnectionStateManager - State change: SUSPENDED<br/>\n869129 <span class=\"error\">&#91;ConnectionStateManager-0&#93;</span> WARN  org.apache.curator.framework.state.ConnectionStateManager - There are no ConnectionStateListeners registered.<br/>\n869129 <span class=\"error\">&#91;CuratorFramework-0-EventThread&#93;</span> INFO  org.apache.curator.framework.state.ConnectionStateManager - State change: SUSPENDED<br/>\n869129 <span class=\"error\">&#91;ConnectionStateManager-0&#93;</span> WARN  org.apache.curator.framework.state.ConnectionStateManager - There are no ConnectionStateListeners registered.<br/>\nTests run: 156, Assertions: 101459, Failures: 3, Errors: 0<br/>\nThere are test failures.<br/>\n<span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n<span class=\"error\">&#91;INFO&#93;</span> Reactor Summary:<br/>\n<span class=\"error\">&#91;INFO&#93;</span> <br/>\n<span class=\"error\">&#91;INFO&#93;</span> Storm ............................................. SUCCESS [  4.120 s]<br/>\n<span class=\"error\">&#91;INFO&#93;</span> maven-shade-clojure-transformer ................... SUCCESS [  5.800 s]<br/>\n<span class=\"error\">&#91;INFO&#93;</span> Storm Core ........................................ FAILURE <span class=\"error\">&#91;16:11 min&#93;</span><br/>\n<span class=\"error\">&#91;INFO&#93;</span> storm-starter ..................................... SKIPPED<br/>\n<span class=\"error\">&#91;INFO&#93;</span> storm-kafka ....................................... SKIPPED<br/>\n<span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n<span class=\"error\">&#91;INFO&#93;</span> BUILD FAILURE<br/>\n<span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n<span class=\"error\">&#91;INFO&#93;</span> Total time: 16:23 min<br/>\n<span class=\"error\">&#91;INFO&#93;</span> Finished at: 2014-05-15T08:22:16-08:00<br/>\n<span class=\"error\">&#91;INFO&#93;</span> Final Memory: 27M/147M<br/>\n<span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n<span class=\"error\">&#91;ERROR&#93;</span> Failed to execute goal com.theoryinpractise:clojure-maven-plugin:1.3.18:test-with-junit (test-clojure) on project storm-core: Clojure failed. -> <span class=\"error\">&#91;Help 1&#93;</span><br/>\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal com.theoryinpractise:clojure-maven-plugin:1.3.18:test-with-junit (test-clojure) on project storm-core: Clojure failed.<br/>\nat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)<br/>\nat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)<br/>\nat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)<br/>\nat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:108)<br/>\nat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:76)<br/>\nat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)<br/>\nat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:116)<br/>\nat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:361)<br/>\nat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)<br/>\nat org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)<br/>\nat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)<br/>\nat org.apache.maven.cli.MavenCli.main(MavenCli.java:157)<br/>\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br/>\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br/>\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br/>\nat java.lang.reflect.Method.invoke(Method.java:483)<br/>\nat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)<br/>\nat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)<br/>\nat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)<br/>\nat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)<br/>\nCaused by: org.apache.maven.plugin.MojoExecutionException: Clojure failed.<br/>\nat com.theoryinpractise.clojure.AbstractClojureCompilerMojo.callClojureWith(AbstractClojureCompilerMojo.java:451)<br/>\nat com.theoryinpractise.clojure.AbstractClojureCompilerMojo.callClojureWith(AbstractClojureCompilerMojo.java:353)<br/>\nat com.theoryinpractise.clojure.ClojureRunTestWithJUnitMojo.execute(ClojureRunTestWithJUnitMojo.java:153)<br/>\nat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:133)<br/>\nat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)<br/>\n... 19 more<br/>\n<span class=\"error\">&#91;ERROR&#93;</span> <br/>\n<span class=\"error\">&#91;ERROR&#93;</span> <br/>\n<span class=\"error\">&#91;ERROR&#93;</span> For more information about the errors and possible solutions, please read the following articles:<br/>\n<span class=\"error\">&#91;ERROR&#93;</span> <span class=\"error\">&#91;Help 1&#93;</span> <a href=\"http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException</a><br/>\n<span class=\"error\">&#91;ERROR&#93;</span> <br/>\n<span class=\"error\">&#91;ERROR&#93;</span> After correcting the problems, you can resume the build with the command<br/>\n<span class=\"error\">&#91;ERROR&#93;</span>   mvn <goals> -rf :storm-core<br/>\n<span class=\"error\">&#91;root@localhost incubator-storm&#93;</span># </p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43227233","html_url":"https://github.com/apache/storm/pull/66#issuecomment-43227233","issue_url":"https://api.github.com/repos/apache/storm/issues/66","id":43227233,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjI3MjMz","user":{"login":"xcthulhu","id":168675,"node_id":"MDQ6VXNlcjE2ODY3NQ==","avatar_url":"https://avatars.githubusercontent.com/u/168675?v=4","gravatar_id":"","url":"https://api.github.com/users/xcthulhu","html_url":"https://github.com/xcthulhu","followers_url":"https://api.github.com/users/xcthulhu/followers","following_url":"https://api.github.com/users/xcthulhu/following{/other_user}","gists_url":"https://api.github.com/users/xcthulhu/gists{/gist_id}","starred_url":"https://api.github.com/users/xcthulhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xcthulhu/subscriptions","organizations_url":"https://api.github.com/users/xcthulhu/orgs","repos_url":"https://api.github.com/users/xcthulhu/repos","events_url":"https://api.github.com/users/xcthulhu/events{/privacy}","received_events_url":"https://api.github.com/users/xcthulhu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T15:48:32Z","updated_at":"2014-05-15T15:48:32Z","author_association":"NONE","body":"+1\n\nIn the very least it would be good to upgrade to clojure 1.5.1 ; in particular sanitary parsing in `clojure.edn` was something I've really always missed in the storm stack.\n\nClojure 1.6 has a ton of bug fixes so it is absolutely worth it: https://github.com/clojure/clojure/blob/master/changes.md#4-bug-fixes\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43227233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456636","html_url":"https://github.com/apache/storm/issues/4107#issuecomment-2612456636","issue_url":"https://api.github.com/repos/apache/storm/issues/4107","id":2612456636,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTY2MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T15:48:33Z","updated_at":"2025-01-24T12:49:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user xcthulhu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/66#issuecomment-43227233\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/66#issuecomment-43227233</a></p>\n\n<p>    +1</p>\n\n<p>    In the very least it would be good to upgrade to clojure 1.5.1 ; in particular sanitary parsing in `clojure.edn` was something I've really always missed in the storm stack.</p>\n\n<p>    Clojure 1.6 has a ton of bug fixes so it is absolutely worth it: <a href=\"https://github.com/clojure/clojure/blob/master/changes.md#4-bug-fixes\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/clojure/clojure/blob/master/changes.md#4-bug-fixes</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612456636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43241008","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43241008","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43241008,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjQxMDA4","user":{"login":"nathanmarz","id":131416,"node_id":"MDQ6VXNlcjEzMTQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/131416?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanmarz","html_url":"https://github.com/nathanmarz","followers_url":"https://api.github.com/users/nathanmarz/followers","following_url":"https://api.github.com/users/nathanmarz/following{/other_user}","gists_url":"https://api.github.com/users/nathanmarz/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanmarz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanmarz/subscriptions","organizations_url":"https://api.github.com/users/nathanmarz/orgs","repos_url":"https://api.github.com/users/nathanmarz/repos","events_url":"https://api.github.com/users/nathanmarz/events{/privacy}","received_events_url":"https://api.github.com/users/nathanmarz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:38:12Z","updated_at":"2014-05-15T17:38:12Z","author_association":"CONTRIBUTOR","body":"The supervisor gives the worker 30 seconds by default to heartbeat after the first time. That's controlled by the config supervisor.worker.timeout.secs.\n\nI'd be fine with removing the ZK heartbeat line, thus allowing the worker to finish launching itself, but I think we should still keep the one that heartbeats to the supervisor. The sooner it heartbeats to the supervisor the sooner the supervisor can move on to other tasks. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43241008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452681","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452681","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452681,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:38:14Z","updated_at":"2025-01-24T12:47:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nathanmarz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43241008\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43241008</a></p>\n\n<p>    The supervisor gives the worker 30 seconds by default to heartbeat after the first time. That's controlled by the config supervisor.worker.timeout.secs.</p>\n\n<p>    I'd be fine with removing the ZK heartbeat line, thus allowing the worker to finish launching itself, but I think we should still keep the one that heartbeats to the supervisor. The sooner it heartbeats to the supervisor the sooner the supervisor can move on to other tasks. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43242063","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43242063","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43242063,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjQyMDYz","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:47:15Z","updated_at":"2014-05-15T17:51:21Z","author_association":"CONTRIBUTOR","body":"You are correct it is 30 seconds. I guess our ZK was more overloaded then I though. I'll put back in the heartbeat to the supervisor.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43242063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452684","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452684","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452684,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:47:19Z","updated_at":"2025-01-24T12:47:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43242063\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43242063</a></p>\n\n<p>    You are correct it is 30 seconds. I guess out ZK was more overloaded then I though. I'll put back in the heartbeat to the supervisor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43242625","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43242625","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43242625,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjQyNjI1","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:51:52Z","updated_at":"2014-05-15T17:51:52Z","author_association":"CONTRIBUTOR","body":"Added back the in line heartbeat to the supervisor.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43242625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452688","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452688","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452688,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T17:51:54Z","updated_at":"2025-01-24T12:47:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43242625\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43242625</a></p>\n\n<p>    Added back the in line heartbeat to the supervisor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462146","html_url":"https://github.com/apache/storm/issues/4145#issuecomment-2612462146","issue_url":"https://api.github.com/repos/apache/storm/issues/4145","id":2612462146,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjIxNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T18:35:36Z","updated_at":"2025-01-24T12:52:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user brndnmtthws commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/94#discussion_r12705493\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/94#discussion_r12705493</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/KafkaUtils.java &#8212;<br/>\n    @@ -159,12 +171,17 @@ public static ByteBufferMessageSet fetchMessages(KafkaConfig config, SimpleConsu<br/>\n     for (int errors = 0; errors < 2 && msgs == null; errors++) {<br/>\n FetchRequestBuilder builder = new FetchRequestBuilder();<br/>\n FetchRequest fetchRequest = builder.addFetch(topic, partitionId, offset, config.fetchSizeBytes).</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>clientId(config.clientId).build();<br/>\n    +    clientId(config.clientId).maxWait(config.fetchMaxWait).build();<br/>\n FetchResponse fetchResponse;<br/>\n try \n{\n     fetchResponse = consumer.fetch(fetchRequest);\n }\n<p> catch (Exception e) {</p></li>\n\t<li>if (e instanceof ConnectException) {<br/>\n    +if (e instanceof ConnectException ||\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Actually, it looks like this is okay with Java 6, unless I'm mistaken.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43248872","html_url":"https://github.com/apache/storm/pull/94#issuecomment-43248872","issue_url":"https://api.github.com/repos/apache/storm/issues/94","id":43248872,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMjQ4ODcy","user":{"login":"brndnmtthws","id":3129093,"node_id":"MDQ6VXNlcjMxMjkwOTM=","avatar_url":"https://avatars.githubusercontent.com/u/3129093?v=4","gravatar_id":"","url":"https://api.github.com/users/brndnmtthws","html_url":"https://github.com/brndnmtthws","followers_url":"https://api.github.com/users/brndnmtthws/followers","following_url":"https://api.github.com/users/brndnmtthws/following{/other_user}","gists_url":"https://api.github.com/users/brndnmtthws/gists{/gist_id}","starred_url":"https://api.github.com/users/brndnmtthws/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brndnmtthws/subscriptions","organizations_url":"https://api.github.com/users/brndnmtthws/orgs","repos_url":"https://api.github.com/users/brndnmtthws/repos","events_url":"https://api.github.com/users/brndnmtthws/events{/privacy}","received_events_url":"https://api.github.com/users/brndnmtthws/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T18:42:06Z","updated_at":"2014-05-15T18:42:06Z","author_association":"MEMBER","body":"Updated as per comments above, with a couple other minor fixes.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43248872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462150","html_url":"https://github.com/apache/storm/issues/4145#issuecomment-2612462150","issue_url":"https://api.github.com/repos/apache/storm/issues/4145","id":2612462150,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjIxNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-15T18:42:08Z","updated_at":"2025-01-24T12:52:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user brndnmtthws commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/94#issuecomment-43248872\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/94#issuecomment-43248872</a></p>\n\n<p>    Updated as per comments above, with a couple other minor fixes.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463320","html_url":"https://github.com/apache/storm/issues/4154#issuecomment-2612463320","issue_url":"https://api.github.com/repos/apache/storm/issues/4154","id":2612463320,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjMzMjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T07:18:06Z","updated_at":"2025-01-24T12:53:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Gvain opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/117\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/117</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-312\" title=\"&#39;storm monitor&#39; to monitor throughput performance interactively\" class=\"issue-link\" data-issue-key=\"STORM-312\"><del>STORM-312</del></a> : add storm monitor tools to monitor throughtput interactively</p>\n\n<p>    This cmd line tool 'storm monitor' will use Nimbus.Client to get throughput information from Nimbus Server.<br/>\n    1)One can specify topology's name, component's name to monitor it's throughput interactively.<br/>\n    2) It will statistics 'emit' or 'transferred' throughput in a given time window and print it in a given time frequency<br/>\n    The implementation will be much like yahoo's storm-perf-test (<a href=\"http://yahooeng.tumblr.com/post/64758709722/making-storm-fly-with-netty\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://yahooeng.tumblr.com/post/64758709722/making-storm-fly-with-netty</a>)</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/Gvain/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/Gvain/incubator-storm</a> storm-monitor-cmd</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/117.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/117.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #117</p>\n\n<hr />\n<p>commit d080e043d15d710d6729963bed9cb078b7dce78e<br/>\nAuthor: Li Jiahong <gvain@users.noreply.github.com><br/>\nDate:   2014-03-05T04:36:22Z</p>\n\n<p>    Merge pull request #1 from apache/master</p>\n\n<p>    update from apache/incubator-storm</p>\n\n<p>commit 33715a2b4613742dfb3294a097874312d4e6c3b6<br/>\nAuthor: Li Jiahong <gvain@users.noreply.github.com><br/>\nDate:   2014-04-03T07:46:40Z</p>\n\n<p>    Merge pull request #2 from apache/master</p>\n\n<p>    update from apache/incubator-storm</p>\n\n<p>commit b2a5102917ebb4b32d42b9b722427500f939e8b5<br/>\nAuthor: Li Jiahong <gvain@users.noreply.github.com><br/>\nDate:   2014-04-15T08:05:55Z</p>\n\n<p>    Merge pull request #3 from apache/master</p>\n\n<p>    update from apache/incubator-storm</p>\n\n<p>commit a45b53a167cd48a275bbb21279bcaa9e9437b97b<br/>\nAuthor: Li Jiahong <gvain@users.noreply.github.com><br/>\nDate:   2014-05-07T12:09:34Z</p>\n\n<p>    Merge pull request #4 from apache/master</p>\n\n<p>    update from apache/incubator-storm</p>\n\n<p>commit edcaf71b304cc5196eec48035b06d15aaa8df433<br/>\nAuthor: jiahong.ljh <jiahong.ljh@alibaba-inc.com><br/>\nDate:   2014-05-16T07:14:05Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-312\" title=\"&#39;storm monitor&#39; to monitor throughput performance interactively\" class=\"issue-link\" data-issue-key=\"STORM-312\"><del>STORM-312</del></a> add storm monitor command line tools</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612463320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465491","html_url":"https://github.com/apache/storm/issues/4164#issuecomment-2612465491","issue_url":"https://api.github.com/repos/apache/storm/issues/4164","id":2612465491,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjU0OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T13:45:07Z","updated_at":"2025-01-24T12:53:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p>Example of <tt>JAVA_HOME</tt> set to \"c:\\Program Files\\...\"</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">C:\\Users\\derekd\\Desktop\\storm-inst\\apache-storm-0.9.2-incubating-SNAPSHOT>bin\\st\norm nimbus\nThe system cannot find the path specified.\nError: JAVA_HOME is incorrectly set.\n\\QuickTime\\QTSystem\\QTJava.zip was unexpected at <span class=\"code-keyword\">this</span> time.\nC:\\Users\\derekd\\Desktop\\storm-inst\\apache-storm-0.9.2-incubating-SNAPSHOT>echo %\nJAVA_HOME%\nc:\\Program Files\\Java\\jdk1.7.0_55\n</pre>\n</div></div>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43334623","html_url":"https://github.com/apache/storm/pull/102#issuecomment-43334623","issue_url":"https://api.github.com/repos/apache/storm/issues/102","id":43334623,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzM0NjIz","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T14:04:28Z","updated_at":"2014-05-16T14:04:28Z","author_association":"NONE","body":"Sorry, I might have misunderstood your comment to say you were still working on it.\nThis was an existing issue before your changes.\n\nCreated [STORM-322](https://issues.apache.org/jira/browse/STORM-322).\n\nMoved my Java installation to a path having no spaces\n- ran nimbus, ui,  supervisor\n- ran word_count\n\nI am +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43334623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462811","html_url":"https://github.com/apache/storm/issues/4150#issuecomment-2612462811","issue_url":"https://api.github.com/repos/apache/storm/issues/4150","id":2612462811,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjI4MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T14:04:29Z","updated_at":"2025-01-24T12:52:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/102#issuecomment-43334623\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/102#issuecomment-43334623</a></p>\n\n<p>    Sorry, I might have misunderstood your comment to say you were still working on it.<br/>\n    This was an existing issue before your changes.</p>\n\n<p>    Created <a href=\"https://issues.apache.org/jira/browse/STORM-322\" title=\"Windows Scripts do not handle spaces in JAVA_HOME path\" class=\"issue-link\" data-issue-key=\"STORM-322\"><del>STORM-322</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-322\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-322</a>).</p>\n\n<p>    Moved my Java installation to a path having no spaces</p>\n<ul>\n\t<li>ran nimbus, ui,  supervisor</li>\n\t<li>ran word_count</li>\n</ul>\n\n\n<p>    I am +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462155","html_url":"https://github.com/apache/storm/issues/4145#issuecomment-2612462155","issue_url":"https://api.github.com/repos/apache/storm/issues/4145","id":2612462155,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjIxNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T15:54:13Z","updated_at":"2025-01-24T12:52:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/94#discussion_r12745379\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/94#discussion_r12745379</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/KafkaUtils.java &#8212;<br/>\n    @@ -159,12 +171,17 @@ public static ByteBufferMessageSet fetchMessages(KafkaConfig config, SimpleConsu<br/>\n     for (int errors = 0; errors < 2 && msgs == null; errors++) {<br/>\n FetchRequestBuilder builder = new FetchRequestBuilder();<br/>\n FetchRequest fetchRequest = builder.addFetch(topic, partitionId, offset, config.fetchSizeBytes).</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>clientId(config.clientId).build();<br/>\n    +    clientId(config.clientId).maxWait(config.fetchMaxWait).build();<br/>\n FetchResponse fetchResponse;<br/>\n try \n{\n     fetchResponse = consumer.fetch(fetchRequest);\n }\n<p> catch (Exception e) {</p></li>\n\t<li>if (e instanceof ConnectException) {<br/>\n    +if (e instanceof ConnectException ||\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    You are correct.  I though I saw the java 7 ```catch ConnectException | SocketTimeoutException | ...``` But I could be mistaken.  It looks fine now</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43348089","html_url":"https://github.com/apache/storm/pull/94#issuecomment-43348089","issue_url":"https://api.github.com/repos/apache/storm/issues/94","id":43348089,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzQ4MDg5","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T15:57:05Z","updated_at":"2014-05-16T15:57:05Z","author_association":"CONTRIBUTOR","body":"The code looks good to me, but I am not a kafka expert and would really like someone else with more kafka knowledge to take a look at this too. I am +1.  \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43348089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462160","html_url":"https://github.com/apache/storm/issues/4145#issuecomment-2612462160","issue_url":"https://api.github.com/repos/apache/storm/issues/4145","id":2612462160,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjIxNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T15:57:07Z","updated_at":"2025-01-24T12:52:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/94#issuecomment-43348089\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/94#issuecomment-43348089</a></p>\n\n<p>    The code looks good to me, but I am not a kafka expert and would really like someone else with more kafka knowledge to take a look at this too. I am +1.  </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464206","html_url":"https://github.com/apache/storm/issues/4161#issuecomment-2612464206","issue_url":"https://api.github.com/repos/apache/storm/issues/4161","id":2612464206,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQyMDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T18:02:20Z","updated_at":"2025-01-24T12:53:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=clockfly\">clockfly</a>:</i>\n<p>You need to check test report to find out which test case failed.</p>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465497","html_url":"https://github.com/apache/storm/issues/4164#issuecomment-2612465497","issue_url":"https://api.github.com/repos/apache/storm/issues/4164","id":2612465497,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjU0OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T18:21:04Z","updated_at":"2025-01-24T12:53:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=padmach\">padmach</a>:</i>\n<p>Replacing %JAVA_HOME% with \"%JAVA_HOME\" doesn't resolve the issue ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43372409","html_url":"https://github.com/apache/storm/pull/94#issuecomment-43372409","issue_url":"https://api.github.com/repos/apache/storm/issues/94","id":43372409,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzcyNDA5","user":{"login":"brndnmtthws","id":3129093,"node_id":"MDQ6VXNlcjMxMjkwOTM=","avatar_url":"https://avatars.githubusercontent.com/u/3129093?v=4","gravatar_id":"","url":"https://api.github.com/users/brndnmtthws","html_url":"https://github.com/brndnmtthws","followers_url":"https://api.github.com/users/brndnmtthws/followers","following_url":"https://api.github.com/users/brndnmtthws/following{/other_user}","gists_url":"https://api.github.com/users/brndnmtthws/gists{/gist_id}","starred_url":"https://api.github.com/users/brndnmtthws/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brndnmtthws/subscriptions","organizations_url":"https://api.github.com/users/brndnmtthws/orgs","repos_url":"https://api.github.com/users/brndnmtthws/repos","events_url":"https://api.github.com/users/brndnmtthws/events{/privacy}","received_events_url":"https://api.github.com/users/brndnmtthws/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T19:51:16Z","updated_at":"2014-05-16T19:51:16Z","author_association":"MEMBER","body":"Updated as per @wurstmeister's comments.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43372409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462166","html_url":"https://github.com/apache/storm/issues/4145#issuecomment-2612462166","issue_url":"https://api.github.com/repos/apache/storm/issues/4145","id":2612462166,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjIxNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T19:51:18Z","updated_at":"2025-01-24T12:52:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user brndnmtthws commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/94#issuecomment-43372409\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/94#issuecomment-43372409</a></p>\n\n<p>    Updated as per @wurstmeister's comments.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612462166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/43379879","html_url":"https://github.com/apache/storm/pull/98#issuecomment-43379879","issue_url":"https://api.github.com/repos/apache/storm/issues/98","id":43379879,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMzc5ODc5","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T21:10:11Z","updated_at":"2014-05-16T21:10:11Z","author_association":"NONE","body":"Agreed, removing the ZK heartbeat is really the important change here. +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/43379879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452694","html_url":"https://github.com/apache/storm/issues/4075#issuecomment-2612452694","issue_url":"https://api.github.com/repos/apache/storm/issues/4075","id":2612452694,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NTI2OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T21:10:14Z","updated_at":"2025-01-24T12:47:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/98#issuecomment-43379879\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/98#issuecomment-43379879</a></p>\n\n<p>    Agreed, removing the ZK heartbeat is really the important change here. +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612452694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465504","html_url":"https://github.com/apache/storm/issues/4164#issuecomment-2612465504","issue_url":"https://api.github.com/repos/apache/storm/issues/4164","id":2612465504,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjU1MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-16T21:21:05Z","updated_at":"2025-01-24T12:53:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p>Yeah, that sounds like it would work.  I very briefly tried double-quoting instances where the variable was used, but it still resulted in a similar error at a different part of the script.  I have not taken time to look at it further.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465612","html_url":"https://github.com/apache/storm/issues/4165#issuecomment-2612465612","issue_url":"https://api.github.com/repos/apache/storm/issues/4165","id":2612465612,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjU2MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-17T02:13:49Z","updated_at":"2025-01-24T12:53:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srinath.c\">srinath.c</a>:</i>\n<p>The discussions over mailing list also provide some information:<br/>\nUser list:<br/>\n<a href=\"http://mail-archives.apache.org/mod_mbox/storm-user/201405.mbox/%3cCAHhx-GLJPrs-h2wUBE-aNT33UeS2-sUkAiuqR=2Kg2+jusfvjQ@mail.gmail.com%3e\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://mail-archives.apache.org/mod_mbox/storm-user/201405.mbox/%3cCAHhx-GLJPrs-h2wUBE-aNT33UeS2-sUkAiuqR=2Kg2+jusfvjQ@mail.gmail.com%3e</a></p>\n\n<p>Dev list:<br/>\n<a href=\"http://mail-archives.apache.org/mod_mbox/storm-dev/201405.mbox/ajax/%3CCAHhx-GLzaKeYZbD1B6YQQkxRfPOPxvrZUVf1v85ch3u82xriLw%40mail.gmail.com%3E\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://mail-archives.apache.org/mod_mbox/storm-dev/201405.mbox/ajax/%3CCAHhx-GLzaKeYZbD1B6YQQkxRfPOPxvrZUVf1v85ch3u82xriLw%40mail.gmail.com%3E</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465615","html_url":"https://github.com/apache/storm/issues/4165#issuecomment-2612465615","issue_url":"https://api.github.com/repos/apache/storm/issues/4165","id":2612465615,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjU2MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-17T02:27:45Z","updated_at":"2025-01-24T12:53:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srinath.c\">srinath.c</a>:</i>\n<p>I'm willing to provide access to an instance running jhat over the heap dumps of the worker processes if required.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612465615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446290","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446290","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446290,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYyOTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-18T04:02:37Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jreichhold\">jreichhold</a>:</i>\n<p>Any chance this is being released soon? Saw discussion a few weeks ago and have tracked down to a point where EC2 nodes won't work with Netty as the transport until this is fixed. Enough changes with this release that I'm getting tempted to cut a 0.9.1.1 release to move forward.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464208","html_url":"https://github.com/apache/storm/issues/4161#issuecomment-2612464208","issue_url":"https://api.github.com/repos/apache/storm/issues/4161","id":2612464208,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQyMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T05:05:28Z","updated_at":"2025-01-24T12:53:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=moongod\">moongod</a>:</i>\n<p>thanks,I'll check myself!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464211","html_url":"https://github.com/apache/storm/issues/4161#issuecomment-2612464211","issue_url":"https://api.github.com/repos/apache/storm/issues/4161","id":2612464211,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjQyMTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T05:07:19Z","updated_at":"2025-01-24T12:53:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=moongod\">moongod</a>:</i>\n<p>The build problem have been resolved,so close it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612464211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612466115","html_url":"https://github.com/apache/storm/issues/4168#issuecomment-2612466115","issue_url":"https://api.github.com/repos/apache/storm/issues/4168","id":2612466115,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjYxMTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T06:55:57Z","updated_at":"2025-01-24T12:53:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=troyding\">troyding</a>:</i>\n<p>The patch file added</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612466115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612466132","html_url":"https://github.com/apache/storm/issues/4168#issuecomment-2612466132","issue_url":"https://api.github.com/repos/apache/storm/issues/4168","id":2612466132,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjYxMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T07:01:18Z","updated_at":"2025-01-24T12:53:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user troyding opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/118\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/118</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-326\" title=\"task metric send repeatedly\" class=\"issue-link\" data-issue-key=\"STORM-326\"><del>STORM-326</del></a> Task metric send repeatedly</p>\n\n<p>    This pull request addresses storm issue <a href=\"https://issues.apache.org/jira/browse/STORM-326\" title=\"task metric send repeatedly\" class=\"issue-link\" data-issue-key=\"STORM-326\"><del>STORM-326</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-326\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-326</a>).</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/troyding/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/troyding/incubator-storm</a> master</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/118.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/118.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #118</p>\n\n<hr />\n<p>commit d20ba2e720f66529c1b187d855c857ee6f8d78f2<br/>\nAuthor: troyding <dingsword@gmail.com><br/>\nDate:   2014-05-19T06:18:34Z</p>\n\n<p>    bug fix: task metric send repeatedly</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612466132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446293","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446293","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446293,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYyOTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T13:55:41Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=soag\">soag</a>:</i>\n<p>Is there any info on when there is going to be a release with this fix included? We are facing the situation where we can't reliably scale our storm setup to multiple instances in our production environment due to this bug. So I'd appreciate any info on a release or a temporary workaround. </p>\n\n<p>Thanks</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446298","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446298","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446298,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYyOTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T14:14:09Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dschiavu\">dschiavu</a>:</i>\n<p>I agree. A new minor version (0.9.1.1-incubating?) needs to be released with this fix included, since this bug affects the reliability and fault tolerance of the whole Storm cluster!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446302","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446302","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446302,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYzMDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T14:17:29Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dschiavu\">dschiavu</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=SoAG\" class=\"user-hover\" rel=\"SoAG\">Roland Jungnickel</a> a temporary workaround is to merge <a href=\"https://github.com/apache/incubator-storm/pull/41\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/41</a> into 0.9.1-incubating and build your own Storm release. See <a href=\"https://github.com/apache/incubator-storm/blob/master/DEVELOPER.md\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/blob/master/DEVELOPER.md</a> for build instructions.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446307","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446307","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446307,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYzMDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T14:18:44Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jreichhold\">jreichhold</a>:</i>\n<p>Technically I pulled the apach-0.9.1 tag and included the fix. This worked perfectly after running mvn clean package -DskipTests=true in the main repo and then in the storm-dist folder. One thing interesting I found is that I also needed to grab the libthrift out of the new package. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446308","html_url":"https://github.com/apache/storm/issues/4029#issuecomment-2612446308","issue_url":"https://api.github.com/repos/apache/storm/issues/4029","id":2612446308,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDYzMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T15:25:32Z","updated_at":"2025-01-24T12:44:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=soag\">soag</a>:</i>\n<p>Cool thanks a lot <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jreichhold\" class=\"user-hover\" rel=\"jreichhold\">Jonathan Reichhold</a> and <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dschiavu\" class=\"user-hover\" rel=\"dschiavu\">Danijel Schiavuzzi</a>. I am going to give this a try now.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612446308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460773","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460773","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460773,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:05:49Z","updated_at":"2025-01-24T12:51:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12810544\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12810544</a></p>\n\n<p>    &#8212; Diff: conf/defaults.yaml &#8212;<br/>\n    @@ -109,6 +112,15 @@ storm.messaging.netty.max_retries: 30<br/>\n     storm.messaging.netty.max_wait_ms: 1000<br/>\n     storm.messaging.netty.min_wait_ms: 100</p>\n\n<p>    +# If the Netty messaging layer is busy(netty internal buffer not writable), the Netty client will try to batch message as more as possible up to the size of storm.messaging.netty.transfer.batch.size bytes, otherwise it will try to flush message as soon as possible to reduce latency.<br/>\n    +storm.messaging.netty.transfer.batch.size: 262144<br/>\n    +<br/>\n    +# If storm.messaging.netty.blocking is set to true, the Netty Client will send messages in synchronized way, otherwise it will do it in async way. Set storm.messaging.netty.blocking to false to improve the latency and throughput.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If this always improves the latency and throughput why have this as a config option at all?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460776","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460776","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460776,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:26:23Z","updated_at":"2025-01-24T12:51:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12811601\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12811601</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj &#8212;<br/>\n    @@ -109,25 +111,30 @@<br/>\n     (defn mk-transfer-fn <span class=\"error\">&#91;worker&#93;</span><br/>\n       (let [local-tasks (-> worker :task-ids set)<br/>\n     local-transfer (:transfer-local-fn worker)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>^DisruptorQueue transfer-queue (:transfer-queue worker)]<br/>\n    +^DisruptorQueue transfer-queue (:transfer-queue worker)<br/>\n    +task->node+port (:cached-task->node+port worker)]<br/>\n (fn <span class=\"error\">&#91;^KryoTupleSerializer serializer tuple-batch&#93;</span><br/>\n   (let [local (ArrayList.)</li>\n\t<li>remote (ArrayList.)]<br/>\n    +    remoteMap (HashMap.)]<br/>\n     (fast-list-iter [<span class=\"error\">&#91;task tuple :as pair&#93;</span> tuple-batch]<br/>\n       (if (local-tasks task)<br/>\n (.add local pair)</li>\n\t<li>(.add remote pair)</li>\n\t<li>))<br/>\n    +    (let <span class=\"error\">&#91;node+port (get @task->node+port task)&#93;</span><br/>\n    +      (when (not (.get remoteMap node+port))<br/>\n    +(.put remoteMap node+port (ArrayList.)))<br/>\n    +      (let <span class=\"error\">&#91;remote (.get remoteMap node+port)&#93;</span><br/>\n    +(.add remote (TaskMessage. task (.serialize serializer tuple)))<br/>\n    + ))))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The above code does not really feel like it is clojure, as it is updating mutable state.  I would rather have see us do something like a group-by.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460778","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460778","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460778,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:32:29Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12811853\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12811853</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/disruptor.clj &#8212;<br/>\n    @@ -89,7 +90,7 @@<br/>\n     (consume-batch-when-available queue handler)<br/>\n     0 )<br/>\n   :kill-fn kill-fn</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>:thread-name thread-name<br/>\n    +      :thread-name (.getName queue)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The function this is a part of takes an optional :thread-name parameter.  We should either remove that parameter or honor it.  I would vote to remove it, because the only place I think it is called you modified as well (just below).</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460784","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460784","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460784,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:42:29Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12812348\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12812348</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -21,52 +21,53 @@<br/>\n     import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.Utils;<br/>\n    -<br/>\n     import org.jboss.netty.bootstrap.ClientBootstrap;<br/>\n     import org.jboss.netty.channel.Channel;<br/>\n     import org.jboss.netty.channel.ChannelFactory;<br/>\n    -import org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory;<br/>\n     import org.jboss.netty.channel.ChannelFuture;<br/>\n     import org.jboss.netty.channel.ChannelFutureListener;<br/>\n     import org.slf4j.Logger;<br/>\n     import org.slf4j.LoggerFactory;<br/>\n    -<br/>\n     import java.net.InetSocketAddress;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n     import java.util.Map;<br/>\n    -import java.util.Timer;<br/>\n    -import java.util.TimerTask;<br/>\n     import java.util.Random;<br/>\n    -import java.util.concurrent.LinkedBlockingQueue;<br/>\n    -import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    -import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +import java.util.concurrent.atomic.AtomicLong;<br/>\n     import java.util.concurrent.atomic.AtomicReference;</p>\n\n<p>    -class Client implements IConnection {<br/>\n    +public class Client implements IConnection {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private static final Timer TIMER = new Timer(\"netty-client-timer\", true);<br/>\n    -<br/>\n    +    private static final String PREFIX = \"Netty-Client-\";<br/>\n private final int max_retries;<br/>\n private final long base_sleep_ms;<br/>\n private final long max_sleep_ms;</li>\n\t<li>private LinkedBlockingQueue<Object> message_queue; //entry should either be TaskMessage or ControlMessage<br/>\n private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>InetSocketAddress remote_addr;</li>\n\t<li>private AtomicInteger retries;<br/>\n    +    private InetSocketAddress remote_addr;<br/>\n    +    <br/>\n private final Random random = new Random();<br/>\n private final ChannelFactory factory;<br/>\n private final int buffer_size;</li>\n\t<li>private final AtomicBoolean being_closed;</li>\n\t<li>private boolean wait_for_requests;<br/>\n    +    private boolean closing;<br/>\n    +<br/>\n    +    private Integer messageBatchSize;<br/>\n    +    private Boolean blocking = false;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Can we make these to an int and a boolean they should never be null and I would rather have it blow up sooner rather then later.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460787","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460787","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460787,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:45:45Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12812473\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12812473</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -84,43 +93,87 @@</p>\n\n<p>     // Start the connection attempt.<br/>\n     remote_addr = new InetSocketAddress(host, port);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>bootstrap.connect(remote_addr);<br/>\n    +<br/>\n    +Thread flushChecker = new Thread(new Runnable() {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Can we make this thread shared between the clients, otherwise we will have a dedicated thread per client, which can cause resource utilization issues, hitting a ulimit with the number of processes allowed per user.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460791","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460791","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460791,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:53:07Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12812760\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12812760</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -84,43 +93,87 @@</p>\n\n<p>     // Start the connection attempt.<br/>\n     remote_addr = new InetSocketAddress(host, port);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>bootstrap.connect(remote_addr);<br/>\n    +<br/>\n    +Thread flushChecker = new Thread(new Runnable() {<br/>\n    +    @Override<br/>\n    +    public void run() {<br/>\n    +//make sure we have a connection<br/>\n    +connect();<br/>\n    +<br/>\n    +while(!closing) {<br/>\n    +    long flushCheckTime = flushCheckTimer.get();<br/>\n    +    long now = System.currentTimeMillis();<br/>\n    +    if (now > flushCheckTime) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +Channel channel = channelRef.get();    +if (null != channel && channel.isWritable()) {\n    +    flush();\n    +}    +    }</span> </div>\n<p>    +    try </p>\n{\n    +Thread.sleep(flushCheckInterval);\n    +    }\n<p> catch (InterruptedException e) </p>\n{\n    +break;\n    +    }\n<p>    +}<br/>\n    +<br/>\n    +    }<br/>\n    +}, name() + \"-flush-checker\");<br/>\n    +<br/>\n    +flushChecker.setDaemon(true);<br/>\n    +flushChecker.start();<br/>\n }</p></li>\n</ul>\n\n\n<p> /**</p>\n<ul>\n\t<li>We will retry connection with exponential back-off policy<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>void reconnect() {</li>\n\t<li>close_n_release();<br/>\n    -</li>\n\t<li>//reconnect only if it's not being closed</li>\n\t<li>if (being_closed.get()) return;<br/>\n    -</li>\n\t<li>final int tried_count = retries.incrementAndGet();</li>\n\t<li>if (tried_count <= max_retries) {</li>\n\t<li>long sleep = getSleepTimeMs();</li>\n\t<li>LOG.info(\"Waiting {} ms before trying connection to {}\", sleep, remote_addr);</li>\n\t<li>TIMER.schedule(new TimerTask() {</li>\n\t<li>@Override</li>\n\t<li>public void run() {</li>\n\t<li>LOG.info(\"Reconnect ... <span class=\"error\">&#91;{}&#93;</span> to {}\", tried_count, remote_addr);</li>\n\t<li>bootstrap.connect(remote_addr);</li>\n\t<li>}}, sleep);</li>\n\t<li>} else {</li>\n\t<li>LOG.warn(remote_addr+\" is not reachable. We will close this client.\");</li>\n\t<li>close();<br/>\n    +    private synchronized void connect() {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't like the idea of having connect block until the connection is established.  Any thread that tries to send data to a connection that is still being established will block until the connection is established. I think it is more robust to buffer the messages in a data structure and try to handle them later when the connection is finished.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460795","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460795","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460795,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T19:56:30Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12812919\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12812919</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -128,133 +181,105 @@ private long getSleepTimeMs()<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Enqueue a task message to be sent to server<br/>\n    +     * Enqueue task messages to be sent to server<br/>\n  */</li>\n\t<li>public void send(int task, byte[] message) {</li>\n\t<li>//throw exception if the client is being closed</li>\n\t<li>if (being_closed.get()) {<br/>\n    +    synchronized public void send(Iterator<TaskMessage> msgs) {<br/>\n    +<br/>\n    +// throw exception if the client is being closed<br/>\n    +if (closing) \n{\n throw new RuntimeException(\"Client is being closed, and does not take requests any more\");\n     }\n<p>    -</p></li>\n\t<li>try \n{\n    -    message_queue.put(new TaskMessage(task, message));\n    -\n    -    //resume delivery if it is waiting for requests\n    -    tryDeliverMessages(true);\n    -}\n<p> catch (InterruptedException e) {</p></li>\n\t<li>throw new RuntimeException(e);<br/>\n    +<br/>\n    +if (null == msgs || !msgs.hasNext()) \n{\n    +    return;\n     }</li>\n\t<li>}</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>/**</li>\n\t<li>* Retrieve messages from queue, and delivery to server if any</li>\n\t<li>*/</li>\n\t<li>synchronized void tryDeliverMessages(boolean only_if_waiting) throws InterruptedException {</li>\n\t<li>//just skip if delivery only if waiting, and we are not waiting currently</li>\n\t<li>if (only_if_waiting && !wait_for_requests)  return;<br/>\n    -</li>\n\t<li>//make sure that channel was not closed<br/>\n     Channel channel = channelRef.get();</li>\n\t<li>if (channel == null)  return;</li>\n\t<li>if (!channel.isOpen()) {</li>\n\t<li>LOG.info(\"Channel to {} is no longer open.\",remote_addr);</li>\n\t<li>//The channel is not open yet. Reconnect?</li>\n\t<li>reconnect();</li>\n\t<li>return;<br/>\n    +if (null == channel) \n{\n    +    connect();\n    +    channel = channelRef.get();\n     }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>final MessageBatch requests = tryTakeMessages();</li>\n\t<li>if (requests==null) \n{\n    -    wait_for_requests = true;\n    -    return;\n    -}\n<p>    +while (msgs.hasNext()) {<br/>\n    +    TaskMessage message = msgs.next();<br/>\n    +    if (null == messageBatch) </p>\n{\n    +messageBatch = new MessageBatch(messageBatchSize);\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>//if channel is being closed and we have no outstanding messages,  let's close the channel</li>\n\t<li>if (requests.isEmpty() && being_closed.get()) {</li>\n\t<li>close_n_release();</li>\n\t<li>return;<br/>\n    +    messageBatch.add(message);<br/>\n    +    if (messageBatch.isFull()) \n{\n    +MessageBatch toBeFlushed = messageBatch;\n    +flushRequest(channel, toBeFlushed, blocking);\n    +messageBatch = null;\n    +    }\n<p>     }</p></li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>//we are busily delivering messages, and will check queue upon response.</li>\n\t<li>//When send() is called by senders, we should not thus call tryDeliverMessages().</li>\n\t<li>wait_for_requests = false;<br/>\n    -</li>\n\t<li>//write request into socket channel</li>\n\t<li>ChannelFuture future = channel.write(requests);</li>\n\t<li>future.addListener(new ChannelFutureListener() {</li>\n\t<li>public void operationComplete(ChannelFuture future)</li>\n\t<li>throws Exception {</li>\n\t<li>if (!future.isSuccess()) \n{\n    -    LOG.info(\"failed to send \"+requests.size()+\" requests to \"+remote_addr, future.getCause());\n    -    reconnect();\n    -}\n<p> else {</p></li>\n\t<li>LOG.debug(\"{} request(s) sent\", requests.size());<br/>\n    -</li>\n\t<li>//Now that our requests have been sent, channel could be closed if needed</li>\n\t<li>if (being_closed.get())</li>\n\t<li>close_n_release();</li>\n\t<li>}<br/>\n    +if (null != messageBatch && !messageBatch.isEmpty()) {<br/>\n    +    if (channel.isWritable()) \n{\n    +flushCheckTimer.set(Long.MAX_VALUE);\n    +\n    +// Flush as fast as we can to reduce the latency\n    +MessageBatch toBeFlushed = messageBatch;\n    +messageBatch = null;\n    +flushRequest(channel, toBeFlushed, blocking);\n    +\n    +    }\n<p> else </p>\n{\n    +// when channel is NOT writable, it means the internal netty buffer is full. \n    +// In this case, we can try to buffer up more incoming messages.\n    +flushCheckTimer.set(System.currentTimeMillis() + flushCheckInterval);\n }</li>\n\t<li>});<br/>\n    +}<br/>\n    +<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>/**</li>\n\t<li>* Take all enqueued messages from queue</li>\n\t<li>* @return  batch of messages</li>\n\t<li>* @throws InterruptedException</li>\n\t<li>*</li>\n\t<li>* synchronized ... ensure that messages are delivered in the same order</li>\n\t<li>* as they are added into queue</li>\n\t<li>*/</li>\n\t<li>private MessageBatch tryTakeMessages() throws InterruptedException {</li>\n\t<li>//1st message</li>\n\t<li>Object msg = message_queue.poll();</li>\n\t<li>if (msg == null) return null;<br/>\n    -</li>\n\t<li>MessageBatch batch = new MessageBatch(buffer_size);</li>\n\t<li>//we will discard any message after CLOSE</li>\n\t<li>if (msg == ControlMessage.CLOSE_MESSAGE) {</li>\n\t<li>LOG.info(\"Connection to {} is being closed\", remote_addr);</li>\n\t<li>being_closed.set(true);</li>\n\t<li>return batch;<br/>\n    +    public String name() \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (null != remote_addr) {\n    +    return PREFIX + remote_addr.toString();\n     }    +return \"\";    +    }</span> </div></li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>batch.add((TaskMessage)msg);</li>\n\t<li>while (!batch.isFull() && ((msg = message_queue.peek())!=null)) {</li>\n\t<li>//Is it a CLOSE message?</li>\n\t<li>if (msg == ControlMessage.CLOSE_MESSAGE) {</li>\n\t<li>message_queue.take();</li>\n\t<li>LOG.info(\"Connection to {} is being closed\", remote_addr);</li>\n\t<li>being_closed.set(true);</li>\n\t<li>break;<br/>\n    +    private synchronized void flush() {<br/>\n    +if (!closing) {<br/>\n    +    if (null != messageBatch && !messageBatch.isEmpty()) {<br/>\n    +MessageBatch toBeFlushed = messageBatch;<br/>\n    +Channel channel = channelRef.get();<br/>\n    +if (channel != null) \n{\n    +    flushCheckTimer.set(Long.MAX_VALUE);\n    +    flushRequest(channel, toBeFlushed, true);\n    +}\n<p>    +messageBatch = null;</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    If Channel is null do we really want to drop the messageBatch?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460802","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460802","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460802,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA4MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T20:02:41Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12813204\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12813204</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -128,133 +181,105 @@ private long getSleepTimeMs()<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Enqueue a task message to be sent to server<br/>\n    +     * Enqueue task messages to be sent to server<br/>\n  */</li>\n\t<li>public void send(int task, byte[] message) {</li>\n\t<li>//throw exception if the client is being closed</li>\n\t<li>if (being_closed.get()) {<br/>\n    +    synchronized public void send(Iterator<TaskMessage> msgs) {<br/>\n    +<br/>\n    +// throw exception if the client is being closed<br/>\n    +if (closing) \n{\n throw new RuntimeException(\"Client is being closed, and does not take requests any more\");\n     }\n<p>    -</p></li>\n\t<li>try \n{\n    -    message_queue.put(new TaskMessage(task, message));\n    -\n    -    //resume delivery if it is waiting for requests\n    -    tryDeliverMessages(true);\n    -}\n<p> catch (InterruptedException e) {</p></li>\n\t<li>throw new RuntimeException(e);<br/>\n    +<br/>\n    +if (null == msgs || !msgs.hasNext()) \n{\n    +    return;\n     }</li>\n\t<li>}</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>/**</li>\n\t<li>* Retrieve messages from queue, and delivery to server if any</li>\n\t<li>*/</li>\n\t<li>synchronized void tryDeliverMessages(boolean only_if_waiting) throws InterruptedException {</li>\n\t<li>//just skip if delivery only if waiting, and we are not waiting currently</li>\n\t<li>if (only_if_waiting && !wait_for_requests)  return;<br/>\n    -</li>\n\t<li>//make sure that channel was not closed<br/>\n     Channel channel = channelRef.get();</li>\n\t<li>if (channel == null)  return;</li>\n\t<li>if (!channel.isOpen()) {</li>\n\t<li>LOG.info(\"Channel to {} is no longer open.\",remote_addr);</li>\n\t<li>//The channel is not open yet. Reconnect?</li>\n\t<li>reconnect();</li>\n\t<li>return;<br/>\n    +if (null == channel) \n{\n    +    connect();\n    +    channel = channelRef.get();\n     }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>final MessageBatch requests = tryTakeMessages();</li>\n\t<li>if (requests==null) \n{\n    -    wait_for_requests = true;\n    -    return;\n    -}\n<p>    +while (msgs.hasNext()) {<br/>\n    +    TaskMessage message = msgs.next();<br/>\n    +    if (null == messageBatch) </p>\n{\n    +messageBatch = new MessageBatch(messageBatchSize);\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>//if channel is being closed and we have no outstanding messages,  let's close the channel</li>\n\t<li>if (requests.isEmpty() && being_closed.get()) {</li>\n\t<li>close_n_release();</li>\n\t<li>return;<br/>\n    +    messageBatch.add(message);<br/>\n    +    if (messageBatch.isFull()) \n{\n    +MessageBatch toBeFlushed = messageBatch;\n    +flushRequest(channel, toBeFlushed, blocking);\n    +messageBatch = null;\n    +    }\n<p>     }</p></li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>//we are busily delivering messages, and will check queue upon response.</li>\n\t<li>//When send() is called by senders, we should not thus call tryDeliverMessages().</li>\n\t<li>wait_for_requests = false;<br/>\n    -</li>\n\t<li>//write request into socket channel</li>\n\t<li>ChannelFuture future = channel.write(requests);</li>\n\t<li>future.addListener(new ChannelFutureListener() {</li>\n\t<li>public void operationComplete(ChannelFuture future)</li>\n\t<li>throws Exception {</li>\n\t<li>if (!future.isSuccess()) \n{\n    -    LOG.info(\"failed to send \"+requests.size()+\" requests to \"+remote_addr, future.getCause());\n    -    reconnect();\n    -}\n<p> else {</p></li>\n\t<li>LOG.debug(\"{} request(s) sent\", requests.size());<br/>\n    -</li>\n\t<li>//Now that our requests have been sent, channel could be closed if needed</li>\n\t<li>if (being_closed.get())</li>\n\t<li>close_n_release();</li>\n\t<li>}<br/>\n    +if (null != messageBatch && !messageBatch.isEmpty()) {<br/>\n    +    if (channel.isWritable()) \n{\n    +flushCheckTimer.set(Long.MAX_VALUE);\n    +\n    +// Flush as fast as we can to reduce the latency\n    +MessageBatch toBeFlushed = messageBatch;\n    +messageBatch = null;\n    +flushRequest(channel, toBeFlushed, blocking);\n    +\n    +    }\n<p> else </p>\n{\n    +// when channel is NOT writable, it means the internal netty buffer is full. \n    +// In this case, we can try to buffer up more incoming messages.\n    +flushCheckTimer.set(System.currentTimeMillis() + flushCheckInterval);\n }</li>\n\t<li>});<br/>\n    +}<br/>\n    +<br/>\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>/**</li>\n\t<li>* Take all enqueued messages from queue</li>\n\t<li>* @return  batch of messages</li>\n\t<li>* @throws InterruptedException</li>\n\t<li>*</li>\n\t<li>* synchronized ... ensure that messages are delivered in the same order</li>\n\t<li>* as they are added into queue</li>\n\t<li>*/</li>\n\t<li>private MessageBatch tryTakeMessages() throws InterruptedException {</li>\n\t<li>//1st message</li>\n\t<li>Object msg = message_queue.poll();</li>\n\t<li>if (msg == null) return null;<br/>\n    -</li>\n\t<li>MessageBatch batch = new MessageBatch(buffer_size);</li>\n\t<li>//we will discard any message after CLOSE</li>\n\t<li>if (msg == ControlMessage.CLOSE_MESSAGE) {</li>\n\t<li>LOG.info(\"Connection to {} is being closed\", remote_addr);</li>\n\t<li>being_closed.set(true);</li>\n\t<li>return batch;<br/>\n    +    public String name() \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (null != remote_addr) {\n    +    return PREFIX + remote_addr.toString();\n     }    +return \"\";    +    }</span> </div></li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>batch.add((TaskMessage)msg);</li>\n\t<li>while (!batch.isFull() && ((msg = message_queue.peek())!=null)) {</li>\n\t<li>//Is it a CLOSE message?</li>\n\t<li>if (msg == ControlMessage.CLOSE_MESSAGE) {</li>\n\t<li>message_queue.take();</li>\n\t<li>LOG.info(\"Connection to {} is being closed\", remote_addr);</li>\n\t<li>being_closed.set(true);</li>\n\t<li>break;<br/>\n    +    private synchronized void flush() {<br/>\n    +if (!closing) {<br/>\n    +    if (null != messageBatch && !messageBatch.isEmpty()) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +MessageBatch toBeFlushed = messageBatch;    +Channel channel = channelRef.get();    +if (channel != null) {\n    +    flushCheckTimer.set(Long.MAX_VALUE);\n    +    flushRequest(channel, toBeFlushed, true);\n    +}    +messageBatch = null; }</span> </div>\n<p>    -</p></li>\n\t<li>//try to add this msg into batch</li>\n\t<li>if (!batch.tryAdd((TaskMessage) msg))</li>\n\t<li>break;<br/>\n    -</li>\n\t<li>//remove this message</li>\n\t<li>message_queue.take();<br/>\n     }<br/>\n    -</li>\n\t<li>return batch;<br/>\n }<br/>\n    -<br/>\n    +    <br/>\n /**</li>\n</ul>\n<ul>\n\t<li>gracefully close this client.</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>*</li>\n\t<li>* We will send all existing requests, and then invoke close_n_release() method<br/>\n    +     * <br/>\n    +     * We will send all existing requests, and then invoke close_n_release()<br/>\n    +     * method<br/>\n  */</li>\n\t<li>public void close() {</li>\n\t<li>//enqueue a CLOSE message so that shutdown() will be invoked</li>\n\t<li>try \n{\n    -    message_queue.put(ControlMessage.CLOSE_MESSAGE);\n    -\n    -    //resume delivery if it is waiting for requests\n    -    tryDeliverMessages(true);\n    -}\n<p> catch (InterruptedException e) {</p></li>\n\t<li>LOG.info(\"Interrupted Connection to {} is being closed\", remote_addr);</li>\n\t<li>being_closed.set(true);<br/>\n    +    public synchronized void close() {<br/>\n    +if (!closing) {<br/>\n    +    closing = true;<br/>\n    +    if (null != messageBatch && !messageBatch.isEmpty()) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +MessageBatch toBeFlushed = messageBatch;    +Channel channel = channelRef.get();    +if (channel != null) {\n    +    flushRequest(channel, toBeFlushed, true);\n    +}    +messageBatch = null;    +    }</span> </div>\n<p>    +<br/>\n    +    //wait for pendings to exit<br/>\n    +    while(pendings.get() != 0) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Can we have a max number of iterations on this? I just feel it is more defensive to try for a while, and then if it does not work out log the message and go on.  After all the worst thing that happens with leaving early is that some messages may not have been acked, which we more or less ignore anyways.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460804","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460804","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460804,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA4MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T20:08:16Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12813461\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12813461</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Server.java &#8212;<br/>\n    @@ -31,35 +31,69 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import java.net.InetSocketAddress;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n     import java.util.Map;<br/>\n     import java.util.concurrent.Executors;<br/>\n     import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.ThreadFactory;</p>\n\n<p>     class Server implements IConnection {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Server.class);<br/>\n @SuppressWarnings(\"rawtypes\")<br/>\n Map storm_conf;<br/>\n int port;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private LinkedBlockingQueue<TaskMessage> message_queue;<br/>\n    +    <br/>\n    +    // Create multiple queues for incoming messages. The size equals the number of receiver threads.<br/>\n    +    // For message which is sent to same task, it will be stored in the same queue to preserve the message order.<br/>\n    +    private LinkedBlockingQueue<ArrayList<TaskMessage>>[] message_queue;<br/>\n    +    <br/>\n volatile ChannelGroup allChannels = new DefaultChannelGroup(\"storm-server\");<br/>\n final ChannelFactory factory;<br/>\n final ServerBootstrap bootstrap;<br/>\n    -<br/>\n    +    <br/>\n    +    private int queueCount;<br/>\n    +    HashMap<Integer, Integer> taskToQueueId = null;<br/>\n    +    int roundRobinQueueId;<br/>\n    +\t<br/>\n    +    boolean closing = false;<br/>\n    +    List<TaskMessage> closeMessage = Arrays.asList(new TaskMessage(-1, null));<br/>\n    +    <br/>\n    +    <br/>\n @SuppressWarnings(\"rawtypes\")<br/>\n Server(Map storm_conf, int port) {<br/>\n     this.storm_conf = storm_conf;<br/>\n     this.port = port;</li>\n\t<li>message_queue = new LinkedBlockingQueue<TaskMessage>();<br/>\n    -<br/>\n    +<br/>\n    +queueCount = Utils.getInt(storm_conf.get(\"worker.receiver.thread.count\"), 1);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This should be a part of Config.java.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460809","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460809","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460809,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA4MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T20:08:34Z","updated_at":"2025-01-24T12:51:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12813477\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12813477</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Server.java &#8212;<br/>\n    @@ -31,35 +31,69 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import java.net.InetSocketAddress;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n     import java.util.Map;<br/>\n     import java.util.concurrent.Executors;<br/>\n     import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.ThreadFactory;</p>\n\n<p>     class Server implements IConnection {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Server.class);<br/>\n @SuppressWarnings(\"rawtypes\")<br/>\n Map storm_conf;<br/>\n int port;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private LinkedBlockingQueue<TaskMessage> message_queue;<br/>\n    +    <br/>\n    +    // Create multiple queues for incoming messages. The size equals the number of receiver threads.<br/>\n    +    // For message which is sent to same task, it will be stored in the same queue to preserve the message order.<br/>\n    +    private LinkedBlockingQueue<ArrayList<TaskMessage>>[] message_queue;<br/>\n    +    <br/>\n volatile ChannelGroup allChannels = new DefaultChannelGroup(\"storm-server\");<br/>\n final ChannelFactory factory;<br/>\n final ServerBootstrap bootstrap;<br/>\n    -<br/>\n    +    <br/>\n    +    private int queueCount;<br/>\n    +    HashMap<Integer, Integer> taskToQueueId = null;<br/>\n    +    int roundRobinQueueId;<br/>\n    +\t<br/>\n    +    boolean closing = false;<br/>\n    +    List<TaskMessage> closeMessage = Arrays.asList(new TaskMessage(-1, null));<br/>\n    +    <br/>\n    +    <br/>\n @SuppressWarnings(\"rawtypes\")<br/>\n Server(Map storm_conf, int port) {<br/>\n     this.storm_conf = storm_conf;<br/>\n     this.port = port;</li>\n\t<li>message_queue = new LinkedBlockingQueue<TaskMessage>();<br/>\n    -<br/>\n    +<br/>\n    +queueCount = Utils.getInt(storm_conf.get(\"worker.receiver.thread.count\"), 1);<br/>\n    +roundRobinQueueId = 0;<br/>\n    +taskToQueueId = new HashMap<Integer, Integer>();<br/>\n    +    <br/>\n    +message_queue = new LinkedBlockingQueue<span class=\"error\">&#91;queueCount&#93;</span>;<br/>\n    +\t\t    for (int i = 0; i < queueCount; i++) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Indentation looks off here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460813","html_url":"https://github.com/apache/storm/issues/4139#issuecomment-2612460813","issue_url":"https://api.github.com/repos/apache/storm/issues/4139","id":2612460813,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjA4MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-05-19T20:12:18Z","updated_at":"2025-01-24T12:51:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/incubator-storm/pull/103#discussion_r12813684\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/incubator-storm/pull/103#discussion_r12813684</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Server.java &#8212;<br/>\n    @@ -72,34 +106,109 @@<br/>\n     Channel channel = bootstrap.bind(new InetSocketAddress(port));<br/>\n     allChannels.add(channel);<br/>\n }<br/>\n    +    <br/>\n    +    private ArrayList<TaskMessage>[] groupMessages(List<TaskMessage> msgs) {<br/>\n    +      ArrayList<TaskMessage> messageGroups[] = new ArrayList<span class=\"error\">&#91;queueCount&#93;</span>;<br/>\n    +      <br/>\n    +      for (int i = 0; i < msgs.size(); i++) {<br/>\n    +TaskMessage message = msgs.get<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/>;<br/>\n    +int task = message.task();<br/>\n    +<br/>\n    +if (task == -1) </p>\n{\n    +  closing = true;\n    +  return null;\n    +}\n<p>    +<br/>\n    +Integer queueId = getMessageQueueId(task);<br/>\n    +<br/>\n    +if (null == messageGroups<span class=\"error\">&#91;queueId&#93;</span>) </p>\n{\n    +  messageGroups[queueId] = new ArrayList<TaskMessage>();\n    +}\n<p>    +messageGroups<span class=\"error\">&#91;queueId&#93;</span>.add(message);<br/>\n    +      }<br/>\n    +      return messageGroups;<br/>\n    +    }<br/>\n    +    <br/>\n    +    private Integer getMessageQueueId(int task) {<br/>\n    +      // try to construct the map from taskId -> queueId in round robin manner.<br/>\n    +      <br/>\n    +      Integer queueId = taskToQueueId.get(task);<br/>\n    +      if (null == queueId) {<br/>\n    +synchronized(taskToQueueId) {<br/>\n    +  //assgin task to queue in round-robin manner<br/>\n    +  if (null == taskToQueueId.get(task)) {<br/>\n    +    queueId = roundRobinQueueId++;<br/>\n    +    <br/>\n    +    taskToQueueId.put(task, queueId);<br/>\n    +    if (roundRobinQueueId == queueCount) </p>\n{\n    +      roundRobinQueueId = 0;\n    +    }\n<p>    +  }<br/>\n    +}<br/>\n    +      }<br/>\n    +      return queueId;<br/>\n    +    }</p>\n\n<p> /**</p>\n<ul>\n\t<li>enqueue a received message</li>\n\t<li>@param message</li>\n\t<li>@throws InterruptedException<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>protected void enqueue(TaskMessage message) throws InterruptedException {</li>\n\t<li>message_queue.put(message);</li>\n\t<li>LOG.debug(\"message received with task: {}, payload size: {}\", message.task(), message.message().length);</li>\n\t<li>}<br/>\n    +    protected void enqueue(List<TaskMessage> msgs) throws InterruptedException {<br/>\n    +      <br/>\n    +      if (null == msgs || msgs.size() == 0 || closing) \n{\n    +return;\n    +      }<br/>\n    +      <br/>\n    +      ArrayList<TaskMessage> messageGroups[] = groupMessages(msgs);<br/>\n    +      <br/>\n    +      if (null == messageGroups || closing) {    +return;    +      }\n<p>    +      <br/>\n    +      for (int receiverId = 0; receiverId < messageGroups.length; receiverId++) </p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +ArrayList<TaskMessage> msgGroup = messageGroups[receiverId];    +if (null != msgGroup) {\n    +  message_queue[receiverId].put(msgGroup);\n    +}    +      }</span> </div>\n<p>    +   }</p></li>\n</ul>\n\n\n<p> /**</p>\n<ul>\n\t<li>fetch a message from message queue synchronously (flags != 1) or asynchronously (flags==1)<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public TaskMessage recv(int flags)  {</li>\n\t<li>if ((flags & 0x01) == 0x01) {<br/>\n    +    public Iterator<TaskMessage> recv(int flags)  {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Is there a reason we still have this API here? it seems like we don't actually want anyone to call this code.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612460813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]