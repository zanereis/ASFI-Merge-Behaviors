[{"url":"https://api.github.com/repos/apache/celix/issues/comments/1768297778","html_url":"https://github.com/apache/celix/issues/672#issuecomment-1768297778","issue_url":"https://api.github.com/repos/apache/celix/issues/672","id":1768297778,"node_id":"IC_kwDOAVuczs5pZhUy","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T11:58:45Z","updated_at":"2023-10-18T11:59:06Z","author_association":"CONTRIBUTOR","body":"Fix for this issue should also be backported to 2.x LTS branch, which we still don't have.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1768297778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1776990385","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1776990385","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1776990385,"node_id":"IC_kwDOAVuczs5p6rix","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-24T11:02:00Z","updated_at":"2023-10-24T11:02:00Z","author_association":"CONTRIBUTOR","body":"This PR is now ready for review. \r\nAs noted earlier this PR has breaking changes, so the PR was on hold until Apache Celix 2.4.0 was released.\r\n\r\nSome additional changes added based on the previous review comments:\r\n - Updated celix_string/long_hash_map error handling, including a `celix_status_t` return for the `put` functions. Note that before this change the `put` functions returned the previous entry and now returns a status to indicate whether the `put` was successful. \r\n - Update properties `set`  function to return a `celix_status_t` (this was a `void`).\r\n - Added error injection test to check the error handling of hash map put and create, celix properties create, set, store and load.\r\n - Added `equals` function for string/long hash map en properties\r\n - Removed the deprecated iterator functions and macro.\r\n\r\nThere is still some work todo for storing, encoding any maybe arrays handling for properties but IMO this PR is already big enough so I created a separate issues for this: #674 .\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1776990385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1777000802","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1777000802","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1777000802,"node_id":"IC_kwDOAVuczs5p6uFi","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-24T11:10:25Z","updated_at":"2023-10-28T13:30:22Z","author_association":"CONTRIBUTOR","body":"~~I'll try to finish reviewing this PR this week.~~\r\nI need a couple of more days.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1777000802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1777010033","html_url":"https://github.com/apache/celix/issues/674#issuecomment-1777010033","issue_url":"https://api.github.com/repos/apache/celix/issues/674","id":1777010033,"node_id":"IC_kwDOAVuczs5p6wVx","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-24T11:17:45Z","updated_at":"2023-10-24T11:17:45Z","author_association":"CONTRIBUTOR","body":"It will be nice to have array support. \r\nIf we went one step further to support embedding properties, celix properties will become json.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1777010033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1782276185","html_url":"https://github.com/apache/celix/pull/676#issuecomment-1782276185","issue_url":"https://api.github.com/repos/apache/celix/issues/676","id":1782276185,"node_id":"IC_kwDOAVuczs5qO2BZ","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-27T04:33:25Z","updated_at":"2023-10-27T04:33:25Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#676](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (acfe74d) into [master](https://app.codecov.io/gh/apache/celix/commit/e0af0e69a042e81f72d83bf2c75afaa6eb48f726?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (e0af0e6) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master     #676   +/-   ##\n=======================================\n  Coverage   81.69%   81.69%           \n=======================================\n  Files         252      252           \n  Lines       32654    32654           \n=======================================\n  Hits        26677    26677           \n  Misses       5977     5977           \n```\n\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [libs/framework/include/celix/Bundle.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9CdW5kbGUuaA==) | `100.00% <ø> (ø)` | |\n| [libs/framework/include/celix/ServiceRegistration.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9TZXJ2aWNlUmVnaXN0cmF0aW9uLmg=) | `96.49% <ø> (ø)` | |\n| [libs/framework/include/celix/Trackers.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9UcmFja2Vycy5o) | `91.24% <ø> (ø)` | |\n| [libs/framework/include/celix/dm/Component.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9kbS9Db21wb25lbnQuaA==) | `94.44% <ø> (ø)` | |\n| [libs/pushstreams/api/celix/PushEvent.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9wdXNoc3RyZWFtcy9hcGkvY2VsaXgvUHVzaEV2ZW50Lmg=) | `75.00% <ø> (ø)` | |\n| [libs/pushstreams/api/celix/PushStream.h](https://app.codecov.io/gh/apache/celix/pull/676?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9wdXNoc3RyZWFtcy9hcGkvY2VsaXgvUHVzaFN0cmVhbS5o) | `95.12% <ø> (ø)` | |\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1782276185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1782603765","html_url":"https://github.com/apache/celix/issues/539#issuecomment-1782603765","issue_url":"https://api.github.com/repos/apache/celix/issues/539","id":1782603765,"node_id":"IC_kwDOAVuczs5qQF_1","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-27T09:33:59Z","updated_at":"2023-10-27T09:33:59Z","author_association":"CONTRIBUTOR","body":"As observed in https://github.com/apache/celix/pull/673#pullrequestreview-1689187071, there are remaining usages of stderr/stdout for logging. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1782603765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783797395","html_url":"https://github.com/apache/celix/pull/656#issuecomment-1783797395","issue_url":"https://api.github.com/repos/apache/celix/issues/656","id":1783797395,"node_id":"IC_kwDOAVuczs5qUpaT","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-28T12:35:35Z","updated_at":"2023-10-28T12:35:35Z","author_association":"CONTRIBUTOR","body":"> > @pnoltes I just got the Gitpod image working as well, however it is a bit slow. Feel free to give it a try via my own repo: https://gitpod.io/#https://github.com/rlenferink/celix\r\n> > The speed of it makes me aim to also include the instructions to run it locally (which we maybe can even use the same gitpod image for)\r\n> \r\n> Nice, I see that there is now more support than only browser vscode. I even could run individually test when installing the TestMate plugin and correctly configuring where the test executables can be found (in cmake-build-debug).\r\n\r\nI tested the gitpod environment and from what I could see this works nicely. Few remarks:\r\n\r\n- I could run individually unit tests from TestMate but not debug. Debug gives an error.\r\n- What is the plans for support?  Because I can see people trying this out - and that is a good thing -, but this also means that we a) get questions about the gitpod env and b) we should maintain the gitpod container file (for Apache Celix updates and for gitpod environment updates).\r\n\r\n\r\n@rlenferink WDYT?","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783797395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783798796","html_url":"https://github.com/apache/celix/issues/675#issuecomment-1783798796","issue_url":"https://api.github.com/repos/apache/celix/issues/675","id":1783798796,"node_id":"IC_kwDOAVuczs5qUpwM","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-28T12:41:50Z","updated_at":"2023-10-28T12:41:50Z","author_association":"CONTRIBUTOR","body":"Do we still need embedded bundles?\r\n\r\nI added this with the idea that you could create a executable with only embedded bundles and install and use that without needed to figure out how to install bundles and use bundles on a target platform. \r\nBut it does create additional complexity (mainly `--export-dynamic-symbol` and assembly code) and I am not sure anymore if this is worth it. \r\n\r\nBecause we are now working on a major update, it is also possible to drop embedded bundles support. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783798796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783836958","html_url":"https://github.com/apache/celix/pull/678#issuecomment-1783836958","issue_url":"https://api.github.com/repos/apache/celix/issues/678","id":1783836958,"node_id":"IC_kwDOAVuczs5qUzEe","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-28T14:51:59Z","updated_at":"2023-10-29T10:52:00Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/678?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#678](https://app.codecov.io/gh/apache/celix/pull/678?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (e17a38e) into [master](https://app.codecov.io/gh/apache/celix/commit/2028c5929c22602052830360aeb3c49a01115693?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (2028c59) will **decrease** coverage by `0.04%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master     #678      +/-   ##\n==========================================\n- Coverage   81.67%   81.64%   -0.04%     \n==========================================\n  Files         252      252              \n  Lines       32633    32633              \n==========================================\n- Hits        26654    26644      -10     \n- Misses       5979     5989      +10     \n```\n\n\n[see 2 files with indirect coverage changes](https://app.codecov.io/gh/apache/celix/pull/678/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783836958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783837377","html_url":"https://github.com/apache/celix/pull/677#issuecomment-1783837377","issue_url":"https://api.github.com/repos/apache/celix/issues/677","id":1783837377,"node_id":"IC_kwDOAVuczs5qUzLB","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-28T14:53:17Z","updated_at":"2023-10-28T15:00:05Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#677](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (9f40a29) into [master](https://app.codecov.io/gh/apache/celix/commit/eeed2c694fb394ee3c7a4cef8c4e87196716d149?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (eeed2c6) will **increase** coverage by `0.01%`.\n> The diff coverage is `88.88%`.\n\n> :exclamation: Current head 9f40a29 differs from pull request most recent head 70d22bf. Consider uploading reports for the commit 70d22bf to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master     #677      +/-   ##\n==========================================\n+ Coverage   81.65%   81.66%   +0.01%     \n==========================================\n  Files         252      252              \n  Lines       32656    32633      -23     \n==========================================\n- Hits        26664    26649      -15     \n+ Misses       5992     5984       -8     \n```\n\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...undles/pubsub/pubsub\\_admin\\_tcp/src/psa\\_activator.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3RjcC9zcmMvcHNhX2FjdGl2YXRvci5j) | `100.00% <ø> (ø)` | |\n| [...b/pubsub\\_admin\\_tcp/src/pubsub\\_tcp\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3RjcC9zcmMvcHVic3ViX3RjcF90b3BpY19yZWNlaXZlci5j) | `68.87% <ø> (-0.09%)` | :arrow_down: |\n| [...in\\_websocket/src/pubsub\\_websocket\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3dlYnNvY2tldC9zcmMvcHVic3ViX3dlYnNvY2tldF90b3BpY19yZWNlaXZlci5j) | `67.47% <ø> (-0.09%)` | :arrow_down: |\n| [...undles/pubsub/pubsub\\_admin\\_zmq/src/psa\\_activator.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3ptcS9zcmMvcHNhX2FjdGl2YXRvci5j) | `100.00% <ø> (ø)` | |\n| [...b/pubsub\\_admin\\_zmq/src/pubsub\\_zmq\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3ptcS9zcmMvcHVic3ViX3ptcV90b3BpY19yZWNlaXZlci5j) | `76.64% <ø> (-0.07%)` | :arrow_down: |\n| [...ubsub/pubsub\\_spi/src/pubsub\\_interceptors\\_handler.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX3NwaS9zcmMvcHVic3ViX2ludGVyY2VwdG9yc19oYW5kbGVyLmM=) | `98.09% <ø> (-0.02%)` | :arrow_down: |\n| [...ubsub/pubsub\\_topology\\_manager/src/pstm\\_activator.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX3RvcG9sb2d5X21hbmFnZXIvc3JjL3BzdG1fYWN0aXZhdG9yLmM=) | `100.00% <ø> (ø)` | |\n| [bundles/pubsub/pubsub\\_utils/src/pubsub\\_matching.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX3V0aWxzL3NyYy9wdWJzdWJfbWF0Y2hpbmcuYw==) | `78.12% <ø> (-0.17%)` | :arrow_down: |\n| [...te\\_service\\_admin\\_dfi/src/export\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9leHBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | `79.67% <ø> (-0.11%)` | :arrow_down: |\n| [...n\\_shm\\_v2/rsa\\_shm/src/rsa\\_shm\\_export\\_registration.c](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fc2htX3YyL3JzYV9zaG0vc3JjL3JzYV9zaG1fZXhwb3J0X3JlZ2lzdHJhdGlvbi5j) | `100.00% <ø> (ø)` | |\n| ... and [7 more](https://app.codecov.io/gh/apache/celix/pull/677?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/apache/celix/pull/677/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1783837377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1784138461","html_url":"https://github.com/apache/celix/pull/679#issuecomment-1784138461","issue_url":"https://api.github.com/repos/apache/celix/issues/679","id":1784138461,"node_id":"IC_kwDOAVuczs5qV8rd","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-29T15:05:27Z","updated_at":"2023-10-29T15:05:38Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#679](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (0a3b720) into [master](https://app.codecov.io/gh/apache/celix/commit/5cdd18db4dce75cf98692f57ac4bbddad5ec3141?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (5cdd18d) will **increase** coverage by `0.00%`.\n> The diff coverage is `88.88%`.\n\n> :exclamation: Current head 0a3b720 differs from pull request most recent head f495697. Consider uploading reports for the commit f495697 to get more accurate results\n\n```diff\n@@           Coverage Diff           @@\n##           master     #679   +/-   ##\n=======================================\n  Coverage   81.68%   81.69%           \n=======================================\n  Files         252      252           \n  Lines       32633    32589   -44     \n=======================================\n- Hits        26657    26624   -33     \n+ Misses       5976     5965   -11     \n```\n\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [bundles/logging/log\\_admin/src/celix\\_log\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9sb2dnaW5nL2xvZ19hZG1pbi9zcmMvY2VsaXhfbG9nX2FkbWluLmM=) | `99.76% <100.00%> (ø)` | |\n| [...les/pubsub/pubsub\\_admin\\_tcp/src/pubsub\\_tcp\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3RjcC9zcmMvcHVic3ViX3RjcF9hZG1pbi5j) | `50.50% <100.00%> (ø)` | |\n| [...b/pubsub\\_admin\\_tcp/src/pubsub\\_tcp\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3RjcC9zcmMvcHVic3ViX3RjcF90b3BpY19yZWNlaXZlci5j) | `68.87% <100.00%> (ø)` | |\n| [...sub/pubsub\\_admin\\_tcp/src/pubsub\\_tcp\\_topic\\_sender.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3RjcC9zcmMvcHVic3ViX3RjcF90b3BpY19zZW5kZXIuYw==) | `84.01% <100.00%> (ø)` | |\n| [...ubsub\\_admin\\_websocket/src/pubsub\\_websocket\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3dlYnNvY2tldC9zcmMvcHVic3ViX3dlYnNvY2tldF9hZG1pbi5j) | `42.47% <100.00%> (ø)` | |\n| [...in\\_websocket/src/pubsub\\_websocket\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3dlYnNvY2tldC9zcmMvcHVic3ViX3dlYnNvY2tldF90b3BpY19yZWNlaXZlci5j) | `67.47% <100.00%> (ø)` | |\n| [...les/pubsub/pubsub\\_admin\\_zmq/src/pubsub\\_zmq\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3ptcS9zcmMvcHVic3ViX3ptcV9hZG1pbi5j) | `52.96% <100.00%> (ø)` | |\n| [...b/pubsub\\_admin\\_zmq/src/pubsub\\_zmq\\_topic\\_receiver.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3ptcS9zcmMvcHVic3ViX3ptcV90b3BpY19yZWNlaXZlci5j) | `76.64% <100.00%> (ø)` | |\n| [...sub/pubsub\\_admin\\_zmq/src/pubsub\\_zmq\\_topic\\_sender.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX2FkbWluX3ptcS9zcmMvcHVic3ViX3ptcV90b3BpY19zZW5kZXIuYw==) | `84.05% <100.00%> (ø)` | |\n| [...\\_protocol\\_wire\\_v1/src/ps\\_wire\\_protocol\\_activator.c](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9wdWJzdWIvcHVic3ViX3Byb3RvY29sL3B1YnN1Yl9wcm90b2NvbF93aXJlX3YxL3NyYy9wc193aXJlX3Byb3RvY29sX2FjdGl2YXRvci5j) | `100.00% <100.00%> (ø)` | |\n| ... and [36 more](https://app.codecov.io/gh/apache/celix/pull/679?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | |\n\n... and [1 file with indirect coverage changes](https://app.codecov.io/gh/apache/celix/pull/679/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1784138461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791873508","html_url":"https://github.com/apache/celix/issues/647#issuecomment-1791873508","issue_url":"https://api.github.com/repos/apache/celix/issues/647","id":1791873508,"node_id":"IC_kwDOAVuczs5qzdHk","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-03T04:14:12Z","updated_at":"2023-11-03T04:14:12Z","author_association":"CONTRIBUTOR","body":"Another use-after-free is reported:\r\nhttps://github.com/apache/celix/actions/runs/6741052039/job/18325045856\r\n\r\n```\r\n[ RUN      ] ScheduledEventTestSuite.OnceShotEventTest\r\n[2023-11-03T03:58:12] [  debug] [celix_framework] Framework started event received -> registering framework.ready condition service\r\n[2023-11-03T03:58:12] [   info] [celix_framework] [framework_start:476] Celix framework started\r\n[2023-11-03T03:58:12] [  trace] [celix_framework] [framework_start:480] Celix framework started with uuid C113B138-D3CF-43A6-BEF1-A44853FBCA1F\r\n[2023-11-03T03:58:12] [  debug] [celix_framework] [celix_framework_scheduleEvent:2540] Added scheduled event 'unnamed' (id=0) for bundle 'celix_framework' (id=0).\r\n[2023-11-03T03:58:12] [  trace] [celix_framework] [celix_scheduledEvent_process:181] Processing scheduled event unnamed for bundle id 0\r\n[2023-11-03T03:58:12] [  debug] [celix_framework] [celix_framework_processScheduledEvents:1400] Removing processed one-shot scheduled event 'unnamed' (id=0) for bundle if 0.\r\n=================================================================\r\n==18763==ERROR: AddressSanitizer: heap-use-after-free on address 0x6110000c6d88 at pc 0x00010b353b8b bp 0x7ff7b4f77430 sp 0x7ff7b4f77428\r\nREAD of size 8 at 0x6110000c6d88 thread T0\r\n    #0 0x10b353b8a in celix_scheduledEvent_getId+0x2a (test_framework:x86_64+0x1003cdb8a)\r\n    #1 0x10b31ccef in celix_bundleContext_scheduleEvent+0x10f (test_framework:x86_64+0x100396cef)\r\n    #2 0x10b2a2018 in ScheduledEventTestSuite_OnceShotEventTest_Test::TestBody()+0x2f8 (test_framework:x86_64+0x10031c018)\r\n    #3 0x10b38eab0 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x160 (test_framework:x86_64+0x100408ab0)\r\n    #4 0x10b38e6c1 in testing::Test::Run()+0x971 (test_framework:x86_64+0x1004086c1)\r\n    #5 0x10b393586 in testing::TestInfo::Run()+0x9f6 (test_framework:x86_64+0x10040d586)\r\n    #6 0x10b396606 in testing::TestSuite::Run()+0x346 (test_framework:x86_64+0x100410606)\r\n    #7 0x10b3d8870 in testing::internal::UnitTestImpl::RunAllTests()+0x1420 (test_framework:x86_64+0x100452870)\r\n    #8 0x10b3d6cec in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)+0x15c (test_framework:x86_64+0x100450cec)\r\n    #9 0x10b3d6a49 in testing::UnitTest::Run()+0x1a9 (test_framework:x86_64+0x100450a49)\r\n    #10 0x10b424abf in main+0xef (test_framework:x86_64+0x10049eabf)\r\n    #11 0x11716652d in start+0x1cd (dyld:x86_64+0x552d)\r\n\r\n0x6110000c6d88 is located 8 bytes inside of 248-byte region [0x6110000c6d80,0x6110000c6e78)\r\nfreed by thread T401 here:\r\n    #0 0x10bb39019 in wrap_free+0xa9 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4b019)\r\n    #1 0x10b3216e8 in fw_eventDispatcher+0x498 (test_framework:x86_64+0x10039b6e8)\r\n    #2 0x7ff8136794e0 in _pthread_start+0x7c (libsystem_pthread.dylib:x86_64+0x64e0)\r\n    #3 0x7ff813674f6a in thread_start+0xe (libsystem_pthread.dylib:x86_64+0x1f6a)\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x10bb38ed0 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4aed0)\r\n    #1 0x10b353619 in celix_scheduledEvent_create+0x39 (test_framework:x86_64+0x1003cd619)\r\n    #2 0x10b32e7eb in celix_framework_scheduleEvent+0xcb (test_framework:x86_64+0x1003a87eb)\r\n    #3 0x10b31ccef in celix_bundleContext_scheduleEvent+0x10f (test_framework:x86_64+0x100396cef)\r\n    #4 0x10b2a2018 in ScheduledEventTestSuite_OnceShotEventTest_Test::TestBody()+0x2f8 (test_framework:x86_64+0x10031c018)\r\n    #5 0x10b38eab0 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x160 (test_framework:x86_64+0x100408ab0)\r\n    #6 0x10b38e6c1 in testing::Test::Run()+0x971 (test_framework:x86_64+0x1004086c1)\r\n    #7 0x10b393586 in testing::TestInfo::Run()+0x9f6 (test_framework:x86_64+0x10040d586)\r\n    #8 0x10b396606 in testing::TestSuite::Run()+0x346 (test_framework:x86_64+0x100410606)\r\n    #9 0x10b3d8870 in testing::internal::UnitTestImpl::RunAllTests()+0x1420 (test_framework:x86_64+0x100452870)\r\n    #10 0x10b3d6cec in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)+0x15c (test_framework:x86_64+0x100450cec)\r\n    #11 0x10b3d6a49 in testing::UnitTest::Run()+0x1a9 (test_framework:x86_64+0x100450a49)\r\n    #12 0x10b424abf in main+0xef (test_framework:x86_64+0x10049eabf)\r\n    #13 0x11716652d in start+0x1cd (dyld:x86_64+0x552d)\r\n\r\nThread T401 created by T0 here:\r\n    #0 0x10bb3299c in wrap_pthread_create+0x5c (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4499c)\r\n    #1 0x10b790981 in celixThread_create+0x11 (libcelix_utils.3.dylib:x86_64+0x13981)\r\n    #2 0x10b320c35 in fw_init+0x195 (test_framework:x86_64+0x10039ac35)\r\n    #3 0x10b321f02 in framework_start+0x132 (test_framework:x86_64+0x10039bf02)\r\n    #4 0x10b3452f0 in celix_frameworkFactory_createFramework+0x120 (test_framework:x86_64+0x1003bf2f0)\r\n    #5 0x10afb5919 in celix::createFramework(celix::Properties const&)+0x49 (test_framework:x86_64+0x10002f919)\r\n    #6 0x10b2cd06e in ScheduledEventTestSuite::ScheduledEventTestSuite()+0x3ae (test_framework:x86_64+0x10034706e)\r\n    #7 0x10b2ccc6b in testing::internal::TestFactoryImpl<ScheduledEventTestSuite_OnceShotEventTest_Test>::CreateTest()+0x1b (test_framework:x86_64+0x100346c6b)\r\n    #8 0x10b393a7c in testing::Test* testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*)+0x15c (test_framework:x86_64+0x10040da7c)\r\n    #9 0x10b392d80 in testing::TestInfo::Run()+0x1f0 (test_framework:x86_64+0x10040cd80)\r\n    #10 0x10b396606 in testing::TestSuite::Run()+0x346 (test_framework:x86_64+0x100410606)\r\n    #11 0x10b3d8870 in testing::internal::UnitTestImpl::RunAllTests()+0x1420 (test_framework:x86_64+0x100452870)\r\n    #12 0x10b3d6cec in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*)+0x15c (test_framework:x86_64+0x100450cec)\r\n    #13 0x10b3d6a49 in testing::UnitTest::Run()+0x1a9 (test_framework:x86_64+0x100450a49)\r\n    #14 0x10b424abf in main+0xef (test_framework:x86_64+0x10049eabf)\r\n    #15 0x11716652d in start+0x1cd (dyld:x86_64+0x552d)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free (test_framework:x86_64+0x1003cdb8a) in celix_scheduledEvent_getId+0x2a\r\nShadow bytes around the buggy address:\r\n  0x1c2200018d60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x1c2200018d70: fd fd fd fd fd fd fd fd fd fa fa fa fa fa fa fa\r\n  0x1c2200018d80: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00\r\n  0x1c2200018d90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x1c2200018da0: 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n=>0x1c2200018db0: fd[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x1c2200018dc0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa\r\n  0x1c2200018dd0: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\r\n  0x1c2200018de0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x1c2200018df0: fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2200018e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==18763==ABORTING\r\n```","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791873508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791953178","html_url":"https://github.com/apache/celix/pull/683#issuecomment-1791953178","issue_url":"https://api.github.com/repos/apache/celix/issues/683","id":1791953178,"node_id":"IC_kwDOAVuczs5qzwka","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-03T06:43:16Z","updated_at":"2023-11-03T06:46:06Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/683?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#683](https://app.codecov.io/gh/apache/celix/pull/683?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (709228b) into [master](https://app.codecov.io/gh/apache/celix/commit/046e52afc410d69767317275bf02f68af26519dc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (046e52a) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head 709228b differs from pull request most recent head e98a6ec. Consider uploading reports for the commit e98a6ec to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master     #683      +/-   ##\n==========================================\n- Coverage   81.67%   81.66%   -0.01%     \n==========================================\n  Files         252      252              \n  Lines       32602    32603       +1     \n==========================================\n- Hits        26627    26626       -1     \n- Misses       5975     5977       +2     \n```\n\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/683?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [libs/framework/src/framework.c](https://app.codecov.io/gh/apache/celix/pull/683?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2ZyYW1ld29yay5j) | `85.00% <100.00%> (+<0.01%)` | :arrow_up: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/apache/celix/pull/683/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: Codecov offers a browser extension for seamless coverage viewing on GitHub. Try it in [Chrome](https://chrome.google.com/webstore/detail/codecov/gedikamndpbemklijjkncpnolildpbgo) or [Firefox](https://addons.mozilla.org/en-US/firefox/addon/codecov/) today!\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791953178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791961146","html_url":"https://github.com/apache/celix/issues/675#issuecomment-1791961146","issue_url":"https://api.github.com/repos/apache/celix/issues/675","id":1791961146,"node_id":"IC_kwDOAVuczs5qzyg6","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-03T06:55:46Z","updated_at":"2023-11-03T06:55:46Z","author_association":"CONTRIBUTOR","body":"> Do we still need embedded bundles?\r\n\r\nCurrently I have no usage of embedded bundles, and thus I am not against removing it.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1791961146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1793836785","html_url":"https://github.com/apache/celix/issues/675#issuecomment-1793836785","issue_url":"https://api.github.com/repos/apache/celix/issues/675","id":1793836785,"node_id":"IC_kwDOAVuczs5q68bx","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-05T20:27:00Z","updated_at":"2023-11-05T20:27:00Z","author_association":"CONTRIBUTOR","body":"> > Do we still need embedded bundles?\r\n> \r\n> Currently I have no usage of embedded bundles, and thus I am not against removing it.\r\n\r\nI will remove the support for embedded bundles. In hindsight I think it is better to focus on a better bundle caching/storage system.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1793836785/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1804253059","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1804253059","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1804253059,"node_id":"IC_kwDOAVuczs5rireD","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-09T17:25:24Z","updated_at":"2023-11-09T17:25:24Z","author_association":"CONTRIBUTOR","body":"> Here are some remarks on properties implementation, and I have finished the first round review, which takes much longer than expected. That is understandable: for such a change of fundamental type used everywhere, we need to be extra careful to avoid introducing bugs. I tried my best.\r\n> \r\n> Overall, it's a nice work which brings about huge performance and ergonomics improvements. Looking forward to getting it merged and implementing #674 thereafter.\r\n\r\nThanks for the thorough review :smile: . I will update the implementation based on the review comments. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1804253059/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811768377","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811768377","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811768377,"node_id":"IC_kwDOAVuczs5r_WQ5","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T03:53:31Z","updated_at":"2023-11-15T04:22:24Z","author_association":"CONTRIBUTOR","body":"I found the issue description incomprehensible. \r\nYou may try to translate it into your native language using AI tools like deepl.com to double-check that.\r\n\r\nI suggest that you describe the issue in native language first and use AI tools to translate it into English before posing it.\r\nPlease edit your question to make it comprehensible before reopening the issue.\r\n\r\nOr if you happen to speak Chinese (I made the guess from your ID), you can raise an issue in Chinese: https://github.com/PengZheng/Celix_CN\r\nYou will also find Chinese documentation there.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811768377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811828516","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811828516","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811828516,"node_id":"IC_kwDOAVuczs5r_k8k","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T05:23:28Z","updated_at":"2023-11-15T05:23:28Z","author_association":"NONE","body":"Thank you for your advice. I'm sorry for the inconvenience caused by my native language being Chinese\r\n\r\nIn Celix's existing example, after starting the container, bundles can be operated on the terminal through commands such as \"lb\" and \"install\". Now I need to expose an interface in the C++ project as a server, and the client sends instructions to remotely operate on the bundle, that is, remotely complete the \"install bundle\" operation.\r\n\r\nHowever, before I used celix, I used the same language C++ to complete the service side and the consumer side (see \"celix/examples/celix-examples/services_example_cxx/src/SimpleConsumer) Bundleactivater.cc \"). In the current project of Celix, I have not seen an example of C++ as a server, so I would like to ask if there is a similar case that can be used as a reference to achieve my needs? In addition, although the official website describes that C can be used as a server and C++ can be used as a consumer, it is only a description","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811828516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811840669","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811840669","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811840669,"node_id":"IC_kwDOAVuczs5r_n6d","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T05:38:52Z","updated_at":"2023-11-15T05:45:53Z","author_association":"CONTRIBUTOR","body":"`Celix::http_admin` serves as a server, and `Celix::shell_wui` exposes the ability of bundle management via WEB, which I believe you already have tried in #592: \r\n\r\n> Run `examples/celix-examples/http_example`, open `localhost:8080/shell` in your browser.\r\n\r\nNow you can install/uninstall/start/stop bundle using browser (remotely of course).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811840669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811849983","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811849983","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811849983,"node_id":"IC_kwDOAVuczs5r_qL_","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T05:51:54Z","updated_at":"2023-11-15T05:51:54Z","author_association":"CONTRIBUTOR","body":"If you are C++ fans, I would recommend https://github.com/CppMicroServices/CppMicroServices or https://github.com/volt-software/Ichor.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811849983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811855638","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811855638","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811855638,"node_id":"IC_kwDOAVuczs5r_rkW","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T05:59:31Z","updated_at":"2023-11-15T05:59:31Z","author_association":"NONE","body":"The example you mentioned I have tried before, it can be used. However, my current requirement is to create a component in my project that controls the bundle as a service consumer and invokes the interface in the bundle on the server side to achieve Bundle management. The http example is essentially still entering terminal instructions on the web page, which is not what I need to lock. What I want is:\r\nprovider bundle-> call function(std::string commandLine, std:string bundleName) -> consumer bunde\r\nstd::string commandLine = \"install\";\r\nstd:string bundleName = \"path/to/xx.zip\"\r\nAt present, I only find some scattered implementation parts written in C language, and I feel more difficult to use C++ to connect with him, because I only see the same language C or C++ to realize the server side and consumer side examples","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811855638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811862789","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811862789","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811862789,"node_id":"IC_kwDOAVuczs5r_tUF","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T06:08:03Z","updated_at":"2023-11-15T06:21:17Z","author_association":"CONTRIBUTOR","body":">  provider bundle-> call function(std::string commandLine, std:string bundleName) -> consumer bunde\r\n\r\nWhat service does the provider bundle provide? What service does the consumer bundle consume? What does the service do?\r\nIt seems to me that the \"provider\" calls a function implemented (provided) by the \"consumer\". That makes me confused.\r\n\r\nIf you want to call some function to manage another framework instance running in another process/host, then what you need is expose `celix_framework_installBundle`/`celix_framework_uninstallBundle` via remote procedure call.  We do support RPC (check remote services examples `bundles/remote_services/examples`), but then you need to design the remote services and hook it to `celix_framework_installBundle`/`celix_framework_uninstallBundle`. This should be straightforward. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811862789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811896614","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811896614","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811896614,"node_id":"IC_kwDOAVuczs5r_1km","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T06:50:33Z","updated_at":"2023-11-15T06:50:33Z","author_association":"NONE","body":"What you said is very difficult for me, \"celix/examples/celix - examples/readme_cxx_examples/SRC/MyShellCommandProviderBundleActivator. Cc\" such as the file, The executeCommand inside I was hoping to implement specific operations on the bundle, but it doesn't. Then you can in the class MyShellCommandProviderBundleActivator \"write executeCommand (\" install\", \"XXX.zip\"...) \"I don't know what the other two parameters are. If you can provide such an example here, I can write the server side and the consumer side to achieve my functions\r\n\r\nTo summarize, to mention \"MyShellCommandProviderBundleActivator. Cc\"\r\n1. I want the executeCommand I call to have an interface that implements the actual operations of the bundle, not just a printf simulation\r\n2. The interface can be tested when the container is started","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811896614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811911758","html_url":"https://github.com/apache/celix/issues/687#issuecomment-1811911758","issue_url":"https://api.github.com/repos/apache/celix/issues/687","id":1811911758,"node_id":"IC_kwDOAVuczs5r_5RO","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T07:05:58Z","updated_at":"2023-11-15T08:02:06Z","author_association":"CONTRIBUTOR","body":"If you want to implement a shell command, which manages bundles in the same framework instance as the provider (rather than a simple printf), then you can check `bundles/shell/shell/src/install_command.c` for an example (`Celix::shell` and `Celix::ShellCxx` provide all the standard Celix commands). Most of such bundle management commands are already provided as standard ones. Normally you don't need to reinvent the wheel.\r\n\r\nIf you want to implement a shell command, which manages bundles installed in a different framework instance as the provider, then you must rely on remote services. \r\n\r\nIf you don't want to use remote services because it's hard, just install and start #592 bundles in the target framework instance. Remembering that Apache Celix Shell WUI just responds to normal HTTP requests, you can use libcurl to issue an HTTP request consisting of bundle management commands like `lb`, which `Celix::shell_wui` in the target framework will process.\r\n\r\nTo be honest, I still don't get you, and will stop here.\r\nLet's hope others can understand your question better.\r\nOr you could describe it in Chinese here: https://github.com/PengZheng/Celix_CN\r\n\r\nTo my current understanding, there is nothing flawed (and thus need to be fixed) . So I'll leave this closed.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1811911758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817518370","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1817518370","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1817518370,"node_id":"IC_kwDOAVuczs5sVSEi","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-18T14:05:33Z","updated_at":"2023-11-18T14:05:33Z","author_association":"CONTRIBUTOR","body":"> I agree that \"the index of the end iterator is the same as the size of the map\".\r\nThe current implementation of celix_stringHashMapIterator_next allows iter->index > map->genericMap.size. Is it intended?\r\n\r\nAh i see, no this was not intentionally and I think it is better to keep the max iterator index on map size. Refactor the index increment for this. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817518370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817543363","html_url":"https://github.com/apache/celix/issues/688#issuecomment-1817543363","issue_url":"https://api.github.com/repos/apache/celix/issues/688","id":1817543363,"node_id":"IC_kwDOAVuczs5sVYLD","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-18T15:52:30Z","updated_at":"2023-11-18T15:52:30Z","author_association":"CONTRIBUTOR","body":"> IIRC, `dlopen` can open libraries of the same soname but of different paths on Linux. I can't see why we don't support it at the first place. Maybe it will cause trouble on macOS?\r\n\r\nI think this is also not an issue for macOS, but I am not sure. Even then, IMO it is fine to then to support multiple versions of the same bundle symbolic name for Linux only. \r\n\r\nIf I remember the other issue was private libs in bundle (i.e. libs added using `celix_bundle_private_libs`) with identical SONAME. This could lead to issue that bundle version 1.1.0 will use a private lib of bundle version 1.0.0, because it already has loaded a needed SONAME.\r\n\r\nWe discussed this a while back and if i remember correctly this is solvable, but not easy. \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817543363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817543557","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1817543557","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1817543557,"node_id":"IC_kwDOAVuczs5sVYOF","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-18T15:53:24Z","updated_at":"2023-11-18T15:53:59Z","author_association":"CONTRIBUTOR","body":"@PengZheng  I think I reworked all the remarks. \r\n\r\nCould you re-review?","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817543557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817544573","html_url":"https://github.com/apache/celix/issues/688#issuecomment-1817544573","issue_url":"https://api.github.com/repos/apache/celix/issues/688","id":1817544573,"node_id":"IC_kwDOAVuczs5sVYd9","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-18T15:57:19Z","updated_at":"2023-11-18T15:57:19Z","author_association":"CONTRIBUTOR","body":"Good point. Both the bundle management API and service tracking API (mentioned on the celix dev mailling list) can IMO indeed be improved. \r\n\r\nDo you think this is improvable by adding a few extra bundle calls in the bundle context or framework public headers? Or do we need to rethink the bundle ID approach used in the current API?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817544573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817732125","html_url":"https://github.com/apache/celix/issues/688#issuecomment-1817732125","issue_url":"https://api.github.com/repos/apache/celix/issues/688","id":1817732125,"node_id":"IC_kwDOAVuczs5sWGQd","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-19T03:22:22Z","updated_at":"2023-11-19T03:22:22Z","author_association":"CONTRIBUTOR","body":"> If I remember the other issue was private libs in bundle (i.e. libs added using celix_bundle_private_libs) with identical SONAME. This could lead to issue that bundle version 1.1.0 will use a private lib of bundle version 1.0.0, because it already has loaded a needed SONAME.\r\n\r\nOh I remember that! We don't have the luxury of Java class loader to have unlimited number of linker namespace. \r\n\r\n> Do you think this is improvable by adding a few extra bundle calls in the bundle context or framework public headers? Or do we need to rethink the bundle ID approach used in the current API?\r\n\r\nI feel that the bundle ID idea is OK and this issue can be fixed by improving our existing API or implementation. \r\n\r\nAs for the service tracking API, for a large legacy application embedding a Celix framework instance, the most possible performance bottleneck is the system bundle context. After finishing the job at hand, I will return to this.\r\n\r\nPS: I am currently working on #590, and Xu is working on Event Admin.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817732125/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817754005","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1817754005","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1817754005,"node_id":"IC_kwDOAVuczs5sWLmV","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-19T05:36:56Z","updated_at":"2023-11-19T06:41:32Z","author_association":"CONTRIBUTOR","body":"> Ah I see, no this was not intentionally and I think it is better to keep the max iterator index on map size. Refactor the index increment for this.\r\n\r\nIn the original implementation, `index` has a well-defined meaning: the entry pointed by the iterator is the `index`-th entry in this iteration.  Without this meaning,  the newly added test `TEST_F(HashMapTestSuite, IterateWithRemoveAtIndex4Test)` seems weird:\r\n\r\n```C\r\n    celix_autoptr(celix_string_hash_map_t) sMap = createStringHashMap(6);\r\n    auto iter1 = celix_stringHashMap_begin(sMap);\r\n    while (!celix_stringHashMapIterator_isEnd(&iter1)) {\r\n        if (iter1.index == 4) {\r\n            // note only removing entries where the iter key is even\r\n            celix_stringHashMapIterator_remove(&iter1);\r\n        } else {\r\n            celix_stringHashMapIterator_next(&iter1);\r\n        }\r\n    }\r\n    EXPECT_EQ(4, celix_stringHashMap_size(sMap)); \r\n```\r\n\r\n4 rather than 5 entries remain. The original implementation and well-defined meaning seems better. Sorry for misguiding you.\r\n\r\n`index` is arguably an external concept, since we don't rely on it to decide whether the current iteration ends:\r\n```C\r\nbool celix_stringHashMapIterator_isEnd(const celix_string_hash_map_iterator_t* iter) {\r\n    return iter->_internal[1] == NULL; //check if entry is NULL\r\n}\r\n\r\nbool celix_longHashMapIterator_isEnd(const celix_long_hash_map_iterator_t* iter) {\r\n    return iter->_internal[1] == NULL; //check if entry is NULL\r\n}\r\n```\r\nTherefore, it is also reasonable to remove `index` from the interface and implementation.\r\nWDYT?","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1817754005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1819541539","html_url":"https://github.com/apache/celix/pull/470#issuecomment-1819541539","issue_url":"https://api.github.com/repos/apache/celix/issues/470","id":1819541539,"node_id":"IC_kwDOAVuczs5sdAAj","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-20T17:51:08Z","updated_at":"2023-11-20T17:51:08Z","author_association":"CONTRIBUTOR","body":"> \r\n> Therefore, it is also reasonable to remove `index` from the interface and implementation. WDYT?\r\n\r\nI agree. The index field is too confusion and it is trivial to add a counter/index on your own, so I removed the index field.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1819541539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1824428541","html_url":"https://github.com/apache/celix/pull/691#issuecomment-1824428541","issue_url":"https://api.github.com/repos/apache/celix/issues/691","id":1824428541,"node_id":"IC_kwDOAVuczs5svpH9","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-23T13:19:59Z","updated_at":"2023-11-27T02:10:23Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`e9642b9`)](https://app.codecov.io/gh/apache/celix/commit/e9642b94a9487e74b174732a39812d7f4fa2a75e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.14% compared to head [(`87a4b35`)](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.46%.\n\n> :exclamation: Current head 87a4b35 differs from pull request most recent head bd931c0. Consider uploading reports for the commit bd931c0 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/dfi/src/dyn\\_avpr\\_type.c](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9kZmkvc3JjL2R5bl9hdnByX3R5cGUuYw==) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #691      +/-   ##\n==========================================\n+ Coverage   83.14%   83.46%   +0.32%     \n==========================================\n  Files         254      254              \n  Lines       32935    32951      +16     \n==========================================\n+ Hits        27384    27504     +120     \n+ Misses       5551     5447     -104     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/691?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1824428541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1828525439","html_url":"https://github.com/apache/celix/pull/691#issuecomment-1828525439","issue_url":"https://api.github.com/repos/apache/celix/issues/691","id":1828525439,"node_id":"IC_kwDOAVuczs5s_RV_","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-27T20:19:43Z","updated_at":"2023-11-27T20:19:43Z","author_association":"CONTRIBUTOR","body":"Good to see some additional test for libdfi. I will try to review this PR this week. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1828525439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1828528517","html_url":"https://github.com/apache/celix/pull/690#issuecomment-1828528517","issue_url":"https://api.github.com/repos/apache/celix/issues/690","id":1828528517,"node_id":"IC_kwDOAVuczs5s_SGF","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-27T20:21:17Z","updated_at":"2023-11-27T20:21:17Z","author_association":"CONTRIBUTOR","body":"It's great to see some sorely missed documentation being added. I will try to review this PR this week. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1828528517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1829365450","html_url":"https://github.com/apache/celix/issues/612#issuecomment-1829365450","issue_url":"https://api.github.com/repos/apache/celix/issues/612","id":1829365450,"node_id":"IC_kwDOAVuczs5tCebK","user":{"login":"xuzhenbao","id":43104033,"node_id":"MDQ6VXNlcjQzMTA0MDMz","avatar_url":"https://avatars.githubusercontent.com/u/43104033?v=4","gravatar_id":"","url":"https://api.github.com/users/xuzhenbao","html_url":"https://github.com/xuzhenbao","followers_url":"https://api.github.com/users/xuzhenbao/followers","following_url":"https://api.github.com/users/xuzhenbao/following{/other_user}","gists_url":"https://api.github.com/users/xuzhenbao/gists{/gist_id}","starred_url":"https://api.github.com/users/xuzhenbao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xuzhenbao/subscriptions","organizations_url":"https://api.github.com/users/xuzhenbao/orgs","repos_url":"https://api.github.com/users/xuzhenbao/repos","events_url":"https://api.github.com/users/xuzhenbao/events{/privacy}","received_events_url":"https://api.github.com/users/xuzhenbao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-28T08:54:13Z","updated_at":"2023-11-28T08:54:13Z","author_association":"CONTRIBUTOR","body":"> Place the implementation in libs/netstring and ensure that the lib file name is celix_netstring and the lib name is netstring with a Celix::netstring alias. The lib should depend on Celix::utils and use the celix_err implementation to report error messages \r\n\r\n@pnoltes \r\nAs described in #674, properties will support netstring encoding, which will cause a mutual dependency between Celix:utils and Celix:netstring. To solve this problem, we may need to place netstring in Celix:utils; or we can separate celix_err and celix_errno into the library Celix:err, then Celix:utils and Celix:netstring depend on Celix:err. Do you have any other views?\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1829365450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1829372583","html_url":"https://github.com/apache/celix/issues/612#issuecomment-1829372583","issue_url":"https://api.github.com/repos/apache/celix/issues/612","id":1829372583,"node_id":"IC_kwDOAVuczs5tCgKn","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-28T08:58:52Z","updated_at":"2023-11-28T09:20:51Z","author_association":"CONTRIBUTOR","body":"> To solve this problem, we may need to place netstring in Celix:utils; or we can separate celix_err and celix_errno into the library Celix:err, then Celix:utils and Celix:netstring depend on Celix:err.\r\n\r\nOr a standalone netstring lib which does not depend on Celix:utils? It seems that we can reuse existing errno to report error, logging is not really needed. Customized `FILE *` may also help netstring mux/demux.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1829372583/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1835803033","html_url":"https://github.com/apache/celix/pull/690#issuecomment-1835803033","issue_url":"https://api.github.com/repos/apache/celix/issues/690","id":1835803033,"node_id":"IC_kwDOAVuczs5tbCGZ","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-01T09:58:23Z","updated_at":"2023-12-01T10:23:16Z","author_association":"CONTRIBUTOR","body":"I've finished reading RFC 6762 and 6763 (word by word), and have some further remarks on `discovery_zeroconf`:\r\n\r\n## Large TXT Records\r\n\r\nAs previously pointed out by @pnoltes in an email:\r\n\r\n> One of the issue we had with mDNS, is that payload size is very\r\nlimited and as result the remote service discovery was updated to a 2\r\nstep approach:\r\n\r\nThe current design adopt the approach sketched by [Service Instances with Multiple TXT Records\r\n](https://datatracker.ietf.org/doc/html/rfc6763#autoid-20).\r\nFor this to work reliably, care must be taken to make sure that IP fragmentation does not happen, because\r\n\r\n>  Even on hosts that normally\r\n   handle Ethernet \"Jumbo\" packets and IP fragment reassembly, it is\r\n   becoming more common for these hosts to implement power-saving modes\r\n   where the main CPU goes to sleep and hands off packet reception tasks\r\n   to a more limited processor in the network interface hardware, which\r\n   may not support Ethernet \"Jumbo\" packets or IP fragment reassembly.\r\n\r\nA snapshot of mDNS wireshark capture will be very helpful to illustrate the current approach.\r\n\r\nFrom the current documentation (I have not checked the implementation), it is not clear how we deal with packet loss.\r\nFor service whose service advertisement fit in a single message, it is never a problem. But for services generating large TXT records, how do we guarantee to collect all associated TXT records.\r\n\r\nDo we have a test case for packet loss? I fully understand it is challenging to test this. But if we do have one, it rocks.\r\n\r\n## Fixed Hostname and Port in SRV\r\n\r\nAs mentioned above, this basically defeats the purpose of zeroconf. Don't do this!\r\nLet just use the `hostname` of the OS.\r\nFor RSA over HTTP, port should be the real port listened by the HTTP server.\r\nFor RSA over shared memory, port could be 0.\r\n\r\nIt is OK to store URL in TXT records, but note that\r\n\r\n>    The target host name and TCP (or UDP) port number of the service are\r\n   given in the SRV record.  This information -- target host name and\r\n   port number -- MUST NOT be duplicated using key/value attributes in\r\n   the TXT record.\r\n\r\nURL/URI does not necessarily contain host and port. For more, check [URI Syntax Components](https://datatracker.ietf.org/doc/html/rfc3986#autoid-17).\r\n\r\n## Service Instance Name and Service Subtypes\r\n\r\nIf the application uses `rsa_shm` alone, then only service instances exported by `rsa_shm` should be discovered.\r\nThis is not the case (and less than ideal) for the current implementation: all service instances are enumerated by `discovery_zeroconf`. By using service subtypes, if the application only uses `rsa_shm`, `discovery_zeroconf` should search for something like `_shm._sub._celix-rpc._udp` rather than `_celix-rpc._udp`. For a user who want to list all exported services for debugging purpose, he/she can search for `_celix-rpc._udp`. Check [ Selective Instance Enumeration ](https://datatracker.ietf.org/doc/html/rfc6763#autoid-22) for more on service subtypes.\r\n\r\nWe only relies on the uniqueness of service instance name, otherwise It's mostly used for debugging. \r\nFortunately, we only need to provide an informative name, mDNSResponder will help to guarantee its uniqueness:\r\n\r\n> The default name should be short and\r\n   descriptive, and SHOULD NOT include the device's Media Access Control\r\n   (MAC) address, serial number, or any similar incomprehensible\r\n   hexadecimal string in an attempt to make the name globally unique.\r\n   For discussion of why <Instance> names don't need to be (and SHOULD\r\n   NOT be) made unique at the factory, see [Appendix D](https://datatracker.ietf.org/doc/html/rfc6763#appendix-D), \"Choice of\r\n   Factory-Default Names\".\r\n\r\nService name alone is not informative enough. I suggest we include pid of the service provider, which is very important for debugging a misbehaved remote service.\r\n\r\nA shell command or the existing mDNSResponder command tool should be a useful debugging tool.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1835803033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1837529132","html_url":"https://github.com/apache/celix/pull/693#issuecomment-1837529132","issue_url":"https://api.github.com/repos/apache/celix/issues/693","id":1837529132,"node_id":"IC_kwDOAVuczs5thngs","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-03T16:18:44Z","updated_at":"2023-12-10T18:55:47Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`95bbcfc`)](https://app.codecov.io/gh/apache/celix/commit/95bbcfca69010c88d8ce95d0f56b5759ac4a2a6b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.11% compared to head [(`667756b`)](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.42%.\n> Report is 9 commits behind head on master.\n\n> :exclamation: Current head 667756b differs from pull request most recent head bc31fbc. Consider uploading reports for the commit bc31fbc to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/dfi/src/dyn\\_avpr\\_type.c](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9kZmkvc3JjL2R5bl9hdnByX3R5cGUuYw==) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #693      +/-   ##\n==========================================\n+ Coverage   83.11%   83.42%   +0.31%     \n==========================================\n  Files         254      254              \n  Lines       32929    32988      +59     \n==========================================\n+ Hits        27369    27521     +152     \n+ Misses       5560     5467      -93     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/693?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1837529132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1840288802","html_url":"https://github.com/apache/celix/pull/694#issuecomment-1840288802","issue_url":"https://api.github.com/repos/apache/celix/issues/694","id":1840288802,"node_id":"IC_kwDOAVuczs5tsJQi","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-05T08:51:43Z","updated_at":"2023-12-05T08:51:43Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`95bbcfc`)](https://app.codecov.io/gh/apache/celix/commit/95bbcfca69010c88d8ce95d0f56b5759ac4a2a6b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.11% compared to head [(`543c470`)](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.37%.\n> Report is 4 commits behind head on master.\n\n> :exclamation: Current head 543c470 differs from pull request most recent head 64521b7. Consider uploading reports for the commit 64521b7 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/dfi/src/dyn\\_avpr\\_type.c](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9kZmkvc3JjL2R5bl9hdnByX3R5cGUuYw==) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #694      +/-   ##\n==========================================\n+ Coverage   83.11%   83.37%   +0.25%     \n==========================================\n  Files         254      254              \n  Lines       32929    32945      +16     \n==========================================\n+ Hits        27369    27467      +98     \n+ Misses       5560     5478      -82     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/694?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1840288802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1840851626","html_url":"https://github.com/apache/celix/pull/692#issuecomment-1840851626","issue_url":"https://api.github.com/repos/apache/celix/issues/692","id":1840851626,"node_id":"IC_kwDOAVuczs5tuSqq","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-05T14:01:53Z","updated_at":"2023-12-22T16:24:51Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `33 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`95bbcfc`)](https://app.codecov.io/gh/apache/celix/commit/95bbcfca69010c88d8ce95d0f56b5759ac4a2a6b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.11% compared to head [(`43b73d3`)](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 84.34%.\n> Report is 29 commits behind head on master.\n\n> :exclamation: Current head 43b73d3 differs from pull request most recent head 9d37c55. Consider uploading reports for the commit 9d37c55 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/framework/src/bundle\\_context.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2J1bmRsZV9jb250ZXh0LmM=) | 63.63% | [8 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/dm\\_component\\_impl.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2RtX2NvbXBvbmVudF9pbXBsLmM=) | 63.63% | [8 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/utils/src/filter.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy91dGlscy9zcmMvZmlsdGVyLmM=) | 98.39% | [8 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/service\\_registration.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVnaXN0cmF0aW9uLmM=) | 81.48% | [5 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/include/celix/BundleActivator.h](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9CdW5kbGVBY3RpdmF0b3IuaA==) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...ramework/include/celix/dm/ServiceDependency\\_Impl.h](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9kbS9TZXJ2aWNlRGVwZW5kZW5jeV9JbXBsLmg=) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/service\\_registry.c](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVnaXN0cnkuYw==) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #692      +/-   ##\n==========================================\n+ Coverage   83.11%   84.34%   +1.23%     \n==========================================\n  Files         254      248       -6     \n  Lines       32929    31180    -1749     \n==========================================\n- Hits        27369    26300    -1069     \n+ Misses       5560     4880     -680     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/692?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1840851626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848398520","html_url":"https://github.com/apache/celix/issues/685#issuecomment-1848398520","issue_url":"https://api.github.com/repos/apache/celix/issues/685","id":1848398520,"node_id":"IC_kwDOAVuczs5uLFK4","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-09T12:38:47Z","updated_at":"2023-12-09T13:29:57Z","author_association":"CONTRIBUTOR","body":"I found the following nice explanation of [[The Java Properties File Format](https://www.kajabity.com/kajabity-tools/java-properties-classes/the-java-properties-file-format/)] in addition to [java.util.Properties.load(java.io.Reader)](https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)) :\r\n\r\n# The Java Properties File Format\r\n\r\nA Java style properties file contains key value pairs (properties) in a file with ISO-8859-1 encoding (code page 28591). The file usually has a “.properties” file extension and consists of a series of lines (terminated by CRLF or CR or LF) each a key value pair, a comment or a blank line.\r\n\r\nLeading whitespace (spaces, tabs ‘\\t’, form feeds ‘\\f’) are ignored at the start of any line – and a line that is empty or contains only whitespace is treated as blank and ignored.\r\n\r\nA line where the first non-whitespace character is a ‘#’ or ‘!’ is a comment line and the rest of the line is ignored.\r\n\r\nIf the first non-whitespace character is not ‘#’ or ‘!’ then it is the start of a key. A key is all the characters up to the first whitespace or a key/value separator (‘=’ or ‘:’). The separator is optional. Any whitespace after the key or after the separator (if present) is ignored.\r\n\r\nThe first non-whitespace character after the separator (or after the key if no separator) begins the value. The value may include whitespace, separators, or comment characters.\r\n\r\nThe following special cases are defined:\r\n\r\n```\r\n'\\t' - horizontal tab.\r\n'\\f' - form feed.\r\n'\\r' - return\r\n'\\n' - new line\r\n'\\\\' - add escape character.\r\n'\\ ' - add space in a key or at the start of a value.\r\n'\\!', '\\#' - add comment markers at the start of a key.\r\n'\\=', '\\:' - add a separator in a key.\r\n```\r\n\r\nAny Unicode character may be inserted in either key or value using the following escape:\r\n\r\n```\r\n'\\uXXXX' - where XXXX represents the unicode character code as 4 hexadecimal digits.\r\n```\r\n\r\nFinally, longer lines can be broken by putting an escape at the very end of the line. Any leading space (unless escaped) is skipped at the beginning of the following line.\r\n\r\n## Examples\r\n\r\n```\r\na-key = a-value\r\na-key : a-value\r\na-key=a-value\r\na-key a-value\r\n```\r\n\r\nAll the above will result in the same key/value pair – key “a-key” and value “a-value”.\r\n\r\n```\r\n! comment...\r\n# another comment...\r\n```\r\n\r\nThe above are two examples of comments. Yes, you can add comments to Java .properties files – so please do!\r\n\r\n```\r\nHong\\ Kong = Near China\r\n```\r\n\r\nThe above shows how to embed a space in a key – the key is “Hong Kong” and the value is “Near China”. Without the ‘\\’ escape, the key is “Hong” and the value is “Kong = Near China” (it wouldn’t be the first time I’ve seen it done…).\r\n\r\n```\r\na-longer-key-example = a really long value that is \\\r\nsplit over two lines.\r\n```\r\n\r\nAn example of a long line split into two.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848398520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848399679","html_url":"https://github.com/apache/celix/issues/685#issuecomment-1848399679","issue_url":"https://api.github.com/repos/apache/celix/issues/685","id":1848399679,"node_id":"IC_kwDOAVuczs5uLFc_","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-09T12:44:04Z","updated_at":"2023-12-09T12:47:50Z","author_association":"CONTRIBUTOR","body":"According to the above article, I found white space at the start of a value is not escaped correctly by our implementation.\r\nThe following modified test case will fail on `keyA` (note the value is \" valueA\" rather than \"valueA\"):\r\n\r\n```C++\r\nTEST_F(PropertiesTestSuite, StoreTest) {\r\n    const char* propertiesFile = \"resources-test/properties_out.txt\";\r\n    celix_autoptr(celix_properties_t) properties = celix_properties_create();\r\n    celix_properties_set(properties, \"keyA\", \" valueA\");\r\n    celix_properties_set(properties, \"keyB\", \"valueB\");\r\n    celix_properties_store(properties, propertiesFile, nullptr);\r\n\r\n    celix_autoptr(celix_properties_t) properties2 = celix_properties_load(propertiesFile);\r\n    EXPECT_EQ(celix_properties_size(properties), celix_properties_size(properties2));\r\n    EXPECT_STREQ(celix_properties_get(properties, \"keyA\", \"\"), celix_properties_get(properties2, \"keyA\", \"\"));\r\n    EXPECT_STREQ(celix_properties_get(properties, \"keyB\", \"\"), celix_properties_get(properties2, \"keyB\", \"\"));\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848399679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848402945","html_url":"https://github.com/apache/celix/pull/692#issuecomment-1848402945","issue_url":"https://api.github.com/repos/apache/celix/issues/692","id":1848402945,"node_id":"IC_kwDOAVuczs5uLGQB","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-09T12:59:45Z","updated_at":"2023-12-10T07:59:27Z","author_association":"CONTRIBUTOR","body":"According to OSGi [3.2.7 Filter Syntax ](https://docs.osgi.org/specification/osgi.core/8.0.0/framework.module.html#framework.module.filtersyntax)\r\n\r\n```\r\nsubstring   ::= attr '=' initial any final\r\ninitial     ::= () | value\r\nany         ::= '*' star-value\r\nstar-value  ::= () | value '*' star-value\r\nfinal       ::= () | value\r\n```\r\n\r\n> `value` is a string representing the value, or part of one, which will be compared against a value in the\r\nfiltered properties.\r\nIf `value` must contain one of the characters reverse solidus ('\\' \\u005C), asterisk ('*' \\u002A), paren-\r\ntheses open ('(' \\u0028) or parentheses close (')' \\u0029), then these characters should be preceded\r\nwith the reverse solidus ('\\' \\u005C) character. Spaces are significant in `value`. Space characters are\r\ndefined by Character.isWhiteSpace().\r\n\r\nIf \"space characters are significant in `value`\", the following test should pass:\r\n\r\n```C++\r\nTEST_F(FilterTestSuite, SubStringTest) {\r\n    celix_autoptr(celix_properties_t) props = celix_properties_create();\r\n    celix_properties_set(props, \"test\", \"John Bob Doe\");\r\n    celix_properties_set(props, \"test2\", \"*ValueWithStar\");\r\n    celix_properties_set(props, \"test3\", \" Value\");\r\n\r\n    //test filter with mathing subInitial beginning with whitespace\r\n    celix_autoptr(celix_filter_t) filter13 = celix_filter_create(\"(test3= Value*)\");\r\n    EXPECT_TRUE(celix_filter_match(filter13, props));\r\n\r\n    //test filter with matching subInitial consisting of spaces\r\n    celix_autoptr(celix_filter_t) filter14 = celix_filter_create(\"(test3= *)\");\r\n    EXPECT_TRUE(celix_filter_match(filter14, props));\r\n}\r\n```\r\nBut `filter13` fails and `filter14` triggers assertion `assert(filter->children && celix_arrayList_size(filter->children) >= 2)`.\r\nI think the beginning white spaces should not be escaped in `value`, which is quite different from [Java properties file format](https://github.com/apache/celix/issues/685#issuecomment-1848398520). And a related [issue](https://github.com/apache/celix/issues/685#issuecomment-1848399679) is raised there.\r\n\r\nPlease have a look at these two issues, @pnoltes \r\n\r\nPS: I have not finished my review yet.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848402945/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848929480","html_url":"https://github.com/apache/celix/pull/656#issuecomment-1848929480","issue_url":"https://api.github.com/repos/apache/celix/issues/656","id":1848929480,"node_id":"IC_kwDOAVuczs5uNGzI","user":{"login":"rlenferink","id":10008950,"node_id":"MDQ6VXNlcjEwMDA4OTUw","avatar_url":"https://avatars.githubusercontent.com/u/10008950?v=4","gravatar_id":"","url":"https://api.github.com/users/rlenferink","html_url":"https://github.com/rlenferink","followers_url":"https://api.github.com/users/rlenferink/followers","following_url":"https://api.github.com/users/rlenferink/following{/other_user}","gists_url":"https://api.github.com/users/rlenferink/gists{/gist_id}","starred_url":"https://api.github.com/users/rlenferink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rlenferink/subscriptions","organizations_url":"https://api.github.com/users/rlenferink/orgs","repos_url":"https://api.github.com/users/rlenferink/repos","events_url":"https://api.github.com/users/rlenferink/events{/privacy}","received_events_url":"https://api.github.com/users/rlenferink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-10T10:56:45Z","updated_at":"2023-12-10T10:56:45Z","author_association":"MEMBER","body":"> I tested the gitpod environment and from what I could see this works nicely. Few remarks:\r\n> \r\n>     * I could run individually unit tests from TestMate but not debug. Debug gives an error.\r\n> \r\n>     * What is the plans for support?  Because I can see people trying this out - and that is a good thing -, but this also means that we a) get questions about the gitpod env and b) we should maintain the gitpod container file (for Apache Celix updates and for gitpod environment updates).\r\n> \r\n\r\n@pnoltes in my opinion, what we definitely need to deal with is support for building and running the containers. E.g. if the `build-ubuntu-container.sh` command fails or the Gitpod environment fails to start (because of e.g. a missing dependency) that needs to be fixed.\r\n\r\nHowever, there can be a lot of different IDE related questions and failures and I would say support for that is best effort. In case we have experienced the failure ourselves than we can potentially provide an answer, but otherwise we highly depend on the contributor. We can always ask the contributor if they can propose a fix themselves for the build problem they are facing.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1848929480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849046775","html_url":"https://github.com/apache/celix/pull/692#issuecomment-1849046775","issue_url":"https://api.github.com/repos/apache/celix/issues/692","id":1849046775,"node_id":"IC_kwDOAVuczs5uNjb3","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-10T18:42:30Z","updated_at":"2023-12-10T18:42:30Z","author_association":"CONTRIBUTOR","body":"@PengZheng Thanks for the thorough review and additional commits. \r\nI will do the rework based on the left over review comment.s  \r\n\r\nThis will take some time, because I will not have a lot spare time next week. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849046775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849049600","html_url":"https://github.com/apache/celix/pull/656#issuecomment-1849049600","issue_url":"https://api.github.com/repos/apache/celix/issues/656","id":1849049600,"node_id":"IC_kwDOAVuczs5uNkIA","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-10T18:53:19Z","updated_at":"2023-12-10T18:53:19Z","author_association":"CONTRIBUTOR","body":"\r\n\r\n>  we definitely need to deal with is support for building and running the containers\r\n\r\nI agree, could you create a issue to update the github actions so that building in a container image is also tested? \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849049600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849971902","html_url":"https://github.com/apache/celix/pull/696#issuecomment-1849971902","issue_url":"https://api.github.com/repos/apache/celix/issues/696","id":1849971902,"node_id":"IC_kwDOAVuczs5uRFS-","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-11T12:21:55Z","updated_at":"2023-12-11T12:21:55Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/696?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`b064ad7`)](https://app.codecov.io/gh/apache/celix/commit/b064ad761d85a3a10b580210de6f2d9e8b41ab33?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.43% compared to head [(`3820283`)](https://app.codecov.io/gh/apache/celix/pull/696?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.42%.\n\n> :exclamation: Current head 3820283 differs from pull request most recent head 92d0a3c. Consider uploading reports for the commit 92d0a3c to get more accurate results\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #696      +/-   ##\n==========================================\n- Coverage   83.43%   83.42%   -0.01%     \n==========================================\n  Files         254      254              \n  Lines       32988    32988              \n==========================================\n- Hits        27523    27520       -3     \n- Misses       5465     5468       +3     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/696?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1849971902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1851878219","html_url":"https://github.com/apache/celix/pull/697#issuecomment-1851878219","issue_url":"https://api.github.com/repos/apache/celix/issues/697","id":1851878219,"node_id":"IC_kwDOAVuczs5uYWtL","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-12T11:44:29Z","updated_at":"2023-12-12T13:33:06Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`8956987`)](https://app.codecov.io/gh/apache/celix/commit/8956987f83ebae0de2bb602da8ef556e3c3d2e7c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.47% compared to head [(`d2d5974`)](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 84.26%.\n\n> :exclamation: Current head d2d5974 differs from pull request most recent head 578869e. Consider uploading reports for the commit 578869e to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #697      +/-   ##\n==========================================\n+ Coverage   83.47%   84.26%   +0.78%     \n==========================================\n  Files         254      248       -6     \n  Lines       32988    31124    -1864     \n==========================================\n- Hits        27538    26226    -1312     \n+ Misses       5450     4898     -552     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/697?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1851878219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1853585228","html_url":"https://github.com/apache/celix/pull/698#issuecomment-1853585228","issue_url":"https://api.github.com/repos/apache/celix/issues/698","id":1853585228,"node_id":"IC_kwDOAVuczs5ue3dM","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-13T09:46:20Z","updated_at":"2023-12-13T09:49:03Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `3 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`8956987`)](https://app.codecov.io/gh/apache/celix/commit/8956987f83ebae0de2bb602da8ef556e3c3d2e7c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 83.47% compared to head [(`3e1a6b9`)](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 84.25%.\n> Report is 9 commits behind head on master.\n\n> :exclamation: Current head 3e1a6b9 differs from pull request most recent head 6e364bb. Consider uploading reports for the commit 6e364bb to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/include/celix/BundleActivator.h](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9CdW5kbGVBY3RpdmF0b3IuaA==) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...ramework/include/celix/dm/ServiceDependency\\_Impl.h](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvaW5jbHVkZS9jZWxpeC9kbS9TZXJ2aWNlRGVwZW5kZW5jeV9JbXBsLmg=) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #698      +/-   ##\n==========================================\n+ Coverage   83.47%   84.25%   +0.77%     \n==========================================\n  Files         254      248       -6     \n  Lines       32988    31124    -1864     \n==========================================\n- Hits        27538    26223    -1315     \n+ Misses       5450     4901     -549     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/698?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1853585228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1855343335","html_url":"https://github.com/apache/celix/pull/699#issuecomment-1855343335","issue_url":"https://api.github.com/repos/apache/celix/issues/699","id":1855343335,"node_id":"IC_kwDOAVuczs5ulkrn","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-14T07:49:40Z","updated_at":"2024-01-31T06:36:33Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `10 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`29fa7d0`)](https://app.codecov.io/gh/apache/celix/commit/29fa7d0f7f15ffb7e5fcbc08cc4319894452f094?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.50% compared to head [(`90d643a`)](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.90%.\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 52.63% | [9 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...te\\_service\\_admin\\_dfi/src/export\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9leHBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #699      +/-   ##\n==========================================\n+ Coverage   88.50%   88.90%   +0.40%     \n==========================================\n  Files         212      216       +4     \n  Lines       24606    24293     -313     \n==========================================\n- Hits        21777    21598     -179     \n+ Misses       2829     2695     -134     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/699?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1855343335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865392732","html_url":"https://github.com/apache/celix/issues/702#issuecomment-1865392732","issue_url":"https://api.github.com/repos/apache/celix/issues/702","id":1865392732,"node_id":"IC_kwDOAVuczs5vL6Jc","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-21T02:34:43Z","updated_at":"2023-12-21T02:42:03Z","author_association":"CONTRIBUTOR","body":"Your installation is OK. \r\n\r\nOur documentation is a little out of date, it states that `celix` should give the following output: “Error: invalid or non-existing configuration file: ‘config.properties’.No such file or directory”, which is not the case any more. What actually happens is that the framework starts successfully with an empty configuration. \r\n\r\nUsing `celix` executable to try out Celix is not the easiest way of playing with Celix, since a properly written `config.properties` is needed. I suggest trying `hello_world_c` first. Once you grasp the hello_world example, adding `USE_CONFIG` option to the `add_celix_container` of `hello_world_c_container` will generate a valid `config.properties` example for you.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865392732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865499820","html_url":"https://github.com/apache/celix/issues/702#issuecomment-1865499820","issue_url":"https://api.github.com/repos/apache/celix/issues/702","id":1865499820,"node_id":"IC_kwDOAVuczs5vMUSs","user":{"login":"xinzhou0714","id":26924558,"node_id":"MDQ6VXNlcjI2OTI0NTU4","avatar_url":"https://avatars.githubusercontent.com/u/26924558?v=4","gravatar_id":"","url":"https://api.github.com/users/xinzhou0714","html_url":"https://github.com/xinzhou0714","followers_url":"https://api.github.com/users/xinzhou0714/followers","following_url":"https://api.github.com/users/xinzhou0714/following{/other_user}","gists_url":"https://api.github.com/users/xinzhou0714/gists{/gist_id}","starred_url":"https://api.github.com/users/xinzhou0714/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xinzhou0714/subscriptions","organizations_url":"https://api.github.com/users/xinzhou0714/orgs","repos_url":"https://api.github.com/users/xinzhou0714/repos","events_url":"https://api.github.com/users/xinzhou0714/events{/privacy}","received_events_url":"https://api.github.com/users/xinzhou0714/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-21T05:24:41Z","updated_at":"2023-12-21T05:24:41Z","author_association":"NONE","body":"Thanks! ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865499820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865896352","html_url":"https://github.com/apache/celix/issues/702#issuecomment-1865896352","issue_url":"https://api.github.com/repos/apache/celix/issues/702","id":1865896352,"node_id":"IC_kwDOAVuczs5vN1Gg","user":{"login":"rlenferink","id":10008950,"node_id":"MDQ6VXNlcjEwMDA4OTUw","avatar_url":"https://avatars.githubusercontent.com/u/10008950?v=4","gravatar_id":"","url":"https://api.github.com/users/rlenferink","html_url":"https://github.com/rlenferink","followers_url":"https://api.github.com/users/rlenferink/followers","following_url":"https://api.github.com/users/rlenferink/following{/other_user}","gists_url":"https://api.github.com/users/rlenferink/gists{/gist_id}","starred_url":"https://api.github.com/users/rlenferink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rlenferink/subscriptions","organizations_url":"https://api.github.com/users/rlenferink/orgs","repos_url":"https://api.github.com/users/rlenferink/repos","events_url":"https://api.github.com/users/rlenferink/events{/privacy}","received_events_url":"https://api.github.com/users/rlenferink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-21T09:01:53Z","updated_at":"2023-12-21T09:01:53Z","author_association":"MEMBER","body":"@xinzhou0714 Welcome to Celix!\r\n\r\nAs @PengZheng explained, it is sometimes hard to keep documentation up to date, so if there is _anything_ you find during the process of trying out Celix, you are most welcome to let us know by creating an issue ! Of course if you already found a solution for it yourself (or maybe via a reply in an issue), you are also more than welcome to submit a pull request for it.\r\n\r\nThe source for the release specific documentation is stored here: https://github.com/apache/celix/tree/master/documents\r\n\r\nAnd the source for the other documentation on the website is stored here: https://github.com/apache/celix-site/","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1865896352/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1867801772","html_url":"https://github.com/apache/celix/pull/692#issuecomment-1867801772","issue_url":"https://api.github.com/repos/apache/celix/issues/692","id":1867801772,"node_id":"IC_kwDOAVuczs5vVGSs","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-22T15:15:47Z","updated_at":"2023-12-22T15:15:47Z","author_association":"CONTRIBUTOR","body":"> \r\n> Please have a look at these two issues, @pnoltes\r\n> .\r\n\r\nThanks, nice catch. I removed the incorrect whitespace removal \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1867801772/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868011551","html_url":"https://github.com/apache/celix/pull/692#issuecomment-1868011551","issue_url":"https://api.github.com/repos/apache/celix/issues/692","id":1868011551,"node_id":"IC_kwDOAVuczs5vV5gf","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-22T19:27:53Z","updated_at":"2023-12-22T19:27:53Z","author_association":"CONTRIBUTOR","body":"Review comments have been addressed. Please note that I used a :+1: emoji to indicate my agreement with review comments and to confirm that it has been addressed.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868011551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868014341","html_url":"https://github.com/apache/celix/pull/703#issuecomment-1868014341","issue_url":"https://api.github.com/repos/apache/celix/issues/703","id":1868014341,"node_id":"IC_kwDOAVuczs5vV6MF","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-22T19:32:47Z","updated_at":"2023-12-22T19:32:47Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `27 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`2a5058f`)](https://app.codecov.io/gh/apache/celix/commit/2a5058f788981c680f415ff88c755f93c8b4e9a8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 84.25% compared to head [(`6856982`)](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.26%.\n\n> :exclamation: Current head 6856982 differs from pull request most recent head efad168. Consider uploading reports for the commit efad168 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...ration/src/TestExportImportRemoteServiceFactory.cc](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9jeHhfcmVtb3RlX3NlcnZpY2VzL2ludGVncmF0aW9uL3NyYy9UZXN0RXhwb3J0SW1wb3J0UmVtb3RlU2VydmljZUZhY3RvcnkuY2M=) | 83.83% | [27 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #703      +/-   ##\n==========================================\n+ Coverage   84.25%   88.26%   +4.01%     \n==========================================\n  Files         248      215      -33     \n  Lines       31124    24562    -6562     \n==========================================\n- Hits        26222    21679    -4543     \n+ Misses       4902     2883    -2019     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/703?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868014341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868819609","html_url":"https://github.com/apache/celix/pull/705#issuecomment-1868819609","issue_url":"https://api.github.com/repos/apache/celix/issues/705","id":1868819609,"node_id":"IC_kwDOAVuczs5vY-yZ","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-25T07:29:37Z","updated_at":"2023-12-25T07:29:37Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/705?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`d62eeef`)](https://app.codecov.io/gh/apache/celix/commit/d62eeefbc69d0d19d8f290bc33f0d514af9adc41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.26% compared to head [(`88f1cdb`)](https://app.codecov.io/gh/apache/celix/pull/705?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.31%.\n\n> :exclamation: Current head 88f1cdb differs from pull request most recent head b737015. Consider uploading reports for the commit b737015 to get more accurate results\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #705      +/-   ##\n==========================================\n+ Coverage   88.26%   88.31%   +0.05%     \n==========================================\n  Files         215      215              \n  Lines       24562    24562              \n==========================================\n+ Hits        21679    21693      +14     \n+ Misses       2883     2869      -14     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/705?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868819609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868826072","html_url":"https://github.com/apache/celix/issues/704#issuecomment-1868826072","issue_url":"https://api.github.com/repos/apache/celix/issues/704","id":1868826072,"node_id":"IC_kwDOAVuczs5vZAXY","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-25T07:42:18Z","updated_at":"2023-12-25T07:42:51Z","author_association":"CONTRIBUTOR","body":"Observing that it only happens on `macos-build-brew` but never on `macos-build-conan`, which uses ninja rather than gnu make, I have switched  `macos-build-brew` to use ninja instead. So far it does not reproduce.\r\n\r\nConsidering this issue is relative easy to reproduce in our CI environment, it is worth further investigation.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1868826072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871821915","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871821915","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871821915,"node_id":"IC_kwDOAVuczs5vkbxb","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T07:59:59Z","updated_at":"2023-12-29T08:00:22Z","author_association":"NONE","body":"“b function” also can not find","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871821915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871828571","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871828571","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871828571,"node_id":"IC_kwDOAVuczs5vkdZb","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T08:12:35Z","updated_at":"2023-12-29T08:20:58Z","author_association":"CONTRIBUTOR","body":"Add `-DCMAKE_BUILD_TYPE:STRING=Debug` to your CMake command line, then CMake should take care of everything.\r\nThis seems not Celix-related but a general CMake question, which may better be raised on sites like StackOverflow.\r\n\r\nDebugging a bundle is no different than debugging any other shared libraries opened by `dlopen`. \r\nIf you are not sure how to do that, I suggest you write a basic hello world shared library and 10 lines `main` which uses it via `dlopen`, then try using gdb to debug it. This really has nothing special to do with Celix.\r\n\r\nBefore posting an issue, please take time to consider whether it is really a Celix issue.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871828571/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871840909","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871840909","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871840909,"node_id":"IC_kwDOAVuczs5vkgaN","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T08:36:50Z","updated_at":"2023-12-29T09:12:35Z","author_association":"CONTRIBUTOR","body":"> (gdb) b plc_main.c:8\r\n> No source file named plc_main.c.\r\n\r\nYou forget to run your program (I saw no gdb `run` command). If your program has not loaded a bundle by `dlopen`, how could it be able to get the debugging information embedded in a shared library and thus get to know the location of the associated source file? Bundled are shared library, but they are dynamically loaded, not loaded at the start of a program.\r\n\r\nThis is different from debugging an ordinary executable. In such case, after gdb started, the loader has already done its job for the executable and all associated linked shared libraries, thus you can set break point at once. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871840909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871849357","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871849357","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871849357,"node_id":"IC_kwDOAVuczs5vkieN","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T08:52:12Z","updated_at":"2023-12-29T09:06:58Z","author_association":"CONTRIBUTOR","body":"I changed my mind and thought about it from a different angle, that the problem might not be completely unrelated to Celix.\r\n\r\nA first-time user may indeed set a breakpoint and be surprised to find that the debugger does not know where to set the break point (and thus leaves it pending). It might be helpful to beginners if there was a mention in the documentation of how to set up breakpoints for a bundle.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871849357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871880693","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871880693","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871880693,"node_id":"IC_kwDOAVuczs5vkqH1","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T09:39:12Z","updated_at":"2023-12-29T09:39:12Z","author_association":"NONE","body":"My test case link:\r\nhttps://github.com/tonychen0924/CelixTest/tree/main/unitDemo\r\n\r\n\"CtrlConsumer.h\" can find and set break point successfully , but \"plc_main.c\" can not ?\r\n\r\ntony@LAPTOP-4AFLJE2J:~/git_pro/CelixTest/unitDemo/build/deploy/MyContainer$\r\ngdb ./MyContainer\r\nGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1\r\nCopyright (C) 2022 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\nType \"show copying\" and \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<https://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from ./MyContainer...\r\n(gdb) run\r\nStarting program: /home/tony/git_pro/CelixTest/unitDemo/build/deploy/MyContainer/MyContainer\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7ffff69d3640 (LWP 10321)]\r\n[New Thread 0x7ffff6141640 (LWP 10322)]\r\n-> 注册plc service bundle\r\n启动plc service bundle\r\n[New Thread 0x7ffff58d0640 (LWP 10323)]\r\ncreate instance address:0x5555555a8740\r\ncreate CtrlConsumerBundle bundle, consumer address:0x5555555a8740\r\nStartPLC localPCtrl address:0\r\nWARNING: StartPLC Calc service not available!\r\nStopPLC localPCtrl address:0\r\nWARNING: Calc service not available!\r\nsetCtrlthis address:0x5555555a8740 pCtrl address:0x5555555a7420\r\n[2023-12-29T17:04:30] [   info] [celix_framework] [framework_start:492] Celix framework started\r\nStartPLC localPCtrl address:0x5555555a7420\r\nstartPLC\r\n1====================\r\n2====================\r\n3====================\r\nStopPLC localPCtrl address:0x5555555a7420\r\nstopPLC\r\nStartPLC localPCtrl address:0x5555555a7420\r\nstartPLC\r\n1====================\r\n2====================\r\n3====================\r\nStopPLC localPCtrl address:0x5555555a7420\r\nstopPLC\r\n-> lb\r\n  Bundles:\r\n  ID    State        Name                                     Group\r\n\r\n  0     ACTIVE       Celix Framework                          Celix/Framework\r\n  1     ACTIVE       Apache Celix CXX Shell                   Celix/Shell\r\n\r\n  2     ACTIVE       Apache Celix Shell TUI                   Celix/Shell\r\n\r\n  3     ACTIVE       PlcCtrlBundle\r\n\r\n  4     ACTIVE       RteBundle\r\n\r\n\r\n\r\n-> StartPLC localPCtrl address:0x5555555a7420\r\nstartPLC\r\n1====================\r\n2====================\r\n3====================\r\nStopPLC localPCtrl address:0x5555555a7420\r\nstopPLC\r\n-> quitStartPLC localPCtrl address:0x5555555a7420\r\nstartPLC\r\n1====================\r\n2====================\r\n3====================\r\nStopPLC localPCtrl address:0x5555555a7420\r\nstopPLC\r\n-> quit\r\nQuitting framework\r\n[New Thread 0x7ffff50cf640 (LWP 10330)]\r\n-> setCtrlthis address:0x5555555a8740 pCtrl address:0\r\n[Thread 0x7ffff58d0640 (LWP 10323) exited]\r\n[Thread 0x7ffff6141640 (LWP 10322) exited]\r\n[Thread 0x7ffff50cf640 (LWP 10330) exited]\r\n[Thread 0x7ffff69d3640 (LWP 10321) exited]\r\n[Inferior 1 (process 10315) exited normally]\r\n(gdb) b CtrlConsumer.h:41\r\nBreakpoint 1 at 0x7ffff58dc3c4: file /home/tony/git_pro/CelixTest/unitDemo/rte/include/CtrlConsumer.h, line 41.\r\n(gdb) b plc_main.c:8\r\nNo source file named plc_main.c.\r\nMake breakpoint pending on future shared library load? (y or [n]) y\r\nBreakpoint 2 (plc_main.c:8) pending.\r\n(gdb)","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871880693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871884831","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871884831","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871884831,"node_id":"IC_kwDOAVuczs5vkrIf","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T09:45:14Z","updated_at":"2023-12-29T09:46:15Z","author_association":"CONTRIBUTOR","body":"> \"CtrlConsumer.h\" can find and set break point successfully , but \"plc_main.c\" can not ?\r\n\r\nOf course you can't. I saw no usage of `plc_main.h` in the bundle. \r\nIf none of its interfaces are used, why bother including it at all?\r\n\r\n```C++\r\n//Ctrl bundle服务提供者和使用者\r\n\r\n#include \"celix/BundleActivator.h\"\r\n#include \"CtrlImpl.h\"\r\nextern \"C\"\r\n{\r\n    #include \"plc_main.h\"\r\n}\r\n\r\nclass PlcCtrlBundle\r\n{\r\npublic:\r\n\r\n    //构造函数，初始化成员变量registration\r\n    explicit PlcCtrlBundle(std::shared_ptr<celix::BundleContext> ctx) :\r\n        registration{createPlcService(ctx)}\r\n    {\r\n        std::cout << \"启动plc service bundle\" << std::endl;\r\n    }\r\n\r\nprivate:\r\n    static std::shared_ptr<celix::ServiceRegistration> createPlcService(std::shared_ptr<celix::BundleContext>& ctx)\r\n    {\r\n        //绑定，赋值\r\n        int seed = 42;\r\n        std::cout << \"注册plc service bundle\" << std::endl;\r\n        //注册服务\r\n        return ctx->registerService<ACEPHERE_RUNTIME::ICtrl>(std::make_shared<ACEPHERE_RUNTIME::CtrlImpl>(seed))\r\n                .addProperty(\"seed\", seed)\r\n                .build();\r\n    }\r\n\r\n    //作为服务端\r\n    const std::shared_ptr<celix::ServiceRegistration> registration;\r\n};\r\n\r\nCELIX_GEN_CXX_BUNDLE_ACTIVATOR(PlcCtrlBundle)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871884831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871920190","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871920190","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871920190,"node_id":"IC_kwDOAVuczs5vkzw-","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T10:16:07Z","updated_at":"2023-12-29T10:16:07Z","author_association":"NONE","body":"But I don't think it has anything to do with debugger plc_main.c .  startPLC of plc_mian.c has been call and print in terminal , but also prompt：\r\n`void startPLC(int a, int b)\r\n{\r\n    printf(\"%s\\n\", __func__);\r\n    printf(\"1====================\\n\");\r\n    printf(\"2====================\\n\");\r\n    printf(\"3====================\\n\");\r\n}`\r\n(gdb) b plc_main.c:8\r\nNo source file named plc_main.c.\r\nMake breakpoint pending on future shared library load? (y or [n]) y\r\nBreakpoint 2 (plc_main.c:8) pending.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871920190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871951932","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1871951932","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1871951932,"node_id":"IC_kwDOAVuczs5vk7g8","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-29T11:00:27Z","updated_at":"2023-12-29T11:24:32Z","author_association":"CONTRIBUTOR","body":"`set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g\")` \r\n\r\nYou only add `-g` to C++ not to C.\r\n\r\nIf you follow [my advice earlier](https://github.com/apache/celix/issues/706#issuecomment-1871828571), then all C and C++ will have `-g`.\r\nIf you try the above  `b startPLC` method, you will found that `plc_main.c` has no debugging information included.\r\n\r\nIt turns out to be an [RTFM](https://en.wikipedia.org/wiki/RTFM) issue, totally unrelated to Celix. Sigh.\r\nPlease pick up a book on CMake and have a good read. \r\nThis way you will save lots of time for yourself and others.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1871951932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1872629907","html_url":"https://github.com/apache/celix/pull/707#issuecomment-1872629907","issue_url":"https://api.github.com/repos/apache/celix/issues/707","id":1872629907,"node_id":"IC_kwDOAVuczs5vnhCT","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-31T00:04:26Z","updated_at":"2023-12-31T00:04:26Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/707?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`9ea03bc`)](https://app.codecov.io/gh/apache/celix/commit/9ea03bc620760e2866f743d24ecbdcd1289aaff2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.39% compared to head [(`07bf252`)](https://app.codecov.io/gh/apache/celix/pull/707?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.35%.\n\n> :exclamation: Current head 07bf252 differs from pull request most recent head 4224357. Consider uploading reports for the commit 4224357 to get more accurate results\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #707      +/-   ##\n==========================================\n- Coverage   88.39%   88.35%   -0.05%     \n==========================================\n  Files         215      215              \n  Lines       24618    24500     -118     \n==========================================\n- Hits        21762    21646     -116     \n+ Misses       2856     2854       -2     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/707?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1872629907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873105850","html_url":"https://github.com/apache/celix/issues/706#issuecomment-1873105850","issue_url":"https://api.github.com/repos/apache/celix/issues/706","id":1873105850,"node_id":"IC_kwDOAVuczs5vpVO6","user":{"login":"tonychen0924","id":108927698,"node_id":"U_kgDOBn4a0g","avatar_url":"https://avatars.githubusercontent.com/u/108927698?v=4","gravatar_id":"","url":"https://api.github.com/users/tonychen0924","html_url":"https://github.com/tonychen0924","followers_url":"https://api.github.com/users/tonychen0924/followers","following_url":"https://api.github.com/users/tonychen0924/following{/other_user}","gists_url":"https://api.github.com/users/tonychen0924/gists{/gist_id}","starred_url":"https://api.github.com/users/tonychen0924/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tonychen0924/subscriptions","organizations_url":"https://api.github.com/users/tonychen0924/orgs","repos_url":"https://api.github.com/users/tonychen0924/repos","events_url":"https://api.github.com/users/tonychen0924/events{/privacy}","received_events_url":"https://api.github.com/users/tonychen0924/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T02:08:10Z","updated_at":"2024-01-01T02:08:10Z","author_association":"NONE","body":"I mistakenly thought that just adding C++was enough . Because only the C++compilation options were set during compilation","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873105850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873155700","html_url":"https://github.com/apache/celix/pull/709#issuecomment-1873155700","issue_url":"https://api.github.com/repos/apache/celix/issues/709","id":1873155700,"node_id":"IC_kwDOAVuczs5vphZ0","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T04:59:48Z","updated_at":"2024-01-01T04:59:48Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`ab7b7af`)](https://app.codecov.io/gh/apache/celix/commit/ab7b7affc671832ff7712504c05fb5c4f8972092?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.33% compared to head [(`4df554c`)](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.37%.\n\n> :exclamation: Current head 4df554c differs from pull request most recent head 780e873. Consider uploading reports for the commit 780e873 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...undles/http\\_admin/http\\_admin/src/websocket\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9odHRwX2FkbWluL2h0dHBfYWRtaW4vc3JjL3dlYnNvY2tldF9hZG1pbi5j) | 66.66% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #709      +/-   ##\n==========================================\n+ Coverage   88.33%   88.37%   +0.03%     \n==========================================\n  Files         215      214       -1     \n  Lines       24500    24429      -71     \n==========================================\n- Hits        21643    21589      -54     \n+ Misses       2857     2840      -17     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/709?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873155700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873160652","html_url":"https://github.com/apache/celix/pull/389#issuecomment-1873160652","issue_url":"https://api.github.com/repos/apache/celix/issues/389","id":1873160652,"node_id":"IC_kwDOAVuczs5vpinM","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T05:16:40Z","updated_at":"2024-01-01T05:16:40Z","author_association":"CONTRIBUTOR","body":"Given that pubsub is removed by #509, I'll close this PR.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873160652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873179939","html_url":"https://github.com/apache/celix/pull/710#issuecomment-1873179939","issue_url":"https://api.github.com/repos/apache/celix/issues/710","id":1873179939,"node_id":"IC_kwDOAVuczs5vpnUj","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T06:18:53Z","updated_at":"2024-02-18T12:09:44Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `102 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`70548d6`)](https://app.codecov.io/gh/apache/celix/commit/70548d615abb282b2b2cd9e5a67c29dc34c99b33?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.85% compared to head [(`e48e5ed`)](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 89.32%.\n> Report is 12 commits behind head on master.\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...e\\_services/topology\\_manager/src/topology\\_manager.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvdG9wb2xvZ3lfbWFuYWdlci9zcmMvdG9wb2xvZ3lfbWFuYWdlci5j) | 92.16% | [34 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...iscovery\\_zeroconf/src/discovery\\_zeroconf\\_watcher.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvZGlzY292ZXJ5X3plcm9jb25mL3NyYy9kaXNjb3ZlcnlfemVyb2NvbmZfd2F0Y2hlci5j) | 94.56% | [33 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...e\\_service\\_admin\\_dfi/src/remote\\_service\\_admin\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9yZW1vdGVfc2VydmljZV9hZG1pbl9kZmkuYw==) | 85.58% | [16 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...covery\\_zeroconf/src/discovery\\_zeroconf\\_announcer.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvZGlzY292ZXJ5X3plcm9jb25mL3NyYy9kaXNjb3ZlcnlfemVyb2NvbmZfYW5ub3VuY2VyLmM=) | 93.25% | [12 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...ice\\_admin\\_dfi/src/remote\\_service\\_admin\\_activator.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9yZW1vdGVfc2VydmljZV9hZG1pbl9hY3RpdmF0b3IuYw==) | 76.92% | [3 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...n\\_shm\\_v2/rsa\\_shm/src/rsa\\_shm\\_import\\_registration.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fc2htX3YyL3JzYV9zaG0vc3JjL3JzYV9zaG1faW1wb3J0X3JlZ2lzdHJhdGlvbi5j) | 77.77% | [2 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 80.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...n\\_shm\\_v2/rsa\\_shm/src/rsa\\_shm\\_export\\_registration.c](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fc2htX3YyL3JzYV9zaG0vc3JjL3JzYV9zaG1fZXhwb3J0X3JlZ2lzdHJhdGlvbi5j) | 90.90% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #710      +/-   ##\n==========================================\n+ Coverage   88.85%   89.32%   +0.47%     \n==========================================\n  Files         216      216              \n  Lines       24293    25153     +860     \n==========================================\n+ Hits        21585    22469     +884     \n+ Misses       2708     2684      -24     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/710?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873179939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873210634","html_url":"https://github.com/apache/celix/pull/709#issuecomment-1873210634","issue_url":"https://api.github.com/repos/apache/celix/issues/709","id":1873210634,"node_id":"IC_kwDOAVuczs5vpu0K","user":{"login":"rlenferink","id":10008950,"node_id":"MDQ6VXNlcjEwMDA4OTUw","avatar_url":"https://avatars.githubusercontent.com/u/10008950?v=4","gravatar_id":"","url":"https://api.github.com/users/rlenferink","html_url":"https://github.com/rlenferink","followers_url":"https://api.github.com/users/rlenferink/followers","following_url":"https://api.github.com/users/rlenferink/following{/other_user}","gists_url":"https://api.github.com/users/rlenferink/gists{/gist_id}","starred_url":"https://api.github.com/users/rlenferink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rlenferink/subscriptions","organizations_url":"https://api.github.com/users/rlenferink/orgs","repos_url":"https://api.github.com/users/rlenferink/repos","events_url":"https://api.github.com/users/rlenferink/events{/privacy}","received_events_url":"https://api.github.com/users/rlenferink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T07:56:04Z","updated_at":"2024-01-01T07:56:04Z","author_association":"MEMBER","body":"About the `ip_utils`, I noticed Pepijn is refactoring things on that, see: https://github.com/apache/celix/commit/01b3af14dbf197239b7403e72cbb538e461a4099\r\n\r\nIsn’t the potential use case for that the RSA @pnoltes ?","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873210634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873270196","html_url":"https://github.com/apache/celix/pull/709#issuecomment-1873270196","issue_url":"https://api.github.com/repos/apache/celix/issues/709","id":1873270196,"node_id":"IC_kwDOAVuczs5vp9W0","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T10:42:35Z","updated_at":"2024-01-01T10:42:35Z","author_association":"CONTRIBUTOR","body":"If `ip_utils` is still needed, I will revert the remove and fix the newly reported coverity issues.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873270196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873439858","html_url":"https://github.com/apache/celix/pull/709#issuecomment-1873439858","issue_url":"https://api.github.com/repos/apache/celix/issues/709","id":1873439858,"node_id":"IC_kwDOAVuczs5vqmxy","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T18:59:24Z","updated_at":"2024-01-01T18:59:24Z","author_association":"CONTRIBUTOR","body":"> About the `ip_utils`, I noticed Pepijn is refactoring things on that, see: [01b3af1](https://github.com/apache/celix/commit/01b3af14dbf197239b7403e72cbb538e461a4099)\r\n> \r\n> Isn’t the potential use case for that the RSA @pnoltes ?\r\n\r\nCorrect I refactored the IP utils and indeed I also kept the IP utils so that they maybe can be used in the RSA implementations. \r\n\r\n@PengZheng If the refactored IP util functions in #711 are good enough I think we could keep them for now. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873439858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873443409","html_url":"https://github.com/apache/celix/pull/712#issuecomment-1873443409","issue_url":"https://api.github.com/repos/apache/celix/issues/712","id":1873443409,"node_id":"IC_kwDOAVuczs5vqnpR","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T19:09:51Z","updated_at":"2024-01-01T19:09:51Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `11 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`ab7b7af`)](https://app.codecov.io/gh/apache/celix/commit/ab7b7affc671832ff7712504c05fb5c4f8972092?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.33% compared to head [(`a48d5ae`)](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.32%.\n\n> :exclamation: Current head a48d5ae differs from pull request most recent head 11d9337. Consider uploading reports for the commit 11d9337 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/framework/src/framework.c](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2ZyYW1ld29yay5j) | 25.00% | [3 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/service\\_registry.c](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVnaXN0cnkuYw==) | 40.00% | [3 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/service\\_reference.c](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVmZXJlbmNlLmM=) | 0.00% | [2 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/service\\_registration.c](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVnaXN0cmF0aW9uLmM=) | 60.00% | [2 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [libs/framework/src/dm\\_component\\_impl.c](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2RtX2NvbXBvbmVudF9pbXBsLmM=) | 50.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #712      +/-   ##\n==========================================\n- Coverage   88.33%   88.32%   -0.02%     \n==========================================\n  Files         215      215              \n  Lines       24500    24482      -18     \n==========================================\n- Hits        21643    21623      -20     \n- Misses       2857     2859       +2     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/712?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873443409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873445019","html_url":"https://github.com/apache/celix/issues/704#issuecomment-1873445019","issue_url":"https://api.github.com/repos/apache/celix/issues/704","id":1873445019,"node_id":"IC_kwDOAVuczs5vqoCb","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T19:14:37Z","updated_at":"2024-01-01T19:14:37Z","author_association":"CONTRIBUTOR","body":"I have not yet encountered this on my Mac. I could be an issue with not enough memory, because `make -j` uses unlimited jobs and (IIRC) `ninja` adjust the build parallelisation based on resource usage. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873445019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873490613","html_url":"https://github.com/apache/celix/pull/707#issuecomment-1873490613","issue_url":"https://api.github.com/repos/apache/celix/issues/707","id":1873490613,"node_id":"IC_kwDOAVuczs5vqzK1","user":{"login":"rlenferink","id":10008950,"node_id":"MDQ6VXNlcjEwMDA4OTUw","avatar_url":"https://avatars.githubusercontent.com/u/10008950?v=4","gravatar_id":"","url":"https://api.github.com/users/rlenferink","html_url":"https://github.com/rlenferink","followers_url":"https://api.github.com/users/rlenferink/followers","following_url":"https://api.github.com/users/rlenferink/following{/other_user}","gists_url":"https://api.github.com/users/rlenferink/gists{/gist_id}","starred_url":"https://api.github.com/users/rlenferink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rlenferink/subscriptions","organizations_url":"https://api.github.com/users/rlenferink/orgs","repos_url":"https://api.github.com/users/rlenferink/repos","events_url":"https://api.github.com/users/rlenferink/events{/privacy}","received_events_url":"https://api.github.com/users/rlenferink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-01T21:39:11Z","updated_at":"2024-01-01T21:39:11Z","author_association":"MEMBER","body":"> Maybe in the future something like a executable (far) jar from bndtools can be adopted for Apache Celix\r\n\r\n@pnoltes if this is an idea for the future, I think it would be wise to create an issue for it with a brief explanation of the wish (and possibly referring to this PR as well)","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873490613/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873584415","html_url":"https://github.com/apache/celix/issues/704#issuecomment-1873584415","issue_url":"https://api.github.com/repos/apache/celix/issues/704","id":1873584415,"node_id":"IC_kwDOAVuczs5vrKEf","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-02T03:00:33Z","updated_at":"2024-01-02T03:00:33Z","author_association":"CONTRIBUTOR","body":"Now that it is not reproducible in local machine, I'll close it now.\r\nIf any of our users are affected by this, we can investigate it then.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873584415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873585791","html_url":"https://github.com/apache/celix/pull/709#issuecomment-1873585791","issue_url":"https://api.github.com/repos/apache/celix/issues/709","id":1873585791,"node_id":"IC_kwDOAVuczs5vrKZ_","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-02T03:04:57Z","updated_at":"2024-01-02T03:04:57Z","author_association":"CONTRIBUTOR","body":"Let's fix `ip_utils` in #711.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873585791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873587607","html_url":"https://github.com/apache/celix/pull/713#issuecomment-1873587607","issue_url":"https://api.github.com/repos/apache/celix/issues/713","id":1873587607,"node_id":"IC_kwDOAVuczs5vrK2X","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-02T03:10:53Z","updated_at":"2024-01-02T03:10:53Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `1 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`ab7b7af`)](https://app.codecov.io/gh/apache/celix/commit/ab7b7affc671832ff7712504c05fb5c4f8972092?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.33% compared to head [(`9a5602f`)](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.35%.\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [...undles/http\\_admin/http\\_admin/src/websocket\\_admin.c](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9odHRwX2FkbWluL2h0dHBfYWRtaW4vc3JjL3dlYnNvY2tldF9hZG1pbi5j) | 66.66% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #713      +/-   ##\n==========================================\n+ Coverage   88.33%   88.35%   +0.01%     \n==========================================\n  Files         215      215              \n  Lines       24500    24500              \n==========================================\n+ Hits        21643    21646       +3     \n+ Misses       2857     2854       -3     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/713?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1873587607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874387196","html_url":"https://github.com/apache/celix/issues/701#issuecomment-1874387196","issue_url":"https://api.github.com/repos/apache/celix/issues/701","id":1874387196,"node_id":"IC_kwDOAVuczs5vuOD8","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-02T18:24:49Z","updated_at":"2024-01-02T18:24:49Z","author_association":"CONTRIBUTOR","body":"This would be an welcome addition. \r\n\r\nThis could also have an impact on how we handle service versions bumps. \r\nCurrently if a service gets a additional function/method, this is treated as a major update for the service. But if the service is annotation as a provided type, a minor bump is enough, because from a user point of view the the service is provided and an additional function/method is not a breaking change. \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874387196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874387960","html_url":"https://github.com/apache/celix/issues/708#issuecomment-1874387960","issue_url":"https://api.github.com/repos/apache/celix/issues/708","id":1874387960,"node_id":"IC_kwDOAVuczs5vuOP4","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-02T18:25:36Z","updated_at":"2024-01-02T18:25:36Z","author_association":"CONTRIBUTOR","body":"I will have a look at this and also check the coverity issues reported in the cxx remote service integration part. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874387960/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874776404","html_url":"https://github.com/apache/celix/issues/714#issuecomment-1874776404","issue_url":"https://api.github.com/repos/apache/celix/issues/714","id":1874776404,"node_id":"IC_kwDOAVuczs5vvtFU","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-03T02:25:03Z","updated_at":"2024-01-03T02:27:35Z","author_association":"CONTRIBUTOR","body":"It seems that [Flatpak](https://flatpak.org/)/[snap](https://snapcraft.io/docs/installing-snap-on-ubuntu)/[AppImage](https://appimage.org) can also serve the purpose. Underlying these technologies are some read-only filesystems like squashfs. \r\n\r\nTake firefox on Ubuntu as an exameple:\r\n\r\n```\r\n/var/lib/snapd/snaps/firefox_3358.snap on /snap/firefox/3358 type squashfs (ro,nodev,relatime,errors=continue,threads=single,x-gdu.hide)\r\n/var/lib/snapd/snaps/firefox_3416.snap on /snap/firefox/3416 type squashfs (ro,nodev,relatime,errors=continue,threads=single,x-gdu.hide)\r\n```\r\n\r\nWhen packaging a container, we can package uncompressed bundles and the launcher into these app formats.\r\n\r\nPS: Uncompressed bundles within a squashfs image is already the way I use Celix 2.4.0 in my day job.\r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1874776404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876862694","html_url":"https://github.com/apache/celix/pull/711#issuecomment-1876862694","issue_url":"https://api.github.com/repos/apache/celix/issues/711","id":1876862694,"node_id":"IC_kwDOAVuczs5v3qbm","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-04T10:30:37Z","updated_at":"2024-01-04T10:30:37Z","author_association":"CONTRIBUTOR","body":" > The current `ip_utils` is not very satisfatctory. In addition to the drawbacks mentioned below, the current implementation lacks support for ipv6. Considering IPv6 link-local address combined with Bonjour provides real zero configuration networking experience, IPv6 support is critical for IOT devices.\r\n\r\nGood point, then I will remove the ip utils in this branch. If this is needed again the ip utils in commit id `1a67dabc5b87f0c8250ce4351df310873be3b0b9` can be restored. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876862694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876884143","html_url":"https://github.com/apache/celix/pull/711#issuecomment-1876884143","issue_url":"https://api.github.com/repos/apache/celix/issues/711","id":1876884143,"node_id":"IC_kwDOAVuczs5v3vqv","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-04T10:45:40Z","updated_at":"2024-01-04T10:45:40Z","author_association":"CONTRIBUTOR","body":"> I saw lots of `arrayList` replaced by `celix_arrayList`, but only saw very few `#include \"celix_array_list.h\"`, which suggests that we depend heavily on \"transtive includes\". Transtive includes often increase accidental complexities. Removing an include from a public header file may break a lot of downstream builds, thus lead to unhappy users. I suggest we follow John Lakos' advice to forbid transtive includes \"except to access a public base class of a type whose definition is included directly\".\r\n\r\nAlso a good point. I do think this is more relevant for C++ code then for C code, but non the less also good to do for our C code. \r\nIf we forbid transtive dependencies, IMO we have to use forward declaration. So instead of including `celix_array_list.h` if a function returns or accepts a celix array list, we only need the following declaration:\r\n`typedef struct celix_array_list celix_array_list_t;\r\nI think it is then wise to define a guideline for this, something like:\r\n\r\nFor a C object, the following header guideline should be followed:\r\n - The public api for a C object can can be found in a header named: `celix_<object_snake_name>.h`\r\n - The opaque typedefs (forward declaration) can be found in a header named: `celix_<object_name_name>_type.h`. This header ideally should only contain opaque typedefs, but can also contain concrete struct definition if needed (e.g. `celix_properties_entry_t` or `celix_properties_value_type_e`, etc)\r\n - If needed all private functions or structs (only used inside the library which provided the public api) can be found in a header named: `celix_<object_snake_name>_private.h`\r\n - If needed all internal functions or structs (only used inside the Apache Celix project, but not meant as public API), can be found in a header named: ``celix_<object_snake_name>_internal.h`\r\n\r\nI also think this should be addressed in a separate ticket, if you agree I will make a ticket for this. ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876884143/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876918450","html_url":"https://github.com/apache/celix/pull/711#issuecomment-1876918450","issue_url":"https://api.github.com/repos/apache/celix/issues/711","id":1876918450,"node_id":"IC_kwDOAVuczs5v34Cy","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-04T11:10:26Z","updated_at":"2024-01-04T11:10:26Z","author_association":"CONTRIBUTOR","body":"> I also think this should be addressed in a separate ticket, if you agree I will make a ticket for this.\r\n\r\nYes, we can address this later.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1876918450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1877038169","html_url":"https://github.com/apache/celix/issues/715#issuecomment-1877038169","issue_url":"https://api.github.com/repos/apache/celix/issues/715","id":1877038169,"node_id":"IC_kwDOAVuczs5v4VRZ","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-04T12:43:28Z","updated_at":"2024-01-04T12:43:28Z","author_association":"CONTRIBUTOR","body":"note feedback is welcome","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1877038169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1877137267","html_url":"https://github.com/apache/celix/pull/711#issuecomment-1877137267","issue_url":"https://api.github.com/repos/apache/celix/issues/711","id":1877137267,"node_id":"IC_kwDOAVuczs5v4tdz","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-04T13:58:27Z","updated_at":"2024-01-04T13:58:27Z","author_association":"CONTRIBUTOR","body":"> > I also think this should be addressed in a separate ticket, if you agree I will make a ticket for this.\r\n> \r\n> Yes, we can address this later.\r\n\r\nCreated #715 for this","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1877137267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1879926903","html_url":"https://github.com/apache/celix/pull/716#issuecomment-1879926903","issue_url":"https://api.github.com/repos/apache/celix/issues/716","id":1879926903,"node_id":"IC_kwDOAVuczs5wDWh3","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-07T03:37:00Z","updated_at":"2024-01-07T03:37:47Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: `14 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`7259275`)](https://app.codecov.io/gh/apache/celix/commit/72592753eabb4f5d2d36a324cd16e98152c88f16?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.33% compared to head [(`d03ff95`)](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.34%.\n> Report is 2 commits behind head on master.\n\n> :exclamation: Current head d03ff95 differs from pull request most recent head 2070f58. Consider uploading reports for the commit 2070f58 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/framework/src/service\\_registry.c](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL3NlcnZpY2VfcmVnaXN0cnkuYw==) | 0.00% | [14 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #716      +/-   ##\n==========================================\n+ Coverage   88.33%   88.34%   +0.01%     \n==========================================\n  Files         212      212              \n  Lines       24043    24039       -4     \n==========================================\n  Hits        21238    21238              \n+ Misses       2805     2801       -4     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/716?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1879926903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1880051603","html_url":"https://github.com/apache/celix/pull/717#issuecomment-1880051603","issue_url":"https://api.github.com/repos/apache/celix/issues/717","id":1880051603,"node_id":"IC_kwDOAVuczs5wD0-T","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-07T12:52:21Z","updated_at":"2024-01-07T12:54:37Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/717?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`41aad66`)](https://app.codecov.io/gh/apache/celix/commit/41aad66a10beb1a6daab089b3ad3c76fdf9f4e4f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.34% compared to head [(`fe61c1d`)](https://app.codecov.io/gh/apache/celix/pull/717?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.34%.\n\n> :exclamation: Current head fe61c1d differs from pull request most recent head d99179a. Consider uploading reports for the commit d99179a to get more accurate results\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master     #717   +/-   ##\n=======================================\n  Coverage   88.34%   88.34%           \n=======================================\n  Files         212      212           \n  Lines       24039    24039           \n=======================================\n  Hits        21238    21238           \n  Misses       2801     2801           \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/717?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1880051603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1893910675","html_url":"https://github.com/apache/celix/pull/699#issuecomment-1893910675","issue_url":"https://api.github.com/repos/apache/celix/issues/699","id":1893910675,"node_id":"IC_kwDOAVuczs5w4siT","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-16T14:55:08Z","updated_at":"2024-01-16T15:03:09Z","author_association":"CONTRIBUTOR","body":"When I modified `TEST_F(JsonSerializerTests, ParseTests)` as following, a crash happened:\r\n\r\n```C++ \r\n\r\ntype = nullptr; \r\ninst = nullptr; \r\nrc = dynType_parseWithStr(example5_descriptor, nullptr, nullptr, &type); \r\nASSERT_EQ(0, rc); \r\nrc = jsonSerializer_deserialize(type, example5_input, strlen(example5_input), &inst); \r\nASSERT_EQ(0, rc);\r\n\r\njson_auto_t* result = nullptr; \r\n// crash happens HERE! \r\nrc = jsonSerializer_serializeJson(type, inst, &result); \r\nASSERT_EQ(0, rc);\r\n\r\n```\r\n\r\nI found two issues:\r\n\r\n1. In `example5_input`, the `node` pointed to by `head` misses `value` member. Similarly, the `node` pointed to by `head->left` misses `right` member. \r\n2. `nullptr` is not dealt in `jsonSerializer_serializeJson`, which leads to the crash.\r\n\r\n```C++\r\n        case '*' :\r\n            subType = dynType_typedPointer_getTypedType(type);\r\n            status = jsonSerializer_writeAny(subType, *(void **)input, &val); // dereference null ptr\r\n            break;\r\n```\r\n\r\nFor the first issue, IMO all struct members should be present in the json object, because C struct is very rigid, unlike json object.\r\nOur data model is based on C struct not on flexible json object.\r\n\r\nFor the second issue, I think `nullptr` should also be serialized/deserialized.\r\n\r\nWDYT? @pnoltes ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1893910675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1894351370","html_url":"https://github.com/apache/celix/pull/699#issuecomment-1894351370","issue_url":"https://api.github.com/repos/apache/celix/issues/699","id":1894351370,"node_id":"IC_kwDOAVuczs5w6YIK","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-16T19:08:14Z","updated_at":"2024-01-16T19:08:14Z","author_association":"CONTRIBUTOR","body":"> When I modified `TEST_F(JsonSerializerTests, ParseTests)` as following, a crash happened:\r\n> \r\n> ```c++\r\n> type = nullptr; \r\n> inst = nullptr; \r\n> rc = dynType_parseWithStr(example5_descriptor, nullptr, nullptr, &type); \r\n> ASSERT_EQ(0, rc); \r\n> rc = jsonSerializer_deserialize(type, example5_input, strlen(example5_input), &inst); \r\n> ASSERT_EQ(0, rc);\r\n> \r\n> json_auto_t* result = nullptr; \r\n> // crash happens HERE! \r\n> rc = jsonSerializer_serializeJson(type, inst, &result); \r\n> ASSERT_EQ(0, rc);\r\n> ```\r\n> \r\n> I found two issues:\r\n> \r\n> 1. In `example5_input`, the `node` pointed to by `head` misses `value` member. Similarly, the `node` pointed to by `head->left` misses `right` member.\r\n> 2. `nullptr` is not dealt in `jsonSerializer_serializeJson`, which leads to the crash.\r\n> \r\n> ```c++\r\n>         case '*' :\r\n>             subType = dynType_typedPointer_getTypedType(type);\r\n>             status = jsonSerializer_writeAny(subType, *(void **)input, &val); // dereference null ptr\r\n>             break;\r\n> ```\r\n> \r\n> For the first issue, IMO all struct members should be present in the json object, because C struct is very rigid, unlike json object. Our data model is based on C struct not on flexible json object.\r\n> \r\n> For the second issue, I think `nullptr` should also be serialized/deserialized.\r\n> \r\n> WDYT? @pnoltes\r\n\r\nI agree with both. And making a nullptr possible is good improvement I had not considered.\r\n\r\nConcerning JSON,  If you treat the descriptor as a low level (JSON) schema, it is also logical that the expected JSON should have the expected members.  ","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1894351370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1897647541","html_url":"https://github.com/apache/celix/pull/720#issuecomment-1897647541","issue_url":"https://api.github.com/repos/apache/celix/issues/720","id":1897647541,"node_id":"IC_kwDOAVuczs5xG821","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-18T02:05:51Z","updated_at":"2024-01-18T02:06:57Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/720?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`a800c42`)](https://app.codecov.io/gh/apache/celix/commit/a800c42699c0f8a674cd50c6430b35605c543900?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.34% compared to head [(`121b3be`)](https://app.codecov.io/gh/apache/celix/pull/720?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) 88.35%.\n\n> :exclamation: Current head 121b3be differs from pull request most recent head 62b42f2. Consider uploading reports for the commit 62b42f2 to get more accurate results\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master     #720   +/-   ##\n=======================================\n  Coverage   88.34%   88.35%           \n=======================================\n  Files         212      212           \n  Lines       24039    24039           \n=======================================\n+ Hits        21238    21239    +1     \n+ Misses       2801     2800    -1     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/720?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1897647541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905147253","html_url":"https://github.com/apache/celix/pull/721#issuecomment-1905147253","issue_url":"https://api.github.com/repos/apache/celix/issues/721","id":1905147253,"node_id":"IC_kwDOAVuczs5xjj11","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-23T01:50:17Z","updated_at":"2024-01-23T08:07:08Z","author_association":"CONTRIBUTOR","body":"~~I noticed Codecov has stopped working for 3 days in a row.~~ Fixed.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905147253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905331047","html_url":"https://github.com/apache/celix/pull/721#issuecomment-1905331047","issue_url":"https://api.github.com/repos/apache/celix/issues/721","id":1905331047,"node_id":"IC_kwDOAVuczs5xkQtn","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-23T05:43:56Z","updated_at":"2024-04-02T18:35:01Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/celix/pull/721?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\nAttention: Patch coverage is `99.33244%` with `5 lines` in your changes are missing coverage. Please review.\n> Project coverage is 90.17%. Comparing base [(`8acbe78`)](https://app.codecov.io/gh/apache/celix/commit/8acbe780d1d2c183da52e9c139aaa574cf53504f?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) to head [(`6a9713e`)](https://app.codecov.io/gh/apache/celix/pull/721?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n\n| [Files](https://app.codecov.io/gh/apache/celix/pull/721?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Patch % | Lines |\n|---|---|---|\n| [libs/framework/src/bundle\\_context.c](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&filepath=libs%2Fframework%2Fsrc%2Fbundle_context.c&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-bGlicy9mcmFtZXdvcmsvc3JjL2J1bmRsZV9jb250ZXh0LmM=) | 88.46% | [3 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...te\\_service\\_admin\\_dfi/src/import\\_registration\\_dfi.c](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&filepath=bundles%2Fremote_services%2Fremote_service_admin_dfi%2Fsrc%2Fimport_registration_dfi.c&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcmVtb3RlX3NlcnZpY2VfYWRtaW5fZGZpL3NyYy9pbXBvcnRfcmVnaXN0cmF0aW9uX2RmaS5j) | 80.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n| [...ervices/rsa\\_rpc\\_json/src/rsa\\_json\\_rpc\\_proxy\\_impl.c](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&filepath=bundles%2Fremote_services%2Frsa_rpc_json%2Fsrc%2Frsa_json_rpc_proxy_impl.c&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-YnVuZGxlcy9yZW1vdGVfc2VydmljZXMvcnNhX3JwY19qc29uL3NyYy9yc2FfanNvbl9ycGNfcHJveHlfaW1wbC5j) | 90.00% | [1 Missing :warning: ](https://app.codecov.io/gh/apache/celix/pull/721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master     #721      +/-   ##\n==========================================\n+ Coverage   89.84%   90.17%   +0.32%     \n==========================================\n  Files         222      223       +1     \n  Lines       26058    26545     +487     \n==========================================\n+ Hits        23413    23937     +524     \n+ Misses       2645     2608      -37     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/apache/celix/pull/721?dropdown=coverage&src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache).\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905331047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905582200","html_url":"https://github.com/apache/celix/pull/699#issuecomment-1905582200","issue_url":"https://api.github.com/repos/apache/celix/issues/699","id":1905582200,"node_id":"IC_kwDOAVuczs5xlOB4","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-23T08:51:39Z","updated_at":"2024-01-29T04:50:00Z","author_association":"CONTRIBUTOR","body":"> I agree with both. And making a nullptr possible is good improvement I had not considered.\r\n> Concerning JSON, If you treat the descriptor as a low level (JSON) schema, it is also logical that the expected JSON should have the expected members.\r\n\r\n~~These two issues have been addressed. I have questions regarding function argument meta info: what are the precise definitions of these argument types?~~ **This has been addressed.**\r\n\r\nFor `am=handle`, it is clear that a handle should be untyped pointer, with descriptor 'P'.\r\nFor `am=pre`, the Doxygen documentation says that the type should be pre-allocated by the function caller. Let me call these types \"pre-allocatable\". The following plain old C struct should qualify as pre-allocatable:\r\n\r\n```C\r\nstruct preallocatable {\r\n    int a;\r\n    int b;\r\n}\r\n```\r\n\r\nIs text pre-allocatable? I guess not, since the caller can not predict how long a string will be.\r\n\r\n```C\r\nstruct not_sure {\r\n    int a;\r\n    int b;\r\n    struct preallocatable* c;\r\n}\r\n```\r\n\r\nIs `not_sure` pre-allocatable? On the service provider side, the callee could allocate a  struct preallocatable and fill the c field.\r\nThen `not_sure` can be serialized successfully. However, on the service consumer side, it can caused a use-after-free crash.\r\nIn `jsonRpc_handleReply`, we deal with pre-allocatable argument like following:\r\n\r\n```C\r\nif (meta == DYN_FUNCTION_ARGUMENT_META__PRE_ALLOCATED_OUTPUT) {\r\n                void* tmp = NULL;\r\n                void** out = (void **) args[i];\r\n                size_t size = 0;\r\n\r\n\r\n                argType = dynType_typedPointer_getTypedType(argType);\r\n                status = jsonSerializer_deserializeJson(argType, result, &tmp);\r\n                if (tmp != NULL) {\r\n                    size = dynType_size(argType);\r\n                    memcpy(*out, tmp, size); // address of freed struct preallocatable is copied\r\n                }\r\n                \r\n\r\n                dynType_free(argType, tmp); // preallocatable is freed\r\n            }\r\n```\r\n\r\nIf we do have a precise definition of pre-allocatability, such errors can be catched in `dynFunction_parse`:\r\n\r\n```C\r\n        if (strcmp(meta, \"handle\") == 0) {\r\n            if (dynType_descriptorType(real) != 'P') {\r\n                celix_err_pushf(\"Error 'handle' is only allowed for untyped pointer not '%c'\", dynType_descriptorType(real));\r\n                return PARSE_ERROR;\r\n            }\r\n            arg->argumentMeta = DYN_FUNCTION_ARGUMENT_META__HANDLE;\r\n        } else if (strcmp(meta, \"pre\") == 0) {\r\n            if (!dynType_isPreallocatable(real)) {\r\n                celix_err_pushf(\"Error 'am=pre' is only allowed for preallocatable type\");\r\n                return PARSE_ERROR;\r\n            }\r\n            arg->argumentMeta = DYN_FUNCTION_ARGUMENT_META__PRE_ALLOCATED_OUTPUT;\r\n        }\r\n```\r\n\r\nSimilar considerations also apply to other types. For example, for a standard argument to work, it should at least be serializable.\r\nFor exmaple, `int` is serializable, `int *` is serailizable, while `int**` is not, because we can not tell from a json null whether `int* == NULL` or `int** == NULL`.\r\n\r\n~~Due to the lack of precise definitions of these argument types, I am stuck in json_rpc.c. Though it is already 100% line covered, it is still very fragile IMHO.~~ @pnoltes \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1905582200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1907419591","html_url":"https://github.com/apache/celix/issues/723#issuecomment-1907419591","issue_url":"https://api.github.com/repos/apache/celix/issues/723","id":1907419591,"node_id":"IC_kwDOAVuczs5xsOnH","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T05:49:14Z","updated_at":"2024-01-24T05:49:37Z","author_association":"CONTRIBUTOR","body":"> Is text pre-allocatable? I guess not, since the caller can not predict how long a string will be.\r\n\r\nThe current implementation of `jsonRpc_handleReply` is confusing in this regard.\r\n\r\n```C\r\n\t\t\tif (meta == DYN_FUNCTION_ARGUMENT_META__PRE_ALLOCATED_OUTPUT) {\r\n\t\t\t\tvoid *tmp = NULL;\r\n\t\t\t\tvoid **out = (void **) args[i];\r\n\t\t\t\tsize_t size = 0;\r\n\r\n                if (dynType_descriptorType(argType) == 't') {\r\n\t\t\t\t\tstatus = jsonSerializer_deserializeJson(argType, result, &tmp);\r\n\t\t\t\t\tif (tmp != NULL) {\r\n\t\t\t\t\t\tsize = strnlen(((char *) *(char**) tmp), 1024 * 1024);\r\n\t\t\t\t\t\tmemcpy(*out, *(void**) tmp, size);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdynType_typedPointer_getTypedType(argType, &argType);\r\n\t\t\t\t\tstatus = jsonSerializer_deserializeJson(argType, result, &tmp);\r\n\t\t\t\t\tif (tmp != NULL) {\r\n\t\t\t\t\t\tsize = dynType_size(argType);\r\n\t\t\t\t\t\tmemcpy(*out, tmp, size);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n```\r\n\r\nHow could the caller of the remote method to know the resulting `strnlen` so that he/she can allocate buffer large enough?\r\n\r\nI feel that the precise definitions of these types are needed at the moment to have a solid RSA implementation. @pnoltes \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1907419591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1908374062","html_url":"https://github.com/apache/celix/issues/723#issuecomment-1908374062","issue_url":"https://api.github.com/repos/apache/celix/issues/723","id":1908374062,"node_id":"IC_kwDOAVuczs5xv3ou","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T15:34:05Z","updated_at":"2024-01-24T15:46:05Z","author_association":"CONTRIBUTOR","body":"I try to give the following definitions:\r\n\r\n**Standard argument should be serializable.** All types except types involving untyped pointer or double pointer (pointer to pointer) are serializable. For example, complex types consisting of non-pointer fields are serializable while complex type containing a untyped pointer field is not serializable; `[I` is serializable while `[P` and `[**D` are not serializable.\r\n\r\n`am=out` parameter should be pointer to text or double pointer to serializable types.\r\n\r\n`am=pre` parameter should be pointer to **trivially copyable type**. It's safe to apply `memcpy` rivially copyable type without the usual danger of shallow copy. However, this definition is only meant to make the following code work:\r\n\r\n```C\r\n\t\t\tif (meta == DYN_FUNCTION_ARGUMENT_META__PRE_ALLOCATED_OUTPUT) {\r\n\t\t\t\tvoid *tmp = NULL;\r\n\t\t\t\tvoid **out = (void **) args[i];\r\n\t\t\t\tsize_t size = 0;\r\n\r\n \r\n\t\t\tdynType_typedPointer_getTypedType(argType, &argType);\r\n\t\t\tstatus = jsonSerializer_deserializeJson(argType, result, &tmp);\r\n\t\t\tif (tmp != NULL) {\r\n\t\t\t\tsize = dynType_size(argType);\r\n\t\t\t\tmemcpy(*out, tmp, size);\r\n\t\t\t}\r\n\t\t        dynType_free(argType, tmp);\r\n\t\t\t\t\r\n```\r\n\r\nBy this definition, `[D` can not be used as `am=pre`, because `dynType_free(argType, tmp)` will free the embedded buffer, which has been copied to `*out` (thus lead to use-after-free). I think the main usage of SequenceType is to be used as pre-allocated output paramter and let the callee to fill in actual content. Thus this definition will make SequenceType useless.\r\n\r\nAny ideas to make `am=pre` work? @pnoltes \r\n\r\nThe above reflects my understanding of the current code base, which may deviate from the original intention. Please shed light on this, any help will be appreciated.\r\n\r\nPS: Maybe SequenceType does not qualify as `am=pre`, because it is essentially a inout parameter (currently unsupported), whose capacity must be serialized and sent to the provider end.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1908374062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1913635185","html_url":"https://github.com/apache/celix/pull/721#issuecomment-1913635185","issue_url":"https://api.github.com/repos/apache/celix/issues/721","id":1913635185,"node_id":"IC_kwDOAVuczs5yD8Fx","user":{"login":"PengZheng","id":5362947,"node_id":"MDQ6VXNlcjUzNjI5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/5362947?v=4","gravatar_id":"","url":"https://api.github.com/users/PengZheng","html_url":"https://github.com/PengZheng","followers_url":"https://api.github.com/users/PengZheng/followers","following_url":"https://api.github.com/users/PengZheng/following{/other_user}","gists_url":"https://api.github.com/users/PengZheng/gists{/gist_id}","starred_url":"https://api.github.com/users/PengZheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PengZheng/subscriptions","organizations_url":"https://api.github.com/users/PengZheng/orgs","repos_url":"https://api.github.com/users/PengZheng/repos","events_url":"https://api.github.com/users/PengZheng/events{/privacy}","received_events_url":"https://api.github.com/users/PengZheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-28T15:31:29Z","updated_at":"2024-01-28T15:31:29Z","author_association":"CONTRIBUTOR","body":"I'll finish reviewing this PR ASAP. \r\nPlease help review #699.","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1913635185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/celix/issues/comments/1913683051","html_url":"https://github.com/apache/celix/issues/723#issuecomment-1913683051","issue_url":"https://api.github.com/repos/apache/celix/issues/723","id":1913683051,"node_id":"IC_kwDOAVuczs5yEHxr","user":{"login":"pnoltes","id":1766397,"node_id":"MDQ6VXNlcjE3NjYzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/1766397?v=4","gravatar_id":"","url":"https://api.github.com/users/pnoltes","html_url":"https://github.com/pnoltes","followers_url":"https://api.github.com/users/pnoltes/followers","following_url":"https://api.github.com/users/pnoltes/following{/other_user}","gists_url":"https://api.github.com/users/pnoltes/gists{/gist_id}","starred_url":"https://api.github.com/users/pnoltes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pnoltes/subscriptions","organizations_url":"https://api.github.com/users/pnoltes/orgs","repos_url":"https://api.github.com/users/pnoltes/repos","events_url":"https://api.github.com/users/pnoltes/events{/privacy}","received_events_url":"https://api.github.com/users/pnoltes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-28T18:27:33Z","updated_at":"2024-01-28T18:27:33Z","author_association":"CONTRIBUTOR","body":"Sorry for the late reaction. \r\n\r\n> \r\n> Any ideas to make `am=pre` work? @pnoltes\r\n> \r\n> The above reflects my understanding of the current code base, which may deviate from the original intention. Please shed light on this, any help will be appreciated.\r\n> \r\n\r\nMy original idea for the am=pre was to support primitive types (double, bool, ec) and indeed trivially trivially copyable type. \r\nI agree that this should be made more explicit and the parse of dfi can test if the am=pre argument fits the requirements. If needed this can be extended in the future.\r\n\r\nSo IMO no am=pre support for pointer in structs, double pointers, strings or sequences. \r\n","reactions":{"url":"https://api.github.com/repos/apache/celix/issues/comments/1913683051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]