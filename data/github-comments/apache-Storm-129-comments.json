[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623157","html_url":"https://github.com/apache/storm/issues/4993#issuecomment-2612623157","issue_url":"https://api.github.com/repos/apache/storm/issues/4993","id":2612623157,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjMxNTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:45:24Z","updated_at":"2025-01-24T14:10:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user longdafeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/849#issuecomment-153917289\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/849#issuecomment-153917289</a></p>\n\n<p>    the code is fine to me, but this is the first step to do health check:<br/>\n    (1) where put the script, we had better put the script under $STORM_HOME/healthcheck, because when install storm, the script will be also installed in every node.<br/>\n    (2) the script depends on OS, in Windows, they should be xxx, in Linux, they should be XXX;<br/>\n    maybe we need some OS detect action to judge what kind of OS is running. so in the \"STORM_HEALTH_CHECK_DIR\" dir, there are several directory,  windows/linux/mac, different OS use different dir.<br/>\n    (3) could you please help to implement healthcheck.clj with java. in a short while, the storm will contain two core, one is clojure, the other is java. so could you please help to implement healthcheck.clj. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612442977","html_url":"https://github.com/apache/storm/issues/4004#issuecomment-2612442977","issue_url":"https://api.github.com/repos/apache/storm/issues/4004","id":2612442977,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDI5Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:48:46Z","updated_at":"2025-01-24T12:42:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/847#discussion_r43963775\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/847#discussion_r43963775</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -44,51 +45,53 @@<br/>\n     (defn- mk-fields-grouper <span class=\"error\">&#91;^Fields out-fields ^Fields group-fields ^List target-tasks&#93;</span><br/>\n       (let [num-tasks (count target-tasks)<br/>\n     task-getter (fn <span class=\"error\">&#91;i&#93;</span> (.get target-tasks i))]</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(fn <span class=\"error\">&#91;task-id ^List values&#93;</span><br/>\n    +    (fn <span class=\"error\">&#91;task-id ^List values load&#93;</span><br/>\n   (-> (.select out-fields group-fields values)<br/>\n       tuple/list-hash-code<br/>\n       (mod num-tasks)<br/>\n       task-getter))))</li>\n</ul>\n\n\n<p>    <del>(defn</del> mk-shuffle-grouper <span class=\"error\">&#91;^List target-tasks&#93;</span></p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(let <span class=\"error\">&#91;choices (rotating-random-range target-tasks)&#93;</span></li>\n\t<li>(fn <span class=\"error\">&#91;task-id tuple&#93;</span></li>\n\t<li>(acquire-random-range-id choices))))<br/>\n    -<br/>\n     (defn- mk-custom-grouper <span class=\"error\">&#91;^CustomStreamGrouping grouping ^WorkerTopologyContext context ^String component-id ^String stream-id target-tasks&#93;</span><br/>\n       (.prepare grouping context (GlobalStreamId. component-id stream-id) target-tasks)</li>\n\t<li>(fn <span class=\"error\">&#91;task-id ^List values&#93;</span></li>\n\t<li>(.chooseTasks grouping task-id values)</li>\n\t<li>))<br/>\n    +  (if (instance? LoadAwareCustomStreamGrouping grouping)<br/>\n    +    (fn <span class=\"error\">&#91;task-id ^List values load&#93;</span><br/>\n    +      (.chooseTasks grouping task-id values load))<br/>\n    +    (fn <span class=\"error\">&#91;task-id ^List values load&#93;</span><br/>\n    +      (.chooseTasks grouping task-id values))))<br/>\n    +<br/>\n    +(defn mk-shuffle-grouper <span class=\"error\">&#91;^List target-tasks topo-conf ^WorkerTopologyContext context ^String component-id ^String stream-id&#93;</span>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Should we have the arg list in the next line since it has many arguments to be more readable?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612442977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612442984","html_url":"https://github.com/apache/storm/issues/4004#issuecomment-2612442984","issue_url":"https://api.github.com/repos/apache/storm/issues/4004","id":2612442984,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NDI5ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:49:34Z","updated_at":"2025-01-24T12:42:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/847#discussion_r43963818\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/847#discussion_r43963818</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -102,7 +105,7 @@<br/>\n     :direct<br/>\n   )))</p>\n\n<p>    <del>(defn</del> outbound-groupings <span class=\"error\">&#91;^WorkerTopologyContext worker-context this-component-id stream-id out-fields component->grouping&#93;</span><br/>\n    +(defn- outbound-groupings <span class=\"error\">&#91;^WorkerTopologyContext worker-context this-component-id stream-id out-fields component->grouping topo-conf&#93;</span><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    arg-list next line?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612442984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624025","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624025","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624025,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwMjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:53:40Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964098\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964098</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -20,17 +20,7 @@<br/>\n     import com.google.common.collect.ImmutableMap;<br/>\n     import org.apache.calcite.adapter.java.JavaTypeFactory;<br/>\n     import org.apache.calcite.rel.type.RelDataType;<br/>\n    -import org.apache.calcite.rex.RexCall;<br/>\n    -import org.apache.calcite.rex.RexCorrelVariable;<br/>\n    -import org.apache.calcite.rex.RexDynamicParam;<br/>\n    -import org.apache.calcite.rex.RexFieldAccess;<br/>\n    -import org.apache.calcite.rex.RexInputRef;<br/>\n    -import org.apache.calcite.rex.RexLiteral;<br/>\n    -import org.apache.calcite.rex.RexLocalRef;<br/>\n    -import org.apache.calcite.rex.RexNode;<br/>\n    -import org.apache.calcite.rex.RexOver;<br/>\n    -import org.apache.calcite.rex.RexRangeRef;<br/>\n    -import org.apache.calcite.rex.RexVisitor;<br/>\n    +import org.apache.calcite.rex.*;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can we expand imports?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624029","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624029","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624029,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:54:00Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964131\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964131</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -39,30 +29,18 @@<br/>\n     import java.lang.reflect.Type;<br/>\n     import java.math.BigDecimal;<br/>\n     import java.util.AbstractMap;<br/>\n    -import java.util.IdentityHashMap;<br/>\n     import java.util.Map;</p>\n\n<p>    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.AND;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.DIVIDE;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.DIVIDE_INTEGER;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.GREATER_THAN;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.LESS_THAN;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.LESS_THAN_OR_EQUAL;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.MINUS;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.MULTIPLY;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.NOT;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.OR;<br/>\n    -import static org.apache.calcite.sql.fun.SqlStdOperatorTable.PLUS;<br/>\n    +import static org.apache.calcite.sql.fun.SqlStdOperatorTable.*;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    expand imports?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624031","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624031","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624031,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwMzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:54:24Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964164\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964164</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -71,14 +49,10 @@</p>\n\n<p>       @Override<br/>\n       public String visitInputRef(RexInputRef rexInputRef) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (expr.containsKey(rexInputRef)) \n{\n    -      return expr.get(rexInputRef);\n    -    }</li>\n\t<li>String name = reserveName(rexInputRef);<br/>\n    +    String name = reserveName();<br/>\n String typeName = javaTypeName(rexInputRef);<br/>\n pw.print(String.format(\"%s %s = (%s)(_data.get(%d));\\n\", typeName, name,</li>\n\t<li>typeName, rexInputRef.getIndex()));</li>\n\t<li>expr.put(rexInputRef, name);<br/>\n    +typeName, rexInputRef.getIndex()));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    indentation</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624039","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624039","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624039,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:54:41Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964188\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964188</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -91,7 +65,7 @@ public String visitLocalRef(RexLocalRef rexLocalRef) {<br/>\n       public String visitLiteral(RexLiteral rexLiteral) {<br/>\n Object v = rexLiteral.getValue();<br/>\n RelDataType ty = rexLiteral.getType();</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>switch(rexLiteral.getTypeName()) {<br/>\n    +    switch (rexLiteral.getTypeName()) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    white space</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624050","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624050","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624050,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:54:56Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964206\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964206</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -107,7 +81,7 @@ public String visitLiteral(RexLiteral rexLiteral) {<br/>\n       case INTEGER:<br/>\n return Long.toString(((BigDecimal) v).longValueExact());<br/>\n       case BIGINT:</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>return Long.toString(((BigDecimal)v).longValueExact()) + 'L';<br/>\n    +    return Long.toString(((BigDecimal) v).longValueExact()) + 'L';\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    white space</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624055","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624055","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624055,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T00:55:16Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#discussion_r43964238\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#discussion_r43964238</a></p>\n\n<p>    &#8212; Diff: external/sql/storm-sql-core/src/jvm/org/apache/storm/sql/compiler/ExprCompiler.java &#8212;<br/>\n    @@ -156,13 +130,11 @@ public String visitFieldAccess(</p>\n\n<p>       private String javaTypeName(RexNode node) {<br/>\n Type ty = typeFactory.getJavaClass(node.getType());</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>return ((Class<?>)ty).getCanonicalName();<br/>\n    +    return ((Class<?>) ty).getCanonicalName();\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    white space</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623164","html_url":"https://github.com/apache/storm/issues/4993#issuecomment-2612623164","issue_url":"https://api.github.com/repos/apache/storm/issues/4993","id":2612623164,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjMxNjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T01:53:56Z","updated_at":"2025-01-24T14:10:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=basti.lj\">basti.lj</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tgraves\" class=\"user-hover\" rel=\"tgraves\">Thomas Graves</a></p>\n\n<p>Thanks for your clarification. Yes, <a href=\"https://issues.apache.org/jira/browse/STORM-909\" title=\"Automatic Black Listing of bad nodes\" class=\"issue-link\" data-issue-key=\"STORM-909\"><del>STORM-909</del></a> and <a href=\"https://issues.apache.org/jira/browse/STORM-1155\" title=\"Supervisor recurring health checks\" class=\"issue-link\" data-issue-key=\"STORM-1155\"><del>STORM-1155</del></a> can cover the scanarios.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612601884","html_url":"https://github.com/apache/storm/issues/4890#issuecomment-2612601884","issue_url":"https://api.github.com/repos/apache/storm/issues/4890","id":2612601884,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDE4ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T02:29:42Z","updated_at":"2025-01-24T14:01:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/743#discussion_r43970097\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/743#discussion_r43970097</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/trident/TridentKafkaState.java &#8212;<br/>\n    @@ -83,8 +81,8 @@ public void updateState(List<TridentTuple> tuples, TridentCollector collector) {<br/>\n     topic = topicSelector.getTopic(tuple);</p>\n\n<p>     if(topic != null) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>producer.send(new KeyedMessage(topic, mapper.getKeyFromTuple(tuple),</li>\n\t<li>mapper.getMessageFromTuple(tuple)));<br/>\n    +    producer.send(new ProducerRecord(topic, mapper.getKeyFromTuple(tuple),\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Good catch. I will fix it. Thx.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612601884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/153950932","html_url":"https://github.com/apache/storm/pull/850#issuecomment-153950932","issue_url":"https://api.github.com/repos/apache/storm/issues/850","id":153950932,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Mzk1MDkzMg==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:16:26Z","updated_at":"2015-11-05T04:16:26Z","author_association":"CONTRIBUTOR","body":"On nimbus, we need two additional counters for following Nimbus thrift ops\n`setWorkerProfiler` and `getComponentPendingProfileActions`\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/153950932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623793","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623793","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623793,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM3OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:16:27Z","updated_at":"2025-01-24T14:10:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#issuecomment-153950932\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#issuecomment-153950932</a></p>\n\n<p>    On nimbus, we need two additional counters for following Nimbus thrift ops<br/>\n    `setWorkerProfiler` and `getComponentPendingProfileActions`</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625422","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625422","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625422,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:18:12Z","updated_at":"2025-01-24T14:11:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975030\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975030</a></p>\n\n<p>    &#8212; Diff: examples/storm-starter/src/jvm/storm/starter/SlidingWindowTopology.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package storm.starter;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.LocalCluster;<br/>\n    +import backtype.storm.StormSubmitter;<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.TopologyBuilder;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.topology.base.BaseWindowedBolt;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import storm.starter.bolt.PrinterBolt;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * A sample topology that demonstrates the usage of </p>\n{@link backtype.storm.topology.IWindowedBolt}\n<p>    + * to calculate sliding window sum.<br/>\n    + */<br/>\n    +public class SlidingWindowTopology {<br/>\n    +<br/>\n    +    /*<br/>\n    +     * emits random integers every 100 ms<br/>\n    +     */<br/>\n    +    private static class RandomIntegerSpout extends BaseRichSpout {<br/>\n    +SpoutOutputCollector collector;<br/>\n    +<br/>\n    +@Override<br/>\n    +public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +    declarer.declare(new Fields(\"value\"));\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +    this.collector = collector;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void nextTuple() {<br/>\n    +    Utils.sleep(100);<br/>\n    +    Random rand = new Random();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes, I overlooked this when I copied the code from another bolt. Will fix it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625426","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625426","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625426,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:19:24Z","updated_at":"2025-01-24T14:11:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975101\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975101</a></p>\n\n<p>    &#8212; Diff: examples/storm-starter/src/jvm/storm/starter/SlidingWindowTopology.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package storm.starter;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.LocalCluster;<br/>\n    +import backtype.storm.StormSubmitter;<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.TopologyBuilder;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.topology.base.BaseWindowedBolt;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import storm.starter.bolt.PrinterBolt;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * A sample topology that demonstrates the usage of </p>\n{@link backtype.storm.topology.IWindowedBolt}\n<p>    + * to calculate sliding window sum.<br/>\n    + */<br/>\n    +public class SlidingWindowTopology {<br/>\n    +<br/>\n    +    /*<br/>\n    +     * emits random integers every 100 ms<br/>\n    +     */<br/>\n    +    private static class RandomIntegerSpout extends BaseRichSpout {<br/>\n    +SpoutOutputCollector collector;<br/>\n    +<br/>\n    +@Override<br/>\n    +public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +    declarer.declare(new Fields(\"value\"));\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +    this.collector = collector;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void nextTuple() {\n    +    Utils.sleep(100);\n    +    Random rand = new Random();\n    +    Integer value = rand.nextInt(1000);\n    +    collector.emit(new Values(value));\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /*<br/>\n    +     * Computes sliding window sum<br/>\n    +     */<br/>\n    +    private static class SlidingWindowSumBolt extends BaseWindowedBolt {<br/>\n    +private int sum = 0;<br/>\n    +private OutputCollector collector;<br/>\n    +<br/>\n    +@Override<br/>\n    +public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {    +    this.collector = collector;    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void execute(TupleWindow inputWindow) {<br/>\n    +    System.out.println(\"Events in current window: \" + inputWindow.get().size());<br/>\n    +    for (Tuple tuple : inputWindow.getNew()) </p>\n{\n    +sum += (int) tuple.getValue(0);\n    +    }\n<p>    +    for (Tuple tuple : inputWindow.getExpired()) </p>\n{\n    +sum -= (int) tuple.getValue(0);\n    +    }\n<p>    +    collector.emit(new Values(sum));<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I will add more comments in the example topology explaining the details.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625431","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625431","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625431,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:20:46Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975150\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975150</a></p>\n\n<p>    &#8212; Diff: examples/storm-starter/src/jvm/storm/starter/SlidingWindowTopology.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package storm.starter;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.LocalCluster;<br/>\n    +import backtype.storm.StormSubmitter;<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.TopologyBuilder;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.topology.base.BaseWindowedBolt;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import storm.starter.bolt.PrinterBolt;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * A sample topology that demonstrates the usage of </p>\n{@link backtype.storm.topology.IWindowedBolt}\n<p>    + * to calculate sliding window sum.<br/>\n    + */<br/>\n    +public class SlidingWindowTopology {<br/>\n    +<br/>\n    +    /*<br/>\n    +     * emits random integers every 100 ms<br/>\n    +     */<br/>\n    +    private static class RandomIntegerSpout extends BaseRichSpout {<br/>\n    +SpoutOutputCollector collector;<br/>\n    +<br/>\n    +@Override<br/>\n    +public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +    declarer.declare(new Fields(\"value\"));\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +    this.collector = collector;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void nextTuple() {\n    +    Utils.sleep(100);\n    +    Random rand = new Random();\n    +    Integer value = rand.nextInt(1000);\n    +    collector.emit(new Values(value));\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /*<br/>\n    +     * Computes sliding window sum<br/>\n    +     */<br/>\n    +    private static class SlidingWindowSumBolt extends BaseWindowedBolt {<br/>\n    +private int sum = 0;<br/>\n    +private OutputCollector collector;<br/>\n    +<br/>\n    +@Override<br/>\n    +public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {    +    this.collector = collector;    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void execute(TupleWindow inputWindow) {<br/>\n    +    System.out.println(\"Events in current window: \" + inputWindow.get().size());<br/>\n    +    for (Tuple tuple : inputWindow.getNew()) </p>\n{\n    +sum += (int) tuple.getValue(0);\n    +    }\n<p>    +    for (Tuple tuple : inputWindow.getExpired()) </p>\n{\n    +sum -= (int) tuple.getValue(0);\n    +    }\n<p>    +    collector.emit(new Values(sum));<br/>\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +    declarer.declare(new Fields(\"sum\"));\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    public static void main(String[] args) throws Exception {<br/>\n    +TopologyBuilder builder = new TopologyBuilder();<br/>\n    +builder.setSpout(\"integer\", new RandomIntegerSpout(), 1);<br/>\n    +builder.setBolt(\"window\", new SlidingWindowSumBolt().withWindow(new Count(30), new Count(10)),<br/>\n    +//new SlidingWindowSumBolt().withTumblingWindow(new Duration(20, TimeUnit.SECONDS))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Will add a separate Bolt in that shows the usage of TumblingWindow.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625434","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625434","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625434,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:21:54Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975187\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975187</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/WindowedBoltExecutor.java &#8212;<br/>\n    @@ -0,0 +1,200 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I will fix it across all files.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625436","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625436","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625436,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:39:40Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975856\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975856</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,184 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private transient Map<String, Object> windowConfiguration;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I added new constants in Config and overriding it here via the componentConfiguration. This gives a way to define default values for these params at topology level if needed and override it at per bolt level. Defining it in same place with other params makes it more consistent and enables us to reuse the constants for trident as well. I think defining it in BaseWindowedBolt makes it more specific to core.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625440","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625440","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625440,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:40:44Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43975889\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43975889</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/CountEvictionPolicy.java &#8212;<br/>\n    @@ -0,0 +1,68 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +<br/>\n    +/**<br/>\n    + * An eviction policy that tracks event counts and can<br/>\n    + * evict based on a threshold count.<br/>\n    + *<br/>\n    + * @param <T> the type of event tracked by this policy.<br/>\n    + */<br/>\n    +public class CountEvictionPolicy<T> implements EvictionPolicy<T> {<br/>\n    +    private final int threshold;<br/>\n    +    private AtomicInteger currentCount;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Thanks, I missed it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625444","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625444","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625444,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:44:22Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976006\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976006</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,184 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private transient Map<String, Object> windowConfiguration;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a count value for count based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Count {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Count(int value) </p>\n{\n    +    this.value = value;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a Time duration for time based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Duration {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Duration(int value, TimeUnit timeUnit) </p>\n{\n    +    this.value = (int) timeUnit.toMillis(value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected BaseWindowedBolt() </p>\n{\n    +windowConfiguration = new HashMap<>();\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Tuple count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Tuple count and time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Time duration and count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A tuple count based window that slides with every incoming tuple.<br/>\n    +     *<br/>\n    +     * @param windowLength the number of tuples in the window<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(new Count(1));\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * A time duration based window that slides with every incoming tuple.<br/>\n    +     *<br/>\n    +     * @param windowLength the time duration of the window<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength) {    +return withWindowLength(windowLength).withSlidingInterval(new Count(1));    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A count based tumbling window.<br/>\n    +     *<br/>\n    +     * @param count the number of tuples after which the window tumbles<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withTumblingWindow(Count count) </p>\n{\n    +return withWindowLength(count).withSlidingInterval(count);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A time duration based tumbling window.<br/>\n    +     *<br/>\n    +     * @param duration the time duration after which the window tumbles<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withTumblingWindow(Duration duration) </p>\n{\n    +return withWindowLength(duration).withSlidingInterval(duration);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void execute(TupleWindow inputWindow) {<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes, makes sense to keep it abstract and not define the `execute` method, since that should be overridden by the implementor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625450","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625450","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625450,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:44:43Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976021\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976021</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,184 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private transient Map<String, Object> windowConfiguration;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a count value for count based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Count {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Count(int value) </p>\n{\n    +    this.value = value;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a Time duration for time based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Duration {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Duration(int value, TimeUnit timeUnit) </p>\n{\n    +    this.value = (int) timeUnit.toMillis(value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected BaseWindowedBolt() </p>\n{\n    +windowConfiguration = new HashMap<>();\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Tuple count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Tuple count and time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Time duration and count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A tuple count based window that slides with every incoming tuple.<br/>\n    +     *<br/>\n    +     * @param windowLength the number of tuples in the window<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(new Count(1));\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * A time duration based window that slides with every incoming tuple.<br/>\n    +     *<br/>\n    +     * @param windowLength the time duration of the window<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength) {    +return withWindowLength(windowLength).withSlidingInterval(new Count(1));    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A count based tumbling window.<br/>\n    +     *<br/>\n    +     * @param count the number of tuples after which the window tumbles<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withTumblingWindow(Count count) </p>\n{\n    +return withWindowLength(count).withSlidingInterval(count);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A time duration based tumbling window.<br/>\n    +     *<br/>\n    +     * @param duration the time duration after which the window tumbles<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withTumblingWindow(Duration duration) </p>\n{\n    +return withWindowLength(duration).withSlidingInterval(duration);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) </p>\n{\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    Sure.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625454","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625454","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625454,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:45:14Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976038\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976038</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/CountTriggerPolicy.java &#8212;<br/>\n    @@ -0,0 +1,62 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +<br/>\n    +/**<br/>\n    + * A trigger that tracks event counts and calls back </p>\n{@link TriggerHandler#onTrigger()}\n<p>    + * when the count threshold is hit.<br/>\n    + *<br/>\n    + * @param <T> the type of event tracked by this policy.<br/>\n    + */<br/>\n    +public class CountTriggerPolicy<T> implements TriggerPolicy<T> {<br/>\n    +    private final int count;<br/>\n    +    private AtomicInteger currentCount;<br/>\n    +    private TriggerHandler handler;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Thanks, I missed it will make it final.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625460","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625460","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625460,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:47:43Z","updated_at":"2025-01-24T14:11:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976144\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976144</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/WindowedBoltExecutor.java &#8212;<br/>\n    @@ -0,0 +1,200 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.IOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.windowing.TupleWindowImpl;<br/>\n    +import backtype.storm.windowing.WindowLifecycleListener;<br/>\n    +import backtype.storm.windowing.WindowManager;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * An </p>\n{@link IWindowedBolt}\n<p> wrapper that does the windowing of tuples.<br/>\n    + */<br/>\n    +public class WindowedBoltExecutor implements IRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowedBoltExecutor.class);<br/>\n    +<br/>\n    +    private IWindowedBolt bolt;<br/>\n    +    private transient WindowedOutputCollector windowedOutputCollector;<br/>\n    +    private transient WindowLifecycleListener<Tuple> listener;<br/>\n    +    private transient WindowManager<Tuple> windowManager;<br/>\n    +<br/>\n    +    public WindowedBoltExecutor(IWindowedBolt bolt) </p>\n{\n    +this.bolt = bolt;\n    +    }\n<p>    +<br/>\n    +    private int getTopologyTimeoutMillis(Map stormConf) {<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS)) {<br/>\n    +    boolean timeOutsEnabled = (boolean) stormConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS);<br/>\n    +    if (!timeOutsEnabled) </p>\n{\n    +return Integer.MAX_VALUE;\n    +    }\n<p>    +}<br/>\n    +int timeout = 0;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)) </p>\n{\n    +    timeout = ((Number) stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)).intValue();\n    +}\n<p>    +return timeout * 1000;<br/>\n    +    }<br/>\n    +<br/>\n    +    private void ensureDurationLessThanTimeout(int duration, int timeout) {<br/>\n    +if (duration > timeout) </p>\n{\n    +    throw new IllegalArgumentException(\"Window duration (length + sliding interval) value \" + duration +\n    +       \" is more than \" + Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS +\n    +       \" value \" + timeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // TODO: add more validation<br/>\n    +    private void validate(Map stormConf, Count windowLengthCount, Duration windowLengthDuration,<br/>\n    +  Count slidingIntervalCount, Duration slidingIntervalDuration) {<br/>\n    +<br/>\n    +int topologyTimeout = getTopologyTimeoutMillis(stormConf);<br/>\n    +if (windowLengthDuration != null && slidingIntervalDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value + slidingIntervalDuration.value, topologyTimeout);\n    +}\n<p> else if (windowLengthDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value, topologyTimeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private WindowManager<Tuple> initWindowManager(WindowLifecycleListener<Tuple> lifecycleListener, Map stormConf) {<br/>\n    +WindowManager<Tuple> manager = new WindowManager<>(lifecycleListener);<br/>\n    +Duration windowLengthDuration = null;<br/>\n    +Count windowLengthCount = null;<br/>\n    +Duration slidingIntervalDuration = null;<br/>\n    +Count slidingIntervalCount = null;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Its overridden by bolt level component configuration. So users can have two bolts with different intervals.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625463","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625463","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625463,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T04:48:01Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976153\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976153</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/WindowedBoltExecutor.java &#8212;<br/>\n    @@ -0,0 +1,200 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.IOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.windowing.TupleWindowImpl;<br/>\n    +import backtype.storm.windowing.WindowLifecycleListener;<br/>\n    +import backtype.storm.windowing.WindowManager;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * An </p>\n{@link IWindowedBolt}\n<p> wrapper that does the windowing of tuples.<br/>\n    + */<br/>\n    +public class WindowedBoltExecutor implements IRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowedBoltExecutor.class);<br/>\n    +<br/>\n    +    private IWindowedBolt bolt;<br/>\n    +    private transient WindowedOutputCollector windowedOutputCollector;<br/>\n    +    private transient WindowLifecycleListener<Tuple> listener;<br/>\n    +    private transient WindowManager<Tuple> windowManager;<br/>\n    +<br/>\n    +    public WindowedBoltExecutor(IWindowedBolt bolt) </p>\n{\n    +this.bolt = bolt;\n    +    }\n<p>    +<br/>\n    +    private int getTopologyTimeoutMillis(Map stormConf) {<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS)) {<br/>\n    +    boolean timeOutsEnabled = (boolean) stormConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS);<br/>\n    +    if (!timeOutsEnabled) </p>\n{\n    +return Integer.MAX_VALUE;\n    +    }\n<p>    +}<br/>\n    +int timeout = 0;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)) </p>\n{\n    +    timeout = ((Number) stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)).intValue();\n    +}\n<p>    +return timeout * 1000;<br/>\n    +    }<br/>\n    +<br/>\n    +    private void ensureDurationLessThanTimeout(int duration, int timeout) {<br/>\n    +if (duration > timeout) </p>\n{\n    +    throw new IllegalArgumentException(\"Window duration (length + sliding interval) value \" + duration +\n    +       \" is more than \" + Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS +\n    +       \" value \" + timeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // TODO: add more validation<br/>\n    +    private void validate(Map stormConf, Count windowLengthCount, Duration windowLengthDuration,<br/>\n    +  Count slidingIntervalCount, Duration slidingIntervalDuration) {<br/>\n    +<br/>\n    +int topologyTimeout = getTopologyTimeoutMillis(stormConf);<br/>\n    +if (windowLengthDuration != null && slidingIntervalDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value + slidingIntervalDuration.value, topologyTimeout);\n    +}\n<p> else if (windowLengthDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value, topologyTimeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private WindowManager<Tuple> initWindowManager(WindowLifecycleListener<Tuple> lifecycleListener, Map stormConf) {<br/>\n    +WindowManager<Tuple> manager = new WindowManager<>(lifecycleListener);<br/>\n    +Duration windowLengthDuration = null;<br/>\n    +Count windowLengthCount = null;<br/>\n    +Duration slidingIntervalDuration = null;<br/>\n    +Count slidingIntervalCount = null;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)) </p>\n{\n    +    windowLengthCount = new Count(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)).intValue());\n    +}\n<p> else if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)) </p>\n{\n    +    windowLengthDuration = new Duration(\n    +    ((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)).intValue(),\n    +    TimeUnit.MILLISECONDS);\n    +}\n<p>    +<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Its overridden by bolt level component configuration. So users can have two bolts with different intervals.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625467","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625467","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625467,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:01:55Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976655\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976655</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/WindowManager.java &#8212;<br/>\n    @@ -0,0 +1,210 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentLinkedQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +import java.util.concurrent.locks.ReentrantLock;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * Tracks a window of events and fires </p>\n{@link WindowLifecycleListener}\n<p> callbacks<br/>\n    + * on expiry of events or activation of the window due to </p>\n{@link TriggerPolicy}\n<p>.<br/>\n    + *<br/>\n    + * @param <T> the type of event in the window.<br/>\n    + */<br/>\n    +public class WindowManager<T> implements TriggerHandler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowManager.class);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Expire old events every EXPIRE_EVENTS_THRESHOLD to<br/>\n    +     * keep the window size in check.<br/>\n    +     */<br/>\n    +    public static final int EXPIRE_EVENTS_THRESHOLD = 100;<br/>\n    +<br/>\n    +    private WindowLifecycleListener<T> windowLifecycleListener;<br/>\n    +    private ConcurrentLinkedQueue<Event<T>> window;<br/>\n    +    private EvictionPolicy<T> evictionPolicy;<br/>\n    +    private TriggerPolicy<T> triggerPolicy;<br/>\n    +    private List<T> expiredEvents;<br/>\n    +    private Set<Event<T>> prevWindowEvents;<br/>\n    +    private AtomicInteger eventsSinceLastExpiry;<br/>\n    +    private ReentrantLock lock;<br/>\n    +<br/>\n    +    public WindowManager(WindowLifecycleListener<T> lifecycleListener) </p>\n{\n    +windowLifecycleListener = lifecycleListener;\n    +window = new ConcurrentLinkedQueue<>();\n    +expiredEvents = new ArrayList<>();\n    +prevWindowEvents = new HashSet<>();\n    +eventsSinceLastExpiry = new AtomicInteger();\n    +lock = new ReentrantLock(true);\n    +    }\n<p>    +<br/>\n    +    public void setWindowLength(Count count) </p>\n{\n    +this.evictionPolicy = new CountEvictionPolicy<>(count.value);\n    +    }\n<p>    +<br/>\n    +    public void setWindowLength(Duration duration) </p>\n{\n    +this.evictionPolicy = new TimeEvictionPolicy<>(duration.value);\n    +    }\n<p>    +<br/>\n    +    public void setSlidingInterval(Count count) </p>\n{\n    +this.triggerPolicy = new CountTriggerPolicy<>(count.value, this);\n    +    }\n<p>    +<br/>\n    +    public void setSlidingInterval(Duration duration) </p>\n{\n    +this.triggerPolicy = new TimeTriggerPolicy<>(duration.value, this);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Add an event into the window, with </p>\n{@link System#currentTimeMillis()}\n<p> as<br/>\n    +     * the tracking ts.<br/>\n    +     *<br/>\n    +     * @param event the event to add<br/>\n    +     */<br/>\n    +    public void add(T event) </p>\n{\n    +add(event, System.currentTimeMillis());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Add an event into the window, with the given ts as the tracking ts.<br/>\n    +     *<br/>\n    +     * @param event the event to track<br/>\n    +     * @param ts    the timestamp<br/>\n    +     */<br/>\n    +    public void add(T event, long ts) </p>\n{\n    +Event<T> windowEvent = new EventImpl<T>(event, ts);\n    +window.add(windowEvent);\n    +track(windowEvent);\n    +compactWindow();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * The callback invoked by the trigger policy.<br/>\n    +     */<br/>\n    +    @Override<br/>\n    +    public void onTrigger() {<br/>\n    +List<Event<T>> windowEvents = new ArrayList<>();<br/>\n    +List<T> expired = null;<br/>\n    +try </p>\n{\n    +    lock.lock();\n    +    /*\n    +     * scan the entire window to handle out of order events in\n    +     * the case of time based windows.\n    +     */\n    +    expireEvents(true, windowEvents);\n    +    expired = new ArrayList<>(expiredEvents);\n    +    expiredEvents.clear();\n    +}\n<p> finally </p>\n{\n    +    lock.unlock();\n    +}\n<p>    +List<T> events = new ArrayList<>();<br/>\n    +List<T> newEvents = new ArrayList<>();<br/>\n    +for (Event<T> event : windowEvents) {<br/>\n    +    events.add(event.get());<br/>\n    +    if (!prevWindowEvents.contains(event)) </p>\n{\n    +newEvents.add(event.get());\n    +    }\n<p>    +}<br/>\n    +prevWindowEvents.clear();<br/>\n    +prevWindowEvents.addAll(windowEvents);<br/>\n    +LOG.debug(\"invoking windowLifecycleListener onActivation, <span class=\"error\">&#91;{}&#93;</span> events in window.\", windowEvents.size());<br/>\n    +windowLifecycleListener.onActivation(events, newEvents, expired);<br/>\n    +triggerPolicy.reset();<br/>\n    +    }<br/>\n    +<br/>\n    +    public void shutdown() {<br/>\n    +LOG.debug(\"Shutting down WindowManager\");<br/>\n    +if (triggerPolicy != null) </p>\n{\n    +    triggerPolicy.shutdown();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * expires events that fall out of the window every<br/>\n    +     * EXPIRE_EVENTS_THRESHOLD so that the window does not grow<br/>\n    +     * too big.<br/>\n    +     */<br/>\n    +    private void compactWindow() {<br/>\n    +if (eventsSinceLastExpiry.incrementAndGet() >= EXPIRE_EVENTS_THRESHOLD) </p>\n{\n    +    expireEvents(false, null);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * feed the event to the eviction and trigger policies<br/>\n    +     * for bookkeeping and optionally firing the trigger.<br/>\n    +     */<br/>\n    +    private void track(Event<T> windowEvent) </p>\n{\n    +evictionPolicy.track(windowEvent);\n    +triggerPolicy.track(windowEvent);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Expire events from the window, using the expiration policy to check<br/>\n    +     * if the event should be evicted or not.<br/>\n    +     *<br/>\n    +     * @param fullScan  if set, will scan the entire window. if not set, will stop<br/>\n    +     *  as soon as an event not satisfying the expiration policy is found.<br/>\n    +     * @param remaining the list of remaining events in the window after expiry.<br/>\n    +     */<br/>\n    +    private void expireEvents(boolean fullScan, List<Event<T>> remaining) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We dont need the remaining list always. The `expireEvents` is also called from `compactWindow` where we dont need the result and pass null. Another way would be to pass a boolean flag to control this and return the result. The `expiredEvents` is kept as a member variable since its updated during both compaction and trigger.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625470","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625470","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625470,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:05:45Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43976803\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43976803</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/WindowedBoltExecutor.java &#8212;<br/>\n    @@ -0,0 +1,200 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.IOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.windowing.TupleWindowImpl;<br/>\n    +import backtype.storm.windowing.WindowLifecycleListener;<br/>\n    +import backtype.storm.windowing.WindowManager;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * An </p>\n{@link IWindowedBolt}\n<p> wrapper that does the windowing of tuples.<br/>\n    + */<br/>\n    +public class WindowedBoltExecutor implements IRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowedBoltExecutor.class);<br/>\n    +<br/>\n    +    private IWindowedBolt bolt;<br/>\n    +    private transient WindowedOutputCollector windowedOutputCollector;<br/>\n    +    private transient WindowLifecycleListener<Tuple> listener;<br/>\n    +    private transient WindowManager<Tuple> windowManager;<br/>\n    +<br/>\n    +    public WindowedBoltExecutor(IWindowedBolt bolt) </p>\n{\n    +this.bolt = bolt;\n    +    }\n<p>    +<br/>\n    +    private int getTopologyTimeoutMillis(Map stormConf) {<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS)) {<br/>\n    +    boolean timeOutsEnabled = (boolean) stormConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS);<br/>\n    +    if (!timeOutsEnabled) </p>\n{\n    +return Integer.MAX_VALUE;\n    +    }\n<p>    +}<br/>\n    +int timeout = 0;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)) </p>\n{\n    +    timeout = ((Number) stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)).intValue();\n    +}\n<p>    +return timeout * 1000;<br/>\n    +    }<br/>\n    +<br/>\n    +    private void ensureDurationLessThanTimeout(int duration, int timeout) {<br/>\n    +if (duration > timeout) </p>\n{\n    +    throw new IllegalArgumentException(\"Window duration (length + sliding interval) value \" + duration +\n    +       \" is more than \" + Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS +\n    +       \" value \" + timeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // TODO: add more validation<br/>\n    +    private void validate(Map stormConf, Count windowLengthCount, Duration windowLengthDuration,<br/>\n    +  Count slidingIntervalCount, Duration slidingIntervalDuration) {<br/>\n    +<br/>\n    +int topologyTimeout = getTopologyTimeoutMillis(stormConf);<br/>\n    +if (windowLengthDuration != null && slidingIntervalDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value + slidingIntervalDuration.value, topologyTimeout);\n    +}\n<p> else if (windowLengthDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value, topologyTimeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private WindowManager<Tuple> initWindowManager(WindowLifecycleListener<Tuple> lifecycleListener, Map stormConf) {<br/>\n    +WindowManager<Tuple> manager = new WindowManager<>(lifecycleListener);<br/>\n    +Duration windowLengthDuration = null;<br/>\n    +Count windowLengthCount = null;<br/>\n    +Duration slidingIntervalDuration = null;<br/>\n    +Count slidingIntervalCount = null;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)) </p>\n{\n    +    windowLengthCount = new Count(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)).intValue());\n    +}\n<p> else if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)) </p>\n{\n    +    windowLengthDuration = new Duration(\n    +    ((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)).intValue(),\n    +    TimeUnit.MILLISECONDS);\n    +}\n<p>    +<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)) </p>\n{\n    +    slidingIntervalCount = new Count(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)).intValue());\n    +}\n<p> else if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)) </p>\n{\n    +    slidingIntervalDuration = new Duration(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)).intValue(), TimeUnit.MILLISECONDS);\n    +}\n<p> else </p>\n{\n    +    // default is a sliding window of count 1\n    +    slidingIntervalCount = new Count(1);\n    +}\n<p>    +// validate<br/>\n    +validate(stormConf, windowLengthCount, windowLengthDuration,<br/>\n    + slidingIntervalCount, slidingIntervalDuration);<br/>\n    +if (windowLengthCount != null) </p>\n{\n    +    manager.setWindowLength(windowLengthCount);\n    +}\n<p> else </p>\n{\n    +    manager.setWindowLength(windowLengthDuration);\n    +}\n<p>    +if (slidingIntervalCount != null) </p>\n{\n    +    manager.setSlidingInterval(slidingIntervalCount);\n    +}\n<p> else </p>\n{\n    +    manager.setSlidingInterval(slidingIntervalDuration);\n    +}\n<p>    +return manager;<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {<br/>\n    +this.windowedOutputCollector = new WindowedOutputCollector(collector);<br/>\n    +bolt.prepare(stormConf, context, windowedOutputCollector);<br/>\n    +this.listener = newWindowLifecycleListener();<br/>\n    +this.windowManager = initWindowManager(listener, stormConf);<br/>\n    +LOG.info(\"Initialized window manager {} \", this.windowManager);<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) </p>\n{\n    +windowManager.add(input);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void cleanup() </p>\n{\n    +windowManager.shutdown();\n    +bolt.cleanup();\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +bolt.declareOutputFields(declarer);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() </p>\n{\n    +return bolt.getComponentConfiguration();\n    +    }\n<p>    +<br/>\n    +    private WindowLifecycleListener<Tuple> newWindowLifecycleListener() {<br/>\n    +return new WindowLifecycleListener<Tuple>() {<br/>\n    +    @Override<br/>\n    +    public void onExpiry(List<Tuple> tuples) {<br/>\n    +for (Tuple tuple : tuples) </p>\n{\n    +    windowedOutputCollector.ack(tuple);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void onActivation(List<Tuple> tuples, List<Tuple> newTuples, List<Tuple> expiredTuples) {<br/>\n    +windowedOutputCollector.setContext(tuples);<br/>\n    +bolt.execute(new TupleWindowImpl(tuples, newTuples, expiredTuples));<br/>\n    +newTuples.clear();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes, here the caller should clear. I think I forgot to remove this after I refactored the code a bit. Will remove this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625475","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625475","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625475,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:18:39Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r43977228\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r43977228</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/WindowManager.java &#8212;<br/>\n    @@ -0,0 +1,210 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentLinkedQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +import java.util.concurrent.locks.ReentrantLock;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * Tracks a window of events and fires </p>\n{@link WindowLifecycleListener}\n<p> callbacks<br/>\n    + * on expiry of events or activation of the window due to </p>\n{@link TriggerPolicy}\n<p>.<br/>\n    + *<br/>\n    + * @param <T> the type of event in the window.<br/>\n    + */<br/>\n    +public class WindowManager<T> implements TriggerHandler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowManager.class);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Expire old events every EXPIRE_EVENTS_THRESHOLD to<br/>\n    +     * keep the window size in check.<br/>\n    +     */<br/>\n    +    public static final int EXPIRE_EVENTS_THRESHOLD = 100;<br/>\n    +<br/>\n    +    private WindowLifecycleListener<T> windowLifecycleListener;<br/>\n    +    private ConcurrentLinkedQueue<Event<T>> window;<br/>\n    +    private EvictionPolicy<T> evictionPolicy;<br/>\n    +    private TriggerPolicy<T> triggerPolicy;<br/>\n    +    private List<T> expiredEvents;<br/>\n    +    private Set<Event<T>> prevWindowEvents;<br/>\n    +    private AtomicInteger eventsSinceLastExpiry;<br/>\n    +    private ReentrantLock lock;<br/>\n    +<br/>\n    +    public WindowManager(WindowLifecycleListener<T> lifecycleListener) </p>\n{\n    +windowLifecycleListener = lifecycleListener;\n    +window = new ConcurrentLinkedQueue<>();\n    +expiredEvents = new ArrayList<>();\n    +prevWindowEvents = new HashSet<>();\n    +eventsSinceLastExpiry = new AtomicInteger();\n    +lock = new ReentrantLock(true);\n    +    }\n<p>    +<br/>\n    +    public void setWindowLength(Count count) </p>\n{\n    +this.evictionPolicy = new CountEvictionPolicy<>(count.value);\n    +    }\n<p>    +<br/>\n    +    public void setWindowLength(Duration duration) </p>\n{\n    +this.evictionPolicy = new TimeEvictionPolicy<>(duration.value);\n    +    }\n<p>    +<br/>\n    +    public void setSlidingInterval(Count count) </p>\n{\n    +this.triggerPolicy = new CountTriggerPolicy<>(count.value, this);\n    +    }\n<p>    +<br/>\n    +    public void setSlidingInterval(Duration duration) </p>\n{\n    +this.triggerPolicy = new TimeTriggerPolicy<>(duration.value, this);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Add an event into the window, with </p>\n{@link System#currentTimeMillis()}\n<p> as<br/>\n    +     * the tracking ts.<br/>\n    +     *<br/>\n    +     * @param event the event to add<br/>\n    +     */<br/>\n    +    public void add(T event) </p>\n{\n    +add(event, System.currentTimeMillis());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Add an event into the window, with the given ts as the tracking ts.<br/>\n    +     *<br/>\n    +     * @param event the event to track<br/>\n    +     * @param ts    the timestamp<br/>\n    +     */<br/>\n    +    public void add(T event, long ts) {<br/>\n    +Event<T> windowEvent = new EventImpl<T>(event, ts);<br/>\n    +window.add(windowEvent);<br/>\n    +track(windowEvent);<br/>\n    +compactWindow();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Compaction is done to keep the window size in check, in case the trigger is defined such that unwanted events keep piling up in the window. Eg. window length = 100 and sliding interval is 1 min and the event rate is 1000 events/sec, without compaction, we will end storing upto 60,000 events whereas ideally we dont want to keep more than 100 events in the window. Similar cases can happen for other window configurations.</p>\n\n<p>    The events are stored in a `ConcurrentLinkedQueue` and onTrigger takes a snapshot of the queue and iterates over it even if elements are added meanwhile. There is locking to keep the compaction and expiry from stepping into each other. The idea was to minimize locking esp while adding events.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/153961998","html_url":"https://github.com/apache/storm/pull/855#issuecomment-153961998","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":153961998,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Mzk2MTk5OA==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:34:55Z","updated_at":"2015-11-05T05:34:55Z","author_association":"CONTRIBUTOR","body":"@harshach  Right now the behavior is such that in case of failures the events will get replayed and the results will be recomputed and there will be potentially many duplicates. I assume you mean providing apis to save the partial results of computation in some persistent storage and support for retrieving the state. Along with this we also need to checkpoint the evaluated state of the window in the background and use this info to avoid re-evaluating window when events get replayed. This will help in reducing the duplicates. Since its more involved work, I will raise separate jiras to track this and will add it incrementally. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/153961998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625480","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625480","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625480,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:34:56Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-153961998\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-153961998</a></p>\n\n<p>    @harshach  Right now the behavior is such that in case of failures the events will get replayed and the results will be recomputed and there will be potentially many duplicates. I assume you mean providing apis to save the partial results of computation in some persistent storage and support for retrieving the state. Along with this we also need to checkpoint the evaluated state of the window in the background and use this info to avoid re-evaluating window when events get replayed. This will help in reducing the duplicates. Since its more involved work, I will raise separate jiras to track this and will add it incrementally. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/153962977","html_url":"https://github.com/apache/storm/pull/855#issuecomment-153962977","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":153962977,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Mzk2Mjk3Nw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:45:00Z","updated_at":"2015-11-05T05:45:00Z","author_association":"CONTRIBUTOR","body":"@haohui Thanks for the feedback and yes your points are valid. We will incrementally add a state store for partial results and the window state and reduce window re-evaluation during replay. However, I am not sure if the tuples in window should spill over to a persistent store. I think we should rely on storm's acking mechanism to replay the events and expect that the spouts can reliable replay the events from a persistent store (e.g. kafka). This is consistent with storm's idea of not persisting in-transit tuples anywhere.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/153962977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625483","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625483","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625483,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:45:02Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-153962977\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-153962977</a></p>\n\n<p>    @haohui Thanks for the feedback and yes your points are valid. We will incrementally add a state store for partial results and the window state and reduce window re-evaluation during replay. However, I am not sure if the tuples in window should spill over to a persistent store. I think we should rely on storm's acking mechanism to replay the events and expect that the spouts can reliable replay the events from a persistent store (e.g. kafka). This is consistent with storm's idea of not persisting in-transit tuples anywhere.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/153963681","html_url":"https://github.com/apache/storm/pull/855#issuecomment-153963681","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":153963681,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Mzk2MzY4MQ==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:49:35Z","updated_at":"2015-11-05T05:52:49Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan my comment was regarding state storage like @haohui pointed out. Yes we can do this in follow-up jira.\n\non follow-up to your comment we should rely on storm acking for replaying events. But for longer windows that can't fit in-memory we should be using persistent storage.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/153963681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625487","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625487","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625487,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T05:49:36Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-153963681\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-153963681</a></p>\n\n<p>    @arunmahadevan my comment was regarding state storage like @haohui pointed out. Yes we can do this in follow-up jira.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/153972196","html_url":"https://github.com/apache/storm/pull/855#issuecomment-153972196","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":153972196,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Mzk3MjE5Ng==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T06:50:26Z","updated_at":"2015-11-05T06:50:26Z","author_association":"CONTRIBUTOR","body":"@harshach Storing tuples in a persistent store would mean we don't rely completely on storm's acking mechanism and build an independent logic which could complicate things. To start with we can limit the max window size to limit the memory. We can track the tuple store for windowing in a separate jira.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/153972196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625491","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625491","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625491,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T06:50:27Z","updated_at":"2025-01-24T14:11:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-153972196\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-153972196</a></p>\n\n<p>    @harshach Storing tuples in a persistent store would mean we don't rely completely on storm's acking mechanism and build an independent logic which could complicate things. To start with we can limit the max window size to limit the memory. We can track the tuple store for windowing in a separate jira.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626694","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626694","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626694,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY2OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T09:40:11Z","updated_at":"2025-01-24T14:12:11Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-1167","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626959","html_url":"https://github.com/apache/storm/issues/5014#issuecomment-2612626959","issue_url":"https://api.github.com/repos/apache/storm/issues/5014","id":2612626959,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY5NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T09:43:18Z","updated_at":"2025-01-24T14:12:18Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-1167","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154008535","html_url":"https://github.com/apache/storm/pull/855#issuecomment-154008535","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":154008535,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDAwODUzNQ==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T09:46:06Z","updated_at":"2015-11-05T09:46:06Z","author_association":"CONTRIBUTOR","body":"@harshach created subtasks to track items discussed\nhttps://issues.apache.org/jira/browse/STORM-1175 \nhttps://issues.apache.org/jira/browse/STORM-1176 \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154008535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625494","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625494","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625494,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T09:46:07Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-154008535\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-154008535</a></p>\n\n<p>    @harshach created subtasks to track items discussed<br/>\n    <a href=\"https://issues.apache.org/jira/browse/STORM-1175\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1175</a> <br/>\n    <a href=\"https://issues.apache.org/jira/browse/STORM-1176\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1176</a> </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612620944","html_url":"https://github.com/apache/storm/issues/4977#issuecomment-2612620944","issue_url":"https://api.github.com/repos/apache/storm/issues/4977","id":2612620944,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjA5NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T10:01:18Z","updated_at":"2025-01-24T14:09:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gv\">gv</a>:</i>\n<p>thank u for ur support.i overcome the error.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612620944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625499","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625499","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625499,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU0OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T13:10:09Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44009081\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44009081</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/Event.java &#8212;<br/>\n    @@ -0,0 +1,41 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +/**<br/>\n    + * An event is a wrapper object that gets stored in the window.<br/>\n    + *<br/>\n    + * @param <T> the type of the object thats wrapped. E.g Tuple<br/>\n    + */<br/>\n    +interface Event<T> {<br/>\n    +    /**<br/>\n    +     * The event timestamp in millis. This could be the time<br/>\n    +     * when the source generated the tuple or if not the time<br/>\n    +     * when the tuple was received by a bolt.<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    long getTs();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we rename getTs as getTimestamp?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625505","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625505","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625505,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T13:11:04Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44009146\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44009146</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/EventImpl.java &#8212;<br/>\n    @@ -0,0 +1,38 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +class EventImpl<T> implements Event<T> {<br/>\n    +    private final T event;<br/>\n    +    private long ts;<br/>\n    +<br/>\n    +    EventImpl(T event, long ts) </p>\n{\n    +this.event = event;\n    +this.ts = ts;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public long getTs() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we rename getTs as getTimestamp?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625510","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625510","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625510,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T13:33:56Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44011007\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44011007</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/Event.java &#8212;<br/>\n    @@ -0,0 +1,41 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +/**<br/>\n    + * An event is a wrapper object that gets stored in the window.<br/>\n    + *<br/>\n    + * @param <T> the type of the object thats wrapped. E.g Tuple<br/>\n    + */<br/>\n    +interface Event<T> {<br/>\n    +    /**<br/>\n    +     * The event timestamp in millis. This could be the time<br/>\n    +     * when the source generated the tuple or if not the time<br/>\n    +     * when the tuple was received by a bolt.<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    long getTs();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I used `getTs` since its short and easy to type. Yes, I think `getTimestamp` is easier to read so will rename it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625511","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625511","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:27:03Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44016430\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44016430</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,180 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public abstract class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private final transient Map<String, Object> windowConfiguration;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a count value for count based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Count {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Count(int value) </p>\n{\n    +    this.value = value;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a Time duration for time based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Duration {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I don't see a lot of value in having a Count or a Duration class, Count especially.  They either wrap holding an int that is quickly unwrapped, or converting a timeUnit to millis, which too is quickly unwrapped.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625514","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625514","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625514,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:28:06Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44016552\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44016552</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,180 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public abstract class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private final transient Map<String, Object> windowConfiguration;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a count value for count based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Count {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Count(int value) </p>\n{\n    +    this.value = value;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a Time duration for time based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Duration {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I can see that they allow you to have withWindowLength method names for both, but that does not feel like it justifies adding in an extra class.  Although this is very minor, I am OK if you really want to leave it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625518","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625518","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625518,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:28:56Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44016654\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44016654</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/base/BaseWindowedBolt.java &#8212;<br/>\n    @@ -0,0 +1,180 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology.base;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IWindowedBolt;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.windowing.TupleWindow;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public abstract class BaseWindowedBolt implements IWindowedBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(BaseWindowedBolt.class);<br/>\n    +<br/>\n    +    private final transient Map<String, Object> windowConfiguration;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a count value for count based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Count {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Count(int value) </p>\n{\n    +    this.value = value;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Holds a Time duration for time based windows and sliding intervals.<br/>\n    +     */<br/>\n    +    public static class Duration {<br/>\n    +public final int value;<br/>\n    +<br/>\n    +public Duration(int value, TimeUnit timeUnit) </p>\n{\n    +    this.value = (int) timeUnit.toMillis(value);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected BaseWindowedBolt() </p>\n{\n    +windowConfiguration = new HashMap<>();\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withWindowLength(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Count count) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT, count.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    private BaseWindowedBolt withSlidingInterval(Duration duration) </p>\n{\n    +windowConfiguration.put(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS, duration.value);\n    +return this;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Tuple count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Tuple count and time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the number of tuples in the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Time duration and count based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the number of tuples after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Count slidingInterval) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Time duration based sliding window configuration.<br/>\n    +     *<br/>\n    +     * @param windowLength    the time duration of the window<br/>\n    +     * @param slidingInterval the time duration after which the window slides<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Duration windowLength, Duration slidingInterval) {    +return withWindowLength(windowLength).withSlidingInterval(slidingInterval);    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * A tuple count based window that slides with every incoming tuple.<br/>\n    +     *<br/>\n    +     * @param windowLength the number of tuples in the window<br/>\n    +     */<br/>\n    +    public BaseWindowedBolt withWindow(Count windowLength) </p>\n{\n    +return withWindowLength(windowLength).withSlidingInterval(new Count(1));\n    +    }\n<p>    +<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625524","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625524","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625524,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:31:38Z","updated_at":"2025-01-24T14:11:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44016958\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44016958</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/EvictionPolicy.java &#8212;<br/>\n    @@ -0,0 +1,37 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +/**<br/>\n    + * Eviction policy tracks events and decides whether<br/>\n    + * an event should be evicted from the window or not.<br/>\n    + *<br/>\n    + * @param <T> the type of event that is tracked.<br/>\n    + */<br/>\n    +public interface EvictionPolicy<T> {<br/>\n    +    /**<br/>\n    +     * returns true if the event should be evicted from the window.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Could we make this a proper javadoc with an `@return` and `@param`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625530","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625530","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625530,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:34:47Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44017330\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44017330</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/TupleWindow.java &#8212;<br/>\n    @@ -0,0 +1,26 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +<br/>\n    +/**<br/>\n    + * A </p>\n{@link Window}\n<p> that contains </p>\n{@link Tuple}\n<p> objects.<br/>\n    + */<br/>\n    +public interface TupleWindow extends Window<Tuple> {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I'm not sure this adds a lot, this is like Count, I'm not really a huge fan of adding extra classes that don't do a lot, but this is also very minor, so if you want to keep it I am fine with it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625536","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625536","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625536,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:35:30Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44017408\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44017408</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/WindowManager.java &#8212;<br/>\n    @@ -0,0 +1,213 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625538","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625538","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625538,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:37:32Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44017656\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44017656</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/WindowManager.java &#8212;<br/>\n    @@ -0,0 +1,213 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentLinkedQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicInteger;<br/>\n    +import java.util.concurrent.locks.ReentrantLock;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * Tracks a window of events and fires </p>\n{@link WindowLifecycleListener}\n<p> callbacks<br/>\n    + * on expiry of events or activation of the window due to </p>\n{@link TriggerPolicy}\n<p>.<br/>\n    + *<br/>\n    + * @param <T> the type of event in the window.<br/>\n    + */<br/>\n    +public class WindowManager<T> implements TriggerHandler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowManager.class);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Expire old events every EXPIRE_EVENTS_THRESHOLD to<br/>\n    +     * keep the window size in check.<br/>\n    +     */<br/>\n    +    public static final int EXPIRE_EVENTS_THRESHOLD = 100;<br/>\n    +<br/>\n    +    private WindowLifecycleListener<T> windowLifecycleListener;<br/>\n    +    private ConcurrentLinkedQueue<Event<T>> window;<br/>\n    +    private EvictionPolicy<T> evictionPolicy;<br/>\n    +    private TriggerPolicy<T> triggerPolicy;<br/>\n    +    private List<T> expiredEvents;<br/>\n    +    private Set<Event<T>> prevWindowEvents;<br/>\n    +    private AtomicInteger eventsSinceLastExpiry;<br/>\n    +    private ReentrantLock lock;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    A number of these look like they could be marked as final.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625544","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625544","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625544,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:49:51Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44019125\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44019125</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/TimeTriggerPolicy.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +import java.util.concurrent.Executors;<br/>\n    +import java.util.concurrent.ScheduledExecutorService;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +/**<br/>\n    + * Invokes </p>\n{@link TriggerHandler#onTrigger()}\n<p> after the duration.<br/>\n    + */<br/>\n    +public class TimeTriggerPolicy<T> implements TriggerPolicy<T> {<br/>\n    +    private long duration;<br/>\n    +    private final TriggerHandler handler;<br/>\n    +    private final ScheduledExecutorService executor;<br/>\n    +<br/>\n    +    public TimeTriggerPolicy(long millis, TriggerHandler handler) </p>\n{\n    +this.duration = millis;\n    +this.handler = handler;\n    +this.executor = Executors.newSingleThreadScheduledExecutor();\n    +start();\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void track(Event<T> event) </p>\n{\n    +// NOOP\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void reset() {    +// NOOP    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void shutdown() {<br/>\n    +executor.shutdown();<br/>\n    +try {<br/>\n    +    if (!executor.awaitTermination(2, TimeUnit.SECONDS)) </p>\n{\n    +executor.shutdownNow();\n    +    }\n<p>    +} catch (InterruptedException ie) </p>\n{\n    +    executor.shutdownNow();\n    +    Thread.currentThread().interrupt();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private void start() {<br/>\n    +Runnable task = new Runnable() {<br/>\n    +    @Override<br/>\n    +    public void run() {<br/>\n    +handler.onTrigger();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I think we need some sort of error handling here, that can pass any exceptions from the WondowedBolt back to the WindowedBoltExecutor so we can exit the worker and fail fast on unhandled exceptions.  As it stands now the exception is just eaten.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625550","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625550","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625550,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T14:57:55Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r44020085\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r44020085</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/topology/WindowedBoltExecutor.java &#8212;<br/>\n    @@ -0,0 +1,224 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.topology;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.IOutputCollector;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.windowing.TupleWindowImpl;<br/>\n    +import backtype.storm.windowing.WindowLifecycleListener;<br/>\n    +import backtype.storm.windowing.WindowManager;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Count;<br/>\n    +import static backtype.storm.topology.base.BaseWindowedBolt.Duration;<br/>\n    +<br/>\n    +/**<br/>\n    + * An </p>\n{@link IWindowedBolt}\n<p> wrapper that does the windowing of tuples.<br/>\n    + */<br/>\n    +public class WindowedBoltExecutor implements IRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(WindowedBoltExecutor.class);<br/>\n    +<br/>\n    +    private IWindowedBolt bolt;<br/>\n    +    private transient WindowedOutputCollector windowedOutputCollector;<br/>\n    +    private transient WindowLifecycleListener<Tuple> listener;<br/>\n    +    private transient WindowManager<Tuple> windowManager;<br/>\n    +<br/>\n    +    public WindowedBoltExecutor(IWindowedBolt bolt) </p>\n{\n    +this.bolt = bolt;\n    +    }\n<p>    +<br/>\n    +    private int getTopologyTimeoutMillis(Map stormConf) {<br/>\n    +if (stormConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS) != null) {<br/>\n    +    boolean timeOutsEnabled = (boolean) stormConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS);<br/>\n    +    if (!timeOutsEnabled) </p>\n{\n    +return Integer.MAX_VALUE;\n    +    }\n<p>    +}<br/>\n    +int timeout = 0;<br/>\n    +if (stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS) != null) </p>\n{\n    +    timeout = ((Number) stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)).intValue();\n    +}\n<p>    +return timeout * 1000;<br/>\n    +    }<br/>\n    +<br/>\n    +    private int getMaxSpoutPending(Map stormConf) {<br/>\n    +int maxPending = Integer.MAX_VALUE;<br/>\n    +if (stormConf.get(Config.TOPOLOGY_MAX_SPOUT_PENDING) != null) </p>\n{\n    +    maxPending = ((Number) stormConf.get(Config.TOPOLOGY_MAX_SPOUT_PENDING)).intValue();\n    +}\n<p>    +return maxPending;<br/>\n    +    }<br/>\n    +<br/>\n    +    private void ensureDurationLessThanTimeout(int duration, int timeout) {<br/>\n    +if (duration > timeout) </p>\n{\n    +    throw new IllegalArgumentException(\"Window duration (length + sliding interval) value \" + duration +\n    +       \" is more than \" + Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS +\n    +       \" value \" + timeout);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private void ensureCountLessThanMaxPending(int count, int maxPending) {<br/>\n    +if (count > maxPending) </p>\n{\n    +    throw new IllegalArgumentException(\"Window count (length + sliding interval) value \" + count +\n    +       \" is more than \" + Config.TOPOLOGY_MAX_SPOUT_PENDING +\n    +       \" value \" + maxPending);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private void validate(Map stormConf, Count windowLengthCount, Duration windowLengthDuration,<br/>\n    +  Count slidingIntervalCount, Duration slidingIntervalDuration) {<br/>\n    +<br/>\n    +int topologyTimeout = getTopologyTimeoutMillis(stormConf);<br/>\n    +int maxSpoutPending = getMaxSpoutPending(stormConf);<br/>\n    +if (windowLengthDuration != null && slidingIntervalDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value + slidingIntervalDuration.value, topologyTimeout);\n    +}\n<p> else if (windowLengthDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(windowLengthDuration.value, topologyTimeout);\n    +}\n<p> else if (slidingIntervalDuration != null) </p>\n{\n    +    ensureDurationLessThanTimeout(slidingIntervalDuration.value, topologyTimeout);\n    +}\n<p>    +<br/>\n    +if (windowLengthCount != null && slidingIntervalCount != null) </p>\n{\n    +    ensureCountLessThanMaxPending(windowLengthCount.value + slidingIntervalCount.value, maxSpoutPending);\n    +}\n<p> else if (windowLengthCount != null) </p>\n{\n    +    ensureCountLessThanMaxPending(windowLengthCount.value, maxSpoutPending);\n    +}\n<p> else if (slidingIntervalCount != null) </p>\n{\n    +    ensureCountLessThanMaxPending(slidingIntervalCount.value, maxSpoutPending);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private WindowManager<Tuple> initWindowManager(WindowLifecycleListener<Tuple> lifecycleListener, Map stormConf) {<br/>\n    +WindowManager<Tuple> manager = new WindowManager<>(lifecycleListener);<br/>\n    +Duration windowLengthDuration = null;<br/>\n    +Count windowLengthCount = null;<br/>\n    +Duration slidingIntervalDuration = null;<br/>\n    +Count slidingIntervalCount = null;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)) </p>\n{\n    +    windowLengthCount = new Count(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)).intValue());\n    +}\n<p> else if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)) </p>\n{\n    +    windowLengthDuration = new Duration(\n    +    ((Number) stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)).intValue(),\n    +    TimeUnit.MILLISECONDS);\n    +}\n<p>    +<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)) </p>\n{\n    +    slidingIntervalCount = new Count(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)).intValue());\n    +}\n<p> else if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)) </p>\n{\n    +    slidingIntervalDuration = new Duration(((Number) stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)).intValue(), TimeUnit.MILLISECONDS);\n    +}\n<p> else </p>\n{\n    +    // default is a sliding window of count 1\n    +    slidingIntervalCount = new Count(1);\n    +}\n<p>    +// validate<br/>\n    +validate(stormConf, windowLengthCount, windowLengthDuration,<br/>\n    + slidingIntervalCount, slidingIntervalDuration);<br/>\n    +if (windowLengthCount != null) </p>\n{\n    +    manager.setWindowLength(windowLengthCount);\n    +}\n<p> else </p>\n{\n    +    manager.setWindowLength(windowLengthDuration);\n    +}\n<p>    +if (slidingIntervalCount != null) </p>\n{\n    +    manager.setSlidingInterval(slidingIntervalCount);\n    +}\n<p> else </p>\n{\n    +    manager.setSlidingInterval(slidingIntervalDuration);\n    +}\n<p>    +return manager;<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {<br/>\n    +this.windowedOutputCollector = new WindowedOutputCollector(collector);<br/>\n    +bolt.prepare(stormConf, context, windowedOutputCollector);<br/>\n    +this.listener = newWindowLifecycleListener();<br/>\n    +this.windowManager = initWindowManager(listener, stormConf);<br/>\n    +LOG.debug(\"Initialized window manager {} \", this.windowManager);<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +windowManager.add(input);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    WindowManager supports both `add(Tuple)` and `add(Tuple, timestamp)` the second API is tested, but it is never called.  Is this just for testing?  If so it is a real shame, because I know of many cases where a we want to window on the data at event creation time, not at the time it arrived at the bolt.  Additionally there are a few places in the code that refer to dealing with late data, but I don't see how anything can be \"late\" or out of order without having access to that second method.  If it is intended to just be a test API please file a follow on JIRA so that we can expose it to end users in some way and test with out-of-order data.  If it was not intended to be a test method, please provide a way to set it, preferably through an API in IWindowedBolt.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154085743","html_url":"https://github.com/apache/storm/pull/855#issuecomment-154085743","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":154085743,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDA4NTc0Mw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T15:02:54Z","updated_at":"2015-11-05T15:02:54Z","author_association":"CONTRIBUTOR","body":"I when through the code in more detail and I had a few minor nits, but also a few issues that I am concerned about.\n\nPrimarily error handling when using a separate thread for timed expiry. But fundamentally I am concerned that the windowing functionality assumes that arrival time to the bolt is the only time that people will want to do windowed intervals over, which is just not true.\n\nThis potentially opens up a whole can of worms the more I think about it, and I am not sure that this is the best way to do windowing at scale if we want to be able to support late data, out of order arrival, and event creation time as a part of the window.\n\nAdditionally I would like to see more documentation about how to use this functionality, not just a simple example.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154085743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625555","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625555","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625555,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T15:02:55Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-154085743\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-154085743</a></p>\n\n<p>    I when through the code in more detail and I had a few minor nits, but also a few issues that I am concerned about.</p>\n\n<p>    Primarily error handling when using a separate thread for timed expiry. But fundamentally I am concerned that the windowing functionality assumes that arrival time to the bolt is the only time that people will want to do windowed intervals over, which is just not true.</p>\n\n<p>    This potentially opens up a whole can of worms the more I think about it, and I am not sure that this is the best way to do windowing at scale if we want to be able to support late data, out of order arrival, and event creation time as a part of the window.</p>\n\n<p>    Additionally I would like to see more documentation about how to use this functionality, not just a simple example.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627086","html_url":"https://github.com/apache/storm/issues/5015#issuecomment-2612627086","issue_url":"https://api.github.com/repos/apache/storm/issues/5015","id":2612627086,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjcwODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T15:22:13Z","updated_at":"2025-01-24T14:12:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user schonfeld opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/861\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/861</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1177\" title=\"Build fails because DISCLAIMER file is missing\" class=\"issue-link\" data-issue-key=\"STORM-1177\"><del>STORM-1177</del></a> Build fails because DISCLAIMER file is missing</p>\n\n<p>    Removing the requirement for the `DISCLAIMER` file</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/schonfeld/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/schonfeld/storm</a> dont-require-disclaimer-file</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/861.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/861.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #861</p>\n\n<hr />\n<p>commit ec4bc2221dd7d70b8099b0b1dd9245eee45b25ad<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-11-05T15:20:06Z</p>\n\n<p>    dont require disclaimer file in build</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154092352","html_url":"https://github.com/apache/storm/pull/855#issuecomment-154092352","issue_url":"https://api.github.com/repos/apache/storm/issues/855","id":154092352,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDA5MjM1Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T15:24:06Z","updated_at":"2015-11-05T15:24:06Z","author_association":"CONTRIBUTOR","body":"As a note on the late data and out of order processing please take a look at the Google Could Data Flow API.  They have been dealing with these types of use cases for a long time, and have developed an API, although a bit ugly, that really captures the essence of this type of a problem.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154092352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625564","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625564","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625564,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU1NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T15:24:38Z","updated_at":"2025-01-24T14:11:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#issuecomment-154092352\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#issuecomment-154092352</a></p>\n\n<p>    As a note on the late data and out of order processing please take a look at the Google Could Data Flow API.  They have been dealing with these types of use cases for a long time, and have developed an API, although a bit ugly, that really captures the essence of this type of a problem.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154118076","html_url":"https://github.com/apache/storm/pull/849#issuecomment-154118076","issue_url":"https://api.github.com/repos/apache/storm/issues/849","id":154118076,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDExODA3Ng==","user":{"login":"tgravescs","id":4563792,"node_id":"MDQ6VXNlcjQ1NjM3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/4563792?v=4","gravatar_id":"","url":"https://api.github.com/users/tgravescs","html_url":"https://github.com/tgravescs","followers_url":"https://api.github.com/users/tgravescs/followers","following_url":"https://api.github.com/users/tgravescs/following{/other_user}","gists_url":"https://api.github.com/users/tgravescs/gists{/gist_id}","starred_url":"https://api.github.com/users/tgravescs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tgravescs/subscriptions","organizations_url":"https://api.github.com/users/tgravescs/orgs","repos_url":"https://api.github.com/users/tgravescs/repos","events_url":"https://api.github.com/users/tgravescs/events{/privacy}","received_events_url":"https://api.github.com/users/tgravescs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:46:46Z","updated_at":"2015-11-05T16:46:46Z","author_association":"NONE","body":"I'd way we can convert this to java later when we do the merge.  \n1) the directory is already configurable I don't follow what you are asking\n2) I don't have windows box on here to test but since its all configuration and user writes the scripts I think it will work on windows already. If not perhaps we can file follow on for folks who have access to test windows to fix.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154118076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623171","html_url":"https://github.com/apache/storm/issues/4993#issuecomment-2612623171","issue_url":"https://api.github.com/repos/apache/storm/issues/4993","id":2612623171,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjMxNzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:46:48Z","updated_at":"2025-01-24T14:10:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user tgravescs commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/849#issuecomment-154118076\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/849#issuecomment-154118076</a></p>\n\n<p>    I'd way we can convert this to java later when we do the merge.  <br/>\n    1) the directory is already configurable I don't follow what you are asking<br/>\n    2) I don't have windows box on here to test but since its all configuration and user writes the scripts I think it will work on windows already. If not perhaps we can file follow on for folks who have access to test windows to fix.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154120525","html_url":"https://github.com/apache/storm/pull/848#issuecomment-154120525","issue_url":"https://api.github.com/repos/apache/storm/issues/848","id":154120525,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyMDUyNQ==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:53:25Z","updated_at":"2015-11-05T16:53:25Z","author_association":"NONE","body":"Hello @harshach @Parth-Brahmbhatt @HeartSaVioR , since this a quite a big feature, more eyes would be very helpful. Could you guys have a look at it? Thanks in advance.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154120525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573970","html_url":"https://github.com/apache/storm/issues/4740#issuecomment-2612573970","issue_url":"https://api.github.com/repos/apache/storm/issues/4740","id":2612573970,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzM5NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:53:26Z","updated_at":"2025-01-24T13:48:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/848#issuecomment-154120525\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/848#issuecomment-154120525</a></p>\n\n<p>    Hello @harshach @Parth-Brahmbhatt @HeartSaVioR , since this a quite a big feature, more eyes would be very helpful. Could you guys have a look at it? Thanks in advance.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623802","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623802","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623802,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:54:43Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#discussion_r44036412\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#discussion_r44036412</a></p>\n\n<p>    &#8212; Diff: docs/documentation/storm-metrics-profiling-internal-actions.md &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +# Storm Metrics for Profiling Various Storm Internal Actions<br/>\n    +<br/>\n    +With the addition of these metrics, Storm users can collect, view, and analyze the performance of various internal actions.  The actions that are profiled include thrift rpc calls and http quests within the storm daemons. For instance, in the Storm Nimbus daemon, the following thrift calls defined in the Nimbus$Iface are profiled:<br/>\n    +<br/>\n    +- submitTopology<br/>\n    +- submitTopologyWithOpts<br/>\n    +- killTopology<br/>\n    +- killTopologyWithOpts<br/>\n    +- activate<br/>\n    +- deactivate<br/>\n    +- rebalance<br/>\n    +- setLogConfig<br/>\n    +- getLogConfig<br/>\n    +<br/>\n    +Various HTTP GET and POST requests are marked for profiling as well such as the GET and POST requests for the Storm UI daemon (ui/core.cj)<br/>\n    +To implement these metrics the following packages are used: <br/>\n    +- io.dropwizard.metrics<br/>\n    +- metrics-clojure<br/>\n    +<br/>\n    +## How it works<br/>\n    +<br/>\n    +By using packages io.dropwizard.metrics and metrics-clojure (clojure wrapper for the metrics Java API), we can mark functions to profile by declaring (defmeter num-some-func-calls) and then adding the (mark! num-some-func-calls) to where the function is invoked. For example:<br/>\n    +<br/>\n    +    (defmeter num-some-func-calls)<br/>\n    +    (defn some-func <span class=\"error\">&#91;args&#93;</span><br/>\n    +(mark! num-some-func-calls)<br/>\n    +(body))<br/>\n    +<br/>\n    +What essentially the mark! API call does is increment a counter that represents how many times a certain action occured.  For instantanous measurements user can use gauges.  For example: <br/>\n    +<br/>\n    +    (defgauge nimbus:num-supervisors<br/>\n    + (fn [] (.size (.supervisors (:storm-cluster-state nimbus) nil))))<br/>\n    + <br/>\n    +The above example will get the number of supervisors in the cluster.  This metric is not accumlative like one previously discussed.<br/>\n    +<br/>\n    +A metrics reporting server needs to also be activated to collect the metrics. You can do this by calling the following function:<br/>\n    +<br/>\n    +    (defn start-metrics-reporters []<br/>\n    +(jmx/start (jmx/reporter {})))<br/>\n    +<br/>\n    +## How to collect the metrics<br/>\n    +<br/>\n    +Metrics can be reported via JMX or HTTP.  A user can use JConsole or VisualVM to connect to the jvm process and view the stats.<br/>\n    +<br/>\n    +To view the metrics in a GUI use VisualVM or JConsole.  Screenshot of using VisualVm for metrics: <br/>\n    +<br/>\n    +!<span class=\"error\">&#91;alt text&#93;</span>(<a href=\"https://dropwizard.github.io/metrics/3.1.0/_images/metrics-visualvm.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://dropwizard.github.io/metrics/3.1.0/_images/metrics-visualvm.png</a>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    we include a native image</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623809","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623809","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623809,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:56:17Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#discussion_r44036638\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#discussion_r44036638</a></p>\n\n<p>    &#8212; Diff: storm-core/pom.xml &#8212;<br/>\n    @@ -602,6 +612,42 @@<br/>\n       <pattern>org.eclipse.jetty</pattern><br/>\n       <shadedPattern>org.apache.storm.shade.org.eclipse.jetty</shadedPattern><br/>\n     </relocation><br/>\n    +<relocation><br/>\n    +    <pattern>com.codahale.metrics</pattern><br/>\n    +    <shadedPattern>org.apache.storm.shade.com.codahale.metrics</shadedPattern><br/>\n    +</relocation><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Will include a comment in the documentation to state that reporting via JMX is supported at this time since shading may prevent other plugins from working correctly.  Will file a follow-up jira to investigate whether supporting additional plugins is need</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154121467","html_url":"https://github.com/apache/storm/pull/850#issuecomment-154121467","issue_url":"https://api.github.com/repos/apache/storm/issues/850","id":154121467,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyMTQ2Nw==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:56:35Z","updated_at":"2015-11-05T16:56:35Z","author_association":"CONTRIBUTOR","body":"@kishorvpatil will add the two metrics\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154121467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623816","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623816","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623816,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:56:36Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#issuecomment-154121467\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#issuecomment-154121467</a></p>\n\n<p>    @kishorvpatil will add the two metrics</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154122052","html_url":"https://github.com/apache/storm/pull/850#issuecomment-154122052","issue_url":"https://api.github.com/repos/apache/storm/issues/850","id":154122052,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyMjA1Mg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:58:33Z","updated_at":"2015-11-05T16:58:33Z","author_association":"CONTRIBUTOR","body":"@revans2 and @kishorvpatil thank you for your reviews.  I just made pushed another commit that hopefully address all of your comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154122052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623820","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623820","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623820,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T16:58:34Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#issuecomment-154122052\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#issuecomment-154122052</a></p>\n\n<p>    @revans2 and @kishorvpatil thank you for your reviews.  I just made pushed another commit that hopefully address all of your comments</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623829","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623829","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623829,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:07:53Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#discussion_r44038365\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#discussion_r44038365</a></p>\n\n<p>    &#8212; Diff: docs/documentation/storm-metrics-profiling-internal-actions.md &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +# Storm Metrics for Profiling Various Storm Internal Actions<br/>\n    +<br/>\n    +With the addition of these metrics, Storm users can collect, view, and analyze the performance of various internal actions.  The actions that are profiled include thrift rpc calls and http quests within the storm daemons. For instance, in the Storm Nimbus daemon, the following thrift calls defined in the Nimbus$Iface are profiled:<br/>\n    +<br/>\n    +- submitTopology<br/>\n    +- submitTopologyWithOpts<br/>\n    +- killTopology<br/>\n    +- killTopologyWithOpts<br/>\n    +- activate<br/>\n    +- deactivate<br/>\n    +- rebalance<br/>\n    +- setLogConfig<br/>\n    +- getLogConfig<br/>\n    +<br/>\n    +Various HTTP GET and POST requests are marked for profiling as well such as the GET and POST requests for the Storm UI daemon (ui/core.cj)<br/>\n    +To implement these metrics the following packages are used: <br/>\n    +- io.dropwizard.metrics<br/>\n    +- metrics-clojure<br/>\n    +<br/>\n    +## How it works<br/>\n    +<br/>\n    +By using packages io.dropwizard.metrics and metrics-clojure (clojure wrapper for the metrics Java API), we can mark functions to profile by declaring (defmeter num-some-func-calls) and then adding the (mark! num-some-func-calls) to where the function is invoked. For example:<br/>\n    +<br/>\n    +    (defmeter num-some-func-calls)<br/>\n    +    (defn some-func <span class=\"error\">&#91;args&#93;</span><br/>\n    +(mark! num-some-func-calls)<br/>\n    +(body))<br/>\n    +<br/>\n    +What essentially the mark! API call does is increment a counter that represents how many times a certain action occured.  For instantanous measurements user can use gauges.  For example: <br/>\n    +<br/>\n    +    (defgauge nimbus:num-supervisors<br/>\n    + (fn [] (.size (.supervisors (:storm-cluster-state nimbus) nil))))<br/>\n    + <br/>\n    +The above example will get the number of supervisors in the cluster.  This metric is not accumlative like one previously discussed.<br/>\n    +<br/>\n    +A metrics reporting server needs to also be activated to collect the metrics. You can do this by calling the following function:<br/>\n    +<br/>\n    +    (defn start-metrics-reporters []<br/>\n    +(jmx/start (jmx/reporter {})))<br/>\n    +<br/>\n    +## How to collect the metrics<br/>\n    +<br/>\n    +Metrics can be reported via JMX or HTTP.  A user can use JConsole or VisualVM to connect to the jvm process and view the stats.<br/>\n    +<br/>\n    +To view the metrics in a GUI use VisualVM or JConsole.  Screenshot of using VisualVm for metrics: <br/>\n    +<br/>\n    +!<span class=\"error\">&#91;Viewing metrics with VisualVM&#93;</span>(images/viewing_metrics_with_VisualVM.png)<br/>\n    +<br/>\n    +For detailed information regarding how to collect the metrics please reference: <br/>\n    +<br/>\n    +<a href=\"https://dropwizard.github.io/metrics/3.1.0/getting-started/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://dropwizard.github.io/metrics/3.1.0/getting-started/</a><br/>\n    +<br/>\n    +If you want use JMX and view metrics through JConsole or VisualVM, remember launch JVM processes your want to profile with the correct JMX configurations.  For example in Storm you would add the following to conf/storm.yaml<br/>\n    +<br/>\n    +    nimbus.childopts: \"-Xmx1024m -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=3333  -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    ui.childopts: \"-Xmx768m -Dcom.sun.management.jmxremote.port=3334 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    logviewer.childopts: \"-Xmx128m -Dcom.sun.management.jmxremote.port=3335 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    drpc.childopts: \"-Xmx768m -Dcom.sun.management.jmxremote.port=3336 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +   <br/>\n    +    supervisor.childopts: \"-Xmx256m -Dcom.sun.management.jmxremote.port=3337 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +<br/>\n    +### Please Note:<br/>\n    +Since we shade all of the packages we use, additional plugins for collecting metrics might not work at this time.  Currently collecting the metrics via JMX is supported. We can file a follow up Jira to investigate whether we need to support other plugins for collecting the metrics.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Instead of saying we can file a follow up JIRA could we just file one and remove that pert?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154124771","html_url":"https://github.com/apache/storm/pull/850#issuecomment-154124771","issue_url":"https://api.github.com/repos/apache/storm/issues/850","id":154124771,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNDc3MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:08:44Z","updated_at":"2015-11-05T17:08:44Z","author_association":"CONTRIBUTOR","body":"One minor doc change and then I am +1.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154124771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623832","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623832","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623832,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:08:46Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#issuecomment-154124771\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#issuecomment-154124771</a></p>\n\n<p>    One minor doc change and then I am +1.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623839","html_url":"https://github.com/apache/storm/issues/4996#issuecomment-2612623839","issue_url":"https://api.github.com/repos/apache/storm/issues/4996","id":2612623839,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjM4Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:10:54Z","updated_at":"2025-01-24T14:10:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/850#discussion_r44038817\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/850#discussion_r44038817</a></p>\n\n<p>    &#8212; Diff: docs/documentation/storm-metrics-profiling-internal-actions.md &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +# Storm Metrics for Profiling Various Storm Internal Actions<br/>\n    +<br/>\n    +With the addition of these metrics, Storm users can collect, view, and analyze the performance of various internal actions.  The actions that are profiled include thrift rpc calls and http quests within the storm daemons. For instance, in the Storm Nimbus daemon, the following thrift calls defined in the Nimbus$Iface are profiled:<br/>\n    +<br/>\n    +- submitTopology<br/>\n    +- submitTopologyWithOpts<br/>\n    +- killTopology<br/>\n    +- killTopologyWithOpts<br/>\n    +- activate<br/>\n    +- deactivate<br/>\n    +- rebalance<br/>\n    +- setLogConfig<br/>\n    +- getLogConfig<br/>\n    +<br/>\n    +Various HTTP GET and POST requests are marked for profiling as well such as the GET and POST requests for the Storm UI daemon (ui/core.cj)<br/>\n    +To implement these metrics the following packages are used: <br/>\n    +- io.dropwizard.metrics<br/>\n    +- metrics-clojure<br/>\n    +<br/>\n    +## How it works<br/>\n    +<br/>\n    +By using packages io.dropwizard.metrics and metrics-clojure (clojure wrapper for the metrics Java API), we can mark functions to profile by declaring (defmeter num-some-func-calls) and then adding the (mark! num-some-func-calls) to where the function is invoked. For example:<br/>\n    +<br/>\n    +    (defmeter num-some-func-calls)<br/>\n    +    (defn some-func <span class=\"error\">&#91;args&#93;</span><br/>\n    +(mark! num-some-func-calls)<br/>\n    +(body))<br/>\n    +<br/>\n    +What essentially the mark! API call does is increment a counter that represents how many times a certain action occured.  For instantanous measurements user can use gauges.  For example: <br/>\n    +<br/>\n    +    (defgauge nimbus:num-supervisors<br/>\n    + (fn [] (.size (.supervisors (:storm-cluster-state nimbus) nil))))<br/>\n    + <br/>\n    +The above example will get the number of supervisors in the cluster.  This metric is not accumlative like one previously discussed.<br/>\n    +<br/>\n    +A metrics reporting server needs to also be activated to collect the metrics. You can do this by calling the following function:<br/>\n    +<br/>\n    +    (defn start-metrics-reporters []<br/>\n    +(jmx/start (jmx/reporter {})))<br/>\n    +<br/>\n    +## How to collect the metrics<br/>\n    +<br/>\n    +Metrics can be reported via JMX or HTTP.  A user can use JConsole or VisualVM to connect to the jvm process and view the stats.<br/>\n    +<br/>\n    +To view the metrics in a GUI use VisualVM or JConsole.  Screenshot of using VisualVm for metrics: <br/>\n    +<br/>\n    +!<span class=\"error\">&#91;Viewing metrics with VisualVM&#93;</span>(images/viewing_metrics_with_VisualVM.png)<br/>\n    +<br/>\n    +For detailed information regarding how to collect the metrics please reference: <br/>\n    +<br/>\n    +<a href=\"https://dropwizard.github.io/metrics/3.1.0/getting-started/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://dropwizard.github.io/metrics/3.1.0/getting-started/</a><br/>\n    +<br/>\n    +If you want use JMX and view metrics through JConsole or VisualVM, remember launch JVM processes your want to profile with the correct JMX configurations.  For example in Storm you would add the following to conf/storm.yaml<br/>\n    +<br/>\n    +    nimbus.childopts: \"-Xmx1024m -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=3333  -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    ui.childopts: \"-Xmx768m -Dcom.sun.management.jmxremote.port=3334 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    logviewer.childopts: \"-Xmx128m -Dcom.sun.management.jmxremote.port=3335 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +    <br/>\n    +    drpc.childopts: \"-Xmx768m -Dcom.sun.management.jmxremote.port=3336 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +   <br/>\n    +    supervisor.childopts: \"-Xmx256m -Dcom.sun.management.jmxremote.port=3337 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"<br/>\n    +<br/>\n    +### Please Note:<br/>\n    +Since we shade all of the packages we use, additional plugins for collecting metrics might not work at this time.  Currently collecting the metrics via JMX is supported. We can file a follow up Jira to investigate whether we need to support other plugins for collecting the metrics.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    sure</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154125882","html_url":"https://github.com/apache/storm/pull/857#issuecomment-154125882","issue_url":"https://api.github.com/repos/apache/storm/issues/857","id":154125882,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNTg4Mg==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:13:17Z","updated_at":"2015-11-05T17:13:17Z","author_association":"NONE","body":"Hi @kishorvpatil shall we merge this now? Since it is a bug fix.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154125882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624762","html_url":"https://github.com/apache/storm/issues/5001#issuecomment-2612624762","issue_url":"https://api.github.com/repos/apache/storm/issues/5001","id":2612624762,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQ3NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:13:17Z","updated_at":"2025-01-24T14:11:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/857#issuecomment-154125882\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/857#issuecomment-154125882</a></p>\n\n<p>    Hi @kishorvpatil shall we merge this now? Since it is a bug fix.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126288","html_url":"https://github.com/apache/storm/pull/859#issuecomment-154126288","issue_url":"https://api.github.com/repos/apache/storm/issues/859","id":154126288,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNjI4OA==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:14:50Z","updated_at":"2015-11-05T17:14:50Z","author_association":"CONTRIBUTOR","body":"+1 @zhuoliu  thanks for fixing this\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626079","html_url":"https://github.com/apache/storm/issues/5008#issuecomment-2612626079","issue_url":"https://api.github.com/repos/apache/storm/issues/5008","id":2612626079,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjYwNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:14:53Z","updated_at":"2025-01-24T14:11:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/859#issuecomment-154126288\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/859#issuecomment-154126288</a></p>\n\n<p>    +1 @zhuoliu  thanks for fixing this</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126726","html_url":"https://github.com/apache/storm/pull/667#issuecomment-154126726","issue_url":"https://api.github.com/repos/apache/storm/issues/667","id":154126726,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNjcyNg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:16:37Z","updated_at":"2015-11-05T17:16:37Z","author_association":"CONTRIBUTOR","body":"any updates on this PR?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126854","html_url":"https://github.com/apache/storm/pull/825#issuecomment-154126854","issue_url":"https://api.github.com/repos/apache/storm/issues/825","id":154126854,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNjg1NA==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:17:13Z","updated_at":"2015-11-05T17:17:13Z","author_association":"CONTRIBUTOR","body":"It doesn't look like `ConfigValidation` has changed functionally at all. Is that correct?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154126854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621550","html_url":"https://github.com/apache/storm/issues/4981#issuecomment-2612621550","issue_url":"https://api.github.com/repos/apache/storm/issues/4981","id":2612621550,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE1NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:17:14Z","updated_at":"2025-01-24T14:09:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/825#issuecomment-154126854\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/825#issuecomment-154126854</a></p>\n\n<p>    It doesn't look like `ConfigValidation` has changed functionally at all. Is that correct?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154127266","html_url":"https://github.com/apache/storm/pull/849#issuecomment-154127266","issue_url":"https://api.github.com/repos/apache/storm/issues/849","id":154127266,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNzI2Ng==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:18:56Z","updated_at":"2015-11-05T17:18:56Z","author_association":"CONTRIBUTOR","body":"@longdafeng it might be nice in the future to have some \"standard\" health check scripts come with storm, but honestly even with just Linux, it is difficult to come up with something that will work on all Linux distros, or even on all boxes with the same distro.\n\nThe things I see as potential issues would be the network card fell back to 100Mbit.  But that does not work if you are running on old 100Mbit hardware, or what if for some reason you are using infiniband, with a 100Mbit control path.  Or if you are using bonded NICs?  There are too many variables in my opinion to really make a lot of these generic.\n\nThe default directory is `$STORM_HOME/healthcheck` already.  Directories are usually relative to $STORM_HOME, but there have been a few cases where we needed to make it explicit.  @zhuoliu you did a lot of work around resolving relative paths in configs.  could you take a look at this and see if we need to change anything to make this work so it is always relative to `$STORM_HOME`/?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154127266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623178","html_url":"https://github.com/apache/storm/issues/4993#issuecomment-2612623178","issue_url":"https://api.github.com/repos/apache/storm/issues/4993","id":2612623178,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjMxNzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:18:58Z","updated_at":"2025-01-24T14:10:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/849#issuecomment-154127266\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/849#issuecomment-154127266</a></p>\n\n<p>    @longdafeng it might be nice in the future to have some \"standard\" health check scripts come with storm, but honestly even with just Linux, it is difficult to come up with something that will work on all Linux distros, or even on all boxes with the same distro.</p>\n\n<p>    The things I see as potential issues would be the network card fell back to 100Mbit.  But that does not work if you are running on old 100Mbit hardware, or what if for some reason you are using infiniband, with a 100Mbit control path.  Or if you are using bonded NICs?  There are too many variables in my opinion to really make a lot of these generic.</p>\n\n<p>    The default directory is `$STORM_HOME/healthcheck` already.  Directories are usually relative to $STORM_HOME, but there have been a few cases where we needed to make it explicit.  @zhuoliu you did a lot of work around resolving relative paths in configs.  could you take a look at this and see if we need to change anything to make this work so it is always relative to `$STORM_HOME`/?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154127417","html_url":"https://github.com/apache/storm/pull/825#issuecomment-154127417","issue_url":"https://api.github.com/repos/apache/storm/issues/825","id":154127417,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyNzQxNw==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:19:36Z","updated_at":"2015-11-05T17:19:36Z","author_association":"CONTRIBUTOR","body":"@knusbaum the functionality of ConfigValidation has not changed, but this PR adds support for validating configs submitted with a topology.  This allows storm to do early detection on whether the configs submitted with a topology are valid\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154127417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621554","html_url":"https://github.com/apache/storm/issues/4981#issuecomment-2612621554","issue_url":"https://api.github.com/repos/apache/storm/issues/4981","id":2612621554,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE1NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:19:37Z","updated_at":"2025-01-24T14:09:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/825#issuecomment-154127417\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/825#issuecomment-154127417</a></p>\n\n<p>    @knusbaum the functionality of ConfigValidation has not changed, but this PR adds support for validating configs submitted with a topology.  This allows storm to do early detection on whether the configs submitted with a topology are valid</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154128003","html_url":"https://github.com/apache/storm/pull/825#issuecomment-154128003","issue_url":"https://api.github.com/repos/apache/storm/issues/825","id":154128003,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyODAwMw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:22:11Z","updated_at":"2015-11-05T17:22:11Z","author_association":"CONTRIBUTOR","body":"+1 looks good to me.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154128003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621558","html_url":"https://github.com/apache/storm/issues/4981#issuecomment-2612621558","issue_url":"https://api.github.com/repos/apache/storm/issues/4981","id":2612621558,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE1NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:22:12Z","updated_at":"2025-01-24T14:09:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/825#issuecomment-154128003\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/825#issuecomment-154128003</a></p>\n\n<p>    +1 looks good to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154128292","html_url":"https://github.com/apache/storm/pull/825#issuecomment-154128292","issue_url":"https://api.github.com/repos/apache/storm/issues/825","id":154128292,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEyODI5Mg==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:23:05Z","updated_at":"2015-11-05T17:23:50Z","author_association":"CONTRIBUTOR","body":"@jerrypeng I guess I'm wondering why all those changes are in `ConfigValidation`. \nI'm +1, but in the future I'd rather have changes like that in a separate pull request for a separate jira, like 'remove checked exceptions' or something, since the changes don't really have anything to do with this issue.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154128292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621569","html_url":"https://github.com/apache/storm/issues/4981#issuecomment-2612621569","issue_url":"https://api.github.com/repos/apache/storm/issues/4981","id":2612621569,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE1Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:23:05Z","updated_at":"2025-01-24T14:09:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/825#issuecomment-154128292\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/825#issuecomment-154128292</a></p>\n\n<p>    I guess I'm wondering why all those changes are in `ConfigValidation`. <br/>\n    I'm +1, but I'd rather have changes like that in a separate pull request for a separate jira, like 'remove checked exceptions' or something.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154130951","html_url":"https://github.com/apache/storm/pull/849#issuecomment-154130951","issue_url":"https://api.github.com/repos/apache/storm/issues/849","id":154130951,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEzMDk1MQ==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:29:42Z","updated_at":"2015-11-05T17:32:21Z","author_association":"NONE","body":"Hi @revans2 and @tgravescs ,\n\nFor checking all cases of relative/absolute directory for healthcheck, I would suggest to add the following function in config.clj, then healthcheck.clj can all this function to get the directory.\n\n```\n(defn absolute-healthcheck-dir [conf]\n  (let [storm-home (System/getProperty \"storm.home\")\n        path (conf STORM-HEALTH-CHECK-DIR)]\n    (if path\n      (if (is-absolute-path? path) path (str storm-home file-path-separator path))\n      (str storm-home file-path-separator “healthcheck”))))\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154130951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623184","html_url":"https://github.com/apache/storm/issues/4993#issuecomment-2612623184","issue_url":"https://api.github.com/repos/apache/storm/issues/4993","id":2612623184,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjMxODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:29:43Z","updated_at":"2025-01-24T14:10:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/849#issuecomment-154130951\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/849#issuecomment-154130951</a></p>\n\n<p>    Hi @revans2 and @tgravescs ,</p>\n\n<p>    For checking all cases of relative/absolute directory for healthcheck, I would suggest to add the following function in config.clj, then healthcheck.clj can all this function to get the directory.</p>\n\n<p>    (defn absolute-healthcheck-dir <span class=\"error\">&#91;conf&#93;</span><br/>\n      (let [storm-home (System/getProperty \"storm.home\")<br/>\n    path (conf STORM-HEALTH-CHECK-DIR)]<br/>\n(if path<br/>\n  (if (is-absolute-path? path) path (str storm-home file-path-separator path))<br/>\n  (str storm-home file-path-separator “healthcheck”))))</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612623184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621574","html_url":"https://github.com/apache/storm/issues/4981#issuecomment-2612621574","issue_url":"https://api.github.com/repos/apache/storm/issues/4981","id":2612621574,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE1NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:31:38Z","updated_at":"2025-01-24T14:09:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/825\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/825</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573974","html_url":"https://github.com/apache/storm/issues/4740#issuecomment-2612573974","issue_url":"https://api.github.com/repos/apache/storm/issues/4740","id":2612573974,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzM5NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:38:56Z","updated_at":"2025-01-24T13:48:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/848#discussion_r44042359\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/848#discussion_r44042359</a></p>\n\n<p>    &#8212; Diff: docs/documentation/ui-rest-api.md &#8212;<br/>\n    @@ -172,6 +172,27 @@ Sample response:<br/>\n     }<br/>\n     ```</p>\n\n<p>    +### /api/v1/history/summary (GET)<br/>\n    +<br/>\n    +Returns a list of topology ID submitted by the current user.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The URL has /history in it but the documentation does not say if it will return all the topologies ever submitted (a true history) or only the current snapshot. If its former we should update the documentation , if its later we should chane the URL to /api/v1/topologIds.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573976","html_url":"https://github.com/apache/storm/issues/4740#issuecomment-2612573976","issue_url":"https://api.github.com/repos/apache/storm/issues/4740","id":2612573976,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzM5NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:40:01Z","updated_at":"2025-01-24T13:48:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/848#discussion_r44042484\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/848#discussion_r44042484</a></p>\n\n<p>    &#8212; Diff: docs/documentation/ui-rest-api.md &#8212;<br/>\n    @@ -172,6 +172,27 @@ Sample response:<br/>\n     }<br/>\n     ```</p>\n\n<p>    +### /api/v1/history/summary (GET)<br/>\n    +<br/>\n    +Returns a list of topology ID submitted by the current user.<br/>\n    +<br/>\n    +Response fields:<br/>\n    +<br/>\n    +|Field  |Value | Description|<br/>\n    +|---\t|---\t|---<br/>\n    +|topo-history| List| List of Topologies' IDs|<br/>\n    +<br/>\n    +Sample response:<br/>\n    +<br/>\n    +```json<br/>\n    +{<br/>\n    +    \"topo-history\":[<br/>\n    +</p>\n{\"host\":\"wc6-1-1446571009\"}\n<p>,<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I am confused if this is suppose to return a list of TopologyIDs why does the resposse have a list of map with host name as key?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154136188","html_url":"https://github.com/apache/storm/pull/854#issuecomment-154136188","issue_url":"https://api.github.com/repos/apache/storm/issues/854","id":154136188,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEzNjE4OA==","user":{"login":"priyank5485","id":5192436,"node_id":"MDQ6VXNlcjUxOTI0MzY=","avatar_url":"https://avatars.githubusercontent.com/u/5192436?v=4","gravatar_id":"","url":"https://api.github.com/users/priyank5485","html_url":"https://github.com/priyank5485","followers_url":"https://api.github.com/users/priyank5485/followers","following_url":"https://api.github.com/users/priyank5485/following{/other_user}","gists_url":"https://api.github.com/users/priyank5485/gists{/gist_id}","starred_url":"https://api.github.com/users/priyank5485/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/priyank5485/subscriptions","organizations_url":"https://api.github.com/users/priyank5485/orgs","repos_url":"https://api.github.com/users/priyank5485/repos","events_url":"https://api.github.com/users/priyank5485/events{/privacy}","received_events_url":"https://api.github.com/users/priyank5485/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:50:27Z","updated_at":"2015-11-05T17:50:27Z","author_association":"CONTRIBUTOR","body":"@revans2 @Parth-Brahmbhatt @jerrypeng @harshach  Thanks all for the feedback.  Other than the changes here there are some commits to apache/master after creation of this PR which added some more apis in UI using topology id making this PR unmergeable. I will  sort all of that out and update the PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154136188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612614001","html_url":"https://github.com/apache/storm/issues/4967#issuecomment-2612614001","issue_url":"https://api.github.com/repos/apache/storm/issues/4967","id":2612614001,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTQwMDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:50:29Z","updated_at":"2025-01-24T14:06:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user priyank5485 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/854#issuecomment-154136188\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/854#issuecomment-154136188</a></p>\n\n<p>    @revans2 @Parth-Brahmbhatt @jerrypeng @harshach  Thanks all for the feedback.  Other than the changes here there are some commits to apache/master after creation of this PR which added some more apis in UI using topology id making this PR unmergeable. I will  sort all of that out and update the PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612614001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154136334","html_url":"https://github.com/apache/storm/pull/848#issuecomment-154136334","issue_url":"https://api.github.com/repos/apache/storm/issues/848","id":154136334,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDEzNjMzNA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:51:02Z","updated_at":"2015-11-05T17:51:02Z","author_association":"CONTRIBUTOR","body":"@zhuoliu Thank you for this feature. This is really great and going to help lot of users in debugging topologies. I'll add my reviews. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154136334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573980","html_url":"https://github.com/apache/storm/issues/4740#issuecomment-2612573980","issue_url":"https://api.github.com/repos/apache/storm/issues/4740","id":2612573980,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzM5ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T17:51:04Z","updated_at":"2025-01-24T13:48:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/848#issuecomment-154136334\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/848#issuecomment-154136334</a></p>\n\n<p>    @zhuoliu Thank you for this feature. This is really great and going to help lot of users in debugging topologies. I'll add my reviews. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612573980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154140434","html_url":"https://github.com/apache/storm/pull/845#issuecomment-154140434","issue_url":"https://api.github.com/repos/apache/storm/issues/845","id":154140434,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDE0MDQzNA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T18:07:24Z","updated_at":"2015-11-05T18:07:24Z","author_association":"MEMBER","body":"Please disregard my earlier statement that this PR requires IP Clearance. After further discussion and research, I'm now of the opinion that it doesn't.\n\nI also feel that I could have phrased things better in my initial comment. When I said:\n\n> \"Based on the associated JIRA and from looking at the commits this pull request contains, this needs to go through the IP Clearance process.\"\n\nIt would have been better to say:\n\n> \"Based on the associated JIRA and from looking at the commits this pull request contains, _I think this might_ need to go through the IP Clearance process.\"\n\nMy intent was to initiate a discussion, not block anything or impose unnecessary process, which is why didn't cast a -1 vote.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154140434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154146847","html_url":"https://github.com/apache/storm/pull/860#issuecomment-154146847","issue_url":"https://api.github.com/repos/apache/storm/issues/860","id":154146847,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDE0Njg0Nw==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T18:33:58Z","updated_at":"2015-11-05T18:33:58Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154146847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624061","html_url":"https://github.com/apache/storm/issues/4997#issuecomment-2612624061","issue_url":"https://api.github.com/repos/apache/storm/issues/4997","id":2612624061,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjQwNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T18:33:59Z","updated_at":"2025-01-24T14:11:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/860#issuecomment-154146847\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/860#issuecomment-154146847</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612624061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/154151451","html_url":"https://github.com/apache/storm/pull/854#issuecomment-154151451","issue_url":"https://api.github.com/repos/apache/storm/issues/854","id":154151451,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDE1MTQ1MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T18:53:06Z","updated_at":"2015-11-05T18:53:06Z","author_association":"CONTRIBUTOR","body":"@priyank5485 thanks for doing this.  I think it is going to make the UI much more usable.  Essentially giving us perma-links to a topology. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/154151451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612614006","html_url":"https://github.com/apache/storm/issues/4967#issuecomment-2612614006","issue_url":"https://api.github.com/repos/apache/storm/issues/4967","id":2612614006,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTQwMDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-05T18:53:08Z","updated_at":"2025-01-24T14:06:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/854#issuecomment-154151451\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/854#issuecomment-154151451</a></p>\n\n<p>    @priyank5485 thanks for doing this.  I think it is going to make the UI much more usable.  Essentially giving us perma-links to a topology. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612614006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]