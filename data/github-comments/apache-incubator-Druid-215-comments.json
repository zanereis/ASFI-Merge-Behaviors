[{"url":"https://api.github.com/repos/apache/druid/issues/comments/453342543","html_url":"https://github.com/apache/druid/pull/6835#issuecomment-453342543","issue_url":"https://api.github.com/repos/apache/druid/issues/6835","id":453342543,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM0MjU0Mw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T02:01:01Z","updated_at":"2019-01-11T02:01:01Z","author_association":"MEMBER","body":"It might be worth updating versions in kafka-indexing-service pom and integration tests `setup.sh` to test against this version the docs are recommending to use, but probably not a big deal.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453342543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453345431","html_url":"https://github.com/apache/druid/pull/6835#issuecomment-453345431","issue_url":"https://api.github.com/repos/apache/druid/issues/6835","id":453345431,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM0NTQzMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T02:12:57Z","updated_at":"2019-01-11T02:12:57Z","author_association":"CONTRIBUTOR","body":"@clintropolis https://github.com/apache/incubator-druid/pull/6846, let's see how that runs","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453345431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453355753","html_url":"https://github.com/apache/druid/pull/6836#issuecomment-453355753","issue_url":"https://api.github.com/repos/apache/druid/issues/6836","id":453355753,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM1NTc1Mw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T02:51:54Z","updated_at":"2019-01-11T02:51:54Z","author_association":"MEMBER","body":"@mohammadjkhan you can keep the PR and push more commits to complete it, there is no need to close it and open a new one.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453355753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453362638","html_url":"https://github.com/apache/druid/pull/6804#issuecomment-453362638","issue_url":"https://api.github.com/repos/apache/druid/issues/6804","id":453362638,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM2MjYzOA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T03:18:25Z","updated_at":"2019-01-11T03:18:25Z","author_association":"MEMBER","body":"teamcity failures appear unrelated","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453362638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453364081","html_url":"https://github.com/apache/druid/pull/6804#issuecomment-453364081","issue_url":"https://api.github.com/repos/apache/druid/issues/6804","id":453364081,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM2NDA4MQ==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T03:23:54Z","updated_at":"2019-01-11T03:23:54Z","author_association":"NONE","body":"> teamcity failures appear unrelated\r\n\r\nYeah, I don't know how to rebuild that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453364081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453378394","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-453378394","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":453378394,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM3ODM5NA==","user":{"login":"gaodayue","id":1198446,"node_id":"MDQ6VXNlcjExOTg0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1198446?v=4","gravatar_id":"","url":"https://api.github.com/users/gaodayue","html_url":"https://github.com/gaodayue","followers_url":"https://api.github.com/users/gaodayue/followers","following_url":"https://api.github.com/users/gaodayue/following{/other_user}","gists_url":"https://api.github.com/users/gaodayue/gists{/gist_id}","starred_url":"https://api.github.com/users/gaodayue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaodayue/subscriptions","organizations_url":"https://api.github.com/users/gaodayue/orgs","repos_url":"https://api.github.com/users/gaodayue/repos","events_url":"https://api.github.com/users/gaodayue/events{/privacy}","received_events_url":"https://api.github.com/users/gaodayue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T04:54:45Z","updated_at":"2019-01-11T04:54:45Z","author_association":"CONTRIBUTOR","body":"Thanks @gianm and @jon-wei for reviewing. I have replied to all your comments and I think the only one needing further discussion is about the request log format. Once we reach consensus on that, I'll go implement and rebase to master again.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453378394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453385522","html_url":"https://github.com/apache/druid/issues/6715#issuecomment-453385522","issue_url":"https://api.github.com/repos/apache/druid/issues/6715","id":453385522,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM4NTUyMg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T05:44:41Z","updated_at":"2019-01-11T05:45:30Z","author_association":"CONTRIBUTOR","body":"We'd love something like this in order to keep a longer range of data at coarser granularity in a second copy of our data sources. Does anyone have any workarounds for implementing something like that today? I guess we can use batch ingestion with the ingestSegment firehose to do this, but we still have to create something that periodically starts batch ingestion.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453385522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453412069","html_url":"https://github.com/apache/druid/issues/6457#issuecomment-453412069","issue_url":"https://api.github.com/repos/apache/druid/issues/6457","id":453412069,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQxMjA2OQ==","user":{"login":"jason-heo","id":7676291,"node_id":"MDQ6VXNlcjc2NzYyOTE=","avatar_url":"https://avatars.githubusercontent.com/u/7676291?v=4","gravatar_id":"","url":"https://api.github.com/users/jason-heo","html_url":"https://github.com/jason-heo","followers_url":"https://api.github.com/users/jason-heo/followers","following_url":"https://api.github.com/users/jason-heo/following{/other_user}","gists_url":"https://api.github.com/users/jason-heo/gists{/gist_id}","starred_url":"https://api.github.com/users/jason-heo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jason-heo/subscriptions","organizations_url":"https://api.github.com/users/jason-heo/orgs","repos_url":"https://api.github.com/users/jason-heo/repos","events_url":"https://api.github.com/users/jason-heo/events{/privacy}","received_events_url":"https://api.github.com/users/jason-heo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T07:41:23Z","updated_at":"2019-01-11T07:41:23Z","author_association":"NONE","body":"@weijietong \r\n\r\nReally sorry to hear that.\r\n\r\n> At Alipay, we achieved great query performance thorough this way.\r\n\r\nI'm wondering if you have any plan open this feature publically so that one can continue your contribution.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453412069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453413891","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-453413891","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":453413891,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQxMzg5MQ==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T07:46:49Z","updated_at":"2019-01-11T07:46:49Z","author_association":"MEMBER","body":"@drcrallen I have not read your PR code. FYI, you can tweak the `CoordinatorDynamicConfig#maxSegmentsToMove` if you want to reduce the running time of rebalance.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453413891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453415569","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-453415569","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":453415569,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQxNTU2OQ==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T07:52:17Z","updated_at":"2019-01-11T07:52:27Z","author_association":"MEMBER","body":"> Was using a \"cachingCost\" balancer and multithreading it not enough to speed up the coordinator for your needs?\r\n\r\n@gianm did you mean increase `CoordinatorDynamicConfig#balancerComputeThreads` ? Actually, when using `cachingCost`, this param take no effect, it just works for `CostBalancerStrategy`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453415569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453423501","html_url":"https://github.com/apache/druid/issues/6809#issuecomment-453423501","issue_url":"https://api.github.com/repos/apache/druid/issues/6809","id":453423501,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQyMzUwMQ==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T08:16:57Z","updated_at":"2019-01-11T08:21:06Z","author_association":"NONE","body":"I find it. The problem is \"org.apache.kafka.common.network.Selector - Connection with localhost/127.0.0.1 disconnected\", it means connecting to kafka broker failed. it was solved by modify $KAFKA_HOME/config/server.proerties:\r\n**advertised.listeners=PLAINTEXT://xxx.xxx.xxx.xxx:9092**,\r\nthen restart kafka service\r\n\r\nthis problem and #6806, #6819 are the same.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453423501/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453425124","html_url":"https://github.com/apache/druid/issues/6806#issuecomment-453425124","issue_url":"https://api.github.com/repos/apache/druid/issues/6806","id":453425124,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQyNTEyNA==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T08:21:50Z","updated_at":"2019-01-11T08:21:50Z","author_association":"NONE","body":"The problem is that peon task cannot connect","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453425124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453426135","html_url":"https://github.com/apache/druid/issues/6817#issuecomment-453426135","issue_url":"https://api.github.com/repos/apache/druid/issues/6817","id":453426135,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQyNjEzNQ==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T08:25:01Z","updated_at":"2019-01-11T08:25:31Z","author_association":"NONE","body":"    <Appenders>\r\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\r\n            <PatternLayout pattern=\"%d{ISO8601} %p [%t] %c - %m%n\"/>\r\n        </Console>\r\n       \r\n//OPEN ALL DEBUG LEVEL\r\n>  <File name=\"log\" target=\"${DRUID_HOME}/log/*.log\" append=\"false\">\r\n>             <PatternLayout pattern=\"%d{ISO8601} %p [%t] %c - %m%n\"/>\r\n>         </File>\r\n\r\n        <RollingFile name=\"RollingFileInfo\" fileName=\"${DRUID_HOME}/logs/*.log\"\r\n             filePattern=\"${DRUID_HOME}/log/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log\">\r\n             <ThresholdFilter level=\"all\" onMatch=\"ACCEPT\" onMismatch=\"DENY\"/>\r\n             <PatternLayout pattern=\"[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n\"/>\r\n             <Policies>\r\n                 <TimeBasedTriggeringPolicy/>\r\n                 <SizeBasedTriggeringPolicy size=\"100 MB\"/>\r\n             </Policies>\r\n       </RollingFile>\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453426135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453439026","html_url":"https://github.com/apache/druid/issues/4385#issuecomment-453439026","issue_url":"https://api.github.com/repos/apache/druid/issues/4385","id":453439026,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQzOTAyNg==","user":{"login":"wangjian2019","id":7106303,"node_id":"MDQ6VXNlcjcxMDYzMDM=","avatar_url":"https://avatars.githubusercontent.com/u/7106303?v=4","gravatar_id":"","url":"https://api.github.com/users/wangjian2019","html_url":"https://github.com/wangjian2019","followers_url":"https://api.github.com/users/wangjian2019/followers","following_url":"https://api.github.com/users/wangjian2019/following{/other_user}","gists_url":"https://api.github.com/users/wangjian2019/gists{/gist_id}","starred_url":"https://api.github.com/users/wangjian2019/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangjian2019/subscriptions","organizations_url":"https://api.github.com/users/wangjian2019/orgs","repos_url":"https://api.github.com/users/wangjian2019/repos","events_url":"https://api.github.com/users/wangjian2019/events{/privacy}","received_events_url":"https://api.github.com/users/wangjian2019/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T09:01:10Z","updated_at":"2019-01-11T09:01:10Z","author_association":"NONE","body":"druid.processing.buffer.sizeBytes=268435456  it works","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453439026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453474450","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-453474450","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":453474450,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQ3NDQ1MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T10:37:48Z","updated_at":"2019-01-11T10:37:48Z","author_association":"MEMBER","body":"Charles, unfortunately I still don't understand what you are talking about. Before there were segment id strings with underscores inside them, and now there are `SegmentId` objects with fields. If anything, there is more structure now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453474450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453482482","html_url":"https://github.com/apache/druid/issues/6823#issuecomment-453482482","issue_url":"https://api.github.com/repos/apache/druid/issues/6823","id":453482482,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzQ4MjQ4Mg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T11:03:21Z","updated_at":"2019-01-11T13:12:18Z","author_association":"MEMBER","body":"An extensible enum pattern could be used.\r\n```java\r\ninterface CacheKeyId {\r\n  byte getId();\r\n}\r\n\r\nenum UpstreamCacheKeyId implements CacheKeyId {\r\n  ...\r\n  RESERVED_1((byte) 200),\r\n  ...\r\n  RESERVED_50((byte) 250)\r\n}\r\n```\r\n\r\nExtensions are responsible for using ids from the reserved range.\r\n\r\nAnother option is UTF-8 style, special byte for ids from private extensions:\r\n```java\r\nenum CacheKeyId {\r\n  ...\r\n  EXTENSION(-1)\r\n}\r\n```\r\nThen extensions need to use two-byte identifier, the first byte is `EXTENSION.id`, and then their custom id.\r\n\r\nMore approaches are possible\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453482482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453578971","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-453578971","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":453578971,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzU3ODk3MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T16:41:54Z","updated_at":"2019-01-11T16:41:54Z","author_association":"CONTRIBUTOR","body":"Hi @QiuMM, what problem is this solving? I am wondering if the underlying issue is also solved by #6742.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453578971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453598077","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-453598077","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":453598077,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzU5ODA3Nw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T17:41:54Z","updated_at":"2019-01-11T17:44:11Z","author_association":"CONTRIBUTOR","body":"👍 \r\n\r\nI am submitting my vote after a cursory review, mainly because of the author. Disclaimer, we also do work together.\r\n\r\n@gianm has architected and developed significant components to Druid including the indexing service, SQL support, groupBy v2, expressions, and scan query, all of which have been changes as large as this one and all of which have worked near flawlessly in production, all the while unlocking key future features that will take Druid to the next level. He is also a key architect (along with major contributions from others of course) on other major features including Druid's security framework, revamped batch ingestion, improved histogram support, system tables, greatly improved docs, and much more. I can't name another active committer with anywhere near the same level of contribution and track record. That is enough validation for my vote.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453598077/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453605063","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-453605063","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":453605063,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYwNTA2Mw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T18:04:45Z","updated_at":"2019-01-11T18:07:42Z","author_association":"MEMBER","body":"@gianm the coordinator need to know server inventory info when start to load/drop segments. In large cluster, coordinator may start to run with incomplete server inventory view if we don't await the initialization(this may take a few minutes in large cluster).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453605063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453612589","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-453612589","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":453612589,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYxMjU4OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T18:30:04Z","updated_at":"2019-01-11T18:30:04Z","author_association":"CONTRIBUTOR","body":"What do you think about doing something similar to #6742 on the coordinator side? Aesthetically, the idea would be that if something (broker, etc) needs a synced-up view in order to behave correctly, then it should wait for it (and actually wait indefinitely, not just 1 minute).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453612589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453615466","html_url":"https://github.com/apache/druid/issues/6157#issuecomment-453615466","issue_url":"https://api.github.com/repos/apache/druid/issues/6157","id":453615466,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYxNTQ2Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T18:39:52Z","updated_at":"2019-01-11T18:39:52Z","author_association":"CONTRIBUTOR","body":"Should be fixed by #6496 when that is done.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453615466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453616185","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-453616185","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":453616185,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYxNjE4NQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T18:42:13Z","updated_at":"2019-01-11T18:42:13Z","author_association":"CONTRIBUTOR","body":"@drcrallen thanks for doing this!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453616185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453618635","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-453618635","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":453618635,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYxODYzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T18:50:14Z","updated_at":"2019-01-11T18:50:14Z","author_association":"CONTRIBUTOR","body":"Ha, thanks @fjy for the vote of confidence. I need to copy and paste that into a LinkedIn reference.\r\n\r\nI am still looking forward to a robust discussion. I updated the \"Proposed change\" section with some more high level details in an effort to make the proposed change more clear without a need to study the code.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453618635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453638872","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-453638872","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":453638872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzYzODg3Mg==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T19:58:53Z","updated_at":"2019-01-11T19:58:53Z","author_association":"CONTRIBUTOR","body":"@drcrallen Why not add this as a new balancer strategy? Which takes a configurable no of historical nodes in consideration. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453638872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453652696","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-453652696","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":453652696,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzY1MjY5Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T20:51:13Z","updated_at":"2019-01-11T20:51:13Z","author_association":"CONTRIBUTOR","body":"> @gianm did you mean increase CoordinatorDynamicConfig#balancerComputeThreads ? Actually, when using cachingCost, this param take no effect, it just works for CostBalancerStrategy.\r\n\r\nI did mean that, and I didn't know it didn't affect the cachingCost strategy.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453652696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453654127","html_url":"https://github.com/apache/druid/pull/6775#issuecomment-453654127","issue_url":"https://api.github.com/repos/apache/druid/issues/6775","id":453654127,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzY1NDEyNw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T20:57:13Z","updated_at":"2019-01-11T20:57:13Z","author_association":"MEMBER","body":"Do you have any numbers to compare the differences in segment load throughput of this approach compared to existing single threaded approach? Would make it easier to :+1: this PR I think.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453654127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453689392","html_url":"https://github.com/apache/druid/pull/6828#issuecomment-453689392","issue_url":"https://api.github.com/repos/apache/druid/issues/6828","id":453689392,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzY4OTM5Mg==","user":{"login":"ankit0811","id":12939079,"node_id":"MDQ6VXNlcjEyOTM5MDc5","avatar_url":"https://avatars.githubusercontent.com/u/12939079?v=4","gravatar_id":"","url":"https://api.github.com/users/ankit0811","html_url":"https://github.com/ankit0811","followers_url":"https://api.github.com/users/ankit0811/followers","following_url":"https://api.github.com/users/ankit0811/following{/other_user}","gists_url":"https://api.github.com/users/ankit0811/gists{/gist_id}","starred_url":"https://api.github.com/users/ankit0811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankit0811/subscriptions","organizations_url":"https://api.github.com/users/ankit0811/orgs","repos_url":"https://api.github.com/users/ankit0811/repos","events_url":"https://api.github.com/users/ankit0811/events{/privacy}","received_events_url":"https://api.github.com/users/ankit0811/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T23:27:10Z","updated_at":"2019-01-11T23:27:10Z","author_association":"CONTRIBUTOR","body":"@jon-wei Thanks for reviewing \r\nHave tried to make the necessary changes suggested\r\nAnd apologies for accidentally using force-push to merge my changes","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453689392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453711822","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453711822","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453711822,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzcxMTgyMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-12T02:25:04Z","updated_at":"2019-01-12T02:25:04Z","author_association":"CONTRIBUTOR","body":"@gianm \r\nOK, I was hoping to avoid forking the entire incubator-druid repo :) But I bit the bullet and have spent quite a bit of time getting Eclipse set up right.  Nonetheless, I have eliminated most of the original problems in Eclipse. Now I am down to 5 errors that I just can't seem to fix in Eclipse without trying to modify the code (which I don't want to do).  I would appreciate a little help in getting these few problems resolved.\r\n\r\n**I forked apache/incubator-druid Jan 11, 2019 commit #6815 <5d2947c> which has a blue check, so somehow the commit compiled ok.**\r\n\r\nNonetheless, I show the following compile errors:\r\n\r\n1. druid-processing/org.apache.druid/query.aggregation.post/ExpressionPostAggregator.java L144-L155:\r\n\r\n> Error: The constructor ExpressionPostAggregator(String, String, String, ExprMacroTable, aggregators.entrySet().stream().collect(Collectors.toMap((<no type> entry) -> entry.getKey(), (<no type> entry) -> entry.getValue()::finalizeComputation))) is undefined.\r\n\r\n2. druid-server/org.apache.druid.server.coordinator/DruidCoordinator.java L691-L692:\r\n\r\n> Error: Cannot refer to 'this' nor 'super' while explicitly invoking a constructor.\r\n\r\n3. druid-server/org.apache.druid.server/AsyncQueryForwardingServlet.java L535-L540:\r\n\r\n> Error: The method makeRequestMetrics(GenericQueryMetricsFactory, QueryToolChest<T,Query<T>>, Query<T>, String) in the type DruidMetrics is not applicable for the arguments (GenericQueryMetricsFactory, QueryToolChest, Query, String).\r\n\r\n4. druid-server/org.apache.druid.server.coordination/ServerManager.java L324:\r\n\r\n> Error: The type QueryMetrics does not define reportSegmentAndCacheTime(Object, long) that is applicable here\r\n\r\n5. druid-server/org.apache.druid.server.coordination/ServerManager.java L325:\r\n\r\n> Error: The method segment(String) is undefined for the type Object\r\n\r\n***\r\n\r\nAlso I found several instances where code in the /main/... path depends on code in the /test/ path.  This is a bad practice and I don't think would run in production. Specifically druid-benchmarks has dependencies on druid-processing/target/test-classes and druid-sql/target/test-classes.  This, of course, begs the question of why benchmark code is in /main/ in the first place?\r\n\r\nAny help would be appreciated,\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453711822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453716222","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-453716222","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":453716222,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzcxNjIyMg==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-12T03:40:07Z","updated_at":"2019-01-12T08:26:56Z","author_association":"MEMBER","body":"@gianm It's not just wait 1 minute, it will wait indefinitely if necessary. I just print the log to told people what's going on every one minute. And I don't think there is a need to do something like `registerSegmentCallback` and wait for `segmentViewInitialized` being called in `DruidCoordinator`, because there is no extra work need to be done like broker.  \r\n\r\nFYI, `HttpServerInventoryView` had already done what this PR did. I raised this PR to do the same thing for `CuratorInventoryManager`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453716222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453719863","html_url":"https://github.com/apache/druid/pull/6775#issuecomment-453719863","issue_url":"https://api.github.com/repos/apache/druid/issues/6775","id":453719863,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzcxOTg2Mw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-12T04:57:17Z","updated_at":"2019-01-12T05:03:38Z","author_association":"MEMBER","body":"@clintropolis It did accelerate the process of load/drop segments when using several threads to run concurrently. But I don't have an exact number to told you how faster it is. Actually, we finally found the real bottleneck is computing the best server to load a segment. Using `CachingCostBalancerStrategy` can help that, but if there are millions of segments it always fallback to `CostBalancerStrategy` because of *serverView is not initialized yet* when I restart the coordinator. Maybe I should close this PR since this is not the bottleneck and I can not guarantee if there are any other potential issues when configure `processingExecutor` to use multiple threads. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453719863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453731416","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-453731416","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":453731416,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzczMTQxNg==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-12T08:53:16Z","updated_at":"2019-01-12T08:53:16Z","author_association":"MEMBER","body":"Oops, after look into the code, I found in `CoordinatorServerView` have the similar logic like in `BrokerServerView`. But in `DruidCoordinator` did not. I think await initialization in `CuratorInventoryManager` and await initialization  in `CoordinatorServerView` should be two different things. If we want to await initialization in `CoordinatorServerView`, we can open another PR to do that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453731416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453800186","html_url":"https://github.com/apache/druid/issues/6849#issuecomment-453800186","issue_url":"https://api.github.com/repos/apache/druid/issues/6849","id":453800186,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzgwMDE4Ng==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-13T04:00:31Z","updated_at":"2019-01-13T04:00:48Z","author_association":"CONTRIBUTOR","body":"I think this is a big simplicity win. Most people are already using replicated metadata databases with PITR (or managed options like Amazon RDS/Google Cloud SQL).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453800186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453802405","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453802405","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453802405,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzgwMjQwNQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-13T05:01:34Z","updated_at":"2019-01-13T05:01:34Z","author_association":"CONTRIBUTOR","body":"@leerho are you able to build the project via running  `mvn clean install -DskipTests` that might solve it ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453802405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453807314","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453807314","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453807314,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzgwNzMxNA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-13T07:00:28Z","updated_at":"2019-01-13T07:00:28Z","author_association":"CONTRIBUTOR","body":"Strange: When I `mvn clean install -DskipTests` from the command line it builds OK.  But for some reason in Eclipse I get the above 5 errors.  So there must be some compiler setting in Eclipse that is more strict than building from the CL.  I have reviewed all the compiler error/warning settings and nothing is more severe than a warning.  I am compiling with JDK 1.8.0_162.\r\n\r\nAttempting Maven/Update Project... doesn't help either.  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453807314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453845114","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453845114","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453845114,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mzg0NTExNA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-13T16:45:04Z","updated_at":"2019-01-13T16:45:04Z","author_association":"CONTRIBUTOR","body":"A surface level search for error 5 i see the following [thread](https://stackoverflow.com/questions/11671789/eclipse-is-telling-me-a-method-is-undefined-when-it-clearly-is-in-fact-defined) not sure if it is the issue but most likely it is some classpath definition issue. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453845114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453886857","html_url":"https://github.com/apache/druid/pull/6658#issuecomment-453886857","issue_url":"https://api.github.com/repos/apache/druid/issues/6658","id":453886857,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mzg4Njg1Nw==","user":{"login":"hellobabygogo","id":8693129,"node_id":"MDQ6VXNlcjg2OTMxMjk=","avatar_url":"https://avatars.githubusercontent.com/u/8693129?v=4","gravatar_id":"","url":"https://api.github.com/users/hellobabygogo","html_url":"https://github.com/hellobabygogo","followers_url":"https://api.github.com/users/hellobabygogo/followers","following_url":"https://api.github.com/users/hellobabygogo/following{/other_user}","gists_url":"https://api.github.com/users/hellobabygogo/gists{/gist_id}","starred_url":"https://api.github.com/users/hellobabygogo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellobabygogo/subscriptions","organizations_url":"https://api.github.com/users/hellobabygogo/orgs","repos_url":"https://api.github.com/users/hellobabygogo/repos","events_url":"https://api.github.com/users/hellobabygogo/events{/privacy}","received_events_url":"https://api.github.com/users/hellobabygogo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T02:01:17Z","updated_at":"2019-01-14T02:01:17Z","author_association":"NONE","body":"> @hellobabygogo have you had a chance to review the PR comments?\r\n\r\n@dclim hello, Thanks for your suggestions, I will revise it soon.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453886857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453917042","html_url":"https://github.com/apache/druid/pull/6792#issuecomment-453917042","issue_url":"https://api.github.com/repos/apache/druid/issues/6792","id":453917042,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzkxNzA0Mg==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T07:13:08Z","updated_at":"2019-01-14T07:13:08Z","author_association":"NONE","body":"@jihoonson oops, I misunderstood your comment. I have added `AbstractTestQueryHelper` to keep common code for `TestQueryHelper` and `SqlTestQueryHelper`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453917042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454145177","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-454145177","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":454145177,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDE0NTE3Nw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T20:12:47Z","updated_at":"2019-01-14T20:12:47Z","author_association":"CONTRIBUTOR","body":"Hi @edgan8, can you take another look, I've left some comments","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454145177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454168803","html_url":"https://github.com/apache/druid/issues/5582#issuecomment-454168803","issue_url":"https://api.github.com/repos/apache/druid/issues/5582","id":454168803,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDE2ODgwMw==","user":{"login":"rahulsingh303","id":11955402,"node_id":"MDQ6VXNlcjExOTU1NDAy","avatar_url":"https://avatars.githubusercontent.com/u/11955402?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulsingh303","html_url":"https://github.com/rahulsingh303","followers_url":"https://api.github.com/users/rahulsingh303/followers","following_url":"https://api.github.com/users/rahulsingh303/following{/other_user}","gists_url":"https://api.github.com/users/rahulsingh303/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulsingh303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulsingh303/subscriptions","organizations_url":"https://api.github.com/users/rahulsingh303/orgs","repos_url":"https://api.github.com/users/rahulsingh303/repos","events_url":"https://api.github.com/users/rahulsingh303/events{/privacy}","received_events_url":"https://api.github.com/users/rahulsingh303/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T21:30:38Z","updated_at":"2019-01-14T21:30:38Z","author_association":"NONE","body":"@maver1ck I was trained at Google and learnt that stateful sets are not needed unless you really need it for case where you want to bind your pv to a particular server (may be because you have a license or some other business reason) and hence they recommended not to use as no one uses in 99% of cases . Also my friend this is a community and not about who is superior but rather who can contribute and make a better reusable artifact :) . ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454168803/reactions","total_count":7,"+1":7,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454173358","html_url":"https://github.com/apache/druid/issues/6854#issuecomment-454173358","issue_url":"https://api.github.com/repos/apache/druid/issues/6854","id":454173358,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDE3MzM1OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T21:45:33Z","updated_at":"2019-01-14T21:45:33Z","author_association":"CONTRIBUTOR","body":"I don't think that it's expected behavior. Do you have more than one overlord+coordinator (highly available deployment)? Or just 1? Did the system recover on its own?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454173358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454173689","html_url":"https://github.com/apache/druid/issues/6854#issuecomment-454173689","issue_url":"https://api.github.com/repos/apache/druid/issues/6854","id":454173689,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDE3MzY4OQ==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T21:46:31Z","updated_at":"2019-01-14T21:46:31Z","author_association":"CONTRIBUTOR","body":"just 1.\r\nthe system did indeed recover, however for those 5 mins all realtime data (in KIS tasks) was unavailable for query.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454173689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454201993","html_url":"https://github.com/apache/druid/issues/6832#issuecomment-454201993","issue_url":"https://api.github.com/repos/apache/druid/issues/6832","id":454201993,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDIwMTk5Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-14T23:22:08Z","updated_at":"2019-01-14T23:22:08Z","author_association":"CONTRIBUTOR","body":"We have begun work on this today. In the current version being worked on, most views in the UI are based on system tables, and it is expected that the UI will be hosted on the Druid Router and requires that the Router management proxy is enabled.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454201993/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454213619","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454213619","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454213619,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDIxMzYxOQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T00:15:52Z","updated_at":"2019-01-15T00:15:52Z","author_association":"CONTRIBUTOR","body":"Hm, I am trying with Eclipse and getting the same 5 errors.\r\n\r\nError 2 may be an Eclipse bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=530748\r\n\r\nI'm not sure about the others yet.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454213619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454232561","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454232561","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454232561,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDIzMjU2MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T01:23:43Z","updated_at":"2019-01-15T01:23:43Z","author_association":"CONTRIBUTOR","body":"Maybe related to error 1: https://bugs.eclipse.org/bugs/show_bug.cgi?id=531094","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454232561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454232720","html_url":"https://github.com/apache/druid/issues/6849#issuecomment-454232720","issue_url":"https://api.github.com/repos/apache/druid/issues/6849","id":454232720,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDIzMjcyMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T01:24:34Z","updated_at":"2019-01-15T01:24:34Z","author_association":"CONTRIBUTOR","body":"This is probably a good idea. The descriptors aren't used for anything besides the `insert-segment-to-db` and DataSegmentFinders. But those are flawed anyway: they assume that any segment in deep storage is valid. It's not the case, since segments can get pushed to deep storage but _not_ published for a variety of reasons (mostly related to tasks running partially and then dying). That's not the only way that the descriptor.json in deep storage and the payload in the metadata store can get out of sync: it also happens if you do segment moves (the MoveTask) or if you manually edit the metadata store for some reason (like for a deep storage migration).\r\n\r\nA question: how much of the `descriptor.json` could be re-created from the segment path & index.zip, if needed? I'm wondering about a disaster recovery scenario: let's say you _did_ lose your metadata store and you wanted to try to recover whatever metadata you could from deep storage. How much could you get back?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454232720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454234126","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454234126","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454234126,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDIzNDEyNg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T01:31:44Z","updated_at":"2019-01-15T01:31:44Z","author_association":"CONTRIBUTOR","body":"@quenlang Can you try using the quantiles sketch aggregator instead?\r\n\r\nhttp://druid.io/docs/latest/development/extensions-core/datasketches-quantiles.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454234126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454255864","html_url":"https://github.com/apache/druid/issues/6818#issuecomment-454255864","issue_url":"https://api.github.com/repos/apache/druid/issues/6818","id":454255864,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDI1NTg2NA==","user":{"login":"dragonls","id":2565118,"node_id":"MDQ6VXNlcjI1NjUxMTg=","avatar_url":"https://avatars.githubusercontent.com/u/2565118?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonls","html_url":"https://github.com/dragonls","followers_url":"https://api.github.com/users/dragonls/followers","following_url":"https://api.github.com/users/dragonls/following{/other_user}","gists_url":"https://api.github.com/users/dragonls/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonls/subscriptions","organizations_url":"https://api.github.com/users/dragonls/orgs","repos_url":"https://api.github.com/users/dragonls/repos","events_url":"https://api.github.com/users/dragonls/events{/privacy}","received_events_url":"https://api.github.com/users/dragonls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T03:34:47Z","updated_at":"2019-01-15T03:35:22Z","author_association":"CONTRIBUTOR","body":"The same situation as in https://github.com/apache/incubator-druid/issues/6442#issuecomment-449295061\r\nBut the file is ok, just use tar to decompress it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454255864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454257837","html_url":"https://github.com/apache/druid/issues/6280#issuecomment-454257837","issue_url":"https://api.github.com/repos/apache/druid/issues/6280","id":454257837,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDI1NzgzNw==","user":{"login":"doctording","id":11834821,"node_id":"MDQ6VXNlcjExODM0ODIx","avatar_url":"https://avatars.githubusercontent.com/u/11834821?v=4","gravatar_id":"","url":"https://api.github.com/users/doctording","html_url":"https://github.com/doctording","followers_url":"https://api.github.com/users/doctording/followers","following_url":"https://api.github.com/users/doctording/following{/other_user}","gists_url":"https://api.github.com/users/doctording/gists{/gist_id}","starred_url":"https://api.github.com/users/doctording/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doctording/subscriptions","organizations_url":"https://api.github.com/users/doctording/orgs","repos_url":"https://api.github.com/users/doctording/repos","events_url":"https://api.github.com/users/doctording/events{/privacy}","received_events_url":"https://api.github.com/users/doctording/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T03:47:55Z","updated_at":"2019-01-15T03:47:55Z","author_association":"NONE","body":"druid 0.12.3\r\n+1\r\nI'm sure that segment data is not none and `numRows=113`, but `size=0` returned","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454257837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454267060","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-454267060","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":454267060,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDI2NzA2MA==","user":{"login":"gaodayue","id":1198446,"node_id":"MDQ6VXNlcjExOTg0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1198446?v=4","gravatar_id":"","url":"https://api.github.com/users/gaodayue","html_url":"https://github.com/gaodayue","followers_url":"https://api.github.com/users/gaodayue/followers","following_url":"https://api.github.com/users/gaodayue/following{/other_user}","gists_url":"https://api.github.com/users/gaodayue/gists{/gist_id}","starred_url":"https://api.github.com/users/gaodayue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaodayue/subscriptions","organizations_url":"https://api.github.com/users/gaodayue/orgs","repos_url":"https://api.github.com/users/gaodayue/repos","events_url":"https://api.github.com/users/gaodayue/events{/privacy}","received_events_url":"https://api.github.com/users/gaodayue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T04:54:53Z","updated_at":"2019-01-15T04:54:53Z","author_association":"CONTRIBUTOR","body":"Merged with master. The reported inspection errors don't look like a problem to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454267060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454274573","html_url":"https://github.com/apache/druid/issues/6834#issuecomment-454274573","issue_url":"https://api.github.com/repos/apache/druid/issues/6834","id":454274573,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDI3NDU3Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T05:47:28Z","updated_at":"2019-01-15T05:47:28Z","author_association":"CONTRIBUTOR","body":"@surekhasaharan thanks for raising this proposal! It would be really useful for #6319. It looks good to me overall, but I have some questions for details.\r\n\r\nFor phase 1,\r\n- How does the broker keep available segments and published segments in memory? Are they stored separately or merged into a single data structure?\r\n\r\nFor phase 2,\r\n- Killing segments is done by the kill tasks. How to notify the coordinator on killing segments? [I suggested something related to this](https://github.com/apache/incubator-druid/issues/5304#issuecomment-376661571). Probably we can add `TriggerAction` which can be triggered by any metadata store change.\r\n- Should we really need to modify dataSegment? I think it's probably fine to add a new type like `DataSegmentWithCreatedDate` unless `createdDate` needs to be used in many places in addition to the coordinator cache.\r\n- If it's the coordinator API, it should start with `/druid/coordinator/v1`. Would you add the full URL for the new API?\r\n- What is the return type of the new API? It should also be able to say \"there's no delta for the given timestamp. I'm sending the full set of segments\".\r\n\r\nFor both phase,\r\n- [Each broker can be configured to watch some particular tiers or dataSources](http://druid.io/docs/latest/configuration/index.html#segment-discovery). If these configurations are set, brokers don't have to retrieve all segments. How do the old & new APIs handle this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454274573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454333851","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454333851","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454333851,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDMzMzg1MQ==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T09:59:29Z","updated_at":"2019-01-15T09:59:29Z","author_association":"NONE","body":"@jon-wei Can i use this feature in druid 0.12.3? It just looks like a new feature in  druid 0.13.0.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454333851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454358397","html_url":"https://github.com/apache/druid/pull/6381#issuecomment-454358397","issue_url":"https://api.github.com/repos/apache/druid/issues/6381","id":454358397,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDM1ODM5Nw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T11:20:55Z","updated_at":"2019-01-15T11:22:00Z","author_association":"MEMBER","body":"@himanshug why do you think that buffer aggregators are never used concurrently? Aren't they in `OffheapIncrementalIndex`? See #3956 that changes `OffheapIncrementalIndex`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454358397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454369431","html_url":"https://github.com/apache/druid/issues/6827#issuecomment-454369431","issue_url":"https://api.github.com/repos/apache/druid/issues/6827","id":454369431,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDM2OTQzMQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T12:03:14Z","updated_at":"2019-01-15T12:03:14Z","author_association":"MEMBER","body":"I think of some bugs similar to #6826, because to avoid creation of a whole new data structure in `getSegmentMetadata()` `segmentMetadataInfo` should probably be iterated outside of locks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454369431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454374918","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-454374918","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":454374918,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDM3NDkxOA==","user":{"login":"egor-ryashin","id":14215045,"node_id":"MDQ6VXNlcjE0MjE1MDQ1","avatar_url":"https://avatars.githubusercontent.com/u/14215045?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-ryashin","html_url":"https://github.com/egor-ryashin","followers_url":"https://api.github.com/users/egor-ryashin/followers","following_url":"https://api.github.com/users/egor-ryashin/following{/other_user}","gists_url":"https://api.github.com/users/egor-ryashin/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-ryashin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-ryashin/subscriptions","organizations_url":"https://api.github.com/users/egor-ryashin/orgs","repos_url":"https://api.github.com/users/egor-ryashin/repos","events_url":"https://api.github.com/users/egor-ryashin/events{/privacy}","received_events_url":"https://api.github.com/users/egor-ryashin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T12:25:01Z","updated_at":"2019-01-15T12:25:01Z","author_association":"CONTRIBUTOR","body":"@clintropolis I've resolved merge conflicts","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454374918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454391410","html_url":"https://github.com/apache/druid/issues/6852#issuecomment-454391410","issue_url":"https://api.github.com/repos/apache/druid/issues/6852","id":454391410,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDM5MTQxMA==","user":{"login":"mihai-cazacu-adswizz","id":45362709,"node_id":"MDQ6VXNlcjQ1MzYyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/45362709?v=4","gravatar_id":"","url":"https://api.github.com/users/mihai-cazacu-adswizz","html_url":"https://github.com/mihai-cazacu-adswizz","followers_url":"https://api.github.com/users/mihai-cazacu-adswizz/followers","following_url":"https://api.github.com/users/mihai-cazacu-adswizz/following{/other_user}","gists_url":"https://api.github.com/users/mihai-cazacu-adswizz/gists{/gist_id}","starred_url":"https://api.github.com/users/mihai-cazacu-adswizz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mihai-cazacu-adswizz/subscriptions","organizations_url":"https://api.github.com/users/mihai-cazacu-adswizz/orgs","repos_url":"https://api.github.com/users/mihai-cazacu-adswizz/repos","events_url":"https://api.github.com/users/mihai-cazacu-adswizz/events{/privacy}","received_events_url":"https://api.github.com/users/mihai-cazacu-adswizz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T13:27:23Z","updated_at":"2019-01-15T13:27:23Z","author_association":"NONE","body":"@zhangxinyu1: Can you take a look over this, please?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454391410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454419950","html_url":"https://github.com/apache/druid/issues/6855#issuecomment-454419950","issue_url":"https://api.github.com/repos/apache/druid/issues/6855","id":454419950,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQxOTk1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T14:54:55Z","updated_at":"2019-01-15T14:54:55Z","author_association":"CONTRIBUTOR","body":"IMO, an exception for `log` would be nice. It's usually lowercased in Druid and I think `log.info(\"xxx\")` looks prettier than `LOG.info(\"xxx\")`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454419950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454420855","html_url":"https://github.com/apache/druid/issues/6860#issuecomment-454420855","issue_url":"https://api.github.com/repos/apache/druid/issues/6860","id":454420855,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQyMDg1NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T14:57:25Z","updated_at":"2019-01-15T14:57:25Z","author_association":"CONTRIBUTOR","body":"Not specifically related to this issue but more of a general thing. Should we be recommending IDEA for Druid developers? I see a lot of people using Eclipse and I feel that the more IntelliJ-specific stuff we add, the less friendly the developer experience is to people using Eclipse. We might want to recommend they bite the bullet and switch to IDEA. (Or alternatively: deal with the fact that some static analysis won't run for them until they raise a PR, and they'll need to check CI output.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454420855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454423551","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454423551","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454423551,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQyMzU1MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T15:04:21Z","updated_at":"2019-01-15T15:04:21Z","author_association":"CONTRIBUTOR","body":"FWIW, I use IntelliJ and it works more or less out of the box. (You do need to run `mvn clean package -DskipTests` from the command line one time before it works fully, since that runs some code-generation steps that the IDE won't do on its own.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454423551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454426617","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454426617","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454426617,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQyNjYxNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T15:12:31Z","updated_at":"2019-01-15T15:12:31Z","author_association":"CONTRIBUTOR","body":"@leerho You can also check the following files to see how HyperLogLogCollector gets used (all the meaningful usages should be in them):\r\n\r\n- CardinalityAggregatorFactory\r\n- HyperUniquesAggregatorFactory\r\n- CardinalityBufferAggregator\r\n- HyperUniquesBufferAggregator\r\n- HyperUniquesSerde\r\n- PreComputedHyperUniquesSerde\r\n\r\nSeems to be `estimateCardinality`, `add(byte[])`, `fold(ByteBuffer)`, `fold(HyperLogLogCollector)`, `compareTo`, `toByteArray`, and `toByteBuffer`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454426617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454428047","html_url":"https://github.com/apache/druid/pull/6381#issuecomment-454428047","issue_url":"https://api.github.com/repos/apache/druid/issues/6381","id":454428047,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQyODA0Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T15:16:06Z","updated_at":"2019-01-15T15:16:06Z","author_association":"CONTRIBUTOR","body":"We might want to remove `OffheapIncrementalIndex`. It's only used in one place: groupBy v1, if the `useOffheap` context parameter is set. groupBy v1 has been deprecated for a while, and imo the only reason it's still around is something related to https://github.com/apache/incubator-druid/issues/6743 -- buffer aggregators can't resize themselves currently, so groupBy v2, which uses offheap aggregations, allocates more space than necessary for ones that could grow in theory. groupBy v1 by default uses onheap aggregations and doesn't have this problem, so it can still be useful if your workload is mainly composed of groupBys with very growable sketch objects, and you're memory limited. (It has a bunch of _other_ problems, though. This is really the only good thing it does relative to v2.)\r\n\r\nHowever: groupBy v1 with the `useOffheap` parameter is, as far as I know, not useful anymore. groupBy v2 should be better in every way. So I think that does make a case for removing `OffheapIncrementalIndex`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454428047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454437930","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-454437930","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":454437930,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQzNzkzMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T15:41:22Z","updated_at":"2019-01-15T15:41:22Z","author_association":"CONTRIBUTOR","body":"@gaodayue thanks for merging with master. We'll need to fix the inspection report since otherwise it will start failing for master as well. Could you look into it? There are three I see:\r\n\r\n> \"QueryMetrics.java:210: sqlQueryId() Parameter query is not used in either this method or any of its derived methods.\"\r\n\r\nIt's an extension point, not meant to be used by Druid production code. Annotating it with `@PublicApi` (or `@SuppressWarnings(\"unused\")`) will tell that to the static analyzer, & it should stop complaining.\r\n\r\n> \"QueryMetrics.java:210: sqlQueryId() Method is never used as a member of this interface, but only as a member of the implementation class(es). The project will stay compilable if the method is removed from the interface.\"\r\n\r\nI think doing (1) should fix this too.\r\n\r\n> \"ComposingRequestLoggerProvider.java:128: accept() The declared exception IOException is never thrown in method implementations\"\r\n\r\nThis looks like a bug in the inspection. It looks like RequestLogLineConsumer declares `throws IOException` and its implementations do too, so there is no issue with the code. If that's right, then try working around this by adding `//noinspection RedundantThrows` before the `void accept(...` line.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454437930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454438350","html_url":"https://github.com/apache/druid/issues/6280#issuecomment-454438350","issue_url":"https://api.github.com/repos/apache/druid/issues/6280","id":454438350,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQzODM1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T15:42:26Z","updated_at":"2019-01-15T15:42:26Z","author_association":"CONTRIBUTOR","body":"You need to enable some extra analysisTypes -- check the Druid docs for what they do.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454438350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454447200","html_url":"https://github.com/apache/druid/pull/4770#issuecomment-454447200","issue_url":"https://api.github.com/repos/apache/druid/issues/4770","id":454447200,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQ0NzIwMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T16:04:53Z","updated_at":"2019-01-15T16:04:53Z","author_association":"CONTRIBUTOR","body":"Same idea as #6742.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454447200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454450744","html_url":"https://github.com/apache/druid/issues/6176#issuecomment-454450744","issue_url":"https://api.github.com/repos/apache/druid/issues/6176","id":454450744,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQ1MDc0NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T16:14:21Z","updated_at":"2019-01-15T16:14:21Z","author_association":"CONTRIBUTOR","body":"It sounds like we should try upgrading to Curator 4.1.0 and see what that does.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454450744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454453573","html_url":"https://github.com/apache/druid/pull/6742#issuecomment-454453573","issue_url":"https://api.github.com/repos/apache/druid/issues/6742","id":454453573,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQ1MzU3Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T16:21:37Z","updated_at":"2019-01-15T16:21:37Z","author_association":"CONTRIBUTOR","body":"Should also help work around #6176 until we can figure out why that's happening (the latest thought is that it is something Curator related?). The broker would stay stuck waiting for startup forever, which would at least mean it won't run with a broken SQL metadata cache. The issue would be fully worked-around if paired with monitoring that restarts unhealthy brokers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454453573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454485649","html_url":"https://github.com/apache/druid/pull/6792#issuecomment-454485649","issue_url":"https://api.github.com/repos/apache/druid/issues/6792","id":454485649,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDQ4NTY0OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T17:48:35Z","updated_at":"2019-01-15T17:48:35Z","author_association":"CONTRIBUTOR","body":"@surekhasaharan thanks. It loos good to me. Would you resolve the conflicts?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454485649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454521718","html_url":"https://github.com/apache/druid/issues/6849#issuecomment-454521718","issue_url":"https://api.github.com/repos/apache/druid/issues/6849","id":454521718,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDUyMTcxOA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T19:34:34Z","updated_at":"2019-01-15T19:34:34Z","author_association":"CONTRIBUTOR","body":"It's quite limited. Only `dataSource`, `interval`, `version`, `loadspec`, `binaryVersion`, and `size` are fully restorable. It looks hard to determine what is `dimensions` or `metrics` from `meta.smoosh`. `shardSpec` cannot be restored since we don't know its type. This gets even worse after https://github.com/apache/incubator-druid/issues/6319. `overshadowedSegments` and `atomicUpdateGroup` cannot be restored from the segment path and index.zip, which means the overshadowing relation cannot be restored.\r\n\r\nAs I noted in the proposal, I think replicating metadata store is a better solution for disaster recovery. I would imagine that deep storage is likely broken if the metadata store is broken by some sort of disaster and they are in the same data center. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454521718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454542528","html_url":"https://github.com/apache/druid/pull/6830#issuecomment-454542528","issue_url":"https://api.github.com/repos/apache/druid/issues/6830","id":454542528,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU0MjUyOA==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T20:39:10Z","updated_at":"2019-01-15T20:39:10Z","author_association":"NONE","body":"@egor-ryashin I think theoretically, this issue can happen, it'd require some effort to create a unit test for multithreaded case, let me think about how can I add such test.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454542528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454546015","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-454546015","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":454546015,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU0NjAxNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T20:50:10Z","updated_at":"2019-01-15T20:50:10Z","author_association":"CONTRIBUTOR","body":"Hmm, the first thing is fixed, but TC is still complaining about the redundant \"throws\" that is not actually redundant. I'm not sure how to fix this. I tried downloading the latest IntelliJ (2018.3.2) and my IDE does not flag this line as a redundant throw. In fact, it flags the `//noinspection RedundantThrows` as unnecessary. It seems to be something broken with the online TeamCity analyzer.\r\n\r\n@gaodayue, sorry, but can you try one more thing: change `//noinspection RedundantThrows` to `@SuppressWarnings(\"RedundantThrows\")`?\r\n\r\nIf making that change does not silence the inspection, my suggestion would be to remove the RedundantThrows check from `.idea/inspectionProfiles/Druid.xml`.\r\n\r\n/cc @leventov, any other ideas what might be going on?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454546015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454548989","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454548989","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454548989,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU0ODk4OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T20:59:19Z","updated_at":"2019-01-15T20:59:19Z","author_association":"CONTRIBUTOR","body":"It's in 0.12.3, but the docs were added later in 0.13.0: https://github.com/apache/incubator-druid/tree/0.12.3/extensions-core/datasketches","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454548989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454554393","html_url":"https://github.com/apache/druid/pull/6828#issuecomment-454554393","issue_url":"https://api.github.com/repos/apache/druid/issues/6828","id":454554393,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU1NDM5Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T21:16:13Z","updated_at":"2019-01-15T21:16:13Z","author_association":"CONTRIBUTOR","body":"@ankit0811 thanks, I'll take a look today.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454554393/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454560517","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-454560517","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":454560517,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU2MDUxNw==","user":{"login":"edgan8","id":2577963,"node_id":"MDQ6VXNlcjI1Nzc5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/2577963?v=4","gravatar_id":"","url":"https://api.github.com/users/edgan8","html_url":"https://github.com/edgan8","followers_url":"https://api.github.com/users/edgan8/followers","following_url":"https://api.github.com/users/edgan8/following{/other_user}","gists_url":"https://api.github.com/users/edgan8/gists{/gist_id}","starred_url":"https://api.github.com/users/edgan8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgan8/subscriptions","organizations_url":"https://api.github.com/users/edgan8/orgs","repos_url":"https://api.github.com/users/edgan8/repos","events_url":"https://api.github.com/users/edgan8/events{/privacy}","received_events_url":"https://api.github.com/users/edgan8/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T21:35:42Z","updated_at":"2019-01-15T21:35:42Z","author_association":"CONTRIBUTOR","body":"Thank you for the comments, I will update this later in the week!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454560517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454568907","html_url":"https://github.com/apache/druid/pull/6775#issuecomment-454568907","issue_url":"https://api.github.com/repos/apache/druid/issues/6775","id":454568907,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU2ODkwNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T22:02:45Z","updated_at":"2019-01-15T22:02:45Z","author_association":"CONTRIBUTOR","body":"IMO it does make sense to close this if it's not actually the bottleneck, since we don't want to have options lying around that aren't useful (they confuse people and can cause bugs). Does that sound ok @QiuMM?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454568907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454572220","html_url":"https://github.com/apache/druid/issues/6609#issuecomment-454572220","issue_url":"https://api.github.com/repos/apache/druid/issues/6609","id":454572220,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU3MjIyMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T22:13:57Z","updated_at":"2019-01-15T22:13:57Z","author_association":"CONTRIBUTOR","body":"Fixed by https://github.com/apache/incubator-druid/pull/6767","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454572220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454573248","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-454573248","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":454573248,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU3MzI0OA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T22:17:30Z","updated_at":"2019-01-15T22:17:30Z","author_association":"MEMBER","body":":+1:, @drcrallen do you have any more comments on this PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454573248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454578031","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-454578031","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":454578031,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU3ODAzMQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T22:33:43Z","updated_at":"2019-01-15T22:33:43Z","author_association":"CONTRIBUTOR","body":"This seems like a great feature to use for us for implementing k8s node upgrades (we use local disks on our k8s machines for historicals, but sometimes do need to upgrade node pools). We would set maintenance mode on one machine at a time, wait for its segments to be fully replicated, then replace its machine, and move on to the next one.\r\n\r\nIn order to do this automatically I'm curious what the impact on metrics/API is.  All it does is cause the coordinator to try to move segments around: it doesn't affect the response to metrics or the sys SQL entries, right?  So I could wait until the historical's `segment/count` metric goes to zero, or until the SQL query `{\"query\":\"SELECT count(*) AS segments FROM sys.server_segments WHERE server = '10.48.27.16:8083'\"}` goes to 0?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454578031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454578525","html_url":"https://github.com/apache/druid/issues/6176#issuecomment-454578525","issue_url":"https://api.github.com/repos/apache/druid/issues/6176","id":454578525,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDU3ODUyNQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-15T22:35:43Z","updated_at":"2019-01-15T22:35:43Z","author_association":"MEMBER","body":"Reopening until issue is confirmed resolved by #6862 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454578525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454607912","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-454607912","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":454607912,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYwNzkxMg==","user":{"login":"edgan8","id":2577963,"node_id":"MDQ6VXNlcjI1Nzc5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/2577963?v=4","gravatar_id":"","url":"https://api.github.com/users/edgan8","html_url":"https://github.com/edgan8","followers_url":"https://api.github.com/users/edgan8/followers","following_url":"https://api.github.com/users/edgan8/following{/other_user}","gists_url":"https://api.github.com/users/edgan8/gists{/gist_id}","starred_url":"https://api.github.com/users/edgan8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgan8/subscriptions","organizations_url":"https://api.github.com/users/edgan8/orgs","repos_url":"https://api.github.com/users/edgan8/repos","events_url":"https://api.github.com/users/edgan8/events{/privacy}","received_events_url":"https://api.github.com/users/edgan8/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T00:45:32Z","updated_at":"2019-01-16T00:45:32Z","author_association":"CONTRIBUTOR","body":"@jon-wei , @leventov , thank you for the review, I've updated to address the comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454607912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454618064","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454618064","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454618064,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYxODA2NA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T01:37:47Z","updated_at":"2019-01-16T01:37:47Z","author_association":"CONTRIBUTOR","body":"@b-slim @jon-wei \r\nWith respect to the errors above, Alex and I have reduced the number to 3. \r\n2 of the errors are caused by raw generic types not being qualified.  I will submit a PR.\r\n\r\nAs I mentioned earlier, there are backward dependencies from the /main/ tree to the /test/ tree that also need to be corrected.  I will submit an issue on these.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454618064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454621197","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-454621197","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":454621197,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYyMTE5Nw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T01:53:08Z","updated_at":"2019-01-16T01:53:22Z","author_association":"CONTRIBUTOR","body":"Reconsidering this. https://github.com/apache/incubator-druid/pull/6829#issuecomment-453638872 is correct in that a lot of things can be fixed with a custom balancer strategy. We do indeed have an issue with segment balancing and the reservoir step taking up too much time (even with caching and multiple parallel threads going). But I think that can be addressed in an extension. Closing this for now as it is not clear that needing to change the to and from pool sizes is required. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454621197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454625535","html_url":"https://github.com/apache/druid/issues/6866#issuecomment-454625535","issue_url":"https://api.github.com/repos/apache/druid/issues/6866","id":454625535,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYyNTUzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T02:15:29Z","updated_at":"2019-01-16T02:15:29Z","author_association":"CONTRIBUTOR","body":"> An even larger question is why is Druid-benchmarks even in the main tree?\r\n\r\nIf I had to guess, it has something to do with that being the way whoever set it up got the packaging to work out for `benchmarks/target/benchmarks.jar`, which is where JMH benchmarks get run from. `druid-benchmarks` isn't part of the `distribution` package, so even though it has a main tree, that tree won't get distributed as part of a Druid binary package. (The kind you get from http://druid.apache.org/downloads.html)\r\n\r\nIf there's a way to move the sources to a test tree and still get `benchmarks/target/benchmarks.jar` to generate properly, then that would be more aesthetically appealing.\r\n\r\nWhat should _not_ be done is moving some of that test stuff from other packages' `test` to `main`. That would pollute Druid binary packages.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454625535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454626420","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-454626420","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":454626420,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYyNjQyMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T02:19:59Z","updated_at":"2019-01-16T02:19:59Z","author_association":"CONTRIBUTOR","body":"> A tangential long term solution here would probably be to also seed the murmur hash with a custom value... but that will break historical compatibility in nasty ways.\r\n\r\nOn the topic of breaking historical compatibility (and an alternative HLL algo that uses a custom seed), check out #6814.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454626420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454630451","html_url":"https://github.com/apache/druid/issues/6867#issuecomment-454630451","issue_url":"https://api.github.com/repos/apache/druid/issues/6867","id":454630451,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzMDQ1MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T02:41:38Z","updated_at":"2019-01-16T02:41:38Z","author_association":"CONTRIBUTOR","body":"Hi @zhaojiandong - what version was this seen on?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454630451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454634980","html_url":"https://github.com/apache/druid/issues/6866#issuecomment-454634980","issue_url":"https://api.github.com/repos/apache/druid/issues/6866","id":454634980,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzNDk4MA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T03:06:21Z","updated_at":"2019-01-16T03:06:21Z","author_association":"CONTRIBUTOR","body":"Having `main` depending on `test` creates unnecessary errors, at least in Eclipse, I don't know how this is solved in IntelliJ.  And to fix those errors I have to manually copy and add the test jars into the build path, which is a PITA.  I don't think it is reasonable to expect all developers who wish to contribute to Druid to use IntelliJ. I not only have a huge history of projects in Eclipse, but I use it for C/C++, Ocaml, and other languages as well. \r\n\r\nIn our DataSketches library we created a separate `characterization` repository, which is for long-running benchmarking tests and studies.  This makes the core repository clean. If `benchmarks` is not actually distributed,  might this work for Druid?  \r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454634980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454635115","html_url":"https://github.com/apache/druid/issues/6867#issuecomment-454635115","issue_url":"https://api.github.com/repos/apache/druid/issues/6867","id":454635115,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzNTExNQ==","user":{"login":"zhaojiandong","id":5977839,"node_id":"MDQ6VXNlcjU5Nzc4Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/5977839?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaojiandong","html_url":"https://github.com/zhaojiandong","followers_url":"https://api.github.com/users/zhaojiandong/followers","following_url":"https://api.github.com/users/zhaojiandong/following{/other_user}","gists_url":"https://api.github.com/users/zhaojiandong/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaojiandong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaojiandong/subscriptions","organizations_url":"https://api.github.com/users/zhaojiandong/orgs","repos_url":"https://api.github.com/users/zhaojiandong/repos","events_url":"https://api.github.com/users/zhaojiandong/events{/privacy}","received_events_url":"https://api.github.com/users/zhaojiandong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T03:07:14Z","updated_at":"2019-01-16T03:07:14Z","author_association":"CONTRIBUTOR","body":"> Hi @zhaojiandong - what version was this seen on?\r\n\r\nOur version is 0.12.0, but I've found that the latest version is still possible.\r\nI'll try to fix it\r\n@gianm ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454635115/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454635816","html_url":"https://github.com/apache/druid/issues/6280#issuecomment-454635816","issue_url":"https://api.github.com/repos/apache/druid/issues/6280","id":454635816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzNTgxNg==","user":{"login":"doctording","id":11834821,"node_id":"MDQ6VXNlcjExODM0ODIx","avatar_url":"https://avatars.githubusercontent.com/u/11834821?v=4","gravatar_id":"","url":"https://api.github.com/users/doctording","html_url":"https://github.com/doctording","followers_url":"https://api.github.com/users/doctording/followers","following_url":"https://api.github.com/users/doctording/following{/other_user}","gists_url":"https://api.github.com/users/doctording/gists{/gist_id}","starred_url":"https://api.github.com/users/doctording/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doctording/subscriptions","organizations_url":"https://api.github.com/users/doctording/orgs","repos_url":"https://api.github.com/users/doctording/repos","events_url":"https://api.github.com/users/doctording/events{/privacy}","received_events_url":"https://api.github.com/users/doctording/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T03:11:30Z","updated_at":"2019-01-16T03:28:54Z","author_association":"NONE","body":"thanks, such `size` can be got in the other way.  Is there some losses by setting `druid.query.segmentMetadata.defaultAnalysisTypes`, eg. query efficiency or resource consumption.\r\n\r\nI'll get more after a thorough understanding of druid.io, thanks a lot","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454635816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454636276","html_url":"https://github.com/apache/druid/pull/6775#issuecomment-454636276","issue_url":"https://api.github.com/repos/apache/druid/issues/6775","id":454636276,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzNjI3Ng==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T03:14:31Z","updated_at":"2019-01-16T03:14:31Z","author_association":"MEMBER","body":"@gianm yeah, It's ok to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454636276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454639073","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-454639073","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":454639073,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDYzOTA3Mw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T03:31:20Z","updated_at":"2019-01-16T03:31:20Z","author_association":"CONTRIBUTOR","body":"Back to the main topic of this issue-thread, we have discussed internally many alternatives to see if there is some way to transition \"smoothly\" from historically generated Druid-HLL sketches to the DataSketches-HLL (DS-HLL) sketch.  There just isn't one.  It is very ugly no matter how you try to do it and you still end up with results with errors.  \r\n\r\nI would recommend that we document that the Druid-HLL sketch has serious problems and encourage users to move to the DS-HLL sketch.   Those users that have Druid-HLL history will just have to live with the history and try to either re-sketch their history (If it exists!) or somehow create a _clean-line-in-the-sand_ and move forward with the DS-HLL sketch.  \r\n\r\nNote that the DS-HLL sketch is extensively used here at Yahoo with history that goes back several years and is actively maintained.  Not only do we have strong backward compatibility, but we also have versions of the DS-HLL sketch in C++ (with Python on the way) that are all binary compatible using the same stored images.  So you can generate DS-HLL sketches in C++ and interpret and merge them in Java (and soon Python) or visa-versa.   There is no other sketch library that offers that!\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454639073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454645393","html_url":"https://github.com/apache/druid/pull/6863#issuecomment-454645393","issue_url":"https://api.github.com/repos/apache/druid/issues/6863","id":454645393,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY0NTM5Mw==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T04:11:25Z","updated_at":"2019-01-16T04:11:25Z","author_association":"NONE","body":"@venkatramanp I think you need to add the ASF License text to the doc file to make CI happy !","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454645393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454657143","html_url":"https://github.com/apache/druid/issues/6866#issuecomment-454657143","issue_url":"https://api.github.com/repos/apache/druid/issues/6866","id":454657143,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY1NzE0Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T05:29:46Z","updated_at":"2019-01-16T05:29:46Z","author_association":"CONTRIBUTOR","body":"> Having main depending on test creates unnecessary errors, at least in Eclipse, I don't know how this is solved in IntelliJ. And to fix those errors I have to manually copy and add the test jars into the build path, which is a PITA. I don't think it is reasonable to expect all developers who wish to contribute to Druid to use IntelliJ. I not only have a huge history of projects in Eclipse, but I use it for C/C++, Ocaml, and other languages as well.\r\n\r\nIntelliJ doesn't seem to care. Contributions that help make things work better in Eclipse would definitely be welcome.\r\n\r\n> In our DataSketches library we created a separate characterization repository, which is for long-running benchmarking tests and studies. This makes the core repository clean. If benchmarks is not actually distributed, might this work for Druid?\r\n\r\nIMO keeping it all part of the same repo is a good thing, for a few reasons:\r\n\r\n1. New benchmarks verifying the efficacy of a patch can be entered in the same PR as the patch itself.\r\n2. Benchmarks use a lot of internal APIs, which are often adjusted for various reasons, and keeping the benchmarks in the main repo means they get adjusted together in the same commit.\r\n3. Having all the Druid code together in one repo makes it easier for new contributors to get up and running.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454657143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454657583","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454657583","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454657583,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY1NzU4Mw==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T05:32:22Z","updated_at":"2019-01-16T05:32:22Z","author_association":"NONE","body":"@jon-wei Thanks for quick reply. I had upgraded my cluster to 0.13.0. But there was another problem when the task goes to hand off segment end of the segment granularity window as below:\r\n```\r\n2019-01-16T02:51:54,690 WARN [appenderator_merge_0] org.apache.druid.segment.realtime.appenderator.AppenderatorImpl - Failed to push merged index for segment[BRS_PAGE_MIN_2019-01-15T14:00:00.000Z_2019-01-15T15:00:00.000Z_2019-01-15T14:00:01.151Z].\r\norg.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) [guava-16.0.1.jar:?]\r\n\tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) [guava-16.0.1.jar:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\n2019-01-16T02:51:54,693 ERROR [publish-0] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Error while publishing segments for sequence[SequenceMetadata{sequenceName='index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_0', sequenceId=0, startOffsets={0=10213925, 1=10824117}, endOffsets={0=10480548, 1=11090740}, assignments=[], sentinel=false, checkpointed=true}]\r\norg.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) ~[guava-16.0.1.jar:?]\r\n\tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) [guava-16.0.1.jar:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\n2019-01-16T02:51:54,696 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.appenderator.AppenderatorImpl - Shutting down immediately...\r\n2019-01-16T02:51:54,698 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T21:00:00.000Z_2019-01-15T22:00:00.000Z_2019-01-15T21:00:01.035Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,699 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T14:00:00.000Z_2019-01-15T15:00:00.000Z_2019-01-15T14:00:01.151Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,700 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T17:00:00.000Z_2019-01-15T18:00:00.000Z_2019-01-15T17:00:00.234Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,701 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T12:00:00.000Z_2019-01-15T13:00:00.000Z_2019-01-15T12:00:00.755Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,702 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T19:00:00.000Z_2019-01-15T20:00:00.000Z_2019-01-15T19:00:00.636Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,703 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T13:00:00.000Z_2019-01-15T14:00:00.000Z_2019-01-15T13:00:00.423Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,704 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T01:00:00.000Z_2019-01-16T02:00:00.000Z_2019-01-16T01:00:00.647Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,705 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T11:00:00.000Z_2019-01-15T12:00:00.000Z_2019-01-15T11:00:01.007Z_2] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,706 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T22:00:00.000Z_2019-01-15T23:00:00.000Z_2019-01-15T22:00:00.507Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,707 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T16:00:00.000Z_2019-01-15T17:00:00.000Z_2019-01-15T16:00:00.726Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,707 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T23:00:00.000Z_2019-01-16T00:00:00.000Z_2019-01-15T23:00:01.139Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,708 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T02:00:00.000Z_2019-01-16T03:00:00.000Z_2019-01-16T02:00:00.301Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,709 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T18:00:00.000Z_2019-01-15T19:00:00.000Z_2019-01-15T18:00:00.981Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,709 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T20:00:00.000Z_2019-01-15T21:00:00.000Z_2019-01-15T20:00:04.780Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T00:00:00.000Z_2019-01-16T01:00:00.000Z_2019-01-16T00:00:00.899Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T15:00:00.000Z_2019-01-15T16:00:00.000Z_2019-01-15T15:00:00.882Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.firehose.ServiceAnnouncingChatHandlerProvider - Unregistering chat handler[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd]\r\n2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannouncing [DiscoveryDruidNode{druidNode=DruidNode{serviceName='druid/middleManager', host='apm3-c1-druid-001.txgz.tingyun.com', port=-1, plaintextPort=8108, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='peon', services={dataNodeService=DataNodeService{tier='_default_tier', maxSize=0, type=indexer-executor, priority=0}, lookupNodeService=LookupNodeService{lookupTier='__default'}}}].\r\n2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/internal-discovery/peon/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannounced [DiscoveryDruidNode{druidNode=DruidNode{serviceName='druid/middleManager', host='apm3-c1-druid-001.txgz.tingyun.com', port=-1, plaintextPort=8108, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='peon', services={dataNodeService=DataNodeService{tier='_default_tier', maxSize=0, type=indexer-executor, priority=0}, lookupNodeService=LookupNodeService{lookupTier='__default'}}}].\r\n2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.CuratorDataSegmentServerAnnouncer - Unannouncing self[DruidServerMetadata{name='apm3-c1-druid-001.txgz.tingyun.com:8108', hostAndPort='apm3-c1-druid-001.txgz.tingyun.com:8108', hostAndTlsPort='null', maxSize=0, tier='_default_tier', type=indexer-executor, priority=0}] at [/druid/announcements/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/announcements/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n2019-01-16T02:51:54,759 ERROR [task-runner-0-priority-0] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Encountered exception while running task.\r\njava.util.concurrent.ExecutionException: org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n\tat com.google.common.util.concurrent.AbstractFuture$Sync.getValue(AbstractFuture.java:299) ~[guava-16.0.1.jar:?]\r\n\tat com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:286) ~[guava-16.0.1.jar:?]\r\n\tat com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:116) ~[guava-16.0.1.jar:?]\r\n\tat org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner.runInternal(IncrementalPublishingKafkaIndexTaskRunner.java:661) ~[druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner.run(IncrementalPublishingKafkaIndexTaskRunner.java:232) [druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.indexing.kafka.KafkaIndexTask.run(KafkaIndexTask.java:210) [druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner$SingleTaskBackgroundRunnerCallable.call(SingleTaskBackgroundRunner.java:421) [druid-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner$SingleTaskBackgroundRunnerCallable.call(SingleTaskBackgroundRunner.java:393) [druid-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\nCaused by: org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n\tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n\tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) ~[guava-16.0.1.jar:?]\r\n\tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) ~[guava-16.0.1.jar:?]\r\n\t... 3 more\r\n2019-01-16T02:51:54,765 INFO [task-runner-0-priority-0] org.apache.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] status changed to [FAILED].\r\n2019-01-16T02:51:54,767 INFO [task-runner-0-priority-0] org.apache.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\r\n  \"id\" : \"index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd\",\r\n  \"status\" : \"FAILED\",\r\n  \"duration\" : 3601213,\r\n  \"errorMsg\" : \"java.util.concurrent.ExecutionException: org.apache.druid.java.util.common.UOE: [org.apache.druid.qu...\"\r\n}\r\n2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-2,5,main]] is non daemon.\r\n2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-3,5,main]] is non daemon.\r\n2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-1,5,main]] is non daemon.\r\n2019-01-16T02:51:54,772 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.server.listener.announcer.ListenerResourceAnnouncer.stop()] on object[org.apache.druid.query.lookup.LookupResourceListenerAnnouncer@23708f14].\r\n2019-01-16T02:51:54,772 INFO [main] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/listeners/lookups/__default/http:apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n2019-01-16T02:51:54,778 INFO [main] org.apache.druid.server.listener.announcer.ListenerResourceAnnouncer - Unannouncing start time on [/druid/listeners/lookups/__default/http:apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n2019-01-16T02:51:54,778 INFO [main] org.apache.druid.server.initialization.jetty.JettyServerModule - Stopping Jetty Server...\r\n2019-01-16T02:51:54,781 INFO [main] org.eclipse.jetty.server.AbstractConnector - Stopped ServerConnector@57839834{HTTP/1.1,[http/1.1]}{0.0.0.0:8108}\r\n2019-01-16T02:51:54,781 INFO [main] org.eclipse.jetty.server.session - node0 Stopped scavenging\r\n2019-01-16T02:51:54,783 INFO [main] org.eclipse.jetty.server.handler.ContextHandler - Stopped o.e.j.s.ServletContextHandler@27b490de{/,null,UNAVAILABLE}\r\n2019-01-16T02:51:54,785 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.indexing.worker.executor.ExecutorLifecycle.stop() throws java.lang.Exception] on object[org.apache.druid.indexing.worker.executor.ExecutorLifecycle@1857fe6c].\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner.stop()] on object[org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner@61c87f1b].\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner - Starting graceful shutdown of task[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd].\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Stopping gracefully (status: [PUBLISHING])\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner - Graceful shutdown of task[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] finished in 0ms.\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] status changed to [FAILED].\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.curator.announcement.Announcer.stop()] on object[org.apache.druid.curator.announcement.Announcer@d76099a].\r\n2019-01-16T02:51:54,786 INFO [main] org.apache.druid.curator.announcement.Announcer - Stopping announcer\r\n```\r\nThe ingestion spec :\r\n```\r\n...\r\n           {\r\n                \"name\": \"first_paint_time_sketch\",\r\n                \"fieldName\": \"first_paint_time\",\r\n                \"type\": \"quantilesDoublesSketch\"\r\n            },\r\n...\r\n```\r\nSome ideas of this exception? \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454657583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454660619","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-454660619","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":454660619,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY2MDYxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T05:50:29Z","updated_at":"2019-01-16T05:50:29Z","author_association":"CONTRIBUTOR","body":"That seemed to work!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454660619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454660989","html_url":"https://github.com/apache/druid/pull/6302#issuecomment-454660989","issue_url":"https://api.github.com/repos/apache/druid/issues/6302","id":454660989,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY2MDk4OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T05:52:34Z","updated_at":"2019-01-16T05:52:34Z","author_association":"CONTRIBUTOR","body":"@jon-wei any further comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454660989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454665859","html_url":"https://github.com/apache/druid/issues/6869#issuecomment-454665859","issue_url":"https://api.github.com/repos/apache/druid/issues/6869","id":454665859,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY2NTg1OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T06:20:24Z","updated_at":"2019-01-16T06:20:53Z","author_association":"CONTRIBUTOR","body":"This proposal looks good to me. approxHistogram had a good run.\r\n\r\n> Provide advice on how to choose between the quantiles sketch or the moments sketch\r\n\r\nDo you have thoughts on what kind of advice we'd include here?\r\n\r\n> Is it possible/valid for the newer sketch aggs to be able to operate on an old \"approximate histogram\"? If so, this would make migration easier for users.\r\n\r\nMy guess is no, since the algorithms are all different.\r\n\r\n> Change the APPROX_QUANTILE Druid SQL function to use whatever aggregator type is stored in a segment, and use a default option when used on a numeric column\r\n\r\nThis will require a bit of an enhancement to the SQL metadata layer. Check out RowSignature, in particular this part:\r\n\r\n```java\r\n          case COMPLEX:\r\n            // Loses information about exactly what kind of complex column this is.\r\n            type = Calcites.createSqlTypeWithNullability(typeFactory, SqlTypeName.OTHER, true);\r\n            break;\r\n```\r\n\r\nFor `APPROX_QUANTILE` to be able to behave differently based on the type of sketch stored in the underlying column, we'll need to figure out some way to encode that information in the type. Or some way to make it accessible to the `SqlAggregator` conversion out-of-band. Encoding it in the type somehow is preferable, though, if possible, because avoiding the need for out-of-band info is always nice. It would also make it easier to expose it through the INFORMATION_SCHEMA.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454665859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454666891","html_url":"https://github.com/apache/druid/issues/6852#issuecomment-454666891","issue_url":"https://api.github.com/repos/apache/druid/issues/6852","id":454666891,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY2Njg5MQ==","user":{"login":"mihai-cazacu-adswizz","id":45362709,"node_id":"MDQ6VXNlcjQ1MzYyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/45362709?v=4","gravatar_id":"","url":"https://api.github.com/users/mihai-cazacu-adswizz","html_url":"https://github.com/mihai-cazacu-adswizz","followers_url":"https://api.github.com/users/mihai-cazacu-adswizz/followers","following_url":"https://api.github.com/users/mihai-cazacu-adswizz/following{/other_user}","gists_url":"https://api.github.com/users/mihai-cazacu-adswizz/gists{/gist_id}","starred_url":"https://api.github.com/users/mihai-cazacu-adswizz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mihai-cazacu-adswizz/subscriptions","organizations_url":"https://api.github.com/users/mihai-cazacu-adswizz/orgs","repos_url":"https://api.github.com/users/mihai-cazacu-adswizz/repos","events_url":"https://api.github.com/users/mihai-cazacu-adswizz/events{/privacy}","received_events_url":"https://api.github.com/users/mihai-cazacu-adswizz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T06:26:12Z","updated_at":"2019-01-16T06:26:12Z","author_association":"NONE","body":"I've looked into the logs and, when installing the extension, the `hadoop-client 2.8.3` was downloaded:\r\n\r\n> 2019-01-16T08:16:26,719 INFO [main] org.apache.druid.cli.PullDependencies - Start downloading extension [org.apache.hadoop:hadoop-client:jar:2.8.3]\r\n> 2019-01-16T08:18:00,530 INFO [main] org.apache.druid.cli.PullDependencies - Finish downloading extension [org.apache.hadoop:hadoop-client:jar:2.8.3]\r\n> 2019-01-16T08:18:00,530 INFO [main] org.apache.druid.cli.PullDependencies - Finish downloading dependencies for hadoop extension coordinates: [[org.apache.hadoop:hadoop-client:2.8.3]]\r\n\r\nAnd still, using `/druid/indexer/v1/supervisor` endpoint, the error is about `hadoop-client 2.3.0`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454666891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454680469","html_url":"https://github.com/apache/druid/issues/6869#issuecomment-454680469","issue_url":"https://api.github.com/repos/apache/druid/issues/6869","id":454680469,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY4MDQ2OQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T07:34:36Z","updated_at":"2019-01-16T07:34:36Z","author_association":"CONTRIBUTOR","body":"This proposal makes lots of sense and I’ll help where I can.  Note that I’m OOO until next week and my access to the internet may be limited.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454680469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454682902","html_url":"https://github.com/apache/druid/issues/6866#issuecomment-454682902","issue_url":"https://api.github.com/repos/apache/druid/issues/6866","id":454682902,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY4MjkwMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T07:45:35Z","updated_at":"2019-01-16T07:45:35Z","author_association":"CONTRIBUTOR","body":"Then why not move benchmarks to test.  It would still have access to internal code. It would run only when specifically called, and not during unit test.  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454682902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454685105","html_url":"https://github.com/apache/druid/issues/6866#issuecomment-454685105","issue_url":"https://api.github.com/repos/apache/druid/issues/6866","id":454685105,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDY4NTEwNQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T07:55:23Z","updated_at":"2019-01-16T07:55:23Z","author_association":"CONTRIBUTOR","body":"BTW, our reason for having this functionality separate from a release is to allow us to add new BM and continue to study and characterize performance after a release is out and run comparisons between releases. \r\n\r\nThe task of characterization (and benchmarking) is never really done. We are constantly coming up with new and better ways to to this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454685105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454710643","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454710643","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454710643,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDcxMDY0Mw==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T09:27:38Z","updated_at":"2019-01-16T09:41:08Z","author_association":"NONE","body":"@jon-wei As the data ingested into druid which was stayed at the memory or local disk of middleManager peon task before handing off to deep storage, so i performed a query which will be sent to peon task. The query like this:\r\n```\r\n{\r\n  \"queryType\": \"timeseries\",\r\n  \"dataSource\": {\r\n    \"type\": \"table\",\r\n    \"name\": \"sketch_1\"\r\n  },\r\n  \"intervals\": {\r\n    \"type\": \"intervals\",\r\n    \"intervals\": [\r\n      \"2019-01-16T00:30:00/2019-01-17T00:00:00\"\r\n    ]\r\n  },\r\n  \"descending\": false,\r\n  \"virtualColumns\": [],\r\n  \"granularity\": {\r\n    \"type\": \"all\"\r\n  },\r\n  \"aggregations\": [\r\n    {\r\n      \"type\": \"longSum\",\r\n      \"name\": \"count_total\",\r\n      \"fieldName\": \"count\",\r\n      \"expression\": null\r\n    },\r\n    {\r\n      \"type\": \"approxHistogramFold\",\r\n      \"name\": \"dns_time_histogram\",\r\n      \"fieldName\": \"dns_time_histogram\",\r\n      \"resolution\": 50,\r\n      \"numBuckets\": 7,\r\n      \"lowerLimit\": 0\r\n    },                                                                                                              [13/1830]\r\n    {\r\n      \"type\": \"quantilesDoublesSketch\",\r\n      \"name\": \"dns_time_sketch\",\r\n      \"fieldName\": \"dns_time_sketch\",\r\n      \"k\": 128\r\n    }\r\n  ],\r\n  \"postAggregations\": [\r\n    {\r\n      \"type\": \"customBuckets\",\r\n      \"name\": \"performance_histogram\",\r\n      \"fieldName\": \"dns_time_histogram\",\r\n      \"breaks\": [0, 200.0, 400.0, 600.0, 800.0, 1000.0, 1200.0, 1400.0, \"Infinity\"]\r\n    },\r\n    {\r\n      \"type\" : \"quantiles\",\r\n      \"name\" : \"histogram_quantile\",\r\n      \"fieldName\" : \"dns_time_histogram\",\r\n      \"probabilities\" : [0.50, 0.75, 0.90, 0.95]\r\n    },\r\n    {\r\n      \"type\"  : \"quantilesDoublesSketchToHistogram\",\r\n      \"name\": \"performance_sketch\",\r\n      \"field\": {\r\n        \"type\": \"fieldAccess\",\r\n        \"fieldName\": \"dns_time_sketch\"\r\n      },\r\n      \"splitPoints\" : [200, 400, 600, 800, 1000, 1200, 1400]\r\n    },\r\n    {\r\n      \"type\"  : \"quantilesDoublesSketchToQuantiles\",\r\n      \"name\": \"sketch_quantile\",\r\n      \"field\": {\r\n        \"type\": \"fieldAccess\",\r\n        \"fieldName\": \"dns_time_sketch\"\r\n      },\r\n      \"fractions\" : [0.50, 0.75, 0.90, 0.95]\r\n    }\r\n  ],\r\n  \"context\": {\r\n    \"skipEmptyBuckets\": \"true\"\r\n  }\r\n}\r\n``` \r\nIn order to compare the accuracy of approximate histogram and quantiles sketch so i defined two aggregation methods in the same query. And the result as below:\r\n```\r\n[ {\r\n  \"timestamp\" : \"2019-01-16T02:01:00.000Z\",\r\n  \"result\" : {\r\n    \"performance_histogram\" : {\r\n      \"breaks\" : [ 0.0, 200.0, 400.0, 600.0, 800.0, 1000.0, 1200.0, 1400.0, \"Infinity\" ],\r\n      \"counts\" : [ 5.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 3.0 ]\r\n    },\r\n    \"histogram_quantile\" : {\r\n      \"probabilities\" : [ 0.5, 0.75, 0.9, 0.95 ],\r\n      \"quantiles\" : [ 99.0, 1150.0, 1772.0, 1886.0 ],\r\n      \"min\" : 0.0,\r\n      \"max\" : 2000.0\r\n    },\r\n    \"count_total\" : 10,\r\n    \"dns_time_histogram\" : {\r\n      \"breaks\" : [ -333.3333435058594, 0.0, 333.3333435058594, 666.6666870117188, 1000.0, 1333.3333740234375, 1666.666748046875, 2000.0 ],\r\n      \"counts\" : [ 1.0, 5.0, 1.0, 0.0, 0.0, 0.0, 3.0 ]\r\n    },\r\n    \"sketch_quantile\" : [ 100.0, 1700.0, 2000.0, 2000.0 ],\r\n    \"dns_time_sketch\" : 10,\r\n    \"performance_sketch\" : [ 6.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0 ]\r\n  }\r\n} ]\r\n```\r\nThe orignal row data which i wrote to kafka, include 11 rows as below:\r\n```\r\n{\"timestamp\":1547604098000,\"uid\":1,\"name\":\"zjk\",\"dns_time\":0.0,\"count\":1}\r\n{\"timestamp\":1547604098000,\"uid\":1,\"name\":\"zjk\",\"dns_time\":99.0,\"count\":1}\r\n{\"timestamp\":1547604158000,\"uid\":2,\"name\":\"quen\",\"dns_time\":100.0,\"count\":1}\r\n{\"timestamp\":1547604158000,\"uid\":2,\"name\":\"quen\",\"dns_time\":600.0,\"count\":1}\r\n{\"timestamp\":1547604158000,\"uid\":3,\"name\":\"quen\",\"dns_time\":2000.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":4,\"name\":\"zjk\",\"dns_time\":5.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":5,\"name\":\"zjk\",\"dns_time\":20.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":6,\"name\":\"zjk\",\"dns_time\":2.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":7,\"name\":\"zjk\",\"dns_time\":1772.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":8,\"name\":\"zjk\",\"dns_time\":1700.0,\"count\":1}\r\n{\"timestamp\":1547604218000,\"uid\":9,\"name\":\"zjk\",\"dns_time\":,300.0\"count\":1n}\r\n```\r\nAlso i calculated the quantiles of [0.50, 0.75,  0.90, 0.95] and the histograms of  [ 0.0, 200.0, 400.0, 600.0, 800.0, 1000.0, 1200.0, 1400.0, \"Infinity\" ] by myself. They were [100, 1150, 1772, 1886] and [ 6.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0 ].  \r\n\r\nCompared the actual result with the query result, i found the quantile query of approximate histogram was more accurate than quantiles sketch, but for the histogram query, quantiles sketch was win. \r\n\r\nCan you tell me more about why the the quantile query of approximate histogram was more accurate thanquantiles sketch? \r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454710643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/454738289","html_url":"https://github.com/apache/druid/issues/6853#issuecomment-454738289","issue_url":"https://api.github.com/repos/apache/druid/issues/6853","id":454738289,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDczODI4OQ==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-16T10:57:54Z","updated_at":"2019-01-16T11:55:15Z","author_association":"NONE","body":"> @jon-wei Thanks for quick reply. I had upgraded my cluster to 0.13.0. But there was another problem when the task goes to hand off segment end of the segment granularity window as below:\r\n> \r\n> ```\r\n> 2019-01-16T02:51:54,690 WARN [appenderator_merge_0] org.apache.druid.segment.realtime.appenderator.AppenderatorImpl - Failed to push merged index for segment[BRS_PAGE_MIN_2019-01-15T14:00:00.000Z_2019-01-15T15:00:00.000Z_2019-01-15T14:00:01.151Z].\r\n> org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) [guava-16.0.1.jar:?]\r\n> \tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) [guava-16.0.1.jar:?]\r\n> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n> \tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\n> 2019-01-16T02:51:54,693 ERROR [publish-0] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Error while publishing segments for sequence[SequenceMetadata{sequenceName='index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_0', sequenceId=0, startOffsets={0=10213925, 1=10824117}, endOffsets={0=10480548, 1=11090740}, assignments=[], sentinel=false, checkpointed=true}]\r\n> org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) ~[guava-16.0.1.jar:?]\r\n> \tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) [guava-16.0.1.jar:?]\r\n> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n> \tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\n> 2019-01-16T02:51:54,696 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.appenderator.AppenderatorImpl - Shutting down immediately...\r\n> 2019-01-16T02:51:54,698 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T21:00:00.000Z_2019-01-15T22:00:00.000Z_2019-01-15T21:00:01.035Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,699 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T14:00:00.000Z_2019-01-15T15:00:00.000Z_2019-01-15T14:00:01.151Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,700 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T17:00:00.000Z_2019-01-15T18:00:00.000Z_2019-01-15T17:00:00.234Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,701 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T12:00:00.000Z_2019-01-15T13:00:00.000Z_2019-01-15T12:00:00.755Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,702 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T19:00:00.000Z_2019-01-15T20:00:00.000Z_2019-01-15T19:00:00.636Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,703 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T13:00:00.000Z_2019-01-15T14:00:00.000Z_2019-01-15T13:00:00.423Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,704 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T01:00:00.000Z_2019-01-16T02:00:00.000Z_2019-01-16T01:00:00.647Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,705 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T11:00:00.000Z_2019-01-15T12:00:00.000Z_2019-01-15T11:00:01.007Z_2] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,706 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T22:00:00.000Z_2019-01-15T23:00:00.000Z_2019-01-15T22:00:00.507Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,707 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T16:00:00.000Z_2019-01-15T17:00:00.000Z_2019-01-15T16:00:00.726Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,707 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T23:00:00.000Z_2019-01-16T00:00:00.000Z_2019-01-15T23:00:01.139Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,708 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T02:00:00.000Z_2019-01-16T03:00:00.000Z_2019-01-16T02:00:00.301Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,709 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T18:00:00.000Z_2019-01-15T19:00:00.000Z_2019-01-15T18:00:00.981Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,709 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T20:00:00.000Z_2019-01-15T21:00:00.000Z_2019-01-15T20:00:04.780Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-16T00:00:00.000Z_2019-01-16T01:00:00.000Z_2019-01-16T00:00:00.899Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.BatchDataSegmentAnnouncer - Unannouncing segment[BRS_PAGE_MIN_2019-01-15T15:00:00.000Z_2019-01-15T16:00:00.000Z_2019-01-15T15:00:00.882Z] at path[/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,710 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/segments/apm3-c1-druid-001.txgz.tingyun.com:8108/apm3-c1-druid-001.txgz.tingyun.com:8108_indexer-executor__default_tier_2019-01-16T01:51:54.334Z_92b4e8e5109a49deb22db797a999b96f0]\r\n> 2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.firehose.ServiceAnnouncingChatHandlerProvider - Unregistering chat handler[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd]\r\n> 2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannouncing [DiscoveryDruidNode{druidNode=DruidNode{serviceName='druid/middleManager', host='apm3-c1-druid-001.txgz.tingyun.com', port=-1, plaintextPort=8108, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='peon', services={dataNodeService=DataNodeService{tier='_default_tier', maxSize=0, type=indexer-executor, priority=0}, lookupNodeService=LookupNodeService{lookupTier='__default'}}}].\r\n> 2019-01-16T02:51:54,737 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/internal-discovery/peon/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n> 2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannounced [DiscoveryDruidNode{druidNode=DruidNode{serviceName='druid/middleManager', host='apm3-c1-druid-001.txgz.tingyun.com', port=-1, plaintextPort=8108, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='peon', services={dataNodeService=DataNodeService{tier='_default_tier', maxSize=0, type=indexer-executor, priority=0}, lookupNodeService=LookupNodeService{lookupTier='__default'}}}].\r\n> 2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.server.coordination.CuratorDataSegmentServerAnnouncer - Unannouncing self[DruidServerMetadata{name='apm3-c1-druid-001.txgz.tingyun.com:8108', hostAndPort='apm3-c1-druid-001.txgz.tingyun.com:8108', hostAndTlsPort='null', maxSize=0, tier='_default_tier', type=indexer-executor, priority=0}] at [/druid/announcements/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n> 2019-01-16T02:51:54,747 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/announcements/apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n> 2019-01-16T02:51:54,759 ERROR [task-runner-0-priority-0] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Encountered exception while running task.\r\n> java.util.concurrent.ExecutionException: org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n> \tat com.google.common.util.concurrent.AbstractFuture$Sync.getValue(AbstractFuture.java:299) ~[guava-16.0.1.jar:?]\r\n> \tat com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:286) ~[guava-16.0.1.jar:?]\r\n> \tat com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:116) ~[guava-16.0.1.jar:?]\r\n> \tat org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner.runInternal(IncrementalPublishingKafkaIndexTaskRunner.java:661) ~[druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner.run(IncrementalPublishingKafkaIndexTaskRunner.java:232) [druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.indexing.kafka.KafkaIndexTask.run(KafkaIndexTask.java:210) [druid-kafka-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner$SingleTaskBackgroundRunnerCallable.call(SingleTaskBackgroundRunner.java:421) [druid-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner$SingleTaskBackgroundRunnerCallable.call(SingleTaskBackgroundRunner.java:393) [druid-indexing-service-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_60]\r\n> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_60]\r\n> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_60]\r\n> \tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_60]\r\n> Caused by: org.apache.druid.java.util.common.UOE: [org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchAggregatorFactory] does not implement makeAggregateCombiner()\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeAggregateCombiner(AggregatorFactory.java:79) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.query.aggregation.AggregatorFactory.makeNullableAggregateCombiner(AggregatorFactory.java:93) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.lambda$new$1(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat java.util.Arrays.setAll(Arrays.java:4698) ~[?:1.8.0_60]\r\n> \tat org.apache.druid.segment.RowCombiningTimeAndDimsIterator.<init>(RowCombiningTimeAndDimsIterator.java:120) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.lambda$merge$2(IndexMergerV9.java:909) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeMergedTimeAndDimsIterator(IndexMergerV9.java:1031) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.makeIndexFiles(IndexMergerV9.java:179) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.merge(IndexMergerV9.java:914) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:832) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.IndexMergerV9.mergeQueryableIndex(IndexMergerV9.java:810) ~[druid-processing-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.mergeAndPush(AppenderatorImpl.java:719) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat org.apache.druid.segment.realtime.appenderator.AppenderatorImpl.lambda$push$1(AppenderatorImpl.java:623) ~[druid-server-0.13.0-incubating.jar:0.13.0-incubating]\r\n> \tat com.google.common.util.concurrent.Futures$1.apply(Futures.java:713) ~[guava-16.0.1.jar:?]\r\n> \tat com.google.common.util.concurrent.Futures$ChainingListenableFuture.run(Futures.java:861) ~[guava-16.0.1.jar:?]\r\n> \t... 3 more\r\n> 2019-01-16T02:51:54,765 INFO [task-runner-0-priority-0] org.apache.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] status changed to [FAILED].\r\n> 2019-01-16T02:51:54,767 INFO [task-runner-0-priority-0] org.apache.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\r\n>   \"id\" : \"index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd\",\r\n>   \"status\" : \"FAILED\",\r\n>   \"duration\" : 3601213,\r\n>   \"errorMsg\" : \"java.util.concurrent.ExecutionException: org.apache.druid.java.util.common.UOE: [org.apache.druid.qu...\"\r\n> }\r\n> 2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-2,5,main]] is non daemon.\r\n> 2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-3,5,main]] is non daemon.\r\n> 2019-01-16T02:51:54,770 INFO [main] org.apache.druid.cli.CliPeon - Thread [Thread[pool-5-thread-1,5,main]] is non daemon.\r\n> 2019-01-16T02:51:54,772 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.server.listener.announcer.ListenerResourceAnnouncer.stop()] on object[org.apache.druid.query.lookup.LookupResourceListenerAnnouncer@23708f14].\r\n> 2019-01-16T02:51:54,772 INFO [main] org.apache.druid.curator.announcement.Announcer - unannouncing [/druid/listeners/lookups/__default/http:apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n> 2019-01-16T02:51:54,778 INFO [main] org.apache.druid.server.listener.announcer.ListenerResourceAnnouncer - Unannouncing start time on [/druid/listeners/lookups/__default/http:apm3-c1-druid-001.txgz.tingyun.com:8108]\r\n> 2019-01-16T02:51:54,778 INFO [main] org.apache.druid.server.initialization.jetty.JettyServerModule - Stopping Jetty Server...\r\n> 2019-01-16T02:51:54,781 INFO [main] org.eclipse.jetty.server.AbstractConnector - Stopped ServerConnector@57839834{HTTP/1.1,[http/1.1]}{0.0.0.0:8108}\r\n> 2019-01-16T02:51:54,781 INFO [main] org.eclipse.jetty.server.session - node0 Stopped scavenging\r\n> 2019-01-16T02:51:54,783 INFO [main] org.eclipse.jetty.server.handler.ContextHandler - Stopped o.e.j.s.ServletContextHandler@27b490de{/,null,UNAVAILABLE}\r\n> 2019-01-16T02:51:54,785 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.indexing.worker.executor.ExecutorLifecycle.stop() throws java.lang.Exception] on object[org.apache.druid.indexing.worker.executor.ExecutorLifecycle@1857fe6c].\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner.stop()] on object[org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner@61c87f1b].\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner - Starting graceful shutdown of task[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd].\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.kafka.IncrementalPublishingKafkaIndexTaskRunner - Stopping gracefully (status: [PUBLISHING])\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner - Graceful shutdown of task[index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] finished in 0ms.\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_BRS_PAGE_MIN_0361b88dfbdfe35_dcpnbekd] status changed to [FAILED].\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void org.apache.druid.curator.announcement.Announcer.stop()] on object[org.apache.druid.curator.announcement.Announcer@d76099a].\r\n> 2019-01-16T02:51:54,786 INFO [main] org.apache.druid.curator.announcement.Announcer - Stopping announcer\r\n> ```\r\n> The ingestion spec :\r\n> \r\n> ```\r\n> ...\r\n>            {\r\n>                 \"name\": \"first_paint_time_sketch\",\r\n>                 \"fieldName\": \"first_paint_time\",\r\n>                 \"type\": \"quantilesDoublesSketch\"\r\n>             },\r\n> ...\r\n> ```\r\n> Some ideas of this exception?\r\n\r\n@jon-wei I had try with druid 0.12.3 in the same scene and the task commited successfully.  So is this a bug in druid 0.13.0 ?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/454738289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]