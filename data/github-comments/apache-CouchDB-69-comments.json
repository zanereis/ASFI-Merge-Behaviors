[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478343593","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-478343593","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":478343593,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM0MzU5Mw==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T13:48:34Z","updated_at":"2019-03-31T13:48:34Z","author_association":"MEMBER","body":"The _users database contains no users by default, so the presence of any document in there indicates someone/something has created it. \r\n\r\nAssuming you've followed the couchdb install steps (or used the wizard in the dashboard which automates them), you have defined at least one admin account (which is not stored in the _users database) with, hopefully, a strong password. This step ensures that anonymous users cannot create or delete databases, nor can they grant themselves access to existing databases. However, they can still make documents in the _users database or any other database that allows anonymous writes.\r\n\r\nThe next major release of CouchDB will change the default permissions of a new database to \"admin only\" from the current default of allowing anyone to read/write, but you can set this for yourself;\r\n\r\ncurl -X PUT http://user:pass@localhost:5984/_node/_local/_config/couchdb/default_security -d '\"admin_only\"'\r\n\r\nOr you can set the _security object of each database (including _users) to suit your specific needs.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478343593/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478352709","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-478352709","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":478352709,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM1MjcwOQ==","user":{"login":"jacorall","id":10423755,"node_id":"MDQ6VXNlcjEwNDIzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/10423755?v=4","gravatar_id":"","url":"https://api.github.com/users/jacorall","html_url":"https://github.com/jacorall","followers_url":"https://api.github.com/users/jacorall/followers","following_url":"https://api.github.com/users/jacorall/following{/other_user}","gists_url":"https://api.github.com/users/jacorall/gists{/gist_id}","starred_url":"https://api.github.com/users/jacorall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacorall/subscriptions","organizations_url":"https://api.github.com/users/jacorall/orgs","repos_url":"https://api.github.com/users/jacorall/repos","events_url":"https://api.github.com/users/jacorall/events{/privacy}","received_events_url":"https://api.github.com/users/jacorall/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T15:43:00Z","updated_at":"2019-03-31T15:43:00Z","author_association":"NONE","body":"Thank you rnewson.\r\nProblem solved.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478352709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478357774","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478357774","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478357774,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM1Nzc3NA==","user":{"login":"tabeth","id":5572859,"node_id":"MDQ6VXNlcjU1NzI4NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5572859?v=4","gravatar_id":"","url":"https://api.github.com/users/tabeth","html_url":"https://github.com/tabeth","followers_url":"https://api.github.com/users/tabeth/followers","following_url":"https://api.github.com/users/tabeth/following{/other_user}","gists_url":"https://api.github.com/users/tabeth/gists{/gist_id}","starred_url":"https://api.github.com/users/tabeth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabeth/subscriptions","organizations_url":"https://api.github.com/users/tabeth/orgs","repos_url":"https://api.github.com/users/tabeth/repos","events_url":"https://api.github.com/users/tabeth/events{/privacy}","received_events_url":"https://api.github.com/users/tabeth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T16:44:33Z","updated_at":"2019-03-31T16:58:55Z","author_association":"NONE","body":"@wohali \r\n\r\n> Sure, you can modify the derived key, but without knowing the original (plaintext) password, you can't modify it to have the same password with a different salt. That's the point of password hash functions, they're one way :)\r\n\r\nRight! I think I just misunderstood what you meant earlier. Sounds like we're in agreement now, haha. \r\n\r\n@rnewson \r\n\r\nYeah I'm pretty new to CouchDB (about a couple weeks now) and wondered about the session token stuff. It seems like it would've been more ideal for session tokens to be such that:\r\n\r\n1. `_session` allows you to specify the expiry of a given session (and consequently token) instead of that being done via configuration. \r\n2. Usage of a token doesn't automatically extend itself by returning another. \r\n\r\nOf course CouchDB is a huge project so I'm sure there are reasons it's the way it is now. \r\n\r\nThe code you linked seems to more or less implement what you described yesterday. I'm curious what's missing? Albeit I'm no erlang expert by any means and I'm not familiar with the CouchDB codebase. \r\n\r\nRegarding what you just said too, do you see any disadvantages of just having an internal DB that has two keys, `id`, being the `AuthSession` token and `expiry` being the `AuthSession` expiration date? This would in let you just use regular CouchDB semantics, including using `_purge` to clean-up manually and a design doc to let you see specifically blacklisted tokens that haven't been expired, that way it would be easy for a user to clean-up expired docs. \r\n\r\nJust sorta thinking out loud here. If the above is possible, then from what I can tell (still casually trying to see how CouchDB is written) all we'd have to do is just add something in the `cookie_authentication_handler` (https://github.com/apache/couchdb/blob/1347806d2feebce53325070b475f9e211d240ddf/src/couch/src/couch_httpd_auth.erl) to check to see if the token exists in this hypothetical blacklist database before finishing. \r\n\r\nYou could even allow users to opt-in by manually creating the database themselves, or even specify a database name and set the name of this database in the config. I'm kind of hung up on this approach manually because I still have a basic understanding of the code-base and am thinking in terms of what I could implement myself, if necessary. \r\n\r\nDisadvantages of this approach would be:\r\n1. Eventual consistency could be a problem. For example you could log-out and/or have a malicious session out there, put it on the blacklist, but it'll take too long for it to become consistent and the attacker already did whatever they needed to do.\r\n\r\n2. Session information being aggregated in the same place where an attacker may have access may be counterproductive. \r\n\r\n3. Making this code change would now make `couch_httpd_auth` necessarily aware of this database used for blacklisting. This may not be desirable. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478357774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478363301","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478363301","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478363301,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM2MzMwMQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T17:55:45Z","updated_at":"2019-03-31T17:55:45Z","author_association":"MEMBER","body":"@rnewson There was vocal objection to removing the auto-extension of cookies on the ML, by Jan if I recall correctly.\r\n\r\nReminder: As a major API change, this discussion should be happening on dev@, not here.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478363301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478366488","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478366488","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478366488,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM2NjQ4OA==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T18:31:35Z","updated_at":"2019-03-31T18:31:35Z","author_association":"MEMBER","body":"@tabeth my concern for server-side session persistence is the high volume of operations, as every user would be doing this. The current design has very nice properties.\r\n\r\n@wohali agreed this should be on dev@ and I'll maybe start a thread there. I did see @janl's objection but I don't believe we've gone deep enough to say that constitutes a veto. The current session scheme is a balancing act between Web expectations (I stayed logged into a website until I log out) and database expectations (a session ends irrevocably when I end it), like many other choices in couchdb. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478366488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478367472","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478367472","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478367472,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM2NzQ3Mg==","user":{"login":"realulim","id":17084846,"node_id":"MDQ6VXNlcjE3MDg0ODQ2","avatar_url":"https://avatars.githubusercontent.com/u/17084846?v=4","gravatar_id":"","url":"https://api.github.com/users/realulim","html_url":"https://github.com/realulim","followers_url":"https://api.github.com/users/realulim/followers","following_url":"https://api.github.com/users/realulim/following{/other_user}","gists_url":"https://api.github.com/users/realulim/gists{/gist_id}","starred_url":"https://api.github.com/users/realulim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realulim/subscriptions","organizations_url":"https://api.github.com/users/realulim/orgs","repos_url":"https://api.github.com/users/realulim/repos","events_url":"https://api.github.com/users/realulim/events{/privacy}","received_events_url":"https://api.github.com/users/realulim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T18:40:07Z","updated_at":"2019-03-31T18:40:07Z","author_association":"NONE","body":"As a reminder, I have opened this issue as a security problem. I did not and do not see this as balancing user expectations against each other, but as a security hole that needs to be fixed.\r\n\r\nI do realise that wohali removed the security tagline, but if I'm not mistaken then no reason has been given for that and the exploitation scenarios I have linked to have not been discussed.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478367472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478426385","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478426385","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478426385,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQyNjM4NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T03:53:15Z","updated_at":"2019-04-01T03:53:15Z","author_association":"MEMBER","body":"@realulim We reserve the security tag for things that are exploits, not \"works as designed.\" :)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478426385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478478600","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478478600","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478478600,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ3ODYwMA==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T08:07:54Z","updated_at":"2019-04-01T08:07:54Z","author_association":"MEMBER","body":"@wohali where is that policy written down? I think it's right to call this a security related issue (it clearly is security related), even if it works as designed (we can disagree on whether the design is good or secure) and even if we (PMC) are deciding not to address it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478478600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478479023","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478479023","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478479023,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ3OTAyMw==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T08:09:15Z","updated_at":"2019-04-01T08:09:15Z","author_association":"MEMBER","body":"@tabeth If you wish to continue this, I suggest you start a new thread on the couchdb-dev mailing list, which I think has a larger reach anyway.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478479023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478489905","html_url":"https://github.com/apache/couchdb/pull/1734#issuecomment-478489905","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1734","id":478489905,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ4OTkwNQ==","user":{"login":"brianewilkins","id":11932760,"node_id":"MDQ6VXNlcjExOTMyNzYw","avatar_url":"https://avatars.githubusercontent.com/u/11932760?v=4","gravatar_id":"","url":"https://api.github.com/users/brianewilkins","html_url":"https://github.com/brianewilkins","followers_url":"https://api.github.com/users/brianewilkins/followers","following_url":"https://api.github.com/users/brianewilkins/following{/other_user}","gists_url":"https://api.github.com/users/brianewilkins/gists{/gist_id}","starred_url":"https://api.github.com/users/brianewilkins/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brianewilkins/subscriptions","organizations_url":"https://api.github.com/users/brianewilkins/orgs","repos_url":"https://api.github.com/users/brianewilkins/repos","events_url":"https://api.github.com/users/brianewilkins/events{/privacy}","received_events_url":"https://api.github.com/users/brianewilkins/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T08:42:59Z","updated_at":"2019-04-01T08:42:59Z","author_association":"NONE","body":"@wohali:\r\nI am IBM Cloudant support and I am the one who reported this issue.\r\nBut I doubt that the issue is specific to Cloudant.\r\nI entered the repro here at the request of @nickva.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478489905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478531126","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478531126","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478531126,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODUzMTEyNg==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T10:50:56Z","updated_at":"2019-04-01T10:50:56Z","author_association":"MEMBER","body":"FWIW, I think we can design a new feature here. if we change any existing API’s, we need to run an email + lazy consensus by dev@, but that’s it in terms of process.\r\n\r\nWhat would work best is:\r\n- agree on semantics for a new session endpoint\r\n- have a PR that adds that feature\r\n- ship a 2.x release where people can opt into that new behaviour\r\n- when 3.x comes out, make the new behaviour the new default and optionally, let folks opt into 2.x and earlier behaviour.\r\n- in 4.x then, we can remove the old behaviour, if we want","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478531126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478534160","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478534160","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478534160,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODUzNDE2MA==","user":{"login":"realulim","id":17084846,"node_id":"MDQ6VXNlcjE3MDg0ODQ2","avatar_url":"https://avatars.githubusercontent.com/u/17084846?v=4","gravatar_id":"","url":"https://api.github.com/users/realulim","html_url":"https://github.com/realulim","followers_url":"https://api.github.com/users/realulim/followers","following_url":"https://api.github.com/users/realulim/following{/other_user}","gists_url":"https://api.github.com/users/realulim/gists{/gist_id}","starred_url":"https://api.github.com/users/realulim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realulim/subscriptions","organizations_url":"https://api.github.com/users/realulim/orgs","repos_url":"https://api.github.com/users/realulim/repos","events_url":"https://api.github.com/users/realulim/events{/privacy}","received_events_url":"https://api.github.com/users/realulim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T11:01:35Z","updated_at":"2019-04-01T11:01:35Z","author_association":"NONE","body":"Sorry if everyone has understood and disregarded the security implications and I am beating a dead horse here. But I'm sure we all agree that in security matters it is better to make sure twice and thrice, so let me re-iterate the problem:\r\n\r\nThe exploit is that a stateless token, once stolen, can be used indefinitely by the attacker.\r\n\r\nThe point of using tokens (whether stateless or not) is that the sensitive password does not have to be transmitted with every request. If, however, tokens have the same longevity as passwords, then this purpose is defeated and you might as well make it easy on yourself and re-transmit the password every time.\r\n\r\nPlease note that I am talking about interactive applications here. The user logs out of his application and expects that everything is nice and secure. He most certainly does not expect that stateless tokens flying around can still be used and even refreshed indefinitely.\r\n\r\nFor non-interactive applications (such as SSO), it is understood and expected that a combination of short-lived access tokens and long-lived refresh tokens are employed.\r\n\r\nAgain, there is no need to change existing APIs. As Jan said, there should be a way to invalidate tokens without changing the password, so that developers can employ this method in their application, when their users are \"logging out\".","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478534160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478544921","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478544921","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478544921,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU0NDkyMQ==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T11:40:55Z","updated_at":"2019-04-01T11:40:55Z","author_association":"MEMBER","body":"@realulim I consider indefinite auto-renewal an API semantic, that if changed is a breaking change, so we can’t just add this.\r\n\r\nThere is no disagreement that this is a security concern, but there are worst-case-scenario failsafes available already, and I think that’s why we’re not treating this as an urgent issue (i.e change the http session secret).\r\n\r\nYou call this exploit and I’m sure you are using this terminology to install a sense of severity and urgency. I call this works as designed and fully acknowledge the design limitation.\r\n\r\nThe way forward I outlined in my previous message, so let’s focus on agreeing what the precise semantics for a new _session endpoint should be, or decide that @rnewson’s patch does the trick.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478544921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478553712","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478553712","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478553712,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU1MzcxMg==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T12:11:50Z","updated_at":"2019-04-01T12:11:50Z","author_association":"MEMBER","body":"Let's be clear;\r\n\r\n\"The exploit is that a stateless token, once stolen, can be used indefinitely by the attacker.\"\r\n\r\nThis is not the complete story, here's my attempt;\r\n\r\n\"The exploit is that a stateless token, once stolen, can be used by the attacker until the password of that user is changed and as long as the attacker continues to make frequent use of the token, replacing it when sent a new one.\"\r\n\r\nany specific cookie can only be used until it expires, it requires further contact with couchdb to get a new cookie to replace the expired one.\r\n\r\nAs for the solution, I agree we should design it carefully.\r\n\r\nTo the idea that removing auto-extension is an API incompatible change, I'm not yet convinced. Session cookies certainly can expire today and everything that acquires them is expected to handle that situation. Specifically, clients are required to still retain, or be able to obtain, the username/password  in case they need to request a new session cookie. Any tool that is solely depending on a \"keep alive\" approach to the session cookie is broken and we should not feel bound to support them.\r\n\r\nTo current remedies, there are two we can recommend;\r\n\r\n1) change the salt value of the affected user. Invalidates all session cookies for that specific user.\r\n2) change the couch_httpd secret value used to sign all session cookies. Invalidates all session cookies issued by that node. (nb: change this on all nodes of your cluster and to the same value).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478553712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478554671","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478554671","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478554671,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU1NDY3MQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T12:14:50Z","updated_at":"2019-04-01T12:14:50Z","author_association":"MEMBER","body":"https://github.com/apache/couchdb/compare/hard-fail-cookie-mode\r\n\r\nThis was my first attempt at this a while ago and could be made simpler. In this version, it's optional and the replicator opts into it, specifically to get a 401 to force it to refresh the cookie rather than fallback to anonymous writes (if allowed).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478554671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478559826","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478559826","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478559826,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU1OTgyNg==","user":{"login":"tabeth","id":5572859,"node_id":"MDQ6VXNlcjU1NzI4NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5572859?v=4","gravatar_id":"","url":"https://api.github.com/users/tabeth","html_url":"https://github.com/tabeth","followers_url":"https://api.github.com/users/tabeth/followers","following_url":"https://api.github.com/users/tabeth/following{/other_user}","gists_url":"https://api.github.com/users/tabeth/gists{/gist_id}","starred_url":"https://api.github.com/users/tabeth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabeth/subscriptions","organizations_url":"https://api.github.com/users/tabeth/orgs","repos_url":"https://api.github.com/users/tabeth/repos","events_url":"https://api.github.com/users/tabeth/events{/privacy}","received_events_url":"https://api.github.com/users/tabeth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T12:31:37Z","updated_at":"2019-04-01T12:48:20Z","author_association":"NONE","body":"@rnewson \r\n\r\nI will. I'll also try to summarize briefly our findings here when I start that thread. \r\n\r\n\r\n@realulim \r\n>Again, there is no need to change existing APIs. As Jan said, there should be a way to invalidate tokens without changing the password, so that developers can employ this method in their application, when their users are \"logging out\".\r\n\r\nFYI it's possible to do this now by having the user provide their password during a \"logout\" step. By resaving their password, the salt and/or derived key will be regenerated and their sessions will be invalidated. This isn't ideal in all situations (especially non-critical ones, where it's as hassle for the user). \r\n\r\n>The exploit is that a stateless token, once stolen, can be used indefinitely by the attacker.\r\n\r\nI don't disagree, but it's worth elaborating here. Assuming tokens are not set to be `persistent` (in which case doing what I described above is the only option anyway), there are effectively three paths: \r\n\r\n## Path 1\r\nImagine a user's usage history looks something like this:\r\n- `GET _session` (Username, Password) -> Cookie1 (Expiry at +10 minutes)\r\n- `GET _db` (Cookie1) -> Cookie2 (Expiry at +11 minutes)\r\n- `GET _db/1` (Cookie 1) -> Cookie3 (Expiry at +12 minutes)\r\n- `GET _db/2` (Cookie 1) -> Cooke4 (Expiry at +13 minutes)\r\n\r\nAs you can see, using our original cookie, `Cookie1`, through completely normal usage we've incidentally created 3 other cookies, `Cookie2`, `Cookie3`, and `Cookie4`. In a normal application, despite the generation of the new cookies, `Cookie1` would be the one used until near expiration, in which case a new cookie would be generated. A \"soft\" logout, that only invalidates a specific cookie would just be to blacklist Cookie1 until expiry. \r\n\r\n## Path 2\r\nUsing the same usage history as above, you could imagine that a malicious hacker somehow gets access to `Cookie2`, `Cookie3`, or `Cookie4` and uses that to generate new cookies indefinitely (perhaps by just requesting access to `_db` in this case. \r\n\r\nAssuming the hacker did this without a trace (meaning we don't know how they got the cookies), their behavior would be indistinguishable from our user's. If all we had was a hunch all we could do is just invalidate all of the sessions for the user. After this we'd have to send them a temporary password to use to access their account. \r\n\r\n## Path 3\r\nThis would be the exact scenario as Path 2, however instead of invalidating all of the sessions for the user, we would just ask them to \"login\", and on the client side we would actually log them out and immediately log them in, locking out the hacker and giving them access again. The main reason to do this is so we don't have to send them a new password.\r\n\r\nIn other words, if we suspect Path 2 is occurring, we set a flag and the next time they log in, on the client side we implement it as a \"log out\" (e.g. update their user document with the same password to regenerate salt) followed immediately by \"log in\". \r\n\r\n\r\n---\r\n\r\nIn my opinion the security concern you point to can already be addressed. The goal, however would be to implement a \"soft logout\" via a blacklist, so that when users logout their tokens are explicitly logged out. This, combined with a sufficiently short expiry time, e.g. 10 minutes, would address 99.9% of the security concerns. \r\n\r\nIf you consider the situation proposed in Path 1, if there was a blacklist, and a user \"logged out\" after the last item in their history, a hacker would only have a 10 minute window (best case) to grab either `Cookie2`, `Cookie3`, or `Cookie4`, the only 4 cookies that haven't explicitly been blacklisted.  After this window, `Cookie1` would not work due to the blacklist and due to expiring, and the rest of them would have expired. A hacker would have no cookie to used and all is well.\r\n\r\nThe main wild card is that in a high volume situation replication could take too long. But as long as replication time is less than the time it takes for the hacker to find token it's fine. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478559826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478567712","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478567712","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478567712,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU2NzcxMg==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T12:56:25Z","updated_at":"2019-04-01T12:56:25Z","author_association":"MEMBER","body":"Any cookie-aware application (e.g, all web browsers) will indeed replace their cookie whenever couchdb issues a new one (via a `Set-Cookie` response header).\r\n\r\nYou elide how a cookie might leak, and it's important to note that browsers take care not to allow cookies to be exposed in general. CouchDB also sends the http only flag which tells the browsers not to allow any interrogation of the cookie via javascript. I'd be grateful for at least one plausible way for the cookie to leak.\r\n\r\nThe wildcard thing seems a non-starter given the volume of data required to hold, unless we do the epoch / timestamp idea instead, which has the side-effect of invalidating all sessions for the user in exchange for only requiring us to store a single value per user.\r\n\r\nNothing presented here so far appears better than simply removing the auto-extension piece of code (in 3.0 for semver reasons).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478567712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478572273","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478572273","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478572273,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODU3MjI3Mw==","user":{"login":"tabeth","id":5572859,"node_id":"MDQ6VXNlcjU1NzI4NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5572859?v=4","gravatar_id":"","url":"https://api.github.com/users/tabeth","html_url":"https://github.com/tabeth","followers_url":"https://api.github.com/users/tabeth/followers","following_url":"https://api.github.com/users/tabeth/following{/other_user}","gists_url":"https://api.github.com/users/tabeth/gists{/gist_id}","starred_url":"https://api.github.com/users/tabeth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabeth/subscriptions","organizations_url":"https://api.github.com/users/tabeth/orgs","repos_url":"https://api.github.com/users/tabeth/repos","events_url":"https://api.github.com/users/tabeth/events{/privacy}","received_events_url":"https://api.github.com/users/tabeth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T13:09:43Z","updated_at":"2019-04-01T13:15:39Z","author_association":"NONE","body":"My main concern with the timestamp idea is that it implicitly rejects the idea that a user would have multiple sessions. I think there are many reasonable situations where a user would want to have multiple sessions (ideally with multiple expiry times). In lieu of this, the only solution is to explicitly invalidate specific sessions. It may be possible to do this now with through the usage of `_session` and a `_user` document, but I haven't given it much thought yet.\r\n\r\nOf course, the CouchDB team could just say that's not something they'll support. If that's the case, the timestamp idea is the best one. \r\n\r\nI'm not sure relying on `httponly` isn't really a good idea, [since not all browsers restrict it equally, anyway](https://www.owasp.org/index.php/HttpOnly#Browsers_Supporting_HttpOnly). From a security standpoint, I'd say it's best to assume if there's one browser that could read an `HttpOnly` cookie, a hacker would be using that browser to get the cookie's contents. That being said, I'm pretty sure all major browser's most latest versions restrict reading and writing with `HttpOnly`, and when combined with the `Secure` flag there's no way to get the cookie's contents. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478572273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478617335","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478617335","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478617335,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODYxNzMzNQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T15:05:16Z","updated_at":"2019-04-01T15:05:16Z","author_association":"MEMBER","body":"I've taken it as read that the couchdb server is protected by TLS, otherwise the actual user/pass can be trivially captured anyway, making anything we do with sessions moot. if couchdb itself is doing the TLS bit (rather than, say, haproxy), it should add the Secure flag also.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478617335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478629434","html_url":"https://github.com/apache/couchdb/pull/1734#issuecomment-478629434","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1734","id":478629434,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODYyOTQzNA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T15:34:37Z","updated_at":"2019-04-01T15:34:37Z","author_association":"MEMBER","body":"@brianewilkins ok, sorry about that.\r\n\r\n@nickva just confirming, you wanted that comment here and not in a new issue?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478629434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478629767","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478629767","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478629767,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODYyOTc2Nw==","user":{"login":"realulim","id":17084846,"node_id":"MDQ6VXNlcjE3MDg0ODQ2","avatar_url":"https://avatars.githubusercontent.com/u/17084846?v=4","gravatar_id":"","url":"https://api.github.com/users/realulim","html_url":"https://github.com/realulim","followers_url":"https://api.github.com/users/realulim/followers","following_url":"https://api.github.com/users/realulim/following{/other_user}","gists_url":"https://api.github.com/users/realulim/gists{/gist_id}","starred_url":"https://api.github.com/users/realulim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realulim/subscriptions","organizations_url":"https://api.github.com/users/realulim/orgs","repos_url":"https://api.github.com/users/realulim/repos","events_url":"https://api.github.com/users/realulim/events{/privacy}","received_events_url":"https://api.github.com/users/realulim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T15:35:17Z","updated_at":"2019-04-01T15:35:17Z","author_association":"NONE","body":"Logging out with password is a non-starter for user facing applications. This will lead to applications keeping the user's password in memory (or worse, local storage) after login and then re-using it for logout.\r\n\r\n@janl I haven't advocated to change any existing API or semantics. I have actually said that the current scheme is necessary and expected behavior for non-interactive applications. My argument is that interactive applications (where users log in and out manually) need a different approach to security and thus a new API. This new API could be designed in a way that logout means logged out until reauthenticated.\r\n\r\nFor a reality check (which we all need at times), are there any well-known interactive applications out that use CouchDB and expose its authentication scheme to the user? If yes, then it would be interesting to get their take on this issue. Maybe I'm the only developer using CouchDB in that way and/or overly paranoid.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478629767/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478635486","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478635486","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478635486,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODYzNTQ4Ng==","user":{"login":"tabeth","id":5572859,"node_id":"MDQ6VXNlcjU1NzI4NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5572859?v=4","gravatar_id":"","url":"https://api.github.com/users/tabeth","html_url":"https://github.com/tabeth","followers_url":"https://api.github.com/users/tabeth/followers","following_url":"https://api.github.com/users/tabeth/following{/other_user}","gists_url":"https://api.github.com/users/tabeth/gists{/gist_id}","starred_url":"https://api.github.com/users/tabeth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabeth/subscriptions","organizations_url":"https://api.github.com/users/tabeth/orgs","repos_url":"https://api.github.com/users/tabeth/repos","events_url":"https://api.github.com/users/tabeth/events{/privacy}","received_events_url":"https://api.github.com/users/tabeth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T15:49:29Z","updated_at":"2019-04-01T19:33:51Z","author_association":"NONE","body":"@rnewson \r\nIt does seem that CouchDB itself has TLS/SSL. This might be a separate issue that I can open, regarding adding the Secure Flag\r\n\r\nhttps://docs.couchdb.org/en/master/config/http.html#https-ssl-tls-options\r\n\r\n@realulim \r\n\r\nLogging out with a password isn't really that unusual -- iCloud for quite a while required users to sign out with a password explicitly. An application keeping the password in memory isn't an inherent issue, couldn't said application just not keep it in memory? The threat here is no higher than signing in to begin with (since if signing out with a password is a threat then simply *signing in* would also be a threat for the same reason).\r\n\r\nThat being said I do agree that there should be a way to logout without putting in your password. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478635486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478665199","html_url":"https://github.com/apache/couchdb/pull/1734#issuecomment-478665199","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1734","id":478665199,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODY2NTE5OQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T17:12:44Z","updated_at":"2019-04-03T15:43:03Z","author_association":"CONTRIBUTOR","body":"@wohali yeah we had encountered this issue at Cloudant.\r\n\r\nEven though the urls contain cloudant.com in them the scenario would be the same for any CouchDB installation. Since @brianewilkins did the work on creating a reproducer script and had a user story behind it thought I it would be good to mention it here. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478665199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478783518","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478783518","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478783518,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODc4MzUxOA==","user":{"login":"realulim","id":17084846,"node_id":"MDQ6VXNlcjE3MDg0ODQ2","avatar_url":"https://avatars.githubusercontent.com/u/17084846?v=4","gravatar_id":"","url":"https://api.github.com/users/realulim","html_url":"https://github.com/realulim","followers_url":"https://api.github.com/users/realulim/followers","following_url":"https://api.github.com/users/realulim/following{/other_user}","gists_url":"https://api.github.com/users/realulim/gists{/gist_id}","starred_url":"https://api.github.com/users/realulim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realulim/subscriptions","organizations_url":"https://api.github.com/users/realulim/orgs","repos_url":"https://api.github.com/users/realulim/repos","events_url":"https://api.github.com/users/realulim/events{/privacy}","received_events_url":"https://api.github.com/users/realulim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T23:25:15Z","updated_at":"2019-04-01T23:25:15Z","author_association":"NONE","body":"Not so long ago there was a rather famous case of an exploit allowing attackers to read memory remotely: http://heartbleed.com\r\nSo I would not recommend storing sensitive data in memory any longer than it is actually needed. As always, your mileage may vary with the level of sensitivity you assign to your data.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478783518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478965144","html_url":"https://github.com/apache/couchdb/issues/844#issuecomment-478965144","issue_url":"https://api.github.com/repos/apache/couchdb/issues/844","id":478965144,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODk2NTE0NA==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T12:02:23Z","updated_at":"2019-04-02T12:02:23Z","author_association":"MEMBER","body":"> For a reality check (which we all need at times),\r\n\r\nMost PouchDB applications fit into this scheme, and by measure of our community surveys in ’17 and ’18, it’s our largest growth factor.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/478965144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/479353929","html_url":"https://github.com/apache/couchdb/pull/1972#issuecomment-479353929","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1972","id":479353929,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTM1MzkyOQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T06:12:14Z","updated_at":"2019-04-03T06:12:14Z","author_association":"CONTRIBUTOR","body":"Documentation PR: https://github.com/apache/couchdb-documentation/pull/404","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/479353929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480486355","html_url":"https://github.com/apache/couchdb/issues/1809#issuecomment-480486355","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1809","id":480486355,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ4NjM1NQ==","user":{"login":"denyeart","id":20165681,"node_id":"MDQ6VXNlcjIwMTY1Njgx","avatar_url":"https://avatars.githubusercontent.com/u/20165681?v=4","gravatar_id":"","url":"https://api.github.com/users/denyeart","html_url":"https://github.com/denyeart","followers_url":"https://api.github.com/users/denyeart/followers","following_url":"https://api.github.com/users/denyeart/following{/other_user}","gists_url":"https://api.github.com/users/denyeart/gists{/gist_id}","starred_url":"https://api.github.com/users/denyeart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/denyeart/subscriptions","organizations_url":"https://api.github.com/users/denyeart/orgs","repos_url":"https://api.github.com/users/denyeart/repos","events_url":"https://api.github.com/users/denyeart/events{/privacy}","received_events_url":"https://api.github.com/users/denyeart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T08:33:54Z","updated_at":"2019-04-06T08:33:54Z","author_association":"NONE","body":"@wohali The change of purge_seq from JSON integer to JSON string also broke our CouchDB clients when we upgraded to CouchDB 2.3. Please mention the change in the v2.3 release notes.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480486355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480504658","html_url":"https://github.com/apache/couchdb/issues/1809#issuecomment-480504658","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1809","id":480504658,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDUwNDY1OA==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T13:35:22Z","updated_at":"2019-04-06T13:35:22Z","author_association":"CONTRIBUTOR","body":"hey @denyeart, the change was described via commit https://github.com/apache/couchdb-documentation/commit/cc9feb13068e63332c9a1e81de95f17b31ef12c1#diff-6b4a3e899b13e42489f90830ed0a4c25R77. Is it not enough?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480504658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480509515","html_url":"https://github.com/apache/couchdb/issues/1809#issuecomment-480509515","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1809","id":480509515,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDUwOTUxNQ==","user":{"login":"denyeart","id":20165681,"node_id":"MDQ6VXNlcjIwMTY1Njgx","avatar_url":"https://avatars.githubusercontent.com/u/20165681?v=4","gravatar_id":"","url":"https://api.github.com/users/denyeart","html_url":"https://github.com/denyeart","followers_url":"https://api.github.com/users/denyeart/followers","following_url":"https://api.github.com/users/denyeart/following{/other_user}","gists_url":"https://api.github.com/users/denyeart/gists{/gist_id}","starred_url":"https://api.github.com/users/denyeart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/denyeart/subscriptions","organizations_url":"https://api.github.com/users/denyeart/orgs","repos_url":"https://api.github.com/users/denyeart/repos","events_url":"https://api.github.com/users/denyeart/events{/privacy}","received_events_url":"https://api.github.com/users/denyeart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T14:42:26Z","updated_at":"2019-04-06T14:42:26Z","author_association":"NONE","body":"@jiangphcn I don't think it is enough. Databases must not introduce incompatible API changes in a minor release that break existing applications.  And if they do so, it should be mentioned in release notes / upgrade notes so that people upgrading know about it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480509515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480511111","html_url":"https://github.com/apache/couchdb/issues/1809#issuecomment-480511111","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1809","id":480511111,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDUxMTExMQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T15:03:23Z","updated_at":"2019-04-06T15:03:23Z","author_association":"MEMBER","body":"We can't go back and update the 2.3 release notes now that the label has been placed on the repository, I'm sorry. It's an ASF limitation.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480511111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480739580","html_url":"https://github.com/apache/couchdb/pull/1998#issuecomment-480739580","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1998","id":480739580,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDczOTU4MA==","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-08T08:39:33Z","updated_at":"2019-04-08T08:39:33Z","author_association":"CONTRIBUTOR","body":"> IOQ Pid Eviction\r\n\r\nFor this topic, as well as evicting unused pids, don't we need some (configurable) global resource cap on the active pids to avoid resources being exhausted? I know inactive pids are likely tiny modulo resource leaks but they are not free right?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480739580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480955661","html_url":"https://github.com/apache/couchdb/pull/1998#issuecomment-480955661","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1998","id":480955661,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDk1NTY2MQ==","user":{"login":"chewbranca","id":5326,"node_id":"MDQ6VXNlcjUzMjY=","avatar_url":"https://avatars.githubusercontent.com/u/5326?v=4","gravatar_id":"","url":"https://api.github.com/users/chewbranca","html_url":"https://github.com/chewbranca","followers_url":"https://api.github.com/users/chewbranca/followers","following_url":"https://api.github.com/users/chewbranca/following{/other_user}","gists_url":"https://api.github.com/users/chewbranca/gists{/gist_id}","starred_url":"https://api.github.com/users/chewbranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chewbranca/subscriptions","organizations_url":"https://api.github.com/users/chewbranca/orgs","repos_url":"https://api.github.com/users/chewbranca/repos","events_url":"https://api.github.com/users/chewbranca/events{/privacy}","received_events_url":"https://api.github.com/users/chewbranca/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-08T18:43:41Z","updated_at":"2019-04-08T18:43:41Z","author_association":"CONTRIBUTOR","body":"> > IOQ Pid Eviction\r\n> \r\n> For this topic, as well as evicting unused pids, don't we need some (configurable) global resource cap on the active pids to avoid resources being exhausted? I know inactive pids are likely tiny modulo resource leaks but they are not free right?\r\n\r\n@mikerhodes The model here basically switches to every active couch_file database shard pid having a dedicated IOQ2 process. As long as the primary database shard pid (or other clients) remain active, the IOQ2 pids remain active. Right now the global resource cap for active database shard pids is the `max_dbs_open` config value. This extends to the IOQ2 pid per shard, so total number of IOQ2 pids will be directly proportional to `max_dbs_open`. The `ioq_opener` monitors the active clients and will clear out IOQ2 pids upon all clients exiting so as to avoid leaving idle IOQ2 pids.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/480955661/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481002982","html_url":"https://github.com/apache/couchdb/issues/1821#issuecomment-481002982","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1821","id":481002982,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTAwMjk4Mg==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-08T20:51:09Z","updated_at":"2019-04-08T22:50:16Z","author_association":"NONE","body":"I'm hitting this as well (accidentally created a document in `_users` with a UUID instead of `org.couchdb.user:`  while demoing Fauxton on our dev server.) \r\nDeleting and calling _purge on this unwanted record got rid of this error message.\r\n\r\nCouchDB 2.3.1\r\n\r\n* [Edit] we hit some other issues that I thought were related, but seem to be related to a domain change.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481002982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481279977","html_url":"https://github.com/apache/couchdb/issues/1349#issuecomment-481279977","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1349","id":481279977,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTI3OTk3Nw==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T14:38:51Z","updated_at":"2019-04-09T14:38:51Z","author_association":"MEMBER","body":"I've stumble upon this too and spent a day trying to reproduce it without much success.\r\n\r\nOne thing I found out and want to point here for the future troubleshooting is that the race is not between failed to start cache entry and its record in ets, but in-between tests' ddoc restart, i.e. new test is getting an exit message from the previous test's entry.\r\n\r\nIt's noticeable in the logs above: we have entry with pid `<0.6938.4>` doing `started`, `removed`, then we are seeing fresh cache start with `lru_init :: nil`, but before it has a chance to do any work it's getting exit message from `{'EXIT',<0.6938.4>,normal}` and crashing, because pid `<0.6938.4>` naturally not in its khash.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481279977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481764984","html_url":"https://github.com/apache/couchdb/pull/2002#issuecomment-481764984","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2002","id":481764984,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTc2NDk4NA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T16:32:16Z","updated_at":"2019-04-10T16:32:16Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481764984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481765242","html_url":"https://github.com/apache/couchdb/pull/2002#issuecomment-481765242","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2002","id":481765242,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTc2NTI0Mg==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T16:32:55Z","updated_at":"2019-04-10T16:32:55Z","author_association":"MEMBER","body":"Not sure if it needs a proper Accepted review thinger so I did that as well.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/481765242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482104775","html_url":"https://github.com/apache/couchdb/pull/2003#issuecomment-482104775","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2003","id":482104775,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjEwNDc3NQ==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T13:02:27Z","updated_at":"2019-04-11T13:02:27Z","author_association":"MEMBER","body":"@rnewson which process would crash and why that would cause read_header() to throw?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482104775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482126286","html_url":"https://github.com/apache/couchdb/pull/2003#issuecomment-482126286","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2003","id":482126286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjEyNjI4Ng==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T14:00:15Z","updated_at":"2019-04-11T14:00:15Z","author_association":"MEMBER","body":"It's a good question. We have logs where this reset_indexes function has been called but it failed because the couch_file pid had terminated (and therefore read_header returned a noproc error). We've looked at this piece of code and don't think it's appropriate to reset the index quite so easily.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482126286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482162518","html_url":"https://github.com/apache/couchdb/pull/2003#issuecomment-482162518","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2003","id":482162518,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjE2MjUxOA==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T15:28:37Z","updated_at":"2019-04-11T15:28:37Z","author_association":"MEMBER","body":"@rnewson would be worth adding a dedicated log line there so we find out what’s wrong? an/or catch a `noproc`, but reset when a parsing error occurs?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482162518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482241405","html_url":"https://github.com/apache/couchdb/pull/2003#issuecomment-482241405","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2003","id":482241405,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjI0MTQwNQ==","user":{"login":"chewbranca","id":5326,"node_id":"MDQ6VXNlcjUzMjY=","avatar_url":"https://avatars.githubusercontent.com/u/5326?v=4","gravatar_id":"","url":"https://api.github.com/users/chewbranca","html_url":"https://github.com/chewbranca","followers_url":"https://api.github.com/users/chewbranca/followers","following_url":"https://api.github.com/users/chewbranca/following{/other_user}","gists_url":"https://api.github.com/users/chewbranca/gists{/gist_id}","starred_url":"https://api.github.com/users/chewbranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chewbranca/subscriptions","organizations_url":"https://api.github.com/users/chewbranca/orgs","repos_url":"https://api.github.com/users/chewbranca/repos","events_url":"https://api.github.com/users/chewbranca/events{/privacy}","received_events_url":"https://api.github.com/users/chewbranca/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T18:23:28Z","updated_at":"2019-04-11T18:23:28Z","author_association":"CONTRIBUTOR","body":"> @rnewson which process would crash and why that would cause read_header() to throw?\r\n\r\nI suspect there are multiple ways in which this could happen through the code path, but one highly plausible scenario is when the `couch_file:read_header` call is made, that request goes through an IOQ pid [1], and if that IOQ pid exits, we'll get a `gen_server:call` error that falls into the `_` codepath here and triggers an index reset. When that happens, the `couch_file:truncate` call (along with sync) go directly to the Fd pid and skip going through IOQ [2]. So a read_header requests sitting in IOQ that then exits could trigger a faulty index reset.\r\n\r\nOne approach is we could look for `gen_server:call` errors and skip resetting in those scenarios, but I think we would be better off explicitly resetting _only_ when we get the `no_valid_header` error. Also, the `couch_mrview_util:reset_index` call both truncates the index and writes a new base header [3], so it's quite possible that this code path is used to initialize empty indexes, and as such, I think we should keep the reset_index logic in here unless we can verify that indexes are bootstrapped always elsewhere and that this logic isn't needed.\r\n\r\n\r\n[1] https://github.com/apache/couchdb/blob/17aec1f3339f864eb08869d6235753f0fdd28259/src/couch/src/couch_file.erl#L326-L332\r\n[2] https://github.com/apache/couchdb/blob/17aec1f3339f864eb08869d6235753f0fdd28259/src/couch/src/couch_file.erl#L206-L223\r\n[3] https://github.com/apache/couchdb/blob/17aec1f3339f864eb08869d6235753f0fdd28259/src/couch_mrview/src/couch_mrview_util.erl#L679","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482241405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482620926","html_url":"https://github.com/apache/couchdb/pull/2003#issuecomment-482620926","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2003","id":482620926,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjYyMDkyNg==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T15:37:26Z","updated_at":"2019-04-12T15:37:26Z","author_association":"MEMBER","body":"This looks good.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482620926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482627143","html_url":"https://github.com/apache/couchdb/issues/2005#issuecomment-482627143","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2005","id":482627143,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjYyNzE0Mw==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T15:54:50Z","updated_at":"2019-04-12T15:54:50Z","author_association":"MEMBER","body":"\"current node\" confused me. All you seem to be asking for is an endpoint that exposes the erlang node name of the node you've contacted?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482627143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482627385","html_url":"https://github.com/apache/couchdb/issues/2005#issuecomment-482627385","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2005","id":482627385,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjYyNzM4NQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T15:55:33Z","updated_at":"2019-04-12T15:55:33Z","author_association":"MEMBER","body":"If so, I'm -0 on the idea but I'd at least like a config option to disable the endpoint.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482627385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482639563","html_url":"https://github.com/apache/couchdb/pull/2006#issuecomment-482639563","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2006","id":482639563,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjYzOTU2Mw==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T16:32:12Z","updated_at":"2019-04-12T16:32:12Z","author_association":"MEMBER","body":"should we wrap the result in an object, so it is extendable in future?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482639563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482642686","html_url":"https://github.com/apache/couchdb/pull/2006#issuecomment-482642686","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2006","id":482642686,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjY0MjY4Ng==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T16:42:05Z","updated_at":"2019-04-12T16:42:05Z","author_association":"MEMBER","body":"@janl Done","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482642686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482648109","html_url":"https://github.com/apache/couchdb/issues/2005#issuecomment-482648109","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2005","id":482648109,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjY0ODEwOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-12T16:58:58Z","updated_at":"2019-04-12T16:58:58Z","author_association":"MEMBER","body":"@rnewson It's admin only, as is everything under `/_node`. Does that help?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482648109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482824850","html_url":"https://github.com/apache/couchdb/issues/2005#issuecomment-482824850","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2005","id":482824850,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MjgyNDg1MA==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-13T15:48:38Z","updated_at":"2019-04-13T15:48:38Z","author_association":"MEMBER","body":"ah, yes, that helps. :)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482824850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482884809","html_url":"https://github.com/apache/couchdb/pull/2006#issuecomment-482884809","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2006","id":482884809,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Mjg4NDgwOQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-13T20:53:07Z","updated_at":"2019-04-13T20:53:07Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/482884809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483001504","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-483001504","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":483001504,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzAwMTUwNA==","user":{"login":"jacorall","id":10423755,"node_id":"MDQ6VXNlcjEwNDIzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/10423755?v=4","gravatar_id":"","url":"https://api.github.com/users/jacorall","html_url":"https://github.com/jacorall","followers_url":"https://api.github.com/users/jacorall/followers","following_url":"https://api.github.com/users/jacorall/following{/other_user}","gists_url":"https://api.github.com/users/jacorall/gists{/gist_id}","starred_url":"https://api.github.com/users/jacorall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacorall/subscriptions","organizations_url":"https://api.github.com/users/jacorall/orgs","repos_url":"https://api.github.com/users/jacorall/repos","events_url":"https://api.github.com/users/jacorall/events{/privacy}","received_events_url":"https://api.github.com/users/jacorall/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-14T15:40:01Z","updated_at":"2019-04-14T15:40:01Z","author_association":"NONE","body":"After examining couchdb logs, I found that there are someone from ip address 185.242.6.4 and 185.242.6.3 creating the rootbakseven user.  Other offending ip addresses that made random users are:\r\n219.78.51.195\r\n222.133.177.93\r\n221.127.8.185\r\n86.106.156.192\r\n\r\nI'm thinking of creating a honeypot couchdb server, just for collecting offending ip addresses and creating and publishing the list for others to use.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483001504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483328189","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-483328189","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":483328189,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzMyODE4OQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-15T16:40:42Z","updated_at":"2019-04-15T16:40:42Z","author_association":"MEMBER","body":"@jacorall This isn't the place to share that information, especially since machines that are scanning your network will likely be from all over the globe, many on dynamically assigned addresses.\r\n\r\nFeel free to set up your own blogpost with info about what you find and share a link to it here.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483328189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483637745","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-483637745","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":483637745,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzYzNzc0NQ==","user":{"login":"i5heu","id":22565269,"node_id":"MDQ6VXNlcjIyNTY1MjY5","avatar_url":"https://avatars.githubusercontent.com/u/22565269?v=4","gravatar_id":"","url":"https://api.github.com/users/i5heu","html_url":"https://github.com/i5heu","followers_url":"https://api.github.com/users/i5heu/followers","following_url":"https://api.github.com/users/i5heu/following{/other_user}","gists_url":"https://api.github.com/users/i5heu/gists{/gist_id}","starred_url":"https://api.github.com/users/i5heu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i5heu/subscriptions","organizations_url":"https://api.github.com/users/i5heu/orgs","repos_url":"https://api.github.com/users/i5heu/repos","events_url":"https://api.github.com/users/i5heu/events{/privacy}","received_events_url":"https://api.github.com/users/i5heu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-16T12:26:06Z","updated_at":"2019-04-16T12:26:06Z","author_association":"NONE","body":"> The _users database contains no users by default, so the presence of any document in there indicates someone/something has created it.\r\n\r\nThis was the mistake i made.\r\n\r\nMaybe a warning sign in fauxton with \"Public write/read\" would lead to more safety.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483637745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483707408","html_url":"https://github.com/apache/couchdb/issues/1959#issuecomment-483707408","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1959","id":483707408,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MzcwNzQwOA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-16T15:19:53Z","updated_at":"2019-04-16T15:19:53Z","author_association":"MEMBER","body":"@i5heu CouchDB 3.0 will be secure by default, this is in our roadmap. See https://github.com/apache/couchdb/issues/1504 .","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/483707408/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484210678","html_url":"https://github.com/apache/couchdb/pull/2007#issuecomment-484210678","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2007","id":484210678,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDIxMDY3OA==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-17T18:35:26Z","updated_at":"2019-04-17T18:35:26Z","author_association":"MEMBER","body":"This one test keeps failing https://travis-ci.org/apache/couchdb/jobs/521187100","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484210678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484421355","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-484421355","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":484421355,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDQyMTM1NQ==","user":{"login":"piyush0609","id":10628011,"node_id":"MDQ6VXNlcjEwNjI4MDEx","avatar_url":"https://avatars.githubusercontent.com/u/10628011?v=4","gravatar_id":"","url":"https://api.github.com/users/piyush0609","html_url":"https://github.com/piyush0609","followers_url":"https://api.github.com/users/piyush0609/followers","following_url":"https://api.github.com/users/piyush0609/following{/other_user}","gists_url":"https://api.github.com/users/piyush0609/gists{/gist_id}","starred_url":"https://api.github.com/users/piyush0609/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piyush0609/subscriptions","organizations_url":"https://api.github.com/users/piyush0609/orgs","repos_url":"https://api.github.com/users/piyush0609/repos","events_url":"https://api.github.com/users/piyush0609/events{/privacy}","received_events_url":"https://api.github.com/users/piyush0609/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-18T09:16:14Z","updated_at":"2019-04-18T09:16:33Z","author_association":"NONE","body":"@wohali Is this issue still opened? I would like to pick this up ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484421355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484573130","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-484573130","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":484573130,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NDU3MzEzMA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-18T16:00:27Z","updated_at":"2019-04-18T16:00:27Z","author_association":"MEMBER","body":"@piyush0609 If you want to dig into it, sure.\r\n\r\nKeep in mind we're looking for a solution in Erlang with this request, and that the submitted PR must have both positive and negative test cases along with it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/484573130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485265078","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-485265078","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":485265078,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTI2NTA3OA==","user":{"login":"akircher","id":5734777,"node_id":"MDQ6VXNlcjU3MzQ3Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5734777?v=4","gravatar_id":"","url":"https://api.github.com/users/akircher","html_url":"https://github.com/akircher","followers_url":"https://api.github.com/users/akircher/followers","following_url":"https://api.github.com/users/akircher/following{/other_user}","gists_url":"https://api.github.com/users/akircher/gists{/gist_id}","starred_url":"https://api.github.com/users/akircher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akircher/subscriptions","organizations_url":"https://api.github.com/users/akircher/orgs","repos_url":"https://api.github.com/users/akircher/repos","events_url":"https://api.github.com/users/akircher/events{/privacy}","received_events_url":"https://api.github.com/users/akircher/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-21T16:34:34Z","updated_at":"2019-04-21T16:34:34Z","author_association":"NONE","body":"I don't know erlang and don't know what makes something NIF-able.  However Deno has released Web Workers which (1) run in their own separate thread, (2) has an API based on web-standards, (3) has all of the sandboxing that Web Workers provide, and (4) supports all modern Javascript.  \r\n\r\nMaybe this could work in Couch DB?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485265078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485265415","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-485265415","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":485265415,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTI2NTQxNQ==","user":{"login":"popojargo","id":9197078,"node_id":"MDQ6VXNlcjkxOTcwNzg=","avatar_url":"https://avatars.githubusercontent.com/u/9197078?v=4","gravatar_id":"","url":"https://api.github.com/users/popojargo","html_url":"https://github.com/popojargo","followers_url":"https://api.github.com/users/popojargo/followers","following_url":"https://api.github.com/users/popojargo/following{/other_user}","gists_url":"https://api.github.com/users/popojargo/gists{/gist_id}","starred_url":"https://api.github.com/users/popojargo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/popojargo/subscriptions","organizations_url":"https://api.github.com/users/popojargo/orgs","repos_url":"https://api.github.com/users/popojargo/repos","events_url":"https://api.github.com/users/popojargo/events{/privacy}","received_events_url":"https://api.github.com/users/popojargo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-21T16:39:17Z","updated_at":"2019-04-21T16:39:17Z","author_association":"MEMBER","body":"^Would like to know what NIF-able means ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485265415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485269664","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-485269664","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":485269664,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTI2OTY2NA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-21T17:42:23Z","updated_at":"2019-04-21T17:42:23Z","author_association":"MEMBER","body":"Means that it has to be embeddable directly into the Erlang VM  in such a way as to be compatible with its environment:\r\n\r\nhttp://erlang.org/doc/man/erl_nif.html\r\n\r\nSeparate thread is actually a detraction in this situation.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485269664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485432259","html_url":"https://github.com/apache/couchdb/issues/2009#issuecomment-485432259","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2009","id":485432259,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTQzMjI1OQ==","user":{"login":"ondra-novak","id":9439234,"node_id":"MDQ6VXNlcjk0MzkyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/9439234?v=4","gravatar_id":"","url":"https://api.github.com/users/ondra-novak","html_url":"https://github.com/ondra-novak","followers_url":"https://api.github.com/users/ondra-novak/followers","following_url":"https://api.github.com/users/ondra-novak/following{/other_user}","gists_url":"https://api.github.com/users/ondra-novak/gists{/gist_id}","starred_url":"https://api.github.com/users/ondra-novak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ondra-novak/subscriptions","organizations_url":"https://api.github.com/users/ondra-novak/orgs","repos_url":"https://api.github.com/users/ondra-novak/repos","events_url":"https://api.github.com/users/ondra-novak/events{/privacy}","received_events_url":"https://api.github.com/users/ondra-novak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-22T14:25:31Z","updated_at":"2019-04-22T14:25:31Z","author_association":"NONE","body":"Closing for other issue","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485432259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485439380","html_url":"https://github.com/apache/couchdb/issues/2011#issuecomment-485439380","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2011","id":485439380,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTQzOTM4MA==","user":{"login":"ondra-novak","id":9439234,"node_id":"MDQ6VXNlcjk0MzkyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/9439234?v=4","gravatar_id":"","url":"https://api.github.com/users/ondra-novak","html_url":"https://github.com/ondra-novak","followers_url":"https://api.github.com/users/ondra-novak/followers","following_url":"https://api.github.com/users/ondra-novak/following{/other_user}","gists_url":"https://api.github.com/users/ondra-novak/gists{/gist_id}","starred_url":"https://api.github.com/users/ondra-novak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ondra-novak/subscriptions","organizations_url":"https://api.github.com/users/ondra-novak/orgs","repos_url":"https://api.github.com/users/ondra-novak/repos","events_url":"https://api.github.com/users/ondra-novak/events{/privacy}","received_events_url":"https://api.github.com/users/ondra-novak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-22T14:50:44Z","updated_at":"2019-04-22T14:50:44Z","author_association":"NONE","body":"Reference to old closed ticket: #2009","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485439380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485490716","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-485490716","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":485490716,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTQ5MDcxNg==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-22T17:45:59Z","updated_at":"2019-04-22T17:45:59Z","author_association":"MEMBER","body":"Deno is based on V8 which I believe is still single interpreter per OS process so wouldn't be useful in this context.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485490716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485719926","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-485719926","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":485719926,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NTcxOTkyNg==","user":{"login":"piyush0609","id":10628011,"node_id":"MDQ6VXNlcjEwNjI4MDEx","avatar_url":"https://avatars.githubusercontent.com/u/10628011?v=4","gravatar_id":"","url":"https://api.github.com/users/piyush0609","html_url":"https://github.com/piyush0609","followers_url":"https://api.github.com/users/piyush0609/followers","following_url":"https://api.github.com/users/piyush0609/following{/other_user}","gists_url":"https://api.github.com/users/piyush0609/gists{/gist_id}","starred_url":"https://api.github.com/users/piyush0609/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piyush0609/subscriptions","organizations_url":"https://api.github.com/users/piyush0609/orgs","repos_url":"https://api.github.com/users/piyush0609/repos","events_url":"https://api.github.com/users/piyush0609/events{/privacy}","received_events_url":"https://api.github.com/users/piyush0609/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-23T09:15:07Z","updated_at":"2019-04-23T09:15:07Z","author_association":"NONE","body":"@wohali Thanks. Will submit a PR soon with the points mentioned above.\r\n\r\n> @piyush0609 If you want to dig into it, sure.\r\n> \r\n> Keep in mind we're looking for a solution in Erlang with this request, and that the submitted PR must have both positive and negative test cases along with it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/485719926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486359808","html_url":"https://github.com/apache/couchdb/issues/2013#issuecomment-486359808","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2013","id":486359808,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM1OTgwOA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T17:55:59Z","updated_at":"2019-04-24T17:55:59Z","author_association":"MEMBER","body":"That is correct, @subin1011 , there is no way to filter a `_changes` feed on a precalculated secondary index. This is currently technically infeasible given the design of CouchDB. Sorry about that.\r\n\r\nWhat's a Lakh?\r\n\r\nMango selectors are faster than JavaScript functions for filtering a changes feed, but you could try one for comparison.\r\n\r\nRemember that the way the _changes feed works is that it starts from the very first revision and runs the _selector against each version in turn. The sooner it finds a match, the sooner it returns a response. So in your case, you must have lots of revisions of documents that do not get selected by your selector. If you widen your selector to match all documents, you'll see that responses start coming much faster.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486359808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486391502","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486391502","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486391502,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5MTUwMg==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:24:44Z","updated_at":"2019-04-24T19:24:44Z","author_association":"NONE","body":"it turns out... that when the revid is 32 characters long couchdb assumes it's a hex string...","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486391502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486395385","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486395385","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486395385,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5NTM4NQ==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:36:30Z","updated_at":"2019-04-24T19:36:30Z","author_association":"NONE","body":"I think if the hex parse fails it should fallback to just doing `l2b`?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486395385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486423336","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486423336","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486423336,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyMzMzNg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:58:24Z","updated_at":"2019-04-24T20:58:24Z","author_association":"MEMBER","body":"Are you really making your own _rev tokens? That's pretty far outside the supported API.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486423336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486425149","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486425149","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486425149,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyNTE0OQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T21:03:37Z","updated_at":"2019-04-24T21:04:11Z","author_association":"MEMBER","body":"```\r\nparse_revid(RevId) when size(RevId) =:= 32 ->\r\n    RevInt = erlang:list_to_integer(?b2l(RevId), 16),\r\n     <<RevInt:128>>;\r\nparse_revid(RevId) when length(RevId) =:= 32 ->\r\n    RevInt = erlang:list_to_integer(RevId, 16),\r\n     <<RevInt:128>>;\r\nparse_revid(RevId) when is_binary(RevId) ->\r\n    RevId;\r\nparse_revid(RevId) when is_list(RevId) ->\r\n    ?l2b(RevId).```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486425149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486425491","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486425491","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486425491,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyNTQ5MQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T21:04:39Z","updated_at":"2019-04-24T21:04:39Z","author_association":"MEMBER","body":"making your own _rev values is quite unusual. What are you doing?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486425491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486461900","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-486461900","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":486461900,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ2MTkwMA==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T23:17:45Z","updated_at":"2019-04-24T23:17:45Z","author_association":"NONE","body":"> That's pretty far outside the supported API.\r\n\r\nIt is? How so?\r\n\r\n> What are you doing?\r\n\r\nAdding tracking such as modified time & modified by","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486461900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486501909","html_url":"https://github.com/apache/couchdb/issues/2016#issuecomment-486501909","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2016","id":486501909,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjUwMTkwOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T02:59:53Z","updated_at":"2019-04-25T02:59:53Z","author_association":"MEMBER","body":"The `emfile` in your errors indicates that you've run out of file descriptors.\r\n\r\nSee https://docs.couchdb.org/en/stable/maintenance/performance.html?highlight=handles#connection-limit for details.\r\n\r\nYou may also need to raise the file handle limit; see https://docs.couchdb.org/en/stable/maintenance/performance.html?highlight=handles#maximum-open-file-descriptors-ulimit for details on that.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486501909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486537524","html_url":"https://github.com/apache/couchdb/issues/2013#issuecomment-486537524","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2013","id":486537524,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjUzNzUyNA==","user":{"login":"subin1011","id":13779911,"node_id":"MDQ6VXNlcjEzNzc5OTEx","avatar_url":"https://avatars.githubusercontent.com/u/13779911?v=4","gravatar_id":"","url":"https://api.github.com/users/subin1011","html_url":"https://github.com/subin1011","followers_url":"https://api.github.com/users/subin1011/followers","following_url":"https://api.github.com/users/subin1011/following{/other_user}","gists_url":"https://api.github.com/users/subin1011/gists{/gist_id}","starred_url":"https://api.github.com/users/subin1011/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/subin1011/subscriptions","organizations_url":"https://api.github.com/users/subin1011/orgs","repos_url":"https://api.github.com/users/subin1011/repos","events_url":"https://api.github.com/users/subin1011/events{/privacy}","received_events_url":"https://api.github.com/users/subin1011/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T06:32:25Z","updated_at":"2019-04-25T06:32:25Z","author_association":"NONE","body":"Thank you @wohali.\r\n\r\nPlease correct me if I am wrong. The changes feed filters never uses indexed search but instead run the _selectors or _views against each change sequence in the database, making the response time proportional to the number of changes happening in that database ?\r\n\r\nBTW, a Lakh equals hundred thousand.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486537524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486546143","html_url":"https://github.com/apache/couchdb/issues/2013#issuecomment-486546143","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2013","id":486546143,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjU0NjE0Mw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T07:06:41Z","updated_at":"2019-04-25T07:06:41Z","author_association":"MEMBER","body":"Correct. There is no way to use a secondary index (JavaScript or Mango) to pre-filter a changes feed. Sorry.\r\n\r\nFor a detailed technical explanation as to why, see #592 and #831, and [this mailing list thread](https://lists.apache.org/thread.html/516793df0c1913c045441d0ff78339f307e2aff517d9223da44edd9e@%3Cdev.couchdb.apache.org%3E).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/486546143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487129677","html_url":"https://github.com/apache/couchdb/issues/2017#issuecomment-487129677","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2017","id":487129677,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzEyOTY3Nw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T17:04:51Z","updated_at":"2019-04-26T17:04:51Z","author_association":"MEMBER","body":"Try `require_valid_user`.\r\n\r\nhttps://docs.couchdb.org/en/2.3.1/config/auth.html?highlight=require_valid_user#chttpd/require_valid_user\r\n\r\nIf this does not meet your needs, let me know and we can reopen this ticket.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487129677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487273558","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487273558","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487273558,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI3MzU1OA==","user":{"login":"ondra-novak","id":9439234,"node_id":"MDQ6VXNlcjk0MzkyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/9439234?v=4","gravatar_id":"","url":"https://api.github.com/users/ondra-novak","html_url":"https://github.com/ondra-novak","followers_url":"https://api.github.com/users/ondra-novak/followers","following_url":"https://api.github.com/users/ondra-novak/following{/other_user}","gists_url":"https://api.github.com/users/ondra-novak/gists{/gist_id}","starred_url":"https://api.github.com/users/ondra-novak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ondra-novak/subscriptions","organizations_url":"https://api.github.com/users/ondra-novak/orgs","repos_url":"https://api.github.com/users/ondra-novak/repos","events_url":"https://api.github.com/users/ondra-novak/events{/privacy}","received_events_url":"https://api.github.com/users/ondra-novak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T10:16:10Z","updated_at":"2019-04-27T10:16:10Z","author_association":"NONE","body":"what is the consensus about this issue? Are custom _rev tokens allowed or not? if not, any invalid _rev token should be rejected with proper error message. \r\n\r\nThe current state is very unclear.\r\n\r\nI am using custom suffix on _rev value to track merged and resolved conflicts\r\nsuffix \"M\" - merged (example: 15-4b7c15ab6fa3a8271935ea91eddf8eb1M)\r\nsuffix \"R\" - resolved - deleted conflicted revision (example: 11-45637d8602d84d82e395a6fa55d12f80R)\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487273558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487290845","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487290845","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487290845,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MDg0NQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T14:31:56Z","updated_at":"2019-04-27T14:31:56Z","author_association":"MEMBER","body":"The two uses, \"Adding tracking such as modified time & modified by\", are best done with json key/value attributes rather than co-opting the _rev value.\r\n\r\nTracking merged and resolved conflicts is also not common (I've never heard of anyone do this before you mentioned it four hours ago). Conflicts are resolved by deleting the revisions that \"lose\", even if you have to make a new revision that is a combination of others. I'm curious as to what value you get out of this that isn't already present in our MVCC system.\r\n\r\nCustom _rev values are supported but it is not common to do it, hence the presence of bugs or unexpected behaviour. The historical reason we assume that 32 char rev strings can be decoded to integers escapes me but would need rooting out before we could determine if it was safe to remove those clauses.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487290845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487290919","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487290919","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487290919,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MDkxOQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T14:33:04Z","updated_at":"2019-04-27T14:35:28Z","author_association":"MEMBER","body":"Also worth noting that replication will not adopt your custom _rev approaches and will make the normal _rev strings.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487290919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292141","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487292141","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487292141,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MjE0MQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T14:48:54Z","updated_at":"2019-04-27T14:48:54Z","author_association":"MEMBER","body":"the `== 32` clauses dated back to 2009 when deterministic _rev was first introduced. I'm inferring it was done as a space/time optimization (integers are smaller than the binary text expression of them), so perhaps a fallback to just using the rev if the decode fails would be acceptable after all.\r\n\r\nGiven the future foundationdb transition and its constraints on key/value sizes, this is probably a good time to make a project decision on whether users can generate their own rev values and, if so, what constraints we might apply to them (a maximum length seems very likely to be one of them).\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292283","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487292283","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487292283,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MjI4Mw==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T14:50:52Z","updated_at":"2019-04-27T14:50:52Z","author_association":"MEMBER","body":"(https://svn.apache.org/viewvc?view=revision&revision=795232)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292886","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487292886","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487292886,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5Mjg4Ng==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T14:58:47Z","updated_at":"2019-04-27T14:58:47Z","author_association":"NONE","body":"For now... isn't it simply a case of trying to parse as MD5 and if that fails fallback to l2b?\r\n\r\nI understand this is more of a fundamental issue and this might be removed/deprecated in future versions. But previous versions where it is supported shouldn't we at least avoid these kinds of \"magical\" fail cases?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487292886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487293242","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487293242","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487293242,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MzI0Mg==","user":{"login":"ondra-novak","id":9439234,"node_id":"MDQ6VXNlcjk0MzkyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/9439234?v=4","gravatar_id":"","url":"https://api.github.com/users/ondra-novak","html_url":"https://github.com/ondra-novak","followers_url":"https://api.github.com/users/ondra-novak/followers","following_url":"https://api.github.com/users/ondra-novak/following{/other_user}","gists_url":"https://api.github.com/users/ondra-novak/gists{/gist_id}","starred_url":"https://api.github.com/users/ondra-novak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ondra-novak/subscriptions","organizations_url":"https://api.github.com/users/ondra-novak/orgs","repos_url":"https://api.github.com/users/ondra-novak/repos","events_url":"https://api.github.com/users/ondra-novak/events{/privacy}","received_events_url":"https://api.github.com/users/ondra-novak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T15:03:31Z","updated_at":"2019-04-27T15:05:17Z","author_association":"NONE","body":"\"I'm curious as to what value you get out of this that isn't already present in our MVCC system.\"\r\n\r\nEasy: This allows you to distinguish between intentionally deleted document (without R) and deleted revision (with R).  \r\n\r\nAnd you are right, this still can be handled by a key in the document itself. But revision is always available without need to download the whole document (include_docs=false) \r\n\r\nEDIT: ... and also in revision log (_revisions: {\"ids\":..., \"start\":...}}","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487293242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487293832","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487293832","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487293832,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5MzgzMg==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T15:10:52Z","updated_at":"2019-04-27T15:11:43Z","author_association":"MEMBER","body":"I still think the decoding as integer is about memory usage in the erlang runtime system. We \"know\" we can decode revs of that length to a number because we created them. A rev value itself has no meaning, it's only for comparison at update time. The deterministic rev system confuses matters by adding a meaning to gain an advantage (the same update to two separate couchdb systems generate the same new _rev, so that replication between them later does not create a conflict).\r\n\r\nI've invited others to comment (and obviously this thread is public) but my view at present is that we should not remove the '== 32' clauses or add a fallback if those don't decode correctly. At most, I suggest we add a line in the docs that user-generated rev values are discouraged and a stipulation that if those values are exactly 32 characters long they are required to be encoded integers.\r\n\r\nThe determining factor here will be whatever we are going to define for CouchDB 4.0. If we're supporting custom _rev values in that release, we will have to provide documentation on what rules apply (maximum/minimum length, allowed characters, etc) and then, as you've requested, we'll consider any rev value that doesn't follow those rules as an error and reject them, with a readable error message.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487293832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487316444","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487316444","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487316444,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMxNjQ0NA==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T20:16:28Z","updated_at":"2019-04-27T20:17:49Z","author_association":"NONE","body":"I would like to argue against the stance to not to add a fallback.\r\n\r\nCustom revs *are* supported and no limitations have been specified. Especially considering this limitation is a bit \"random\" from an API user standpoint. Hence, there might be a lot of users out in the wild who are generating customs revs and their databases can randomly \"fail\". This is what happened to us. We've been running for 4 years like this at multiple clients and it worked fine until it didn't, in the middle of a live broadcast :/^P\r\n\r\nI understand that a fallback is a slow path, but it's a lot better than what seems like a \"random\" failure.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487316444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487318218","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487318218","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487318218,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMxODIxOA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T20:44:08Z","updated_at":"2019-04-27T20:44:08Z","author_association":"MEMBER","body":"@rnewson My $0.02:\r\n* We never said whether we allow or disallow changing the revid, either in the replicator spec or the docs.\r\n* 2.x (and 3.x) should match 1.x's behaviour here. This behaviour comes from ~2009 so it's been this way for a very long time. We didn't allow it then, we don't allow it now. So: *Patch the docs.*\r\n* 4.x should feel free to deprecate user-settable _revs if it makes the implementation cleaner. I know there's some desire to update the replication spec for other reasons - this would be the ideal time to formally specify what a revid actually is.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487318218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487321849","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487321849","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487321849,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMyMTg0OQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T21:38:33Z","updated_at":"2019-04-27T21:38:33Z","author_association":"MEMBER","body":"@wohali agree that this has been the behaviour since forever (since 1.0 itself) and so this is definitely not a regression or should be a surprise to anyone making bespoke rev values.\r\n\r\nfor 4.0, I have a mild preference for saying that only couchdb gets to generate these values but the reality is that pouchdb generates rev values using a different algorithm and we (couchdb) should also be free to change (i.e, improve) this in future. I note, for full disclosure, that prior to the \"deterministic rev\" work that _rev used to be a random uuid. Replication works so long as the rev stays the same if the doc does, and changes if the doc changes. Anything beyond that is enhancement.\r\n\r\nSo... in 4.0 I'd be fine with us defining what the valid format for a _rev string is and explicitly supporting any string that matches that (and dropping the integer conversion when length is 32 chars). 3.0 could maybe drop the '== 32' clauses as a stepping stone?\r\n\r\nOther voices should chime in, I'm not comfortable defining this here. (cc @davisp @kocolosk @chewbranca @daleharvey, a response from all of you would help, of course other voices are equally welcome).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487321849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487321915","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487321915","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487321915,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMyMTkxNQ==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T21:39:41Z","updated_at":"2019-04-27T21:39:41Z","author_association":"MEMBER","body":"(I am clearly very on the fence here and could tip either way. I do 100% agree that this halfway situation is not ok. You _can_ define your own _rev strings but there are weird undocumented gotchas.).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487321915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487323474","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487323474","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487323474,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMyMzQ3NA==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T22:08:03Z","updated_at":"2019-04-27T22:12:39Z","author_association":"NONE","body":"Since I know the gotcha this is not really a problem for me. I just add an extra char at the end to make it 33 chars when it would be 32 chars otherwise. However, I am a bit confused about the reluctance to just add a fallback? I can only see advantages and no disadvantage. Is it because you don't want to have to create new patch releases for 1.x and 2.x?\r\n\r\n> This behaviour comes from ~2009 so it's been this way for a very long time. \r\n\r\nWell... we've been running since 2014 and had no problems until just the other week... so I'm not quite sure what this comment tries to point out? It being a problem is very unlikely... but it can happen none the less ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487323474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487326607","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487326607","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487326607,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzMyNjYwNw==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T23:11:41Z","updated_at":"2019-04-27T23:11:41Z","author_association":"MEMBER","body":"It's not a reluctance to make releases (we would not make a 1.x release for anything but a security related issue anyway).\r\n\r\nThis behaviour has existed since 1.0 and the consequences of changing it are not fully known. I appreciate _you_ don't see a disadvantage but that isn't sufficient.\r\n\r\nBy deciding what we'll support in 4.0 we can plan what 3.0 might do and give more people a chance to chime in with hitherto unforeseen problems that might arise (or, we hope, more confirmation that there's no problems).\r\n\r\nSummary: It's been this way for 10 years, we're not changing it without a lot more input.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487326607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487582522","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487582522","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487582522,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzU4MjUyMg==","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T13:37:09Z","updated_at":"2019-04-29T13:37:09Z","author_association":"NONE","body":"Re: https://github.com/apache/couchdb/issues/2015#issuecomment-487321849\r\n>but the reality is that pouchdb generates rev values using a different algorithm\r\n\r\nThere are also other replicator compatible data stores that generate rev IDs differently to (at least current) CouchDB e.g. the Cloudant sync libraries. We don't do anything particularly unusual, in fact, we use a random UUID similarly to CouchDB prior to deterministic revs. I do think that maintaining backwards compatibility with those types of revs probably ought to be a goal here as trying to migrate rev formats in existing datastores would be painful.\r\n\r\nIf there _have_ to be some sort of forced rev format/algorithm then I think there needs to be clearly defined versioning for replicators such that Couch N would always be able to replicate with rev ids that were supported by the replicator from at least Couch N-1, for example.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487582522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487596929","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487596929","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487596929,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzU5NjkyOQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T14:15:19Z","updated_at":"2019-04-29T14:15:19Z","author_association":"MEMBER","body":"I haven't got any issue adding a fallback that just reuses the provided rev even if its doesn't parse as hex. I'd agree that its basically just space savings for both RAM and disk usage.\r\n\r\nThe only issue I have with people creating \"meaningful\" revisions is that there's always the possibility that we evolve our own \"differently meaningful\" revisions in the future which may end up being incompatible. However, given that we're currently not versioning them that's also on us to be thoughtful of if we were to ever do that (not that I've ever heard of any ideas around doing that, just noting the possibility exists).\r\n\r\nAlso, fun fact but we also have weirdness in the opposite direction. If someone were to create a custom revision that is 16 bytes long, it'll get hex-ified [1] on the way out which is also something to think about.\r\n\r\n[1] https://github.com/apache/couchdb/blob/master/src/couch/src/couch_doc.erl#L70","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487596929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487615469","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487615469","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487615469,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzYxNTQ2OQ==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T15:01:35Z","updated_at":"2019-04-29T15:02:04Z","author_association":"NONE","body":"> Also, fun fact but we also have weirdness in the opposite direction. If someone were to create a custom revision that is 16 bytes long, it'll get hex-ified [1] on the way out which is also something to think about.\r\n\r\nNot sure how to solve that... even with a fallback... don't use custom revid that are 16 chars long :) ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487615469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487617359","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487617359","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487617359,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzYxNzM1OQ==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T15:06:18Z","updated_at":"2019-04-29T15:07:01Z","author_association":"NONE","body":"A controversial suggestion... but if you don't use this optimisation in CouchDB 1-3 (i.e. no \"smart\" parse to 128 bit integer) and then re-add it in e.g. CouchDB 4 (where it is clearly documented)... then the currently documented/assumed behaviours will all work... with a performance regression of course (revid will take 16 bytes extra memory)... but how big is that regression in reality?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487617359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487620494","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-487620494","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":487620494,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzYyMDQ5NA==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T15:14:13Z","updated_at":"2019-04-29T15:14:13Z","author_association":"MEMBER","body":"> (we would not make a 1.x release for anything but a security related issue anyway)\r\n\r\njust to clear a minor point up: 1.x is even past security releases.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487620494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487919690","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-487919690","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":487919690,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzkxOTY5MA==","user":{"login":"piyush0609","id":10628011,"node_id":"MDQ6VXNlcjEwNjI4MDEx","avatar_url":"https://avatars.githubusercontent.com/u/10628011?v=4","gravatar_id":"","url":"https://api.github.com/users/piyush0609","html_url":"https://github.com/piyush0609","followers_url":"https://api.github.com/users/piyush0609/followers","following_url":"https://api.github.com/users/piyush0609/following{/other_user}","gists_url":"https://api.github.com/users/piyush0609/gists{/gist_id}","starred_url":"https://api.github.com/users/piyush0609/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piyush0609/subscriptions","organizations_url":"https://api.github.com/users/piyush0609/orgs","repos_url":"https://api.github.com/users/piyush0609/repos","events_url":"https://api.github.com/users/piyush0609/events{/privacy}","received_events_url":"https://api.github.com/users/piyush0609/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T11:41:35Z","updated_at":"2019-04-30T11:41:35Z","author_association":"NONE","body":"@wohali I am little confused here. What I understood here is that default installation will be a single node install and if the user wants to switch it to clustered mode he can do it from the admin interface.\r\nCan you please clarify this?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/487919690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488002554","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-488002554","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":488002554,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODAwMjU1NA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T15:39:11Z","updated_at":"2019-04-30T15:39:11Z","author_association":"MEMBER","body":"@piyush0609 That's not possible.\r\n\r\nThe problem is that creation of the system databases must occur **after** nodes are joined together in a cluster.\r\n\r\n\"Configuring a node for single-node mode\" means basically creating the system databases right away, on initial startup. If you do this prior to joining nodes together in a cluster, you **prevent** that node from being moved into a cluster configuration without a very error-prone and intensively manual effort.\r\n\r\nHowever, if a node is effectively unconfigured, it can go either way - it can become a single node, or it can be joined into a cluster. Either way, you create the system databases after all of this is done.\r\n\r\nSo your approach cannot be applied without breaking cluster installation for everyone who needs it.\r\n\r\nThis is why our Debian package asks you on install which one you want - and does the necessary steps.\r\n\r\nTo move this inside the Erlang core, the proposed approach is to look for a manually-added line in the configuration file as the trigger to create these system databases.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488002554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488258325","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-488258325","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":488258325,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODI1ODMyNQ==","user":{"login":"mibes","id":7547317,"node_id":"MDQ6VXNlcjc1NDczMTc=","avatar_url":"https://avatars.githubusercontent.com/u/7547317?v=4","gravatar_id":"","url":"https://api.github.com/users/mibes","html_url":"https://github.com/mibes","followers_url":"https://api.github.com/users/mibes/followers","following_url":"https://api.github.com/users/mibes/following{/other_user}","gists_url":"https://api.github.com/users/mibes/gists{/gist_id}","starred_url":"https://api.github.com/users/mibes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mibes/subscriptions","organizations_url":"https://api.github.com/users/mibes/orgs","repos_url":"https://api.github.com/users/mibes/repos","events_url":"https://api.github.com/users/mibes/events{/privacy}","received_events_url":"https://api.github.com/users/mibes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-01T11:10:04Z","updated_at":"2019-05-01T11:10:04Z","author_association":"NONE","body":"I don't want to side-track this discussion, but have you considered Lua as an alternative (or additional) scripting language? \r\n\r\nWhen you are looking to integrate the engine into the core CouchDB code you could benefit from this Erlang implementation: https://github.com/rvirding/luerl \r\n\r\nIt comes with a built-in sandbox that allows you to control resources and timeouts.\r\n\r\nI understand Lua isn't as popular as JavaScript, but it *is* used by a number of other data stores, for example Redis, so it may be fit for purpose.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488258325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488275439","html_url":"https://github.com/apache/couchdb/issues/1884#issuecomment-488275439","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1884","id":488275439,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODI3NTQzOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-01T12:56:54Z","updated_at":"2019-05-01T12:56:54Z","author_association":"MEMBER","body":"Our forward path in general is the already-present Mango which covers a large majority of cases.\r\n\r\nJavaScript is necessary for backward compatibility, so we can't drop it entirely.\r\n\r\nWe know about Luerl.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488275439/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488308627","html_url":"https://github.com/apache/couchdb/issues/2022#issuecomment-488308627","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2022","id":488308627,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODMwODYyNw==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-01T15:07:19Z","updated_at":"2019-05-01T15:07:19Z","author_association":"MEMBER","body":"Can you move this to the couchdb-fauxton repo\n\n\n________________________________\nFrom: eagles051387 <notifications@github.com>\nSent: Wednesday, May 1, 2019 4:55 PM\nTo: apache/couchdb\nCc: Subscribed\nSubject: [apache/couchdb] Uncaught Syntax Error (#2022)\n\nDescription\n\nuncaught syntax error message in consol comes up when i create a new document. I am on version 2.3.1 of couchdb and fauxton this results in not being able to create the new document\n\nSteps to Reproduce\n\nopen the list of databases and click create new document. as soon as it brings up the json editor is when the error appears\n\nExpected Behaviour\n\nIt is expected that the document gets created with out any issues\n\nYour Environment\n\n  *   CouchDB Version used: 2.3.1\n  *   Browser name and version: chrome version 73 64bit\n  *   Operating System and version: windows 10 64bit accessing remote server which is latest fully up to date version of centos 7\n\nAdditional context\n\nI tested the above on firefox and firefox doesnt have this issue at all. said issue seems to be limited to chrome.\n\n—\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub<https://github.com/apache/couchdb/issues/2022>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AABL2ASPUE2KZDWHQTN7Z5LPTGVOVANCNFSM4HJUAKMQ>.\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488308627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488324912","html_url":"https://github.com/apache/couchdb/pull/2021#issuecomment-488324912","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2021","id":488324912,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODMyNDkxMg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-01T16:00:39Z","updated_at":"2019-05-01T16:00:39Z","author_association":"CONTRIBUTOR","body":"Ooh good idea. Then we can flip the config.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488324912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488333292","html_url":"https://github.com/apache/couchdb/issues/2015#issuecomment-488333292","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2015","id":488333292,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODMzMzI5Mg==","user":{"login":"ronag","id":3065230,"node_id":"MDQ6VXNlcjMwNjUyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/3065230?v=4","gravatar_id":"","url":"https://api.github.com/users/ronag","html_url":"https://github.com/ronag","followers_url":"https://api.github.com/users/ronag/followers","following_url":"https://api.github.com/users/ronag/following{/other_user}","gists_url":"https://api.github.com/users/ronag/gists{/gist_id}","starred_url":"https://api.github.com/users/ronag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ronag/subscriptions","organizations_url":"https://api.github.com/users/ronag/orgs","repos_url":"https://api.github.com/users/ronag/repos","events_url":"https://api.github.com/users/ronag/events{/privacy}","received_events_url":"https://api.github.com/users/ronag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-01T16:29:37Z","updated_at":"2019-05-01T16:29:42Z","author_association":"NONE","body":"This PR looks relevant https://github.com/apache/couchdb/pull/1897/files","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/488333292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/489057456","html_url":"https://github.com/apache/couchdb/issues/2024#issuecomment-489057456","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2024","id":489057456,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4OTA1NzQ1Ng==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-03T10:51:41Z","updated_at":"2019-05-03T10:52:32Z","author_association":"MEMBER","body":"This appears to be because you don't handle the case where rereduce=true. The result from your reduce function is returned in the 'values' parameter in that case, and, in the rereduce=false case, your 'mostRecentTemplate' object does not contain the metaData attribute.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/489057456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]