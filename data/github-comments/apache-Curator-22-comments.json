[{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724329","html_url":"https://github.com/apache/curator/issues/730#issuecomment-2604724329","issue_url":"https://api.github.com/repos/apache/curator/issues/730","id":2604724329,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQzMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-10T23:39:39Z","updated_at":"2025-01-21T13:22:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/120#issuecomment-170406393\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/120#issuecomment-170406393</a></p>\n\n<p>    Looks good to me</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724340","html_url":"https://github.com/apache/curator/issues/730#issuecomment-2604724340","issue_url":"https://api.github.com/repos/apache/curator/issues/730","id":2604724340,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQzNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T00:30:38Z","updated_at":"2025-01-21T13:22:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/120\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/120</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737710","html_url":"https://github.com/apache/curator/issues/806#issuecomment-2604737710","issue_url":"https://api.github.com/repos/apache/curator/issues/806","id":2604737710,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc3MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T12:38:44Z","updated_at":"2025-01-21T13:27:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=japher\">japher</a>:</i>\n<p>Heap dump that (I think) shows the problem</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737717","html_url":"https://github.com/apache/curator/issues/806#issuecomment-2604737717","issue_url":"https://api.github.com/repos/apache/curator/issues/806","id":2604737717,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc3MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T12:40:23Z","updated_at":"2025-01-21T13:27:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=japher\">japher</a>:</i>\n<p>Modified LeakTester that I used to reproduce the problem on a small scale.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737724","html_url":"https://github.com/apache/curator/issues/806#issuecomment-2604737724","issue_url":"https://api.github.com/repos/apache/curator/issues/806","id":2604737724,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc3MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T17:59:59Z","updated_at":"2025-01-21T13:27:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>In ZooKeeper 3.4.x there is no way to clear a watcher once it is set. This has been addressed in ZooKeeper 3.5.x and Curator 3.0.0. When using Curator 3.0.x with ZooKeeper 3.5.x the various Curator recipes remove any watchers when the recipe instances are closed.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737730","html_url":"https://github.com/apache/curator/issues/806#issuecomment-2604737730","issue_url":"https://api.github.com/repos/apache/curator/issues/806","id":2604737730,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc3MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T18:32:14Z","updated_at":"2025-01-21T13:27:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=japher\">japher</a>:</i>\n<p>Thanks for the info Jordan! I guess this means that the only safe way to use the service discovery recipe in Curator 2.x is to cache the service provider? It might be good to have a prominent warning somewhere to this effect.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/170650573","html_url":"https://github.com/apache/curator/pull/118#issuecomment-170650573","issue_url":"https://api.github.com/repos/apache/curator/issues/118","id":170650573,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDY1MDU3Mw==","user":{"login":"granthenke","id":1928566,"node_id":"MDQ6VXNlcjE5Mjg1NjY=","avatar_url":"https://avatars.githubusercontent.com/u/1928566?v=4","gravatar_id":"","url":"https://api.github.com/users/granthenke","html_url":"https://github.com/granthenke","followers_url":"https://api.github.com/users/granthenke/followers","following_url":"https://api.github.com/users/granthenke/following{/other_user}","gists_url":"https://api.github.com/users/granthenke/gists{/gist_id}","starred_url":"https://api.github.com/users/granthenke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/granthenke/subscriptions","organizations_url":"https://api.github.com/users/granthenke/orgs","repos_url":"https://api.github.com/users/granthenke/repos","events_url":"https://api.github.com/users/granthenke/events{/privacy}","received_events_url":"https://api.github.com/users/granthenke/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T18:50:21Z","updated_at":"2016-01-11T18:50:21Z","author_association":"MEMBER","body":"@Randgalt @madrob @cammckenzie Is there something you guys need from me?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/170650573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736339","html_url":"https://github.com/apache/curator/issues/798#issuecomment-2604736339","issue_url":"https://api.github.com/repos/apache/curator/issues/798","id":2604736339,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzYzMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T18:50:23Z","updated_at":"2025-01-21T13:27:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user granthenke commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/118#issuecomment-170650573\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/118#issuecomment-170650573</a></p>\n\n<p>    @Randgalt @madrob @cammckenzie Is there something you guys need from me?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737737","html_url":"https://github.com/apache/curator/issues/806#issuecomment-2604737737","issue_url":"https://api.github.com/repos/apache/curator/issues/806","id":2604737737,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc3Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T20:45:22Z","updated_at":"2025-01-21T13:27:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Yes, that's the intent. If you could, please update the doc and send a PR</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/170718479","html_url":"https://github.com/apache/curator/pull/118#issuecomment-170718479","issue_url":"https://api.github.com/repos/apache/curator/issues/118","id":170718479,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDcxODQ3OQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T22:49:56Z","updated_at":"2016-01-11T22:49:56Z","author_association":"CONTRIBUTOR","body":"Thanks @granthenke, I haven't heard anything from @madrob so I'll look at merging it now.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/170718479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736342","html_url":"https://github.com/apache/curator/issues/798#issuecomment-2604736342","issue_url":"https://api.github.com/repos/apache/curator/issues/798","id":2604736342,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzYzNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-11T22:49:57Z","updated_at":"2025-01-21T13:27:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/118#issuecomment-170718479\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/118#issuecomment-170718479</a></p>\n\n<p>    Thanks @granthenke, I haven't heard anything from @madrob so I'll look at merging it now.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730483","html_url":"https://github.com/apache/curator/issues/764#issuecomment-2604730483","issue_url":"https://api.github.com/repos/apache/curator/issues/764","id":2604730483,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzA0ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T15:14:19Z","updated_at":"2025-01-21T13:25:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Randgalt opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/122\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/122</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-244\" title=\"Creating parents with ACLProvider puts wrong ACLs on znodes\" class=\"issue-link\" data-issue-key=\"CURATOR-244\"><del>CURATOR-244</del></a> ZKPaths.mkdirs() was always passing the full path to the aclProvider instead of the subpath being created</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/apache/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-244\" title=\"Creating parents with ACLProvider puts wrong ACLs on znodes\" class=\"issue-link\" data-issue-key=\"CURATOR-244\"><del>CURATOR-244</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/122.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/122.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #122</p>\n\n<hr />\n<p>commit d6da90e8e746c92cc182e62a96fc2a9182fd1a15<br/>\nAuthor: randgalt <randgalt@apache.org><br/>\nDate:   2016-01-12T15:13:12Z</p>\n\n<p>    ZKPaths.mkdirs() was always passing the full path to the aclProvider instead of the subpath being created</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737885","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737885","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737885,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc4ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T16:20:19Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vines\">vines</a>:</i>\n<p>Switching it to persistent nodes with overlap it with the functionality of EnsurePath, right? So maybe it would make sense to bring these two features together.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737891","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737891","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737891,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc4OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T16:22:44Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>I don't think it overlaps. To be honest, I'm just going to rename PersistentEphemeralNode to PersistentNode and allow CreateMode.PERSISTENT to be used. I think everything else just works.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737897","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737897","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737897,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc4OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T16:46:51Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Randgalt opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-287\" title=\"PersistentEphemeralNode should be generalized to accept all create modes\" class=\"issue-link\" data-issue-key=\"CURATOR-287\"><del>CURATOR-287</del></a> Deprecated PersistentEphemeralNode in favor of PersistentNode which is the same code but now accepts any createmode</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/apache/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-287\" title=\"PersistentEphemeralNode should be generalized to accept all create modes\" class=\"issue-link\" data-issue-key=\"CURATOR-287\"><del>CURATOR-287</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #123</p>\n\n<hr />\n<p>commit fefbba1cc3bd5641983657440b40e25425165a6a<br/>\nAuthor: randgalt <randgalt@apache.org><br/>\nDate:   2016-01-12T16:45:38Z</p>\n\n<p>    Deprecated PersistentEphemeralNode in favor of PersistentNode which is the same code but now accepts any createmode</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/170971984","html_url":"https://github.com/apache/curator/pull/123#issuecomment-170971984","issue_url":"https://api.github.com/repos/apache/curator/issues/123","id":170971984,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MDk3MTk4NA==","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T16:50:22Z","updated_at":"2016-01-12T16:50:47Z","author_association":"MEMBER","body":"PersistentNode is a straight copy of PersistentEphemeralNode. The only differences:\n- Now accepts any CreateMode\n- Logs a message if the node that exists doesn't match the mode requested (i.e. a user reported that an error caused another process to create the node as persistent when ephemeral was wanted, etc.)\n- PersistentEphemeralNode is now a straight extension to PersistentNode\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/170971984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737904","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737904","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737904,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-12T16:50:23Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#issuecomment-170971984\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#issuecomment-170971984</a></p>\n\n<p>    PersistentNode is a straight copy of PersistentEphemeralNode. The only differences:</p>\n\n<ul>\n\t<li>Now accepts any CreateMode</li>\n\t<li>Logs a message if the node that exists doesn't match the mode requested (i.e. a user reported that an error caused another process to create the node as persistent when ephemeral was wanted, etc.)</li>\n</ul>\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/171414205","html_url":"https://github.com/apache/curator/pull/118#issuecomment-171414205","issue_url":"https://api.github.com/repos/apache/curator/issues/118","id":171414205,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MTQxNDIwNQ==","user":{"login":"granthenke","id":1928566,"node_id":"MDQ6VXNlcjE5Mjg1NjY=","avatar_url":"https://avatars.githubusercontent.com/u/1928566?v=4","gravatar_id":"","url":"https://api.github.com/users/granthenke","html_url":"https://github.com/granthenke","followers_url":"https://api.github.com/users/granthenke/followers","following_url":"https://api.github.com/users/granthenke/following{/other_user}","gists_url":"https://api.github.com/users/granthenke/gists{/gist_id}","starred_url":"https://api.github.com/users/granthenke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/granthenke/subscriptions","organizations_url":"https://api.github.com/users/granthenke/orgs","repos_url":"https://api.github.com/users/granthenke/repos","events_url":"https://api.github.com/users/granthenke/events{/privacy}","received_events_url":"https://api.github.com/users/granthenke/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-13T19:54:48Z","updated_at":"2016-01-13T19:54:48Z","author_association":"MEMBER","body":"@cammckenzie Thanks for the update!\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/171414205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736350","html_url":"https://github.com/apache/curator/issues/798#issuecomment-2604736350","issue_url":"https://api.github.com/repos/apache/curator/issues/798","id":2604736350,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzYzNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-13T19:54:49Z","updated_at":"2025-01-21T13:27:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user granthenke commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/118#issuecomment-171414205\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/118#issuecomment-171414205</a></p>\n\n<p>    @cammckenzie Thanks for the update!</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724148","html_url":"https://github.com/apache/curator/issues/729#issuecomment-2604724148","issue_url":"https://api.github.com/repos/apache/curator/issues/729","id":2604724148,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQxNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-13T20:22:45Z","updated_at":"2025-01-21T13:22:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Randgalt opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-208\" title=\"InterProcessSemaphoreV2 swallows InterruptedException\" class=\"issue-link\" data-issue-key=\"CURATOR-208\"><del>CURATOR-208</del></a> General fix for catch-alls throughout the code and interruptes</p>\n\n<p>    General fix for catch-alls throughout the code. This is overkill but it strikes me as the safest way to address the problem. Everywhere there is a catch-all add a check for InterruptedException and reset the thread's interrupted state</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/apache/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-208\" title=\"InterProcessSemaphoreV2 swallows InterruptedException\" class=\"issue-link\" data-issue-key=\"CURATOR-208\"><del>CURATOR-208</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #125</p>\n\n<hr />\n<p>commit 003acc6027aa63e59b5de3b0d1da7e33c2b9f9cc<br/>\nAuthor: randgalt <randgalt@apache.org><br/>\nDate:   2016-01-13T20:20:54Z</p>\n\n<p>    General fix for catch-alls throughout the code. This is overkill but it strikes me as the safest way to address the problem. Everywhere there is a catch-all add a check for InterruptedException and reset the thread's interrupted state</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724155","html_url":"https://github.com/apache/curator/issues/729#issuecomment-2604724155","issue_url":"https://api.github.com/repos/apache/curator/issues/729","id":2604724155,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQxNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T21:55:54Z","updated_at":"2025-01-21T13:22:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125#discussion_r49953173\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125#discussion_r49953173</a></p>\n\n<p>    &#8212; Diff: curator-framework/src/main/java/org/apache/curator/framework/imps/CuratorFrameworkImpl.java &#8212;<br/>\n    @@ -257,8 +258,7 @@ public void stateChanged(CuratorFramework client, ConnectionState newState)</p>\n\n<p> client.start();</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>executorService = Executors.newFixedThreadPool(2, threadFactory);  // 1 for listeners, 1 for background ops<br/>\n    -<br/>\n    +    executorService = Executors.newSingleThreadScheduledExecutor(threadFactory);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Is there a reason that this has gone from a 2 thread pool to a single thread pool? Looking at the old code, it would seem that only 1 is used (for the background loop), but just double checking.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724160","html_url":"https://github.com/apache/curator/issues/729#issuecomment-2604724160","issue_url":"https://api.github.com/repos/apache/curator/issues/729","id":2604724160,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQxNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T22:07:10Z","updated_at":"2025-01-21T13:22:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125#discussion_r49953348\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125#discussion_r49953348</a></p>\n\n<p>    &#8212; Diff: curator-framework/src/main/java/org/apache/curator/framework/imps/CuratorFrameworkImpl.java &#8212;<br/>\n    @@ -257,8 +258,7 @@ public void stateChanged(CuratorFramework client, ConnectionState newState)</p>\n\n<p> client.start();</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>executorService = Executors.newFixedThreadPool(2, threadFactory);  // 1 for listeners, 1 for background ops<br/>\n    -<br/>\n    +    executorService = Executors.newSingleThreadScheduledExecutor(threadFactory);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The comment was wrong. This must have changed at some point. I noticed only 1 was being used and corrected it.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172389430","html_url":"https://github.com/apache/curator/pull/125#issuecomment-172389430","issue_url":"https://api.github.com/repos/apache/curator/issues/125","id":172389430,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjM4OTQzMA==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T22:11:31Z","updated_at":"2016-01-17T22:11:31Z","author_association":"CONTRIBUTOR","body":"Looks ok to me I think. I agree that it's kind of brute force, but I can't think of a cleaner way of doing it without a complete audit of the code.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172389430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724166","html_url":"https://github.com/apache/curator/issues/729#issuecomment-2604724166","issue_url":"https://api.github.com/repos/apache/curator/issues/729","id":2604724166,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQxNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T22:11:32Z","updated_at":"2025-01-21T13:22:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125#issuecomment-172389430\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125#issuecomment-172389430</a></p>\n\n<p>    Looks ok to me I think. I agree that it's kind of brute force, but I can't think of a cleaner way of doing it without a complete audit of the code.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172390472","html_url":"https://github.com/apache/curator/pull/124#issuecomment-172390472","issue_url":"https://api.github.com/repos/apache/curator/issues/124","id":172390472,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjM5MDQ3Mg==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T22:19:07Z","updated_at":"2016-01-17T22:19:07Z","author_association":"CONTRIBUTOR","body":"Looks good to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172390472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724174","html_url":"https://github.com/apache/curator/issues/729#issuecomment-2604724174","issue_url":"https://api.github.com/repos/apache/curator/issues/729","id":2604724174,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MjQxNzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-17T22:26:52Z","updated_at":"2025-01-21T13:22:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/125\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/125</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604724174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736355","html_url":"https://github.com/apache/curator/issues/798#issuecomment-2604736355","issue_url":"https://api.github.com/repos/apache/curator/issues/798","id":2604736355,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzYzNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T00:12:07Z","updated_at":"2025-01-21T13:27:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/118\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/118</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604736355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737912","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737912","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737912,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:22:49Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50050583\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50050583</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,382 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import com.google.common.annotations.VisibleForTesting;<br/>\n    +import com.google.common.base.Preconditions;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.ACLBackgroundPathAndBytesable;<br/>\n    +import org.apache.curator.framework.api.BackgroundCallback;<br/>\n    +import org.apache.curator.framework.api.CreateBuilder;<br/>\n    +import org.apache.curator.framework.api.CreateModable;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorWatcher;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.curator.utils.PathUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.Watcher.Event.EventType;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import java.io.Closeable;<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.concurrent.CountDownLatch;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +/**<br/>\n    + * <p><br/>\n    + * A persistent node is a node that attempts to stay present in<br/>\n    + * ZooKeeper, even through connection and session interruptions.<br/>\n    + * </p><br/>\n    + * <p><br/>\n    + * Thanks to bbeck (<a href=\"https://github.com/bbeck\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bbeck</a>) for the initial coding and design<br/>\n    + * </p><br/>\n    + */<br/>\n    +public class PersistentNode implements Closeable<br/>\n    +{<br/>\n    +    private final AtomicReference<CountDownLatch> initialCreateLatch = new AtomicReference<CountDownLatch>(new CountDownLatch(1));<br/>\n    +    private final Logger log = LoggerFactory.getLogger(getClass());<br/>\n    +    private final CuratorFramework client;<br/>\n    +    private final CreateModable<ACLBackgroundPathAndBytesable<String>> createMethod;<br/>\n    +    private final AtomicReference<String> nodePath = new AtomicReference<String>(null);<br/>\n    +    private final String basePath;<br/>\n    +    private final CreateMode mode;<br/>\n    +    private final AtomicReference<byte[]> data = new AtomicReference<byte[]>();<br/>\n    +    private final AtomicReference<State> state = new AtomicReference<State>(State.LATENT);<br/>\n    +    private final AtomicBoolean authFailure = new AtomicBoolean(false);<br/>\n    +    private final BackgroundCallback backgroundCallback;<br/>\n    +    private final boolean useProtection;<br/>\n    +    private final CuratorWatcher watcher = new CuratorWatcher()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void process(WatchedEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getType() == EventType.NodeDeleted )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }<br/>\n    +    else if ( event.getType() == EventType.NodeDataChanged )<br/>\n    +    {\n    +watchNode();\n    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback checkExistsCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.NONODE.intValue() )<br/>\n    +    {    +createNode();    +    }\n<p>    +    else<br/>\n    +    {<br/>\n    +boolean isEphemeral = event.getStat().getEphemeralOwner() != 0;<br/>\n    +if ( isEphemeral != mode.isEphemeral() )<br/>\n    +</p>\n{\n    +    log.warn(\"Existing node ephemeral state doesn't match requested state. Maybe the node was created outside of PersistentNode? \" + basePath);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback setDataCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event)<br/>\n    +    throws Exception<br/>\n    +{<br/>\n    +    //If the result is ok then initialisation is complete (if we're still initialising)<br/>\n    +    //Don't retry on other errors as the only recoverable cases will be connection loss<br/>\n    +    //and the node not existing, both of which are already handled by other watches.<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +    </p>\n{\n    +//Update is ok, mark initialisation as complete if required.\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +    private final ConnectionStateListener connectionStateListener = new ConnectionStateListener()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n    +{<br/>\n    +    if ( newState == ConnectionState.RECONNECTED )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +<br/>\n    +    private enum State<br/>\n    +    </p>\n{\n    +LATENT,\n    +STARTED,\n    +CLOSED\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * @param clientclient instance<br/>\n    +     * @param mode  creation mode<br/>\n    +     * @param useProtection if true, call </p>\n{@link CreateBuilder#withProtection()}\n<p>    +     * @param basePath the base path for the node<br/>\n    +     * @param initData data for the node<br/>\n    +     */<br/>\n    +    public PersistentNode(CuratorFramework client, final CreateMode mode, boolean useProtection, final String basePath, byte[] initData)<br/>\n    +    {<br/>\n    +this.useProtection = useProtection;<br/>\n    +this.client = Preconditions.checkNotNull(client, \"client cannot be null\");<br/>\n    +this.basePath = PathUtils.validatePath(basePath);<br/>\n    +this.mode = Preconditions.checkNotNull(mode, \"mode cannot be null\");<br/>\n    +final byte[] data = Preconditions.checkNotNull(initData, \"data cannot be null\");<br/>\n    +<br/>\n    +backgroundCallback = new BackgroundCallback()<br/>\n    +{<br/>\n    +    @Override<br/>\n    +    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +    {<br/>\n    +String path = null;<br/>\n    +boolean nodeExists = false;<br/>\n    +if ( event.getResultCode() == KeeperException.Code.NODEEXISTS.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getPath();\n    +    nodeExists = true;\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getName();\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.NOAUTH.intValue() )<br/>\n    +{<br/>\n    +    log.warn(\"Client does not have authorisation to write ephemeral node at path {}\", event.getPath());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This log message refers to ephemeral which is no longer necessarily the case.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737918","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737918","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737918,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:24:10Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50050679\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50050679</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,382 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import com.google.common.annotations.VisibleForTesting;<br/>\n    +import com.google.common.base.Preconditions;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.ACLBackgroundPathAndBytesable;<br/>\n    +import org.apache.curator.framework.api.BackgroundCallback;<br/>\n    +import org.apache.curator.framework.api.CreateBuilder;<br/>\n    +import org.apache.curator.framework.api.CreateModable;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorWatcher;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.curator.utils.PathUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.Watcher.Event.EventType;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import java.io.Closeable;<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.concurrent.CountDownLatch;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +/**<br/>\n    + * <p><br/>\n    + * A persistent node is a node that attempts to stay present in<br/>\n    + * ZooKeeper, even through connection and session interruptions.<br/>\n    + * </p><br/>\n    + * <p><br/>\n    + * Thanks to bbeck (<a href=\"https://github.com/bbeck\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bbeck</a>) for the initial coding and design<br/>\n    + * </p><br/>\n    + */<br/>\n    +public class PersistentNode implements Closeable<br/>\n    +{<br/>\n    +    private final AtomicReference<CountDownLatch> initialCreateLatch = new AtomicReference<CountDownLatch>(new CountDownLatch(1));<br/>\n    +    private final Logger log = LoggerFactory.getLogger(getClass());<br/>\n    +    private final CuratorFramework client;<br/>\n    +    private final CreateModable<ACLBackgroundPathAndBytesable<String>> createMethod;<br/>\n    +    private final AtomicReference<String> nodePath = new AtomicReference<String>(null);<br/>\n    +    private final String basePath;<br/>\n    +    private final CreateMode mode;<br/>\n    +    private final AtomicReference<byte[]> data = new AtomicReference<byte[]>();<br/>\n    +    private final AtomicReference<State> state = new AtomicReference<State>(State.LATENT);<br/>\n    +    private final AtomicBoolean authFailure = new AtomicBoolean(false);<br/>\n    +    private final BackgroundCallback backgroundCallback;<br/>\n    +    private final boolean useProtection;<br/>\n    +    private final CuratorWatcher watcher = new CuratorWatcher()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void process(WatchedEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getType() == EventType.NodeDeleted )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }<br/>\n    +    else if ( event.getType() == EventType.NodeDataChanged )<br/>\n    +    {\n    +watchNode();\n    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback checkExistsCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.NONODE.intValue() )<br/>\n    +    {    +createNode();    +    }\n<p>    +    else<br/>\n    +    {<br/>\n    +boolean isEphemeral = event.getStat().getEphemeralOwner() != 0;<br/>\n    +if ( isEphemeral != mode.isEphemeral() )<br/>\n    +</p>\n{\n    +    log.warn(\"Existing node ephemeral state doesn't match requested state. Maybe the node was created outside of PersistentNode? \" + basePath);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback setDataCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event)<br/>\n    +    throws Exception<br/>\n    +{<br/>\n    +    //If the result is ok then initialisation is complete (if we're still initialising)<br/>\n    +    //Don't retry on other errors as the only recoverable cases will be connection loss<br/>\n    +    //and the node not existing, both of which are already handled by other watches.<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +    </p>\n{\n    +//Update is ok, mark initialisation as complete if required.\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +    private final ConnectionStateListener connectionStateListener = new ConnectionStateListener()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n    +{<br/>\n    +    if ( newState == ConnectionState.RECONNECTED )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +<br/>\n    +    private enum State<br/>\n    +    </p>\n{\n    +LATENT,\n    +STARTED,\n    +CLOSED\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * @param clientclient instance<br/>\n    +     * @param mode  creation mode<br/>\n    +     * @param useProtection if true, call </p>\n{@link CreateBuilder#withProtection()}\n<p>    +     * @param basePath the base path for the node<br/>\n    +     * @param initData data for the node<br/>\n    +     */<br/>\n    +    public PersistentNode(CuratorFramework client, final CreateMode mode, boolean useProtection, final String basePath, byte[] initData)<br/>\n    +    {<br/>\n    +this.useProtection = useProtection;<br/>\n    +this.client = Preconditions.checkNotNull(client, \"client cannot be null\");<br/>\n    +this.basePath = PathUtils.validatePath(basePath);<br/>\n    +this.mode = Preconditions.checkNotNull(mode, \"mode cannot be null\");<br/>\n    +final byte[] data = Preconditions.checkNotNull(initData, \"data cannot be null\");<br/>\n    +<br/>\n    +backgroundCallback = new BackgroundCallback()<br/>\n    +{<br/>\n    +    @Override<br/>\n    +    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +    {<br/>\n    +String path = null;<br/>\n    +boolean nodeExists = false;<br/>\n    +if ( event.getResultCode() == KeeperException.Code.NODEEXISTS.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getPath();\n    +    nodeExists = true;\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getName();\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.NOAUTH.intValue() )<br/>\n    +{<br/>\n    +    log.warn(\"Client does not have authorisation to write ephemeral node at path {}\", event.getPath());<br/>\n    +    authFailure.set(true);<br/>\n    +    return;<br/>\n    +}<br/>\n    +if ( path != null )<br/>\n    +{<br/>\n    +    authFailure.set(false);<br/>\n    +    nodePath.set(path);<br/>\n    +    watchNode();<br/>\n    +<br/>\n    +    if ( nodeExists )<br/>\n    +    </p>\n{\n    +client.setData().inBackground(setDataCallback).forPath(getActualPath(), getData());\n    +    }\n<p>    +    else<br/>\n    +    </p>\n{\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +else<br/>\n    +</p>\n{\n    +    createNode();\n    +}\n<p>    +    }<br/>\n    +};<br/>\n    +<br/>\n    +createMethod = useProtection ? client.create().creatingParentContainersIfNeeded().withProtection() : client.create().creatingParentContainersIfNeeded();<br/>\n    +this.data.set(Arrays.copyOf(data, data.length));<br/>\n    +    }<br/>\n    +<br/>\n    +    private void initialisationComplete()<br/>\n    +    {<br/>\n    +CountDownLatch localLatch = initialCreateLatch.getAndSet(null);<br/>\n    +if ( localLatch != null )<br/>\n    +</p>\n{\n    +    localLatch.countDown();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * You must call start() to initiate the persistent ephemeral node. An attempt to create the node<br/>\n    +     * in the background will be started<br/>\n    +     */<br/>\n    +    public void start()<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.compareAndSet(State.LATENT, State.STARTED), \"Already started\");\n    +\n    +client.getConnectionStateListenable().addListener(connectionStateListener);\n    +createNode();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Block until the either initial node creation initiated by </p>\n{@link #start()}\n<p> succeeds or<br/>\n    +     * the timeout elapses.<br/>\n    +     *<br/>\n    +     * @param timeout the maximum time to wait<br/>\n    +     * @param unit    time unit<br/>\n    +     * @return if the node was created before timeout<br/>\n    +     * @throws InterruptedException if the thread is interrupted<br/>\n    +     */<br/>\n    +    public boolean waitForInitialCreate(long timeout, TimeUnit unit) throws InterruptedException<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.get() == State.STARTED, \"Not started\");\n    +\n    +CountDownLatch localLatch = initialCreateLatch.get();\n    +return (localLatch == null) || localLatch.await(timeout, unit);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void close() throws IOException<br/>\n    +    {<br/>\n    +if ( !state.compareAndSet(State.STARTED, State.CLOSED) )<br/>\n    +</p>\n{\n    +    return;\n    +}\n<p>    +<br/>\n    +client.getConnectionStateListenable().removeListener(connectionStateListener);<br/>\n    +<br/>\n    +try<br/>\n    +</p>\n{\n    +    deleteNode();\n    +}\n<p>    +catch ( Exception e )<br/>\n    +</p>\n{\n    +    throw new IOException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Returns the currently set path or null if the node does not exist<br/>\n    +     *<br/>\n    +     * @return node path or null<br/>\n    +     */<br/>\n    +    public String getActualPath()<br/>\n    +    </p>\n{\n    +return nodePath.get();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Set data that ephemeral node should set in ZK also writes the data to the node<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Javadoc should not refer to ephemeral</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737923","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737923","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737923,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:26:25Z","updated_at":"2025-01-21T13:27:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50050858\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50050858</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,62 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.CuratorFrameworkFactory;<br/>\n    +import org.apache.curator.retry.RetryOneTime;<br/>\n    +import org.apache.curator.test.BaseClassForTests;<br/>\n    +import org.apache.curator.test.Timing;<br/>\n    +import org.apache.curator.utils.CloseableUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.testng.Assert;<br/>\n    +import org.testng.annotations.Test;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +<br/>\n    +public class TestPersistentNode extends BaseClassForTests<br/>\n    +{<br/>\n    +    @Test<br/>\n    +    public void testBasic() throws Exception<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Maybe additional tests for the sequential case?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737932","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737932","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737932,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:27:09Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50050909\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50050909</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,382 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import com.google.common.annotations.VisibleForTesting;<br/>\n    +import com.google.common.base.Preconditions;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.ACLBackgroundPathAndBytesable;<br/>\n    +import org.apache.curator.framework.api.BackgroundCallback;<br/>\n    +import org.apache.curator.framework.api.CreateBuilder;<br/>\n    +import org.apache.curator.framework.api.CreateModable;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorWatcher;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.curator.utils.PathUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.Watcher.Event.EventType;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import java.io.Closeable;<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.concurrent.CountDownLatch;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +/**<br/>\n    + * <p><br/>\n    + * A persistent node is a node that attempts to stay present in<br/>\n    + * ZooKeeper, even through connection and session interruptions.<br/>\n    + * </p><br/>\n    + * <p><br/>\n    + * Thanks to bbeck (<a href=\"https://github.com/bbeck\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bbeck</a>) for the initial coding and design<br/>\n    + * </p><br/>\n    + */<br/>\n    +public class PersistentNode implements Closeable<br/>\n    +{<br/>\n    +    private final AtomicReference<CountDownLatch> initialCreateLatch = new AtomicReference<CountDownLatch>(new CountDownLatch(1));<br/>\n    +    private final Logger log = LoggerFactory.getLogger(getClass());<br/>\n    +    private final CuratorFramework client;<br/>\n    +    private final CreateModable<ACLBackgroundPathAndBytesable<String>> createMethod;<br/>\n    +    private final AtomicReference<String> nodePath = new AtomicReference<String>(null);<br/>\n    +    private final String basePath;<br/>\n    +    private final CreateMode mode;<br/>\n    +    private final AtomicReference<byte[]> data = new AtomicReference<byte[]>();<br/>\n    +    private final AtomicReference<State> state = new AtomicReference<State>(State.LATENT);<br/>\n    +    private final AtomicBoolean authFailure = new AtomicBoolean(false);<br/>\n    +    private final BackgroundCallback backgroundCallback;<br/>\n    +    private final boolean useProtection;<br/>\n    +    private final CuratorWatcher watcher = new CuratorWatcher()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void process(WatchedEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getType() == EventType.NodeDeleted )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }<br/>\n    +    else if ( event.getType() == EventType.NodeDataChanged )<br/>\n    +    {\n    +watchNode();\n    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback checkExistsCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.NONODE.intValue() )<br/>\n    +    {    +createNode();    +    }\n<p>    +    else<br/>\n    +    {<br/>\n    +boolean isEphemeral = event.getStat().getEphemeralOwner() != 0;<br/>\n    +if ( isEphemeral != mode.isEphemeral() )<br/>\n    +</p>\n{\n    +    log.warn(\"Existing node ephemeral state doesn't match requested state. Maybe the node was created outside of PersistentNode? \" + basePath);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback setDataCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event)<br/>\n    +    throws Exception<br/>\n    +{<br/>\n    +    //If the result is ok then initialisation is complete (if we're still initialising)<br/>\n    +    //Don't retry on other errors as the only recoverable cases will be connection loss<br/>\n    +    //and the node not existing, both of which are already handled by other watches.<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +    </p>\n{\n    +//Update is ok, mark initialisation as complete if required.\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +    private final ConnectionStateListener connectionStateListener = new ConnectionStateListener()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n    +{<br/>\n    +    if ( newState == ConnectionState.RECONNECTED )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +<br/>\n    +    private enum State<br/>\n    +    </p>\n{\n    +LATENT,\n    +STARTED,\n    +CLOSED\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * @param clientclient instance<br/>\n    +     * @param mode  creation mode<br/>\n    +     * @param useProtection if true, call </p>\n{@link CreateBuilder#withProtection()}\n<p>    +     * @param basePath the base path for the node<br/>\n    +     * @param initData data for the node<br/>\n    +     */<br/>\n    +    public PersistentNode(CuratorFramework client, final CreateMode mode, boolean useProtection, final String basePath, byte[] initData)<br/>\n    +    {<br/>\n    +this.useProtection = useProtection;<br/>\n    +this.client = Preconditions.checkNotNull(client, \"client cannot be null\");<br/>\n    +this.basePath = PathUtils.validatePath(basePath);<br/>\n    +this.mode = Preconditions.checkNotNull(mode, \"mode cannot be null\");<br/>\n    +final byte[] data = Preconditions.checkNotNull(initData, \"data cannot be null\");<br/>\n    +<br/>\n    +backgroundCallback = new BackgroundCallback()<br/>\n    +{<br/>\n    +    @Override<br/>\n    +    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +    {<br/>\n    +String path = null;<br/>\n    +boolean nodeExists = false;<br/>\n    +if ( event.getResultCode() == KeeperException.Code.NODEEXISTS.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getPath();\n    +    nodeExists = true;\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getName();\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.NOAUTH.intValue() )<br/>\n    +{<br/>\n    +    log.warn(\"Client does not have authorisation to write ephemeral node at path {}\", event.getPath());<br/>\n    +    authFailure.set(true);<br/>\n    +    return;<br/>\n    +}<br/>\n    +if ( path != null )<br/>\n    +{<br/>\n    +    authFailure.set(false);<br/>\n    +    nodePath.set(path);<br/>\n    +    watchNode();<br/>\n    +<br/>\n    +    if ( nodeExists )<br/>\n    +    </p>\n{\n    +client.setData().inBackground(setDataCallback).forPath(getActualPath(), getData());\n    +    }\n<p>    +    else<br/>\n    +    </p>\n{\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +else<br/>\n    +</p>\n{\n    +    createNode();\n    +}\n<p>    +    }<br/>\n    +};<br/>\n    +<br/>\n    +createMethod = useProtection ? client.create().creatingParentContainersIfNeeded().withProtection() : client.create().creatingParentContainersIfNeeded();<br/>\n    +this.data.set(Arrays.copyOf(data, data.length));<br/>\n    +    }<br/>\n    +<br/>\n    +    private void initialisationComplete()<br/>\n    +    {<br/>\n    +CountDownLatch localLatch = initialCreateLatch.getAndSet(null);<br/>\n    +if ( localLatch != null )<br/>\n    +</p>\n{\n    +    localLatch.countDown();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * You must call start() to initiate the persistent ephemeral node. An attempt to create the node<br/>\n    +     * in the background will be started<br/>\n    +     */<br/>\n    +    public void start()<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.compareAndSet(State.LATENT, State.STARTED), \"Already started\");\n    +\n    +client.getConnectionStateListenable().addListener(connectionStateListener);\n    +createNode();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Block until the either initial node creation initiated by </p>\n{@link #start()}\n<p> succeeds or<br/>\n    +     * the timeout elapses.<br/>\n    +     *<br/>\n    +     * @param timeout the maximum time to wait<br/>\n    +     * @param unit    time unit<br/>\n    +     * @return if the node was created before timeout<br/>\n    +     * @throws InterruptedException if the thread is interrupted<br/>\n    +     */<br/>\n    +    public boolean waitForInitialCreate(long timeout, TimeUnit unit) throws InterruptedException<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.get() == State.STARTED, \"Not started\");\n    +\n    +CountDownLatch localLatch = initialCreateLatch.get();\n    +return (localLatch == null) || localLatch.await(timeout, unit);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void close() throws IOException<br/>\n    +    {<br/>\n    +if ( !state.compareAndSet(State.STARTED, State.CLOSED) )<br/>\n    +</p>\n{\n    +    return;\n    +}\n<p>    +<br/>\n    +client.getConnectionStateListenable().removeListener(connectionStateListener);<br/>\n    +<br/>\n    +try<br/>\n    +{<br/>\n    +    deleteNode();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Does it make sense to delete the node on close if it's persistent?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172670629","html_url":"https://github.com/apache/curator/pull/123#issuecomment-172670629","issue_url":"https://api.github.com/repos/apache/curator/issues/123","id":172670629,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY3MDYyOQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:27:56Z","updated_at":"2016-01-18T22:27:56Z","author_association":"CONTRIBUTOR","body":"In general, looks ok to me. Is there a particular use case that you envisage for a persistent PersistentNode?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172670629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737941","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737941","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737941,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:27:57Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#issuecomment-172670629\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#issuecomment-172670629</a></p>\n\n<p>    In general, looks ok to me. Is there a particular use case that you envisage for a persistent PersistentNode?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172672665","html_url":"https://github.com/apache/curator/pull/122#issuecomment-172672665","issue_url":"https://api.github.com/repos/apache/curator/issues/122","id":172672665,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY3MjY2NQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:37:35Z","updated_at":"2016-01-18T22:37:35Z","author_association":"CONTRIBUTOR","body":"This looks ok to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172672665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730487","html_url":"https://github.com/apache/curator/issues/764#issuecomment-2604730487","issue_url":"https://api.github.com/repos/apache/curator/issues/764","id":2604730487,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzA0ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:37:36Z","updated_at":"2025-01-21T13:25:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/122#issuecomment-172672665\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/122#issuecomment-172672665</a></p>\n\n<p>    This looks ok to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172672853","html_url":"https://github.com/apache/curator/pull/117#issuecomment-172672853","issue_url":"https://api.github.com/repos/apache/curator/issues/117","id":172672853,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY3Mjg1Mw==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:38:44Z","updated_at":"2016-01-18T22:38:44Z","author_association":"CONTRIBUTOR","body":"Looks ok to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172672853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738389","html_url":"https://github.com/apache/curator/issues/810#issuecomment-2604738389","issue_url":"https://api.github.com/repos/apache/curator/issues/810","id":2604738389,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzgzODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T22:54:32Z","updated_at":"2025-01-21T13:28:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Randgalt opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/126\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/126</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-290\" title=\"Watcher removal is not removing internal Curator data structures\" class=\"issue-link\" data-issue-key=\"CURATOR-290\"><del>CURATOR-290</del></a> Make sure NamespaceWatcherMap is cleared</p>\n\n<p>    Make sure NamespaceWatcherMap is cleared when the corresponding watcher is removed via new APIs. Added tests to ensure this.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/apache/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-290\" title=\"Watcher removal is not removing internal Curator data structures\" class=\"issue-link\" data-issue-key=\"CURATOR-290\"><del>CURATOR-290</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/126.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/126.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #126</p>\n\n<hr />\n<p>commit adb4be47ca6e64962aae3067412cc76aa4b0cd22<br/>\nAuthor: randgalt <randgalt@apache.org><br/>\nDate:   2016-01-18T22:53:27Z</p>\n\n<p>    Make sure NamespaceWatcherMap is cleared when the corresponding watcher is removed via new APIs. Added tests to ensure this.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730495","html_url":"https://github.com/apache/curator/issues/764#issuecomment-2604730495","issue_url":"https://api.github.com/repos/apache/curator/issues/764","id":2604730495,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzA0OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:04:38Z","updated_at":"2025-01-21T13:25:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/122\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/122</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604730495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172677629","html_url":"https://github.com/apache/curator/pull/126#issuecomment-172677629","issue_url":"https://api.github.com/repos/apache/curator/issues/126","id":172677629,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY3NzYyOQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:09:12Z","updated_at":"2016-01-18T23:09:12Z","author_association":"CONTRIBUTOR","body":"Looks good to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172677629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738398","html_url":"https://github.com/apache/curator/issues/810#issuecomment-2604738398","issue_url":"https://api.github.com/repos/apache/curator/issues/810","id":2604738398,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzgzOTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:09:13Z","updated_at":"2025-01-21T13:28:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/126#issuecomment-172677629\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/126#issuecomment-172677629</a></p>\n\n<p>    Looks good to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/172677919","html_url":"https://github.com/apache/curator/pull/123#issuecomment-172677919","issue_url":"https://api.github.com/repos/apache/curator/issues/123","id":172677919,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjY3NzkxOQ==","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:11:10Z","updated_at":"2016-01-18T23:11:25Z","author_association":"MEMBER","body":"> particular use case that you envisage for a persistent PersistentNode\n\nYes - at my new job :)\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/172677919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737943","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737943","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737943,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:11:11Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#issuecomment-172677919\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#issuecomment-172677919</a></p>\n\n<p>      particular use case that you envisage for a persistent PersistentNode</p>\n\n<p>    Yes - at my new job <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738409","html_url":"https://github.com/apache/curator/issues/810#issuecomment-2604738409","issue_url":"https://api.github.com/repos/apache/curator/issues/810","id":2604738409,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg0MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-18T23:12:48Z","updated_at":"2025-01-21T13:28:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/126\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/126</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737948","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737948","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737948,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T00:02:53Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50058605\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50058605</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,382 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import com.google.common.annotations.VisibleForTesting;<br/>\n    +import com.google.common.base.Preconditions;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.ACLBackgroundPathAndBytesable;<br/>\n    +import org.apache.curator.framework.api.BackgroundCallback;<br/>\n    +import org.apache.curator.framework.api.CreateBuilder;<br/>\n    +import org.apache.curator.framework.api.CreateModable;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorWatcher;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.curator.utils.PathUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.Watcher.Event.EventType;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import java.io.Closeable;<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.concurrent.CountDownLatch;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +/**<br/>\n    + * <p><br/>\n    + * A persistent node is a node that attempts to stay present in<br/>\n    + * ZooKeeper, even through connection and session interruptions.<br/>\n    + * </p><br/>\n    + * <p><br/>\n    + * Thanks to bbeck (<a href=\"https://github.com/bbeck\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bbeck</a>) for the initial coding and design<br/>\n    + * </p><br/>\n    + */<br/>\n    +public class PersistentNode implements Closeable<br/>\n    +{<br/>\n    +    private final AtomicReference<CountDownLatch> initialCreateLatch = new AtomicReference<CountDownLatch>(new CountDownLatch(1));<br/>\n    +    private final Logger log = LoggerFactory.getLogger(getClass());<br/>\n    +    private final CuratorFramework client;<br/>\n    +    private final CreateModable<ACLBackgroundPathAndBytesable<String>> createMethod;<br/>\n    +    private final AtomicReference<String> nodePath = new AtomicReference<String>(null);<br/>\n    +    private final String basePath;<br/>\n    +    private final CreateMode mode;<br/>\n    +    private final AtomicReference<byte[]> data = new AtomicReference<byte[]>();<br/>\n    +    private final AtomicReference<State> state = new AtomicReference<State>(State.LATENT);<br/>\n    +    private final AtomicBoolean authFailure = new AtomicBoolean(false);<br/>\n    +    private final BackgroundCallback backgroundCallback;<br/>\n    +    private final boolean useProtection;<br/>\n    +    private final CuratorWatcher watcher = new CuratorWatcher()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void process(WatchedEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getType() == EventType.NodeDeleted )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }<br/>\n    +    else if ( event.getType() == EventType.NodeDataChanged )<br/>\n    +    {\n    +watchNode();\n    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback checkExistsCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.NONODE.intValue() )<br/>\n    +    {    +createNode();    +    }\n<p>    +    else<br/>\n    +    {<br/>\n    +boolean isEphemeral = event.getStat().getEphemeralOwner() != 0;<br/>\n    +if ( isEphemeral != mode.isEphemeral() )<br/>\n    +</p>\n{\n    +    log.warn(\"Existing node ephemeral state doesn't match requested state. Maybe the node was created outside of PersistentNode? \" + basePath);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback setDataCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event)<br/>\n    +    throws Exception<br/>\n    +{<br/>\n    +    //If the result is ok then initialisation is complete (if we're still initialising)<br/>\n    +    //Don't retry on other errors as the only recoverable cases will be connection loss<br/>\n    +    //and the node not existing, both of which are already handled by other watches.<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +    </p>\n{\n    +//Update is ok, mark initialisation as complete if required.\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +    private final ConnectionStateListener connectionStateListener = new ConnectionStateListener()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n    +{<br/>\n    +    if ( newState == ConnectionState.RECONNECTED )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +<br/>\n    +    private enum State<br/>\n    +    </p>\n{\n    +LATENT,\n    +STARTED,\n    +CLOSED\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * @param clientclient instance<br/>\n    +     * @param mode  creation mode<br/>\n    +     * @param useProtection if true, call </p>\n{@link CreateBuilder#withProtection()}\n<p>    +     * @param basePath the base path for the node<br/>\n    +     * @param initData data for the node<br/>\n    +     */<br/>\n    +    public PersistentNode(CuratorFramework client, final CreateMode mode, boolean useProtection, final String basePath, byte[] initData)<br/>\n    +    {<br/>\n    +this.useProtection = useProtection;<br/>\n    +this.client = Preconditions.checkNotNull(client, \"client cannot be null\");<br/>\n    +this.basePath = PathUtils.validatePath(basePath);<br/>\n    +this.mode = Preconditions.checkNotNull(mode, \"mode cannot be null\");<br/>\n    +final byte[] data = Preconditions.checkNotNull(initData, \"data cannot be null\");<br/>\n    +<br/>\n    +backgroundCallback = new BackgroundCallback()<br/>\n    +{<br/>\n    +    @Override<br/>\n    +    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +    {<br/>\n    +String path = null;<br/>\n    +boolean nodeExists = false;<br/>\n    +if ( event.getResultCode() == KeeperException.Code.NODEEXISTS.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getPath();\n    +    nodeExists = true;\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getName();\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.NOAUTH.intValue() )<br/>\n    +{<br/>\n    +    log.warn(\"Client does not have authorisation to write ephemeral node at path {}\", event.getPath());<br/>\n    +    authFailure.set(true);<br/>\n    +    return;<br/>\n    +}<br/>\n    +if ( path != null )<br/>\n    +{<br/>\n    +    authFailure.set(false);<br/>\n    +    nodePath.set(path);<br/>\n    +    watchNode();<br/>\n    +<br/>\n    +    if ( nodeExists )<br/>\n    +    </p>\n{\n    +client.setData().inBackground(setDataCallback).forPath(getActualPath(), getData());\n    +    }\n<p>    +    else<br/>\n    +    </p>\n{\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +else<br/>\n    +</p>\n{\n    +    createNode();\n    +}\n<p>    +    }<br/>\n    +};<br/>\n    +<br/>\n    +createMethod = useProtection ? client.create().creatingParentContainersIfNeeded().withProtection() : client.create().creatingParentContainersIfNeeded();<br/>\n    +this.data.set(Arrays.copyOf(data, data.length));<br/>\n    +    }<br/>\n    +<br/>\n    +    private void initialisationComplete()<br/>\n    +    {<br/>\n    +CountDownLatch localLatch = initialCreateLatch.getAndSet(null);<br/>\n    +if ( localLatch != null )<br/>\n    +</p>\n{\n    +    localLatch.countDown();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * You must call start() to initiate the persistent ephemeral node. An attempt to create the node<br/>\n    +     * in the background will be started<br/>\n    +     */<br/>\n    +    public void start()<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.compareAndSet(State.LATENT, State.STARTED), \"Already started\");\n    +\n    +client.getConnectionStateListenable().addListener(connectionStateListener);\n    +createNode();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Block until the either initial node creation initiated by </p>\n{@link #start()}\n<p> succeeds or<br/>\n    +     * the timeout elapses.<br/>\n    +     *<br/>\n    +     * @param timeout the maximum time to wait<br/>\n    +     * @param unit    time unit<br/>\n    +     * @return if the node was created before timeout<br/>\n    +     * @throws InterruptedException if the thread is interrupted<br/>\n    +     */<br/>\n    +    public boolean waitForInitialCreate(long timeout, TimeUnit unit) throws InterruptedException<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.get() == State.STARTED, \"Not started\");\n    +\n    +CountDownLatch localLatch = initialCreateLatch.get();\n    +return (localLatch == null) || localLatch.await(timeout, unit);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void close() throws IOException<br/>\n    +    {<br/>\n    +if ( !state.compareAndSet(State.STARTED, State.CLOSED) )<br/>\n    +</p>\n{\n    +    return;\n    +}\n<p>    +<br/>\n    +client.getConnectionStateListenable().removeListener(connectionStateListener);<br/>\n    +<br/>\n    +try<br/>\n    +{<br/>\n    +    deleteNode();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I think it makes sense still. The idea is that the node persists until the instance is closed.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737955","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737955","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737955,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T00:06:19Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123#discussion_r50058794\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123#discussion_r50058794</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentNode.java &#8212;<br/>\n    @@ -0,0 +1,382 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *   <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing,<br/>\n    + * software distributed under the License is distributed on an<br/>\n    + * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY<br/>\n    + * KIND, either express or implied.  See the License for the<br/>\n    + * specific language governing permissions and limitations<br/>\n    + * under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.curator.framework.recipes.nodes;<br/>\n    +<br/>\n    +import com.google.common.annotations.VisibleForTesting;<br/>\n    +import com.google.common.base.Preconditions;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.ACLBackgroundPathAndBytesable;<br/>\n    +import org.apache.curator.framework.api.BackgroundCallback;<br/>\n    +import org.apache.curator.framework.api.CreateBuilder;<br/>\n    +import org.apache.curator.framework.api.CreateModable;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorWatcher;<br/>\n    +import org.apache.curator.framework.state.ConnectionState;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.curator.utils.PathUtils;<br/>\n    +import org.apache.zookeeper.CreateMode;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.Watcher.Event.EventType;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import java.io.Closeable;<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.concurrent.CountDownLatch;<br/>\n    +import java.util.concurrent.TimeUnit;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +/**<br/>\n    + * <p><br/>\n    + * A persistent node is a node that attempts to stay present in<br/>\n    + * ZooKeeper, even through connection and session interruptions.<br/>\n    + * </p><br/>\n    + * <p><br/>\n    + * Thanks to bbeck (<a href=\"https://github.com/bbeck\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bbeck</a>) for the initial coding and design<br/>\n    + * </p><br/>\n    + */<br/>\n    +public class PersistentNode implements Closeable<br/>\n    +{<br/>\n    +    private final AtomicReference<CountDownLatch> initialCreateLatch = new AtomicReference<CountDownLatch>(new CountDownLatch(1));<br/>\n    +    private final Logger log = LoggerFactory.getLogger(getClass());<br/>\n    +    private final CuratorFramework client;<br/>\n    +    private final CreateModable<ACLBackgroundPathAndBytesable<String>> createMethod;<br/>\n    +    private final AtomicReference<String> nodePath = new AtomicReference<String>(null);<br/>\n    +    private final String basePath;<br/>\n    +    private final CreateMode mode;<br/>\n    +    private final AtomicReference<byte[]> data = new AtomicReference<byte[]>();<br/>\n    +    private final AtomicReference<State> state = new AtomicReference<State>(State.LATENT);<br/>\n    +    private final AtomicBoolean authFailure = new AtomicBoolean(false);<br/>\n    +    private final BackgroundCallback backgroundCallback;<br/>\n    +    private final boolean useProtection;<br/>\n    +    private final CuratorWatcher watcher = new CuratorWatcher()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void process(WatchedEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getType() == EventType.NodeDeleted )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }<br/>\n    +    else if ( event.getType() == EventType.NodeDataChanged )<br/>\n    +    {\n    +watchNode();\n    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback checkExistsCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +{<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.NONODE.intValue() )<br/>\n    +    {    +createNode();    +    }\n<p>    +    else<br/>\n    +    {<br/>\n    +boolean isEphemeral = event.getStat().getEphemeralOwner() != 0;<br/>\n    +if ( isEphemeral != mode.isEphemeral() )<br/>\n    +</p>\n{\n    +    log.warn(\"Existing node ephemeral state doesn't match requested state. Maybe the node was created outside of PersistentNode? \" + basePath);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    };<br/>\n    +    private final BackgroundCallback setDataCallback = new BackgroundCallback()<br/>\n    +    {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void processResult(CuratorFramework client, CuratorEvent event)<br/>\n    +    throws Exception<br/>\n    +{<br/>\n    +    //If the result is ok then initialisation is complete (if we're still initialising)<br/>\n    +    //Don't retry on other errors as the only recoverable cases will be connection loss<br/>\n    +    //and the node not existing, both of which are already handled by other watches.<br/>\n    +    if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +    </p>\n{\n    +//Update is ok, mark initialisation as complete if required.\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +    private final ConnectionStateListener connectionStateListener = new ConnectionStateListener()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n    +{<br/>\n    +    if ( newState == ConnectionState.RECONNECTED )<br/>\n    +    </p>\n{\n    +createNode();\n    +    }\n<p>    +}<br/>\n    +    };<br/>\n    +<br/>\n    +    private enum State<br/>\n    +    </p>\n{\n    +LATENT,\n    +STARTED,\n    +CLOSED\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * @param clientclient instance<br/>\n    +     * @param mode  creation mode<br/>\n    +     * @param useProtection if true, call </p>\n{@link CreateBuilder#withProtection()}\n<p>    +     * @param basePath the base path for the node<br/>\n    +     * @param initData data for the node<br/>\n    +     */<br/>\n    +    public PersistentNode(CuratorFramework client, final CreateMode mode, boolean useProtection, final String basePath, byte[] initData)<br/>\n    +    {<br/>\n    +this.useProtection = useProtection;<br/>\n    +this.client = Preconditions.checkNotNull(client, \"client cannot be null\");<br/>\n    +this.basePath = PathUtils.validatePath(basePath);<br/>\n    +this.mode = Preconditions.checkNotNull(mode, \"mode cannot be null\");<br/>\n    +final byte[] data = Preconditions.checkNotNull(initData, \"data cannot be null\");<br/>\n    +<br/>\n    +backgroundCallback = new BackgroundCallback()<br/>\n    +{<br/>\n    +    @Override<br/>\n    +    public void processResult(CuratorFramework client, CuratorEvent event) throws Exception<br/>\n    +    {<br/>\n    +String path = null;<br/>\n    +boolean nodeExists = false;<br/>\n    +if ( event.getResultCode() == KeeperException.Code.NODEEXISTS.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getPath();\n    +    nodeExists = true;\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.OK.intValue() )<br/>\n    +</p>\n{\n    +    path = event.getName();\n    +}\n<p>    +else if ( event.getResultCode() == KeeperException.Code.NOAUTH.intValue() )<br/>\n    +{<br/>\n    +    log.warn(\"Client does not have authorisation to write ephemeral node at path {}\", event.getPath());<br/>\n    +    authFailure.set(true);<br/>\n    +    return;<br/>\n    +}<br/>\n    +if ( path != null )<br/>\n    +{<br/>\n    +    authFailure.set(false);<br/>\n    +    nodePath.set(path);<br/>\n    +    watchNode();<br/>\n    +<br/>\n    +    if ( nodeExists )<br/>\n    +    </p>\n{\n    +client.setData().inBackground(setDataCallback).forPath(getActualPath(), getData());\n    +    }\n<p>    +    else<br/>\n    +    </p>\n{\n    +initialisationComplete();\n    +    }\n<p>    +}<br/>\n    +else<br/>\n    +</p>\n{\n    +    createNode();\n    +}\n<p>    +    }<br/>\n    +};<br/>\n    +<br/>\n    +createMethod = useProtection ? client.create().creatingParentContainersIfNeeded().withProtection() : client.create().creatingParentContainersIfNeeded();<br/>\n    +this.data.set(Arrays.copyOf(data, data.length));<br/>\n    +    }<br/>\n    +<br/>\n    +    private void initialisationComplete()<br/>\n    +    {<br/>\n    +CountDownLatch localLatch = initialCreateLatch.getAndSet(null);<br/>\n    +if ( localLatch != null )<br/>\n    +</p>\n{\n    +    localLatch.countDown();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * You must call start() to initiate the persistent ephemeral node. An attempt to create the node<br/>\n    +     * in the background will be started<br/>\n    +     */<br/>\n    +    public void start()<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.compareAndSet(State.LATENT, State.STARTED), \"Already started\");\n    +\n    +client.getConnectionStateListenable().addListener(connectionStateListener);\n    +createNode();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Block until the either initial node creation initiated by </p>\n{@link #start()}\n<p> succeeds or<br/>\n    +     * the timeout elapses.<br/>\n    +     *<br/>\n    +     * @param timeout the maximum time to wait<br/>\n    +     * @param unit    time unit<br/>\n    +     * @return if the node was created before timeout<br/>\n    +     * @throws InterruptedException if the thread is interrupted<br/>\n    +     */<br/>\n    +    public boolean waitForInitialCreate(long timeout, TimeUnit unit) throws InterruptedException<br/>\n    +    </p>\n{\n    +Preconditions.checkState(state.get() == State.STARTED, \"Not started\");\n    +\n    +CountDownLatch localLatch = initialCreateLatch.get();\n    +return (localLatch == null) || localLatch.await(timeout, unit);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void close() throws IOException<br/>\n    +    {<br/>\n    +if ( !state.compareAndSet(State.STARTED, State.CLOSED) )<br/>\n    +</p>\n{\n    +    return;\n    +}\n<p>    +<br/>\n    +client.getConnectionStateListenable().removeListener(connectionStateListener);<br/>\n    +<br/>\n    +try<br/>\n    +{<br/>\n    +    deleteNode();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    OK</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737959","html_url":"https://github.com/apache/curator/issues/807#issuecomment-2604737959","issue_url":"https://api.github.com/repos/apache/curator/issues/807","id":2604737959,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzc5NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T00:11:00Z","updated_at":"2025-01-21T13:28:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/123\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/123</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604737959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/173025262","html_url":"https://github.com/apache/curator/pull/51#issuecomment-173025262","issue_url":"https://api.github.com/repos/apache/curator/issues/51","id":173025262,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzAyNTI2Mg==","user":{"login":"hdeadman","id":1556777,"node_id":"MDQ6VXNlcjE1NTY3Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/1556777?v=4","gravatar_id":"","url":"https://api.github.com/users/hdeadman","html_url":"https://github.com/hdeadman","followers_url":"https://api.github.com/users/hdeadman/followers","following_url":"https://api.github.com/users/hdeadman/following{/other_user}","gists_url":"https://api.github.com/users/hdeadman/gists{/gist_id}","starred_url":"https://api.github.com/users/hdeadman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hdeadman/subscriptions","organizations_url":"https://api.github.com/users/hdeadman/orgs","repos_url":"https://api.github.com/users/hdeadman/repos","events_url":"https://api.github.com/users/hdeadman/events{/privacy}","received_events_url":"https://api.github.com/users/hdeadman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T23:43:21Z","updated_at":"2016-01-19T23:43:21Z","author_association":"NONE","body":"What's the status on this pull request? It looks like @bdumon added a test. Is the issue that there are branch conflicts? Does the error not happen in 3.0? I am getting it on 2.9.1 if I use a try block that relies on the Closable interface. \n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/173025262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604715337","html_url":"https://github.com/apache/curator/issues/678#issuecomment-2604715337","issue_url":"https://api.github.com/repos/apache/curator/issues/678","id":2604715337,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTUzMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T23:43:22Z","updated_at":"2025-01-21T13:19:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hdeadman commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/51#issuecomment-173025262\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/51#issuecomment-173025262</a></p>\n\n<p>    What's the status on this pull request? It looks like @bdumon added a test. Is the issue that there are branch conflicts? Does the error not happen in 3.0? I am getting it on 2.9.1 if I use a try block that relies on the Closable interface. </p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604715337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/173026908","html_url":"https://github.com/apache/curator/pull/51#issuecomment-173026908","issue_url":"https://api.github.com/repos/apache/curator/issues/51","id":173026908,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzAyNjkwOA==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T23:51:55Z","updated_at":"2016-01-19T23:51:55Z","author_association":"CONTRIBUTOR","body":"@madrob Are you able to take a look at this?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/173026908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604715342","html_url":"https://github.com/apache/curator/issues/678#issuecomment-2604715342","issue_url":"https://api.github.com/repos/apache/curator/issues/678","id":2604715342,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTUzNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T23:51:57Z","updated_at":"2025-01-21T13:19:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/51#issuecomment-173026908\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/51#issuecomment-173026908</a></p>\n\n<p>    @madrob Are you able to take a look at this?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604715342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/173027922","html_url":"https://github.com/apache/curator/pull/51#issuecomment-173027922","issue_url":"https://api.github.com/repos/apache/curator/issues/51","id":173027922,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzAyNzkyMg==","user":{"login":"asfbot","id":5243949,"node_id":"MDQ6VXNlcjUyNDM5NDk=","avatar_url":"https://avatars.githubusercontent.com/u/5243949?v=4","gravatar_id":"","url":"https://api.github.com/users/asfbot","html_url":"https://github.com/asfbot","followers_url":"https://api.github.com/users/asfbot/followers","following_url":"https://api.github.com/users/asfbot/following{/other_user}","gists_url":"https://api.github.com/users/asfbot/gists{/gist_id}","starred_url":"https://api.github.com/users/asfbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asfbot/subscriptions","organizations_url":"https://api.github.com/users/asfbot/orgs","repos_url":"https://api.github.com/users/asfbot/repos","events_url":"https://api.github.com/users/asfbot/events{/privacy}","received_events_url":"https://api.github.com/users/asfbot/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-19T23:57:15Z","updated_at":"2016-01-19T23:57:15Z","author_association":"NONE","body":"Jordan Zimmerman  on madrob@cloudera.com replies:\nHey Mike,\n\nCan you take a look at this?\n\n-Jordan\non close\nyour\nfeature\nplease\nticket\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/173027922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738759","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738759","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738759,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-26T04:51:49Z","updated_at":"2025-01-21T13:28:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=heartup@gmail.com\">heartup@gmail.com</a>:</i>\n<p>test programme</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738766","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738766","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738766,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-26T06:48:52Z","updated_at":"2025-01-21T13:28:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alucardggg\">alucardggg</a>:</i>\n<p>Exactly, we have 5 worker nodes on line, and all the 5 nodes lost the ZK connections caused by network problem, after the networks recovered( All the connection sessions have been expired), we found that 2 of 5 nodes cannot reconnect to the ZK cluster and the \"blockUntilConnectedOrTimedOut\" method continuously logged the connection status was always false.<br/>\nIn the situation, Curator cannot be notified by subsequent events because the framework has already closed the previous zookeeper client which held the expired session, after that, the    Curator fail to instantiate the zookeeper client because of the name service fault, both \"sendThread\" and \"eventThread\" was down as well, eventually, no event arrived to tell the framework what to do, and the framework cannot be recovered by itself.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738770","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738770","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738770,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-26T11:58:45Z","updated_at":"2025-01-21T13:28:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>I don't believe there's anything Curator can do here. The ZooKeeper client resolves the hostnames internally (see StaticHostProvider.java in the ZooKeeper source). What do you think Curator can do to help here?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738777","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738777","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738777,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T03:02:47Z","updated_at":"2025-01-21T13:28:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=heartup@gmail.com\">heartup@gmail.com</a>:</i>\n<p>Hi Jordan Zimmerman:<br/>\nI would make the problem more clearly, When curator client reconnect to ZK, it finds that the session has expired, then it reset and recreate another connection, but mean while the DNS exception was thrown, and the new connection recreation failed. Then, old connection close and new connection create failed. No watcher on ZK now, and the connection to ZK can never recover. </p>\n\n<p>I think curator client can do something to solve the problem by attempt reconnect again when the connection recreation failed.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738916","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738916","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738916,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T16:41:57Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>It just seems that not guaranteeing consistency of the stat and data in the returned ChildData objects restricts the usefulness of the cache, since you would typically have to get the data/stat again directly before doing any conditional update to a znode.</p>\n\n<p>Ignoring the less-important suggestion for simplifying ChildData itself, wouldn't there still be significant value in a simple change to move the TreeNode data and stat atomic refs into a single ChildData atomic ref?</p>\n\n<p>Cheers,<br/>\nNick</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738924","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738924","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738924,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T16:42:08Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Nick,</p>\n\n<p>Looking at this closer, I see your point!  There is a potential race between an update thread updating stat+data, and a reader thread accessing it, and it looks like we could make some changes to the implementation to simplify and fix this without affecting the public API.</p>\n\n<p>Here's a tentative plan:</p>\n\n<p>1) Change the existing ChildData to make a hard data ref instead of an embedded atomic ref.<br/>\n2) Create a package-protected subclass (ChildDataWithClear?) that leaves 'data' null and has a dataRef atomic ref, move clearData() there.<br/>\n3) PathChildrenCache would use the subclass.<br/>\n4) Refactor TreeCache to combine the stat and data fields into a single atomic ref on ChildData as you suggested.</p>\n\n<p>And as you point out, if we cache ChildData objects in the TreeNodes, then we can avoid a lot of new object construction on queries.</p>\n\n<p>Sound good?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738933","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738933","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738933,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T19:28:02Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\" class=\"user-hover\" rel=\"randgalt\">Jordan Zimmerman</a> or <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cammckenzie\" class=\"user-hover\" rel=\"cammckenzie\">Cam McKenzie</a> I pushed a branch, would you mind reviewing?  Or should I have sent you a github PR?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738939","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738939","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738939,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T19:31:00Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Create a PR on Github.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738943","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738943","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738943,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T20:12:47Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dragonsinth opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/127\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/127</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a></p>\n\n<p>    @Randgalt </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dragonsinth/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dragonsinth/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/127.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/127.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #127</p>\n\n<hr />\n<p>commit cc27e3434de7dae58f9fb07a013137d0da3dc378<br/>\nAuthor: Scott Blum <dragonsinth@apache.org><br/>\nDate:   2016-01-28T17:38:57Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a>: Make ChildData immutable; PathChildrenCache uses a mutable subclass.</p>\n\n<p>commit 81067f5b35937e4415b1d11e8d06b99a21f67926<br/>\nAuthor: Scott Blum <dragonsinth@apache.org><br/>\nDate:   2016-01-28T17:58:14Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a>: Optimize TreeCache, fix possible concurrency issue</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/176807369","html_url":"https://github.com/apache/curator/pull/127#issuecomment-176807369","issue_url":"https://api.github.com/repos/apache/curator/issues/127","id":176807369,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjgwNzM2OQ==","user":{"login":"njhill","id":16958488,"node_id":"MDQ6VXNlcjE2OTU4NDg4","avatar_url":"https://avatars.githubusercontent.com/u/16958488?v=4","gravatar_id":"","url":"https://api.github.com/users/njhill","html_url":"https://github.com/njhill","followers_url":"https://api.github.com/users/njhill/followers","following_url":"https://api.github.com/users/njhill/following{/other_user}","gists_url":"https://api.github.com/users/njhill/gists{/gist_id}","starred_url":"https://api.github.com/users/njhill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/njhill/subscriptions","organizations_url":"https://api.github.com/users/njhill/orgs","repos_url":"https://api.github.com/users/njhill/repos","events_url":"https://api.github.com/users/njhill/events{/privacy}","received_events_url":"https://api.github.com/users/njhill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T15:21:52Z","updated_at":"2016-01-29T15:21:52Z","author_association":"CONTRIBUTOR","body":"changes look great, exactly what I had in mind\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/176807369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738949","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738949","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738949,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T15:21:53Z","updated_at":"2025-01-21T13:28:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user njhill commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/127#issuecomment-176807369\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/127#issuecomment-176807369</a></p>\n\n<p>    changes look great, exactly what I had in mind</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738955","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738955","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738955,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T18:15:56Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nickhill\">nickhill</a>:</i>\n<p>My other comment on the changes in the PR didn't show up here for some reason:</p>\n\n<p>There's one public behaviour change I notice - a ChildData from a TreeCache might now not be equal() to one from a PathChildrenCache where it was before. But that seems like a somewhat obscure scenario.<br/>\nLooking at this gave me another idea though:<br/>\nInstead of having a private subclass, PathChildrenCache could use the new ChildData directly, with the clearDataBytes() method changed to do a currentData.replace(data, new ChildData(data.getPath(), data.getStat(), null).<br/>\nI think this would mean only a one-line change to PCC is needed and seems generally simpler. It would have the side effect of not clearing the data from ChildData objects that had been previously obtained from the cache - but I think this is probably a good thing too?<br/>\nWDYT?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738959","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738959","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738959,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T18:35:40Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Great idea!</p>\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738965","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738965","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738965,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-30T03:47:47Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/127\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/127</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738969","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738969","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738969,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-30T03:49:20Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dragonsinth opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a>: Optimize TreeCache, fix possible concurrency issue</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dragonsinth/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dragonsinth/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #128</p>\n\n<hr />\n<p>commit 5e995ed7a315fba9f1327706735a7f8c1b417a83<br/>\nAuthor: Scott Blum <dragonsinth@apache.org><br/>\nDate:   2016-01-28T17:38:57Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a>: Make ChildData immutable; PathChildrenCache replaces instead of mutates.</p>\n\n<p>commit b3e3fcc4848beaa148fc3a5b437e4b19b6e7f325<br/>\nAuthor: Scott Blum <dragonsinth@apache.org><br/>\nDate:   2016-01-28T17:58:14Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-294\" title=\"Optimize TreeCache, fix possible concurrency issue\" class=\"issue-link\" data-issue-key=\"CURATOR-294\"><del>CURATOR-294</del></a>: Optimize TreeCache, fix possible concurrency issue</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738978","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738978","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738978,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-30T03:50:30Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Re-spun the PR per <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nickhill\" class=\"user-hover\" rel=\"nickhill\">Nick Hill</a> suggestions.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/177219439","html_url":"https://github.com/apache/curator/pull/92#issuecomment-177219439","issue_url":"https://api.github.com/repos/apache/curator/issues/92","id":177219439,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NzIxOTQzOQ==","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-30T16:04:07Z","updated_at":"2016-01-30T16:04:07Z","author_association":"CONTRIBUTOR","body":"Rebased this, and wanted to ping for more feedback on this.  A friend of mine was just asking about this change.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/177219439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738989","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738989","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738989,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-31T21:57:04Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51368253\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51368253</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -25,15 +25,15 @@</p>\n\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    Unused import of AtomicReference</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/177631319","html_url":"https://github.com/apache/curator/pull/128#issuecomment-177631319","issue_url":"https://api.github.com/repos/apache/curator/issues/128","id":177631319,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NzYzMTMxOQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-31T22:05:16Z","updated_at":"2016-01-31T22:05:16Z","author_association":"CONTRIBUTOR","body":"Other than the unused import, looks good to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/177631319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738993","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738993","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738993,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-31T22:05:17Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#issuecomment-177631319\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#issuecomment-177631319</a></p>\n\n<p>    Other than the unused import, looks good to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/177643755","html_url":"https://github.com/apache/curator/pull/92#issuecomment-177643755","issue_url":"https://api.github.com/repos/apache/curator/issues/92","id":177643755,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NzY0Mzc1NQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-31T22:37:35Z","updated_at":"2016-01-31T22:37:35Z","author_association":"CONTRIBUTOR","body":"This change probably doesn't make sense unless it's in the CURATOR 3.0 branch does it? With the state management in 2.X, the LOST event doesn't meant that the session is lost, just that Curator has given up trying to reconnect based on its retry policy. This could mean that the actual session has expired or it could mean that the session is still alive.\n\nOn the Curator 3.0 branch @Randgalt reimplemented the way that state management occurs for the LOST event. The default is now that LOST will be published when Curator thinks that the session has been LOST (based on a timer while disconnected), and this is now the default behaviour.\n\nSo, perhaps this can only be merged into 3.0? I don't think that the logic will work based on the 2.x version of the codebase.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/177643755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/177689661","html_url":"https://github.com/apache/curator/pull/92#issuecomment-177689661","issue_url":"https://api.github.com/repos/apache/curator/issues/92","id":177689661,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NzY4OTY2MQ==","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T01:24:10Z","updated_at":"2016-02-01T01:24:10Z","author_association":"CONTRIBUTOR","body":"I actually think it would be okay to land it in master.  Even if the event semantics are slightly fuzzier pre 3.0, the publishing of events actually does match TreeCache's internal operations-- internally TreeCache really does operate based on LOST and RECONNECTED, so the events will still be useful for anyone listening.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/177689661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/177718605","html_url":"https://github.com/apache/curator/pull/92#issuecomment-177718605","issue_url":"https://api.github.com/repos/apache/curator/issues/92","id":177718605,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NzcxODYwNQ==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T02:35:00Z","updated_at":"2016-02-01T02:35:00Z","author_association":"CONTRIBUTOR","body":"Yeah, I guess you're right. In that case, I think that it looks ok to me.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/177718605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738784","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738784","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738784,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T07:16:44Z","updated_at":"2025-01-21T13:28:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alucardggg\">alucardggg</a>:</i>\n<p>We can solve the issue by calling the API\"client.getZookeeperClient().getZooKeeper()\" periodically when receiving the \"ConnectionState.LOST\" event and using a handler thread pool to process the arriving state events concurrently, so that the event will not blocked, obviously the client.getZookeeperClient().getZooKeeper() is a thread-safe API.<br/>\nActually the framework can do the same thing for the sake of fault-tolerant feature and do not enforce the user to handle it, just catch the exception and handle it appropriately instead of putting it in a background exception queue and ignore it, by the way, I don't think the \"client.getZookeeperClient().getZooKeeper()\" is a public friendly API to the user.<br/>\nAnother issue is about the StaticHostProvider.java, it is implemented by InetAddress.java, and there is an addressCache in the InetAddress.java, see \"https://github.com/openjdk-mirror/jdk7u-jdk/blob/master/src/share/classes/sun/net/InetAddressCachePolicy.java\", the addressCache will cache the resolved hostname and when a given unresolved hostname be passed, the InetAddress try to resolve the hostname by querying the address cache at first time, I don't know why the last resolved hostname be lost in the cache. (perhaps for the reason of the cache policy)</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738791","html_url":"https://github.com/apache/curator/issues/813#issuecomment-2604738791","issue_url":"https://api.github.com/repos/apache/curator/issues/813","id":2604738791,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg3OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T14:09:02Z","updated_at":"2025-01-21T13:28:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>You should open an issue on the ZooKeeper project for the StaticHostProvider.java issue</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738999","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604738999","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604738999,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzg5OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:16:52Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51448286\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51448286</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -92,7 +92,7 @@ public int hashCode()<br/>\n {<br/>\n     int result = path != null ? path.hashCode() : 0;<br/>\n     result = 31 * result + (stat != null ? stat.hashCode() : 0);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>result = 31 * result + (data != null ? Arrays.hashCode(data.get()) : 0);<br/>\n    +result = 31 * result + Arrays.hashCode(data);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    data can legally be null. null checks need to be added throughout this class.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604738999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739004","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739004","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739004,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwMDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:18:59Z","updated_at":"2025-01-21T13:28:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51448587\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51448587</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -126,12 +126,7 @@ public Stat getStat()<br/>\n  */<br/>\n public byte[] getData()</p>\n {\n    -return data.get();\n    -    }\n<p>    -</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>void clearData()</li>\n\t<li>{</li>\n\t<li>data.set(null);<br/>\n    +return data;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    clearData() needs to remain. PathChildrenCache uses it to release memory. The data is needed temporarily and is cleared afterwards.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/178076950","html_url":"https://github.com/apache/curator/pull/128#issuecomment-178076950","issue_url":"https://api.github.com/repos/apache/curator/issues/128","id":178076950,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODA3Njk1MA==","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:19:45Z","updated_at":"2016-02-01T17:19:45Z","author_association":"MEMBER","body":"Data is an AtomicReference because PathChildrenCache needs to be able to clear it. As I recall, data is needed temporarily and is cleared if the object is marked not to cache data.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/178076950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739008","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739008","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739008,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:19:46Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#issuecomment-178076950\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#issuecomment-178076950</a></p>\n\n<p>    Data is an AtomicReference because PathChildrenCache needs to be able to clear it. As I recall, data is needed temporarily and is cleared if the object is marked not to cache data.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739014","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739014","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739014,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwMTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:22:53Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51449117\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51449117</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -92,7 +92,7 @@ public int hashCode()<br/>\n {<br/>\n     int result = path != null ? path.hashCode() : 0;<br/>\n     result = 31 * result + (stat != null ? stat.hashCode() : 0);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>result = 31 * result + (data != null ? Arrays.hashCode(data.get()) : 0);<br/>\n    +result = 31 * result + Arrays.hashCode(data);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Arrays.hashCode handles null internally</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739026","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739026","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739026,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:23:46Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51449251\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51449251</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/PathChildrenCache.java &#8212;<br/>\n    @@ -448,7 +448,10 @@ public boolean clearDataBytes(String fullPath, int ifVersion)<br/>\n     {<br/>\n if ( (ifVersion < 0) || (ifVersion == data.getStat().getVersion()) )<br/>\n {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>data.clearData();<br/>\n    +if ( data.getData() != null )<br/>\n    +\n{\n    +    currentData.replace(fullPath, data, new ChildData(data.getPath(), data.getStat(), null));\n    +}\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @Randgalt this is the replacement for `clearData()`.  Instead of the ChildData object being mutable, we just replace the ChildData entirely with a copy that has no data.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739033","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739033","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739033,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:23:58Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51449278\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51449278</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -126,12 +126,7 @@ public Stat getStat()<br/>\n  */<br/>\n public byte[] getData()</p>\n {\n    -return data.get();\n    -    }\n<p>    -</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>void clearData()</li>\n\t<li>{</li>\n\t<li>data.set(null);<br/>\n    +return data;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    removed that call site, see below</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739040","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739040","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739040,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:28:28Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51449874\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51449874</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/ChildData.java &#8212;<br/>\n    @@ -25,15 +25,15 @@</p>\n\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    done</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739045","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739045","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739045,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:55:47Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#discussion_r51453616\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#discussion_r51453616</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/PathChildrenCache.java &#8212;<br/>\n    @@ -448,7 +448,10 @@ public boolean clearDataBytes(String fullPath, int ifVersion)<br/>\n     {<br/>\n if ( (ifVersion < 0) || (ifVersion == data.getStat().getVersion()) )<br/>\n {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>data.clearData();<br/>\n    +if ( data.getData() != null )<br/>\n    +\n{\n    +    currentData.replace(fullPath, data, new ChildData(data.getPath(), data.getStat(), null));\n    +}\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    OK - I see</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/178095680","html_url":"https://github.com/apache/curator/pull/128#issuecomment-178095680","issue_url":"https://api.github.com/repos/apache/curator/issues/128","id":178095680,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODA5NTY4MA==","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:56:06Z","updated_at":"2016-02-01T17:56:06Z","author_association":"MEMBER","body":"LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/178095680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739052","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739052","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739052,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T17:56:07Z","updated_at":"2025-01-21T13:28:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128#issuecomment-178095680\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128#issuecomment-178095680</a></p>\n\n<p>    LGTM</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739403","html_url":"https://github.com/apache/curator/issues/816#issuecomment-2604739403","issue_url":"https://api.github.com/repos/apache/curator/issues/816","id":2604739403,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk0MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T19:08:51Z","updated_at":"2025-01-21T13:28:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cconroy\">cconroy</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\" class=\"user-hover\" rel=\"dragonsinth\">Scott Blum</a> has a branch for this: <a href=\"https://github.com/dragonsinth/curator/tree/scottb/treecache-reinit\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dragonsinth/curator/tree/scottb/treecache-reinit</a></p>\n\n<p>I also started work on a branch that fires a different event since reusing the INITIALIZED event for this may confuse some existing listener implementations.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739055","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739055","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739055,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T19:15:27Z","updated_at":"2025-01-21T13:28:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/128\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/128</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739407","html_url":"https://github.com/apache/curator/issues/816#issuecomment-2604739407","issue_url":"https://api.github.com/repos/apache/curator/issues/816","id":2604739407,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk0MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T19:22:51Z","updated_at":"2025-01-21T13:28:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cammckenzie\" class=\"user-hover\" rel=\"cammckenzie\">Cam McKenzie</a> gave me an LGTM so I went ahead and merged what I had into master.<br/>\n<a href=\"https://github.com/apache/curator/pull/92\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/92</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739417","html_url":"https://github.com/apache/curator/issues/816#issuecomment-2604739417","issue_url":"https://api.github.com/repos/apache/curator/issues/816","id":2604739417,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk0MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T19:30:17Z","updated_at":"2025-01-21T13:28:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Reminder: merge into <a href=\"https://issues.apache.org/jira/browse/CURATOR-3\" title=\"LeaderLatch race condition causing extra nodes to be added in Zookeeper Edit\" class=\"issue-link\" data-issue-key=\"CURATOR-3\"><del>CURATOR-3</del></a>.0 too</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739061","html_url":"https://github.com/apache/curator/issues/814#issuecomment-2604739061","issue_url":"https://api.github.com/repos/apache/curator/issues/814","id":2604739061,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MzkwNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-01T19:30:43Z","updated_at":"2025-01-21T13:28:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>reminder: merge into <a href=\"https://issues.apache.org/jira/browse/CURATOR-3\" title=\"LeaderLatch race condition causing extra nodes to be added in Zookeeper Edit\" class=\"issue-link\" data-issue-key=\"CURATOR-3\"><del>CURATOR-3</del></a>.0 too</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739678","html_url":"https://github.com/apache/curator/issues/818#issuecomment-2604739678","issue_url":"https://api.github.com/repos/apache/curator/issues/818","id":2604739678,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk2Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T15:40:34Z","updated_at":"2025-01-21T13:28:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p><a href=\"https://github.com/apache/curator/pull/129\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/129</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739526","html_url":"https://github.com/apache/curator/issues/817#issuecomment-2604739526","issue_url":"https://api.github.com/repos/apache/curator/issues/817","id":2604739526,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk1MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T18:27:29Z","updated_at":"2025-01-21T13:28:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user Randgalt opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/130\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/130</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-297\" title=\"Curator quickly starting+stopping a persistent ephemeral node causes dangling ephemeral node\" class=\"issue-link\" data-issue-key=\"CURATOR-297\"><del>CURATOR-297</del></a> Handle quick close after start for PersistentNode</p>\n\n<p>    Because start() creates the node async, if close is called immediately, it might occur before the node creation. Handle this edge case by having the background response delete (async) the node if the instance has been closed</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/apache/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-297\" title=\"Curator quickly starting+stopping a persistent ephemeral node causes dangling ephemeral node\" class=\"issue-link\" data-issue-key=\"CURATOR-297\"><del>CURATOR-297</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/130.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/130.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #130</p>\n\n<hr />\n<p>commit e5afda580e2c7540f5095e1894c6866ce4ace8db<br/>\nAuthor: randgalt <randgalt@apache.org><br/>\nDate:   2016-02-02T18:26:13Z</p>\n\n<p>    Because start() creates the node async, if close is called immediately, it might occur before the node creation. Handle this edge case by having the background response delete (async) the node if the instance has been closed</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/178773323","html_url":"https://github.com/apache/curator/pull/129#issuecomment-178773323","issue_url":"https://api.github.com/repos/apache/curator/issues/129","id":178773323,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODc3MzMyMw==","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T19:26:34Z","updated_at":"2016-02-02T19:26:34Z","author_association":"CONTRIBUTOR","body":"LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/178773323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739686","html_url":"https://github.com/apache/curator/issues/818#issuecomment-2604739686","issue_url":"https://api.github.com/repos/apache/curator/issues/818","id":2604739686,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk2ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T19:26:35Z","updated_at":"2025-01-21T13:28:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/129#issuecomment-178773323\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/129#issuecomment-178773323</a></p>\n\n<p>    LGTM</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739693","html_url":"https://github.com/apache/curator/issues/818#issuecomment-2604739693","issue_url":"https://api.github.com/repos/apache/curator/issues/818","id":2604739693,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk2OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T19:42:44Z","updated_at":"2025-01-21T13:28:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/129\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/129</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/178816280","html_url":"https://github.com/apache/curator/pull/130#issuecomment-178816280","issue_url":"https://api.github.com/repos/apache/curator/issues/130","id":178816280,"node_id":"MDEyOklzc3VlQ29tbWVudDE3ODgxNjI4MA==","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T21:00:29Z","updated_at":"2016-02-02T21:00:29Z","author_association":"CONTRIBUTOR","body":"LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/178816280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739531","html_url":"https://github.com/apache/curator/issues/817#issuecomment-2604739531","issue_url":"https://api.github.com/repos/apache/curator/issues/817","id":2604739531,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk1MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T21:00:30Z","updated_at":"2025-01-21T13:28:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/130#issuecomment-178816280\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/130#issuecomment-178816280</a></p>\n\n<p>    LGTM</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739539","html_url":"https://github.com/apache/curator/issues/817#issuecomment-2604739539","issue_url":"https://api.github.com/repos/apache/curator/issues/817","id":2604739539,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3Mzk1Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-02T21:39:17Z","updated_at":"2025-01-21T13:28:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/130\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/130</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604739539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]