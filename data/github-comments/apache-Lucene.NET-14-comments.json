[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927324834","html_url":"https://github.com/apache/lucenenet/pull/520#issuecomment-927324834","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/520","id":927324834,"node_id":"IC_kwDOAAJ06c43Rdqi","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-26T15:32:19Z","updated_at":"2021-09-26T15:32:19Z","author_association":"CONTRIBUTOR","body":"@rclabo \r\n\r\n`net48` is to test the \"natural\" project loading (that is, to test the `net45` target).\r\n\r\n`net461` would naturally launch the `net45` target. However, we are intervening by using the `SetTargetFramework` element to force it to test the `netstandard2.0` target. Without intervening, there would be no way to test `netstandard2.0` because one of the other targets would load (unless we use an older mobile framework for testing). Admittedly, now that .NET Core 2.x is not supported, the amount of additional coverage `netstandard2.0` gains is tiny, but it is not very difficult to continue supporting it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927324834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927814590","html_url":"https://github.com/apache/lucenenet/pull/523#issuecomment-927814590","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/523","id":927814590,"node_id":"IC_kwDOAAJ06c43TVO-","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-27T12:13:55Z","updated_at":"2021-09-27T12:13:55Z","author_association":"CONTRIBUTOR","body":"TRULY AWESOME Work Shad.  Simplifications like this make the project more maintainable.  Big win! Thank you.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927814590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927820598","html_url":"https://github.com/apache/lucenenet/pull/523#issuecomment-927820598","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/523","id":927820598,"node_id":"IC_kwDOAAJ06c43TWs2","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-27T12:21:32Z","updated_at":"2021-09-27T12:21:32Z","author_association":"CONTRIBUTOR","body":"Perfect! Thanks","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/927820598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945149424","html_url":"https://github.com/apache/lucenenet/pull/511#issuecomment-945149424","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/511","id":945149424,"node_id":"IC_kwDOAAJ06c44VdXw","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-17T15:55:00Z","updated_at":"2021-10-17T15:55:00Z","author_association":"CONTRIBUTOR","body":"Superseded by #525.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945149424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945181099","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-945181099","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":945181099,"node_id":"IC_kwDOAAJ06c44VlGr","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-17T19:28:48Z","updated_at":"2021-10-17T19:28:48Z","author_association":"CONTRIBUTOR","body":"Closing as this question appears to be answered.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945181099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945181318","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-945181318","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":945181318,"node_id":"IC_kwDOAAJ06c44VlKG","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-17T19:30:14Z","updated_at":"2021-10-17T19:30:14Z","author_association":"CONTRIBUTOR","body":"Closing as this question appears to be answered.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945181318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945182601","html_url":"https://github.com/apache/lucenenet/issues/496#issuecomment-945182601","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/496","id":945182601,"node_id":"IC_kwDOAAJ06c44VleJ","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-17T19:38:36Z","updated_at":"2021-10-17T19:38:36Z","author_association":"CONTRIBUTOR","body":"Answered on StackOverflow: https://stackoverflow.com/a/68401299","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945182601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945182665","html_url":"https://github.com/apache/lucenenet/issues/495#issuecomment-945182665","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/495","id":945182665,"node_id":"IC_kwDOAAJ06c44VlfJ","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-17T19:39:09Z","updated_at":"2021-10-17T19:39:09Z","author_association":"CONTRIBUTOR","body":"Answered on StackOverflow: https://stackoverflow.com/a/68401299","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/945182665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/946001575","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-946001575","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":946001575,"node_id":"IC_kwDOAAJ06c44Ytan","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-18T17:32:07Z","updated_at":"2021-10-18T17:33:12Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nI had a look at the [InputArrayEnumerator](https://github.com/apache/lucenenet/blob/3dcffb2929662ffb9c4678458eaf90f0df300f92/src/Lucene.Net.Tests.Suggest/Suggest/InputArrayIterator.cs) class in the tests, and I believe I have spotted the issue.\r\n\r\nThis enumerator has a bit of an unusual requirement, as it is loading the initial state in the constructor, so the `Current` property should only be `null` after `MoveNext()` returns `false`. When the enumerator first loads, it is expected to be pointing to the initial value. The first call to `MoveNext()` will not move the pointer if there is a first value and will act like a no-op. Then every additional call will act similar to normal, incrementing and updating the `Current` property.\r\n\r\nOn the face of things, admittedly this seems highly unusual, and makes the `IInputEnumerator` interface difficult to implement. We should update the documentation to highlight this unusual requirement.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/946001575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/946485152","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-946485152","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":946485152,"node_id":"IC_kwDOAAJ06c44ajeg","user":{"login":"monco83","id":6460957,"node_id":"MDQ6VXNlcjY0NjA5NTc=","avatar_url":"https://avatars.githubusercontent.com/u/6460957?v=4","gravatar_id":"","url":"https://api.github.com/users/monco83","html_url":"https://github.com/monco83","followers_url":"https://api.github.com/users/monco83/followers","following_url":"https://api.github.com/users/monco83/following{/other_user}","gists_url":"https://api.github.com/users/monco83/gists{/gist_id}","starred_url":"https://api.github.com/users/monco83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/monco83/subscriptions","organizations_url":"https://api.github.com/users/monco83/orgs","repos_url":"https://api.github.com/users/monco83/repos","events_url":"https://api.github.com/users/monco83/events{/privacy}","received_events_url":"https://api.github.com/users/monco83/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-19T08:32:41Z","updated_at":"2021-10-19T08:32:41Z","author_association":"NONE","body":"Thank you for your advice.\r\n\r\nI changed `PlaceIterator` based on your suggestions and InputArrayEnumerator but still get the same error on DoLookup ('Value cannot be null...').\r\n```cs\r\nclass PlaceIterator : IInputEnumerator\r\n{\r\n    private readonly IEnumerator<PlaceItem> _enumerator;\r\n\r\n    private PlaceItem _current = null;\r\n    public BytesRef Current => _current != null ? new BytesRef(_current.Key) : null;\r\n\r\n    public IComparer<BytesRef> Comparer => null;\r\n    public long Weight => 0;\r\n    public BytesRef Payload => null;\r\n    public bool HasPayloads => false;\r\n    public ICollection<BytesRef> Contexts => Array.Empty<BytesRef>();\r\n    public bool HasContexts => false;\r\n\r\n    public PlaceIterator(IEnumerable<PlaceItem> placeItems)\r\n    {\r\n        _enumerator = placeItems.GetEnumerator();\r\n\r\n        if (_enumerator.MoveNext())\r\n        {\r\n            first = true;\r\n            _current = _enumerator.Current;\r\n        }\r\n    }\r\n\r\n    private bool first;\r\n\r\n    public bool MoveNext()\r\n    {\r\n        if (first && _current != null)\r\n        {\r\n            first = false;\r\n        }\r\n        else if (_enumerator.MoveNext())\r\n        {\r\n            _current = _enumerator.Current;\r\n        }\r\n        else\r\n        {\r\n            _current = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/946485152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/947038717","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-947038717","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":947038717,"node_id":"IC_kwDOAAJ06c44cqn9","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-19T19:26:46Z","updated_at":"2021-10-19T19:26:46Z","author_association":"CONTRIBUTOR","body":"I am able to reproduce the `Exception` @monco83  is observing based on the code provided.  @NightOwl888  turned that code into a unit test and that test does throw with the same stacktrace @monco83 is seeing.\r\n\r\nThe next question that @NightOwl888  and I had was whether this was a issue introduced when the Java version of Lucene 4.8 was ported to C# and .NET.  To investigate this @NightOwl888 and I ported that failing unit test to Java and ran the unit test against Java Lucene 4.8 on my machine.  I can confirm that it fails the same way in Java so this is not a porting bug.\r\n\r\nWhen running the unit test in java (or c#) the line highlighted below is hit three time, the first two times `docTerm` is `b` or `c` and `prefixToken` is null.  These cases continue on without an `Exception`.  But the third time this line is hit, `docTerm` is `d` and `prefixToken` is null.  since `matchedTokens` contains only `b` and `c` the `startsWith` method is evaluated and produces the error.  Again this happens in both Java Lucene 4.8 and Lucene.NET 4.8.  \r\n\r\n![image](https://user-images.githubusercontent.com/6945499/137975637-4f4f6764-f242-43e8-a009-6761cc53ea73.png)\r\n\r\nUnfortunately neither @NightOwl888  or myself have intimate knowledge of the high level workings of `BlendedInfixSuggester` so we do not currently know whether this is a bug in Lucene 4.8 or whether the class is not being used correctly.  @NightOwl888  located this document https://sease.io/2018/06/apache-lucene-blendedinfixsuggester-how-it-works-bugs-and-improvements.html which describes 3 bugs in the Suggester and workarounds, but it isn't clear any of them are this issue.\r\n\r\nAt this point, since we have verified it's not a bug in the porting of Lucene to .NET it'd be great if @monco83 can do a little digging to see if perhaps there is an issue with how  `BlendedInfixSuggester` is being called/used.  We will leave this issue open, so the findings can be reported back.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/947038717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/947056995","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-947056995","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":947056995,"node_id":"IC_kwDOAAJ06c44cvFj","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-19T19:54:27Z","updated_at":"2021-10-19T19:54:27Z","author_association":"CONTRIBUTOR","body":"@rclabo - Thanks for helping me debug this in Java.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/947056995/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/950225411","html_url":"https://github.com/apache/lucenenet/issues/363#issuecomment-950225411","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/363","id":950225411,"node_id":"IC_kwDOAAJ06c44o0oD","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-23T22:18:35Z","updated_at":"2021-10-23T22:18:35Z","author_association":"CONTRIBUTOR","body":"This seems to be a known issue with Microsoft and there is a lot of discussion about it. However, I haven't yet tried any of the proposed solutions.\r\n\r\n- https://github.com/dotnet/runtime/issues/21965\r\n- https://stackoverflow.com/questions/10547895/how-can-i-tell-when-httpclient-has-timed-out/32230327#32230327\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/950225411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955801266","html_url":"https://github.com/apache/lucenenet/issues/510#issuecomment-955801266","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/510","id":955801266,"node_id":"IC_kwDOAAJ06c44-F6y","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-31T22:17:28Z","updated_at":"2021-10-31T22:17:28Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nIt looks like you are using Lucene.NET 3.0.3. All of the examples from our home page are for Lucene.NET 4.8.0-beta. \r\n\r\nIn Lucene 3.0.3, the `ICharTermAttribute` was named `ITermAttribute` instead, and that is [the type it is trying to load in TermsHashPerField](https://github.com/apache/lucenenet/blob/3.0.3/src/core/Index/TermsHashPerField.cs#L290).\r\n\r\nThe API documentation for Lucene.NET 3.0.3 can be found here: https://lucenenet.apache.org/docs.html.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955801266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955803414","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-955803414","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":955803414,"node_id":"IC_kwDOAAJ06c44-GcW","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-31T22:32:29Z","updated_at":"2021-10-31T22:32:29Z","author_association":"CONTRIBUTOR","body":"I am closing this for now, since it is definitely an issue for the Lucene team to tackle, not for us.\r\n\r\n@roryap \r\n\r\nDo note that work is underway right now with the Lucene 9.0 release, and 9.x is likely the next point we will be syncing with them. If you want to see this happen in a future release of Lucene.NET, I urge you to [start a discussion](https://lucene.apache.org/core/discussion.html) with the Lucene team if you haven't done so already.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955803414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955974419","html_url":"https://github.com/apache/lucenenet/issues/413#issuecomment-955974419","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/413","id":955974419,"node_id":"IC_kwDOAAJ06c44-wMT","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-01T06:43:25Z","updated_at":"2021-11-01T06:43:25Z","author_association":"CONTRIBUTOR","body":"@sthmathew \r\n\r\nI finally got a chance to [ask the Lucene team whether this would be something they would consider](https://lists.apache.org/thread.html/r3eb924dd01d468d9b911177f8caff01330d38e76257d71c5e6392829%40%3Cdev.lucene.apache.org%3E), and it turns out that `TermsQuery` from the `queries` package \"provides similar functionality\" and furthermore it has been transferred to the `core` package in https://github.com/apache/lucene/commit/22940f5c49297b606d710c6775309d67ff064f2f.\r\n\r\nSo, there are a couple of ways this could go:\r\n\r\n1. You could port over one of the public versions from 5.2 or from a later version for use in your application. However, in the current version there are some Automaton dependencies that don't exist in 4.8.0, so you will need to pick a version before that point.\r\n2. We could make `Lucene.Net.Join.TermsQuery` public in 4.8.0 and you will need to adjust your code when Lucene.NET is upgraded to a newer version to call the public implementation, since `Lucene.Net.Join.TermsQuery` will be made internal again at the time of the upgrade. It doesn't make much sense to have 2 public queries that are similar.\r\n\r\nI suspect the public `TermsQuery` was probably optimized a little better, so you might want to try porting it to see how that goes and report back whether that will work for you.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/955974419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/956004165","html_url":"https://github.com/apache/lucenenet/issues/281#issuecomment-956004165","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/281","id":956004165,"node_id":"IC_kwDOAAJ06c44-3dF","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-01T07:42:46Z","updated_at":"2021-11-01T07:42:46Z","author_association":"CONTRIBUTOR","body":"It sounds like our users have done this for us (thank you). Marking closed.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/956004165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/961188824","html_url":"https://github.com/apache/lucenenet/issues/431#issuecomment-961188824","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/431","id":961188824,"node_id":"IC_kwDOAAJ06c45SpPY","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-04T16:05:45Z","updated_at":"2021-11-04T16:05:45Z","author_association":"CONTRIBUTOR","body":"I confess I was using the tests as an indicator of what a user might do, which may be an invalid assumption to make.\r\n\r\n### MoreLikeThis.Like()\r\n\r\nI was specifically looking at the test here, but I can see that a user may not care about looking at the individual clauses under normal usage.\r\n\r\n```c#\r\n            BooleanQuery query = (BooleanQuery)mlt.Like(new StringReader(\"lucene release\"), \"text\");\r\n            IList<BooleanClause> clauses = query.Clauses;\r\n\r\n            assertEquals(\"Expected \" + originalValues.Count + \" clauses.\", originalValues.Count, clauses.Count);\r\n\r\n            foreach (BooleanClause clause in clauses)\r\n            {\r\n                TermQuery tq = (TermQuery)clause.Query;\r\n                float? termBoost = originalValues[tq.Term.Text];\r\n                assertNotNull(\"Expected term \" + tq.Term.Text, termBoost);\r\n\r\n                float totalBoost = (float) (termBoost * boostFactor);\r\n                assertEquals(\"Expected boost of \" + totalBoost + \" for term '\"\r\n                    + tq.Term.Text + \"' got \" + tq.Boost, totalBoost, tq.Boost, 0.0001);\r\n            }\r\n```\r\n\r\n### Query.Rewrite() AND IndexSearcher.Rewrite()\r\n\r\nThis appears to be the same type of situation. The cast was only used so the test could check `SpanQuery.ExtractTerms()`. Most of the tests don't have any casting, and are probably more representative of what a user will do.\r\n\r\n```c#\r\n        [Test]\r\n        public virtual void TestRewrite0()\r\n        {\r\n            SpanQuery q = new FieldMaskingSpanQuery(new SpanTermQuery(new Term(\"last\", \"sally\")), \"first\");\r\n            q.Boost = 8.7654321f;\r\n            SpanQuery qr = (SpanQuery)searcher.Rewrite(q);\r\n\r\n            QueryUtils.CheckEqual(q, qr);\r\n\r\n            ISet<Term> terms = new JCG.HashSet<Term>();\r\n            qr.ExtractTerms(terms);\r\n            Assert.AreEqual(1, terms.Count);\r\n        }\r\n```\r\n\r\n### Filter.GetDocIdSet()\r\n\r\nThis also seems to be similar. Although it is a bit more difficult with this one, as this might be something a consumer actually does. That being said, casting is not required in over 90% of cases it is used.\r\n\r\n```c#\r\n        private Document GetParentDoc(IndexReader reader, Filter parents, int childDocID)\r\n        {\r\n            IList<AtomicReaderContext> leaves = reader.Leaves;\r\n            int subIndex = ReaderUtil.SubIndex(childDocID, leaves);\r\n            AtomicReaderContext leaf = leaves[subIndex];\r\n            FixedBitSet bits = (FixedBitSet)parents.GetDocIdSet(leaf, null);\r\n            return leaf.AtomicReader.Document(bits.NextSetBit(childDocID - leaf.DocBase));\r\n        }\r\n```\r\n\r\nSo, I have to concur this is probably not worth the effort.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/961188824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/962488136","html_url":"https://github.com/apache/lucenenet/issues/363#issuecomment-962488136","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/363","id":962488136,"node_id":"IC_kwDOAAJ06c45XmdI","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-06T18:01:43Z","updated_at":"2021-11-06T18:01:43Z","author_association":"CONTRIBUTOR","body":"@jeme \r\n\r\nI just submitted some patches for Replicator in #534, including the fix for this issue and 2 other tests that were failing more rarely and sometimes deadlocking.\r\n\r\nDuring this process, I ended up going through and updating the AspNetCore tests to follow a more modern approach (with a conditional compile for the .NET Core 3.1 and lower tests). And of course, it was a bit cumbersome because of the lack of async/await support, as you mentioned. It seems like there should be a way to get there, but more analysis is needed to know how deep that rabbit hole goes. It would be nice to support async/await for the AspNetCore users of replicator, and if we do provide a solution it would be safer to provide it before the 4.8.0 release to avoid breaking any APIs. That said, it isn't a critical feature so we could live without it if need be.\r\n\r\nBut it doesn't look like it is a contributor to any real problem with Replicator. Without the async support, we are probably blocking other parallel tasks from occurring. I had to add a configuration setting to the context to allow blocking IO code to run because in .NET 5 it will throw an `InvalidOperationException` to remind you that it is bad to run synchronous code when you can run async.\r\n\r\n> But I can't see that it would break anything to switch to the ThreadJob class as such. We could also do the same in the current implementation, catching the exception that halted the executing thread and then rethrowing that on a call to \"StopUpdateThread\".\r\n\r\nThe tests that were overriding `HandleUpdateException` and throwing within that method, which is called within an [unhandled catch block](https://github.com/apache/lucenenet/blob/972d1f50dcb7b49cd08ae91cd984309f942909b8/src/Lucene.Net.Replicator/ReplicationClient.cs#L172). So, any exceptions that were thrown in the tests were causing the thread to terminate. I suspect this was causing the failures and possibly contributing to the deadlocks, but I tested this very thoroughly, and there are no longer any failures after moving to `ThreadJob`.\r\n\r\nYou are right, it could have been done in the current implementation, but this does end up being less code to maintain by subclassing `ThreadJob`. Maybe there is a way we can still convert `ThreadJob` to use a `ThreadPool`, and it is probably something that is worth looking into being that it is used frequently across the codebase.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/962488136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/971840365","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-971840365","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":971840365,"node_id":"IC_kwDOAAJ06c457Rtt","user":{"login":"Maxwellwr","id":2279996,"node_id":"MDQ6VXNlcjIyNzk5OTY=","avatar_url":"https://avatars.githubusercontent.com/u/2279996?v=4","gravatar_id":"","url":"https://api.github.com/users/Maxwellwr","html_url":"https://github.com/Maxwellwr","followers_url":"https://api.github.com/users/Maxwellwr/followers","following_url":"https://api.github.com/users/Maxwellwr/following{/other_user}","gists_url":"https://api.github.com/users/Maxwellwr/gists{/gist_id}","starred_url":"https://api.github.com/users/Maxwellwr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Maxwellwr/subscriptions","organizations_url":"https://api.github.com/users/Maxwellwr/orgs","repos_url":"https://api.github.com/users/Maxwellwr/repos","events_url":"https://api.github.com/users/Maxwellwr/events{/privacy}","received_events_url":"https://api.github.com/users/Maxwellwr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-17T18:21:25Z","updated_at":"2021-11-17T18:21:25Z","author_association":"CONTRIBUTOR","body":"This seems to be relevant https://issues.apache.org/jira/browse/LUCENE-6093","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/971840365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/973005744","html_url":"https://github.com/apache/lucenenet/issues/271#issuecomment-973005744","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/271","id":973005744,"node_id":"IC_kwDOAAJ06c45_uOw","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-18T16:04:13Z","updated_at":"2021-11-18T16:04:13Z","author_association":"CONTRIBUTOR","body":"I started by trying to solve the two [TestRandomChains]() failures (see #269), but it ended up unraveling back to this issue again.\r\n\r\nI isolated a specific case that fails in .NET:\r\n\r\n```c#\r\n[Test]\r\npublic void TestWordDelimiterFilterChain()\r\n{\r\n    Analyzer a = Analyzer.NewAnonymous(createComponents: (fieldName, reader) =>\r\n    {\r\n        Tokenizer tokenizer = new NGramTokenizer(LuceneVersion.LUCENE_48, reader, 70, 79);\r\n        TokenStream filter = tokenizer;\r\n        filter = new WordDelimiterFilter(LuceneVersion.LUCENE_48, filter, WordDelimiterFlags.CATENATE_NUMBERS | WordDelimiterFlags.SPLIT_ON_CASE_CHANGE, new CharArraySet(LuceneVersion.LUCENE_48, new HashSet<string> { \"htxodcrfoi\", \"zywcmh\", \"pkw\", \"urdvcqr\", \"gbuskh\" }, ignoreCase: true));\r\n        filter = new ShingleFilter(filter, \"EMAIL\");\r\n        return new TokenStreamComponents(tokenizer, filter);\r\n    });\r\n\r\n    string text = \"ufsczdev -[({0, \\u20d0\\u20f4\\u20f4\\u20d4\\u20e0\\u20e4\\u20d0\\u20ef\\u20e7\\u20dd\\u20f7\\u20d2\\u20e1 kdoxod \\u175b\\u1758\\u174a pirsk --><scr \\ufe5d\\ufe51\\ufe6c\\ufe5d\\ufe5e\\ufe61 \\ud802\\udf57 \\ua6fb\\ua6cd \\ufc78\\uf998\\u06e9\\u1b3a \\ud802\\ude2c\\ud802\\ude59\\ud802\\ude22\\ud802\\ude3b lkpnukew rqniibv \\ue990\\ud8d0\\udfe6\\ue6a8[ lmev wzpts \\u306a\\u304a\\u3093\\u3080\\u3092\";\r\n    bool useCharFilter = false;\r\n    bool offsetsAreCorrect = true;\r\n\r\n    long seed = 0x21773254b5ac8fa0L;\r\n    Random random = new J2N.Randomizer(seed);\r\n\r\n\r\n    try\r\n    {\r\n        CheckAnalysisConsistency(random, a, useCharFilter, text, offsetsAreCorrect);\r\n    }\r\n    catch (Exception e) when (e.IsThrowable())\r\n    {\r\n        Console.WriteLine(\"Exception from random analyzer: \" + a);\r\n        throw;\r\n    }\r\n}\r\n```\r\n\r\nAnd after translating it to Java, it still fails:\r\n\r\n```java\r\npublic void testWordDelimiterFilterChain() throws Throwable {\r\n  Analyzer a = new Analyzer() {\r\n    public TokenStreamComponents createComponents(String fieldName, Reader reader) {\r\n      Tokenizer tokenizer  = new org.apache.lucene.analysis.ngram.NGramTokenizer(Version.LUCENE_48, reader, 70, 79);\r\n      TokenStream filter = tokenizer;\r\n      filter = new WordDelimiterFilter(Version.LUCENE_48, filter, WordDelimiterFilter.CATENATE_NUMBERS | WordDelimiterFilter.SPLIT_ON_CASE_CHANGE, new CharArraySet(Version.LUCENE_48, asSet(\"htxodcrfoi\", \"zywcmh\", \"pkw\", \"urdvcqr\", \"gbuskh\"), /*ignoreCase:*/ true));\r\n      filter = new org.apache.lucene.analysis.shingle.ShingleFilter(filter, \"EMAIL\");\r\n      \r\n      return new TokenStreamComponents(tokenizer, filter);\r\n    }\r\n  };\r\n  \r\n  String text = \"ufsczdev -[({0, \\u20d0\\u20f4\\u20f4\\u20d4\\u20e0\\u20e4\\u20d0\\u20ef\\u20e7\\u20dd\\u20f7\\u20d2\\u20e1 kdoxod \\u175b\\u1758\\u174a pirsk --><scr \\ufe5d\\ufe51\\ufe6c\\ufe5d\\ufe5e\\ufe61 \\ud802\\udf57 \\ua6fb\\ua6cd \\ufc78\\uf998\\u06e9\\u1b3a \\ud802\\ude2c\\ud802\\ude59\\ud802\\ude22\\ud802\\ude3b lkpnukew rqniibv \\ue990\\ud8d0\\udfe6\\ue6a8[ lmev wzpts \\u306a\\u304a\\u3093\\u3080\\u3092\";\r\n  boolean useCharFilter = false;\r\n  boolean offsetsAreCorrect = false;\r\n  \r\n  long seed = 0x21773254b5ac8fa0L;\r\n  java.util.Random random = new java.util.Random(seed);\r\n  \r\n  \r\n  try\r\n  {\r\n      checkAnalysisConsistency(random, a, useCharFilter, text, offsetsAreCorrect);\r\n  }\r\n  catch (Throwable e)\r\n  {\r\n      System.out.println(\"Exception from random analyzer: \" + a);\r\n      throw e;\r\n  } \r\n }\r\n```\r\n\r\nI discovered this is primarily due to the fact that some flags are not supported during indexing: https://stackoverflow.com/a/66478863/, and confirmed that removing the `WordDelimiterFlags.CATENATE_NUMBERS` flag makes the test pass.\r\n\r\nIn `TestRandomChains`, `WordDelimiterFilter` is added to the `brokenOffsetsConstructors` dictionary. This causes [`offsetsAreCorrect` to be set to `true`](https://github.com/apache/lucenenet/blob/03bc03bb5bcb74d12524cc9c0d85e501473a4445/src/Lucene.Net.Tests.Analysis.Common/Analysis/Core/TestRandomChains.cs#L1028), which [`BaseTokenStreamTestCase.CheckAnalysisConsistency`](https://github.com/apache/lucenenet/blob/03bc03bb5bcb74d12524cc9c0d85e501473a4445/src/Lucene.Net.TestFramework/Analysis/BaseTokenStreamTestCase.cs#L1014) is supposed to handle. `BaseTokenStreamTestCase` has been changed from its original implementation to include try-finally and using blocks (both in [`CheckAnalysisConsistency()`](https://github.com/apache/lucenenet/blob/03bc03bb5bcb74d12524cc9c0d85e501473a4445/src/Lucene.Net.TestFramework/Analysis/BaseTokenStreamTestCase.cs#L1038) and in [`AssertTokenStreamContents()`](https://github.com/apache/lucenenet/blob/03bc03bb5bcb74d12524cc9c0d85e501473a4445/src/Lucene.Net.TestFramework/Analysis/BaseTokenStreamTestCase.cs#L144-L148) and that is where we are running into trouble.\r\n\r\nLong story short, this circles back to the fact that we converted the `Closable` interface in Java to `IDisposable` in .NET on `TokenStream`. But `TokenStream`'s `close()` method has preconditions that must be met or it will throw an exception. The exception doesn't play well when you are trying to close open `TextReader`s successfully. Before these finally blocks were put into place to call `Dispose()` one failing analysis test would cause nearly all of them to fail.\r\n\r\nSince most of Lucene's tests do not call `close()` in a finally block, I have long suspected that there is something automatic happening to call these methods, and after a bit of research, I discovered that [`Closable`](https://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html) inherits [`AutoClosable`](https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html), which has configuration options that can be set to make it implicit. But it is clear this is going to take more research to work out how it works in Lucene and the best way to make it translate to .NET in a reasonable way.\r\n\r\n### Some Options to Consider\r\n\r\n1. Add a `Close()` method that has the precondition checks and use `Dispose()` to only do the cleanup.\r\n2. In `Dispose()`, only suppress the finalizer in the case where the preconditions pass, but rely on a finalizer in cases where it fails.\r\n\r\n  ```c#\r\n   private bool isValid;\r\n\r\n  ~TokenStream() // Only called if we don't meet our preconditions\r\n  {\r\n      Dispose(false);\r\n  }\r\n\r\n  public void Dispose()\r\n  {\r\n     Dispose(true);\r\n     GC.SuppressFinalize(this);\r\n  }\r\n\r\n  protected virtual void Dispose(bool disposing)\r\n  {\r\n      if (disposing)\r\n      {\r\n          isValid = Validate(out string reason);\r\n          if (!isValid)\r\n              throw new InvalidOperationException(reason); // Exception short circuits the call to SuppressFinalize\r\n\r\n          DoDispose();\r\n      }\r\n\r\n      if (!isValid)\r\n          DoDispose();\r\n  }\r\n\r\n  internal void DoDispose()\r\n  {\r\n    // Dispose file handles here...\r\n  }\r\n  ```\r\n  Of course, that means we need to wait for the finalizer to execute before beginning the next test. From the [finalizer docs](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/finalizers):\r\n\r\n  > The programmer has no control over when the finalizer is called; the garbage collector decides when to call it. The garbage collector checks for objects that are no longer being used by the application. If it considers an object eligible for finalization, it calls the finalizer (if any) and reclaims the memory used to store the object. It's possible to force garbage collection by calling Collect, but most of the time, this call should be avoided because it may create performance issues.\r\n\r\n  Options for fixing the tests:\r\n\r\n  1. Call `GC.Collect()` in a catch block to ensure the finalizer gets called first.\r\n  2. Call `DoDispose()` in a catch block to ensure we dispose everything right away, without waiting for the GC.\r\n\r\n  Since the preconditions are only meant to prevent programming bugs that aren't likely to make it into a production application, it seems reasonable to rely on a finalizer as a fallback for this edge case.\r\n\r\n## Further Consideration\r\n\r\nBeing that [Lucene may call `Close()` on a `TokenStream` and then `Reset()`](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/core/Lucene.Net.Analysis.html#using-the-tokenstream-api) to start the process all over again, we should separate the concept of `Close()` from `Dispose()`. Whether we actually need a `Dispose()` method needs more analysis to figure out if `TokenStream` is actually responsible for cleaning up file handles, and if not, where that responsibility lies. Since `TokenStream` can effectively \"Reopen\" after it is called, it seems to make sense to at least have a `Close()` method to signal that we are not actually disposing anything and can still use the `TokenStream` instance.\r\n\r\nBut we definitely need to revert `BaseTokenStreamTestCase` to be closer to its original form and remove all of the finally blocks that \"correctly consume\" the `TokenStream` that are now causing other issues in the tests.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/973005744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/973757057","html_url":"https://github.com/apache/lucenenet/issues/527#issuecomment-973757057","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/527","id":973757057,"node_id":"IC_kwDOAAJ06c46ClqB","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-19T05:08:34Z","updated_at":"2021-11-19T05:08:34Z","author_association":"CONTRIBUTOR","body":"@Maxwellwr\r\n\r\nThanks for the info. I had a look at [the LUCENE-6093 patch](https://issues.apache.org/jira/secure/attachment/12695304/LUCENE-6093.patch) and it looks like a pretty straightforward fix. We aren't going out of our way to bring in changes from newer versions of Lucene, but if they affect usability, we are accepting PRs for patches from the community.\r\n\r\nHere is the source to use if you need more context than the patch file: [Lucene 4.10.4 suggest source code](https://github.com/apache/lucene/tree/releases/lucene-solr/4.10.4/lucene/suggest)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/973757057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976038907","html_url":"https://github.com/apache/lucenenet/pull/548#issuecomment-976038907","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/548","id":976038907,"node_id":"IC_kwDOAAJ06c46LSv7","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T00:32:28Z","updated_at":"2021-11-23T00:32:28Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976038907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976230193","html_url":"https://github.com/apache/lucenenet/issues/556#issuecomment-976230193","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/556","id":976230193,"node_id":"IC_kwDOAAJ06c46MBcx","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T07:47:34Z","updated_at":"2021-11-23T07:47:34Z","author_association":"CONTRIBUTOR","body":"Will start looking at this again soon - and get automation working. Think the docs automation will now be fixed by infra too 🤞 ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976230193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976231348","html_url":"https://github.com/apache/lucenenet/issues/556#issuecomment-976231348","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/556","id":976231348,"node_id":"IC_kwDOAAJ06c46MBu0","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T07:50:05Z","updated_at":"2021-11-23T07:50:05Z","author_association":"CONTRIBUTOR","body":"I think a lot of this comes due to being half way through automation and not completing it but we had to merge to master to get the other parts working for the site. Anyways, i'll investigate and hopefully automate it all.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976231348/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976234938","html_url":"https://github.com/apache/lucenenet/issues/556#issuecomment-976234938","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/556","id":976234938,"node_id":"IC_kwDOAAJ06c46MCm6","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T07:56:45Z","updated_at":"2021-11-23T07:56:45Z","author_association":"CONTRIBUTOR","body":"> I think a lot of this comes due to being half way through automation and not completing it but we had to merge to master to get the other parts working for the site. Anyways, i'll investigate and hopefully automate it all.\r\n\r\nActually, I did the entire build locally this time. So, it is quite possible I am missing a dependency. But that doesn't explain why it is intermittent.\r\n\r\nBut I agree, putting it all in an automation pipeline would take all of those issues out of the equation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/976234938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/979930616","html_url":"https://github.com/apache/lucenenet/issues/562#issuecomment-979930616","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/562","id":979930616,"node_id":"IC_kwDOAAJ06c46aI34","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-26T12:06:26Z","updated_at":"2021-11-26T12:06:26Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nWe are no longer supporting Lucene.NET 3.0.3 and the original team that ported it is no longer involved in the project. But this is primarily because all of our effort is going into 4.8.0 and we haven't looked into what it would take to resurrect 3.0.3 to begin patching it.\r\n\r\n## Option 1 - Patch 3.0.3 Yourself\r\n\r\nAccording to the [3.0.3 release blog post](https://blogs.apache.org/lucenenet/entry/lucene_net_3_0_3), the tag that corresponds to it is [Lucene.Net_3_0_3_RC2_final](https://github.com/apache/lucenenet/tree/Lucene.Net_3_0_3_RC2_final).  \r\n\r\nDo note that there are several 3.x branches which may be patched beyond that tag, but I haven't looked into what these patches are fixing, nor have they been verified:\r\n\r\n1. [3.0.3 (branch - has commits after the 2012-10-26 release date)](https://github.com/apache/lucenenet/tree/3.0.3)\r\n2. [3.0.3-2 (branch - last commit 2012-09-27)](https://github.com/apache/lucenenet/tree/3.0.3-2)\r\n3. [branch_3x (branch - has commits after the 2012-10-26 release date)](https://github.com/apache/lucenenet/tree/branch_3x)\r\n4. [branch_3.0x (branch - last commit 2014-09-07)](https://github.com/apache/lucenenet/tree/branch_3.0x)\r\n\r\nThere are also several patches that RavenDB has done to 3.0.3 in their own fork:\r\n\r\n- https://github.com/ravendb/lucenenet\r\n\r\n\r\nIf you are willing to do the footwork to figure out which of these options best corresponds to the 3.0.3 release and/or verify any patches to the branch that should go into another release, we could make sure it gets released and then we would have a way to continue patching it.\r\n\r\nDo note that the `.sln` files are a bit hard to find. They are in the [build folder](https://github.com/apache/lucenenet/tree/Lucene.Net_3_0_3_RC2_final/build). No objections if you wish to change this to a single `.sln` file with the latest `.csproj` project file format, but we probably don't want to go down the road of trying to support .NET Standard/.NET Core/.NET 5/.NET 6 due to the amount of complexity involved.\r\n\r\nNote also that it is an Apache requirement that the project must build and be testable via command line in order to [create a release](https://www.apache.org/legal/release-policy.html).\r\n\r\nTo make it clear that this is still a patched 3.0.3 build, it should be versioned 3.0.3._n_, where _n_ increments with each release.\r\n\r\n## Option 2 - Upgrade to 4.8.0-beta00015\r\n\r\nI don't know if all of those components support 4.8.0-beta00015, but if so, I would recommend upgrading because we can definitely patch 4.8.0 and will be able to continue supporting it in the future.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/979930616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/987924867","html_url":"https://github.com/apache/lucenenet/issues/549#issuecomment-987924867","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/549","id":987924867,"node_id":"IC_kwDOAAJ06c464omD","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-07T13:26:30Z","updated_at":"2021-12-07T13:26:30Z","author_association":"CONTRIBUTOR","body":"Wow! You found one of the really hard bugs -- one that only fails in release mode with optimizations enabled.  Wow -- Well done!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/987924867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/987941110","html_url":"https://github.com/apache/lucenenet/issues/549#issuecomment-987941110","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/549","id":987941110,"node_id":"IC_kwDOAAJ06c464sj2","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-07T13:47:04Z","updated_at":"2021-12-07T13:47:04Z","author_association":"CONTRIBUTOR","body":"Actually, I was able to rule a lot of stuff out right away because it only failed under rare circumstances, I was able to isolate it to the `Lucene.Net` assembly by disabling optimizations, and the actual number of calls into `Lucene.Net` were limited for this test. The part about *where* it was failing was a bit confusing, though - the method doing the actual float math was returning the correct value, but this intermediate method was truncating it when it returned.\r\n\r\nThat said, I haven't come up with a good explanation why casting fixes it but using `MethodImplOptons.NoOptimization` on this method and all methods that it calls does not fix it. But casting seems to make the jitter happy.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/987941110/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991120781","html_url":"https://github.com/apache/lucenenet/issues/569#issuecomment-991120781","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/569","id":991120781,"node_id":"IC_kwDOAAJ06c47E02N","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-10T16:37:20Z","updated_at":"2021-12-10T16:48:32Z","author_association":"CONTRIBUTOR","body":"Emre – It’s a really good question.  I’ve wondered the same thing before as well.  Your question prompted me to do a bit of digging and this is the conclusion I reached:\r\n\r\n It seems that Lucene considers the step of converting an Int64Field into a Trie structure for indexing to be a form of tokenization.  While the approach does not use an Analyzer per se it is true that Lucene does greatly change the form of the number before putting that new representation into the index.  And non-tokenized fields are placed directly in the inverted index, which is not the case for numbers since what is placed in the inverted index is a trie structure corresponding to the number.  That trie structure often has 8 terms which are placed in the inverted index but the number of terms will very based on the numeric Field’s NumericPrecisionStep.\r\n\r\nOne piece of code that shines a bit of light onto this is https://github.com/apache/lucenenet/blob/Lucene.Net_4_8_0_beta00015/src/Lucene.Net/Document/Field.cs#L168 )\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991120781/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991478425","html_url":"https://github.com/apache/lucenenet/issues/569#issuecomment-991478425","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/569","id":991478425,"node_id":"IC_kwDOAAJ06c47GMKZ","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-11T06:20:48Z","updated_at":"2021-12-11T06:20:48Z","author_association":"CONTRIBUTOR","body":"Thanks @rclabo.\r\n\r\nIn addition, there is a bit of info in the [NumericUtils documentation](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/core/Lucene.Net.Util.NumericUtils.html) that explains the storage a little more. However, Lucene is notably bad at keeping their documentation up to date, so this may be referring to previous versions of Lucene.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991478425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991883520","html_url":"https://github.com/apache/lucenenet/issues/437#issuecomment-991883520","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/437","id":991883520,"node_id":"IC_kwDOAAJ06c47HvEA","user":{"login":"benjamin-stern","id":1266727,"node_id":"MDQ6VXNlcjEyNjY3Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1266727?v=4","gravatar_id":"","url":"https://api.github.com/users/benjamin-stern","html_url":"https://github.com/benjamin-stern","followers_url":"https://api.github.com/users/benjamin-stern/followers","following_url":"https://api.github.com/users/benjamin-stern/following{/other_user}","gists_url":"https://api.github.com/users/benjamin-stern/gists{/gist_id}","starred_url":"https://api.github.com/users/benjamin-stern/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjamin-stern/subscriptions","organizations_url":"https://api.github.com/users/benjamin-stern/orgs","repos_url":"https://api.github.com/users/benjamin-stern/repos","events_url":"https://api.github.com/users/benjamin-stern/events{/privacy}","received_events_url":"https://api.github.com/users/benjamin-stern/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-12T11:49:30Z","updated_at":"2021-12-12T11:49:30Z","author_association":"NONE","body":"We are getting pretty close to the end of 2021 any updates?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/991883520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992014580","html_url":"https://github.com/apache/lucenenet/issues/437#issuecomment-992014580","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/437","id":992014580,"node_id":"IC_kwDOAAJ06c47IPD0","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-13T00:58:02Z","updated_at":"2021-12-13T01:29:55Z","author_association":"CONTRIBUTOR","body":"We are working on 4.8.0-beta00016 at present and will likely be releasing it within the next couple of weeks.\r\n\r\n- Since we have completed #288 (at least to the point where we can debug), we were able to detect and repeat test failures well enough to fix nearly all known test failures.\r\n- We have tracked down some of the concurrency problems, but there is an issue with the documents writer that is preventing us from allowing more than 1 thread from utilizing it (we are unable to apply [this change](https://dev.azure.com/shad0962/Experiments/_git/lucenenet/commit/80270e932a44b25c016fcb273772575f3c712e04?refName=refs%2Fheads%2Ffix%2Fthreading-merge-2) without running into deadlocks).\r\n- We have been digging into several of the boxing/unboxing issues for numeric types and dates that were introduced by doing a direct port from reference type to value type, and are close to fixing these issues.\r\n- [J2N](https://github.com/NightOwl888/J2N) is stable pending an API review.\r\n- [ICU4N](https://github.com/NightOwl888/ICU4N) is still an alpha and although we don't need to port any more of it, it has many issues to complete. The most critical are:\r\n  1. There are some thread safety issues when using [BreakIterator](https://github.com/NightOwl888/ICU4N/blob/ad0250a0823c7638a5de0e3682d7b6ad8d8d06be/src/ICU4N/Text/BreakIterator.cs) from [ICUTokenizer](https://github.com/apache/lucenenet/blob/be977b8becae15a86659b4843e6d2033f89f84d3/src/Lucene.Net.Analysis.ICU/Analysis/Icu/Segmentation/ICUTokenizer.cs) see #269. We have worked around by adding a static lock so only 1 thread can utilize it at a time.\r\n  2. The package structure needs refactoring back to 1 ICU4N package and 1 or more data packages so we don't have to include duplicate data with every target framework.\r\n  3. The data loading needs to be fixed so end users can supply their own data subsets to minimize distribution size. The current thinking is to upgrade to at least ICU 64 and to utilize the `.jar` file that is generated by the [ICU Data Build Tool](https://unicode-org.github.io/icu/userguide/icu_data/buildtool.html) so we don't have to build an additional tool for ICU4N.\r\n- [Lucene.Net.Analysis.OpenNLP](https://www.nuget.org/packages/Lucene.Net.Analysis.OpenNLP) depends on [IKVM](https://www.nuget.org/packages/IKVM/), which currently has no .NET Core/.NET 5/.NET 6 support. We recently [got ownership of the IKVM NuGet package](https://github.com/ikvm-revived/ikvm/issues/40), but need a working .NET Core build so we can release it. Alternatively, someone could do the high-level analysis of what it would take to use one of the alternative options so we can avoid dealing with IKVM. See #460.\r\n- We need to review tests #259 and `IDisposable` usage #265 and could really use some help with these tasks.\r\n- `TokenStream` didn't call `close()` on `Reader` in Java, but ours calls `TextWriter.Dispose()`. We need to investgate what is supposed to close the reader and apply the appropriate fix (see https://github.com/apache/lucenenet/issues/271#issuecomment-973005744).\r\n- We also need to add tests for MAUI #258 to ensure we don't have any infinite recursion problems with the way we are using generics (they are not fully supported on Mono/Xamarin.Android, see https://github.com/NightOwl888/J2N/commit/9fa5f07c588fd187ea9c33d5c82d02e444f749c7). Leave a comment on #258 if interested, I have some insights on how this can be achieved if there are no test runners for MAUI that support NUnit 3.x (Xamarin only had runners for NUnitLite, which is not compatible with our test framework). \r\n\r\nWhile we don't consider `Lucene.Net.ICU` and `Lucene.Net.Analysis.OpenNLP` to be blocking the release, it would take a considerable amount of effort to be able to release them on a different schedule as the rest of the components (probably around 30% of the work as it would take to just complete them). Several components depend on `ICU4N`, including `lucene-cli` which also has index maintenance tools that should be version synced with Lucene.NET.\r\n\r\nWe are always looking for additional people to help us reach the goal. Per community request to provide more info about what to work on, we moved from JIRA to GitHub issues and marked several issues up for grabs. While we are committed to completing Lucene.NET, if you are waiting for us to complete it with the small number of resources we have, make no mistake about it you **will** be waiting. On the other hand, we have recently added some information on the [NuGet Readme](https://www.nuget.org/packages/Lucene.Net/) page on how to get involved and/or sponsor the project if you wish to help us to make Lucene.NET 4.8.0 a production release faster.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992014580/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992098246","html_url":"https://github.com/apache/lucenenet/pull/571#issuecomment-992098246","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/571","id":992098246,"node_id":"IC_kwDOAAJ06c47IjfG","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-13T04:22:09Z","updated_at":"2021-12-13T04:22:09Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR.\r\n\r\nYou have done a great job following conventions and putting this together. However, `PersianStemmer` is not something that already exists in Lucene and we don't have an approval process set up for this sort of thing in .NET (yet).\r\n\r\n## Options\r\n\r\n1. If you would like to see this released in Lucene.NET sooner rather than later, you can port this great contribution to Java and submit it to the [Lucene repository on GitHub](https://github.com/apache/lucene). See their [Contributing guide](https://cwiki.apache.org/confluence/display/lucene/HowToContribute) for more info.\r\n2. Alternatively, we can port this to Java and submit the contribution for you (when we get a chance to) and will include it in a future Lucene.NET 4.8.0 release, even though it didn't exist in Java at this version.\r\n\r\nEither way, it would be great to keep this PR open and to report the status of the contribution to Lucene back here so we can track the progress and learn about how these sort of approvals work. We will merge it once the Lucene team makes the final approval.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992098246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992829479","html_url":"https://github.com/apache/lucenenet/pull/572#issuecomment-992829479","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/572","id":992829479,"node_id":"IC_kwDOAAJ06c47LWAn","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-13T19:56:01Z","updated_at":"2021-12-13T19:57:34Z","author_association":"CONTRIBUTOR","body":"I **strongly** prefer my variable naming of intrinsic for the additional `EventWaitHandle` over the new name of `m_signal`.  The former helps throw light on the fact that it’s being used to mimic java's ability to signal on the intrinsic class which c# can’t do and hence the use of the extra`EventWaitHandle`.\r\n\r\nYou changed `refreshStartGen` from a `long` to a `AtomicInt64`.  I don’t believe this changes is necessary.  This variable is a `long` in the original java code.\r\n\r\nYou changed `isDispose` from `bool` to `AtomicBoolean`.  I don’t believe this change is necessary.  Reading and writing a Boolean is inherently atomic  see [Is a bool read/write atomic in C#](https://stackoverflow.com/questions/59422/is-a-bool-read-write-atomic-in-c-sharp#answer-59430)\r\n\r\nYou removed the holding of a lock on the `Dispose` method.  This is a major drift from the Java implementation.  Please note the java `close` method for this class is a synchronized method.\r\n\r\nBy removing the `searchingGen = long.MaxValue; ` line in the `Dispose` method and using a conditional assignment of `searchingGen`  in the `RefreshDone` method this new version of the code does not track as closely with the java code as my original ported version.  This change is also why in the `Dispose` method you needed to replace the call to `Intrensic.Set()` and it’s *very* helpful comment with a call to `RefrsehDone()`   which adds more drift from the java implementation.    It's not clear these changes improve the code but they do make it harder to compare to the java code.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/992829479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993178578","html_url":"https://github.com/apache/lucenenet/pull/571#issuecomment-993178578","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/571","id":993178578,"node_id":"IC_kwDOAAJ06c47MrPS","user":{"login":"raminmjj","id":991847,"node_id":"MDQ6VXNlcjk5MTg0Nw==","avatar_url":"https://avatars.githubusercontent.com/u/991847?v=4","gravatar_id":"","url":"https://api.github.com/users/raminmjj","html_url":"https://github.com/raminmjj","followers_url":"https://api.github.com/users/raminmjj/followers","following_url":"https://api.github.com/users/raminmjj/following{/other_user}","gists_url":"https://api.github.com/users/raminmjj/gists{/gist_id}","starred_url":"https://api.github.com/users/raminmjj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raminmjj/subscriptions","organizations_url":"https://api.github.com/users/raminmjj/orgs","repos_url":"https://api.github.com/users/raminmjj/repos","events_url":"https://api.github.com/users/raminmjj/events{/privacy}","received_events_url":"https://api.github.com/users/raminmjj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-14T05:43:47Z","updated_at":"2021-12-14T05:43:47Z","author_association":"CONTRIBUTOR","body":"Hi Shad,\r\nI try to port this to Java.\r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993178578/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993308412","html_url":"https://github.com/apache/lucenenet/pull/572#issuecomment-993308412","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/572","id":993308412,"node_id":"IC_kwDOAAJ06c47NK78","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-14T08:45:12Z","updated_at":"2021-12-14T08:45:12Z","author_association":"CONTRIBUTOR","body":"Okay, let's try to establish first what we are trying to achieve:\r\n\r\n1. A direct line-by-line port from Java to C#\r\n2. A (mostly) lockless implementation that functions similarly to Lucene's original design\r\n\r\nWe tried a direct line-by-line port, and it doesn't function correctly in .NET because of low level differences in the way concurrency is implemented. It was changed to its current (mostly) lockless form in the following 2 commits:\r\n\r\nhttps://github.com/apache/lucenenet/commit/d3621f0c3a02bf3c82603c1d94916e70e06b3035\r\nhttps://github.com/apache/lucenenet/commit/dfb2e92839dd29cbdc47d8c37af9325ea351709b\r\n\r\nIMO, as long as it functions correctly (i.e. passes all of the tests and doesn't deadlock), the form is less important than the function. The fact that it is lockless is more in line with how modern .NET code is written. So, as long as we protect the state so it is read and written to atomically, this is fine.\r\n\r\n> I **strongly** prefer my variable naming of intrinsic for the additional `EventWaitHandle` over the new name of `m_signal`.  The former helps throw light on the fact that it’s being used to mimic java's ability to signal on the intrinsic class which c# can’t do and hence the use of the extra`EventWaitHandle`.\r\n\r\n.NET's direct equivalent to `this.notifyAll()` is [`Monitor.PulseAll(this)`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.monitor.pulseall?view=net-6.0), which a subclass would automatically be able to receive if we were using it. I attempted to change it (calling `UninterruptableMonitor.PulseAll(this)`) instead of using the `EventWaitHandle` but this doesn't play well with the changes to the locks to make the class mostly lockless. The problem here is that the code is no longer waiting on `this`, so pulsing on it isn't going to wake up the threads (but changing to wait on `this` also deadlocks). I suspect we would also need to change the lock that protects `searchingGen` and `waitingGen` to lock on a different object than `this` if we were to pull that off.\r\n\r\nThe class is not sealed in Lucene (meaning it was designed with inheritance in mind). So, if we are going to use `EventWaitHandle`, we need to mark its declaration protected to keep the same level of extensibility as Lucene, otherwise a subclass won't be able to receive the notification from the base class.\r\n\r\n`intrinsic` seems like a very unusual name to me, being that the \"intrinsic\" way to do this would be to use `Monitor.PulseAll(this)`. It doesn't explain to the consumer what the event does (as part of the .NET component), only what it *did in Java*, which the person using the class might not be aware of. `m_signal` makes more sense IMO. But  `m_notify` would be fine if that makes it more clear to developers who may be looking at the Java source code as well as the ones who haven't seen it.\r\n\r\n> You changed `refreshStartGen` from a `long` to a `AtomicInt64`.  I don’t believe this changes is necessary.  This variable is a `long` in the original java code.\r\n\r\nIn .NET, reading `long` is not atomic. This is to ensure when the `Run()` method sets it, another call to the `RefreshDone()` method will be able to read it atomically.\r\n\r\nThe test for `IRefreshListener` [uses an `AtomicBoolean`](https://github.com/apache/lucenenet/blob/19cb0c1d806462aad2b6297e0885491062887456/src/Lucene.Net.Tests/Search/TestControlledRealTimeReopenThread.cs#L612) when running the test. That is a good indication we are not expecting the call to `RefreshDone()` to be on the same thread as `Run()`. While `Run()` calls `MaybeRefreshBlocking()` right after setting the variable, there is a non-zero chance another thread could call `MaybeRefresh()` or `MaybeRefreshBlocking()` and fire the listener at the same time the write is being done, since the `ReferenceManager<T>` is passed in through the constructor.\r\n\r\n> You changed `isDispose` from `bool` to `AtomicBoolean`.  I don’t believe this change is necessary.  Reading and writing a Boolean is inherently atomic  see [Is a bool read/write atomic in C#](https://stackoverflow.com/questions/59422/is-a-bool-read-write-atomic-in-c-sharp#answer-59430)\r\n\r\nReading a `bool` is atomic. Writing a `bool` is atomic. But doing both operations together cannot be done atomically. The change to `AtomicBoolean` is so we can ensure only one thread enters the `Dispose()` method. \r\n\r\n```c#\r\n            // This both checks the previous value and updates it to true atomically\r\n            if (isDisposed.GetAndSet(true))\r\n            {\r\n                return;\r\n            }\r\n```\r\n\r\n> NOTE: The comment doesn't exist in the source code, we should put it there to ensure it is clear why `AtomicBoolean` is necessary here. In case you are curious, `AtomicBoolean` uses an `int` and uses [Interlocked.Exchange to do both operations atomically](https://github.com/NightOwl888/J2N/blob/b7f80ca424af2b077b5d42beff4d9fbad8b05ef5/src/J2N/Threading/Atomic/AtomicBoolean.cs#L106). `Interlocked`, however does not support `bool`.\r\n\r\nThe rest of the logic was also reviewed to ensure that one thread is able to successfully dispose all of the resources whether or not there is an exception.\r\n\r\n> You removed the holding of a lock on the `Dispose` method.  This is a major drift from the Java implementation.  Please note the java `close` method for this class is a synchronized method.\r\n\r\nActually, @vvdb [removed the lock in 2017](https://github.com/apache/lucenenet/commit/dfb2e92839dd29cbdc47d8c37af9325ea351709b#diff-638564666c0e7e28327d70790e03a2dc00131ad1fd2086a7ac8e62a7b641453eL118) when the class was redesigned to be mostly lockless. He also removed the `reopenLock`.\r\n\r\nVincent sent me the code via email. The whole conversation is in the March, 2017 archive here under the subject `TestSearcherManager_Mem`.\r\n\r\n[ControlledRealTimeReopenThread.txt](https://github.com/apache/lucenenet/files/7708264/ControlledRealTimeReopenThread.txt)\r\n\r\nhttp://mail-archives.apache.org/mod_mbox/lucenenet-dev/201703.mbox/browser\r\n\r\nPlease read the thread. Vincent was aware that there were still some timing issues with the implementation he submitted, so this tracks with your reasoning for changing the timing code.\r\n\r\nHe also mentioned that as written, this code didn't even function correctly in Java and suggested that we port the code and tests from Lucene 4.9.0 instead.\r\n\r\nThe while change history of this class can be viewed in Git with the following command:\r\n\r\n```\r\ngit log --follow -p -- src/Lucene.Net/Search/ControlledRealTimeReopenThread.cs\r\n```\r\n\r\nI once held the view that reverting this to exactly the same state as it was in Java was the best approach, but I have been convinced (with evidence) that it is simply not possible to do it exactly the same way in .NET due to how differently concurrency is implemented between platforms. We need to go in at a lower level and actually port what the code *does* with regard to what is atomic and what is safe to read without being atomic and not worry so much about how differently it *looks* in .NET.\r\n\r\n> By removing the `searchingGen = long.MaxValue; ` line in the `Dispose` method and using a conditional assignment of `searchingGen`  in the `RefreshDone` method this new version of the code does not track as closely with the java code as my original ported version.  This change is also why in the `Dispose` method you needed to replace the call to `Intrensic.Set()` and it’s *very* helpful comment with a call to `RefrsehDone()`   which adds more drift from the java implementation.    It's not clear these changes improve the code but they do make it harder to compare to the java code.\r\n\r\nAgain, the form of how this looks is not as critical as its function. Putting this inside of a method means we don't have to duplicate the locking around this code in Dispose() to ensure the operation is atomic, and is therefore easier to maintain. \r\n\r\nThe only purpose of the lock in the current iteration is to ensure both `searchingGen` and `waitingGen` are read and written to atomically, nothing more. The rest of the code is lockless.\r\n\r\n### Timing\r\n\r\nWhat hasn't been established is whether this PR still fixes the bug that you were seeing in the timing. This passes the tests that you added. Is this working the way you expect it to or not?\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993308412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993321445","html_url":"https://github.com/apache/lucenenet/pull/571#issuecomment-993321445","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/571","id":993321445,"node_id":"IC_kwDOAAJ06c47NOHl","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-14T09:02:41Z","updated_at":"2021-12-14T09:02:41Z","author_association":"CONTRIBUTOR","body":"Great. Let us know if you need help with that. The `Reader` has been moved to a different place in Lucene analyzers, but other than that, I think it will be straightforward to do.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993321445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993662370","html_url":"https://github.com/apache/lucenenet/pull/572#issuecomment-993662370","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/572","id":993662370,"node_id":"IC_kwDOAAJ06c47OhWi","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-14T15:32:20Z","updated_at":"2021-12-14T15:32:20Z","author_association":"CONTRIBUTOR","body":"I don't even know how to respond to this.  I guess I will just say by intrinsic what I mean is that in java you can `this.signalAll()`.  just like you can declare a method to be synchronized.  In other words, in java the class can be intrinsically locked by the keyword synchronized and it can be intrinsically signaled on via `signalAll()`.  C# has neither of these facilities.  So in c# instead of the synchronized keyword we use lock(this) and in c# instead of `this.signalAll()` we can use a  `ManualResetEvent` instance and call it's Set() method. And hence calling that instance variable  intrinsic is a reminder that we are using the `ManualResetEvent` as a replacement for Java's  intrinsic ability to `SignalAll()` the class itself. \r\n\r\nAnyway, your changes are fine.  Feel free to run with them if they pass the two additional tests I crafted when ran manually.  The situation just rubs me wrong.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993662370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993914517","html_url":"https://github.com/apache/lucenenet/pull/572#issuecomment-993914517","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/572","id":993914517,"node_id":"IC_kwDOAAJ06c47Pe6V","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-14T19:34:41Z","updated_at":"2021-12-14T19:34:41Z","author_association":"CONTRIBUTOR","body":"Alright, after our talk offline we are on the same page. I will update the name of the `EventWaitHandle` from `m_signal` to `m_notify` to clarify how it compares to Java. And will do more testing.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/993914517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/999639484","html_url":"https://github.com/apache/lucenenet/pull/586#issuecomment-999639484","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/586","id":999639484,"node_id":"IC_kwDOAAJ06c47lUm8","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-22T15:00:41Z","updated_at":"2021-12-22T15:00:41Z","author_association":"CONTRIBUTOR","body":"Sweet.  Very cool!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/999639484/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1001792041","html_url":"https://github.com/apache/lucenenet/issues/591#issuecomment-1001792041","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/591","id":1001792041,"node_id":"IC_kwDOAAJ06c47tiIp","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-27T23:05:48Z","updated_at":"2021-12-27T23:05:48Z","author_association":"CONTRIBUTOR","body":"Hi. \r\n\r\nThere are a few things I spotted in the code that could be causing performance issues.\r\n\r\n1. You are opening and closing `IndexReader` within a single search method. It works best to either use a singleton `IndexReader` instance (application wide) or to use a singleton `IndexWriter` instance and call `IndexWriter.GetReader()` as needed to do searches (assuming your app needs to do both operations simultaneously). Both of these classes are completely thread safe and are designed to service requests in parallel. This is likely causing most of your problem because opening and closing them continually will cause a lot of disk activity.\r\n2. You are using high compression. This will definitely run slower than using normal compression.\r\n3. You are calling `GC.Collect()` and `GC.WaitForPendingFinalizers()`. In general, most .NET applications don't need to call the GC directly except to disable finalizers. Do note that there aren't many classes in Lucene.NET that use finalizers, so it is unclear why you are doing this.\r\n4. You are using `SimpleFSDirectory`, which uses the default `FileStream` buffer size. In general, using `MMapDirectory` will provide better performance.\r\n\r\nWhile it may not be affecting the performance much, the `List.GetRange()` method copies the elements to a new list. If you switch to using a `J2N.Collections.Generic.List<T>`, there is a [`.GetView()`](https://github.com/NightOwl888/J2N/blob/b7f80ca424af2b077b5d42beff4d9fbad8b05ef5/src/J2N/Collections/Generic/List.cs#L227) method that passes a bounded subset over the *same* elements of the list instead of copying them to a new list.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1001792041/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1001844190","html_url":"https://github.com/apache/lucenenet/issues/591#issuecomment-1001844190","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/591","id":1001844190,"node_id":"IC_kwDOAAJ06c47tu3e","user":{"login":"ahmadmdabit","id":76170199,"node_id":"MDQ6VXNlcjc2MTcwMTk5","avatar_url":"https://avatars.githubusercontent.com/u/76170199?v=4","gravatar_id":"","url":"https://api.github.com/users/ahmadmdabit","html_url":"https://github.com/ahmadmdabit","followers_url":"https://api.github.com/users/ahmadmdabit/followers","following_url":"https://api.github.com/users/ahmadmdabit/following{/other_user}","gists_url":"https://api.github.com/users/ahmadmdabit/gists{/gist_id}","starred_url":"https://api.github.com/users/ahmadmdabit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahmadmdabit/subscriptions","organizations_url":"https://api.github.com/users/ahmadmdabit/orgs","repos_url":"https://api.github.com/users/ahmadmdabit/repos","events_url":"https://api.github.com/users/ahmadmdabit/events{/privacy}","received_events_url":"https://api.github.com/users/ahmadmdabit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-28T03:03:55Z","updated_at":"2021-12-28T03:03:55Z","author_association":"NONE","body":"Hi.\r\n_I thank you very much for your quick response. I will take care of everything you told me about._\r\nMy Regards.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1001844190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002444274","html_url":"https://github.com/apache/lucenenet/issues/437#issuecomment-1002444274","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/437","id":1002444274,"node_id":"IC_kwDOAAJ06c47wBXy","user":{"login":"benjamin-stern","id":1266727,"node_id":"MDQ6VXNlcjEyNjY3Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1266727?v=4","gravatar_id":"","url":"https://api.github.com/users/benjamin-stern","html_url":"https://github.com/benjamin-stern","followers_url":"https://api.github.com/users/benjamin-stern/followers","following_url":"https://api.github.com/users/benjamin-stern/following{/other_user}","gists_url":"https://api.github.com/users/benjamin-stern/gists{/gist_id}","starred_url":"https://api.github.com/users/benjamin-stern/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjamin-stern/subscriptions","organizations_url":"https://api.github.com/users/benjamin-stern/orgs","repos_url":"https://api.github.com/users/benjamin-stern/repos","events_url":"https://api.github.com/users/benjamin-stern/events{/privacy}","received_events_url":"https://api.github.com/users/benjamin-stern/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-29T07:57:13Z","updated_at":"2021-12-29T07:57:13Z","author_association":"NONE","body":"Unfortunately the company I am working for is quite small and doesn't have the extra resources to assist with the development in any substantial way. \r\n\r\nThank you for all your hard work and detailed drilldown, I think it important that the roadmap be visible so that individuals or companies with the resources, can assist and with the development where they can.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002444274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002637929","html_url":"https://github.com/apache/lucenenet/issues/437#issuecomment-1002637929","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/437","id":1002637929,"node_id":"IC_kwDOAAJ06c47wwpp","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-29T15:04:32Z","updated_at":"2021-12-29T15:04:32Z","author_association":"CONTRIBUTOR","body":"> any substantial way\r\n\r\nI guess this is the crux of the misunderstanding. We don't need a few companies to put in _tons_ of time or funding, we need **_many_** companies to put in **_a small amount_** of time or funding to keep the project going.\r\n\r\nWe are getting more than 3400 downloads per day on NuGet, which is significantly higher than it was in 2016 when I started working on this (around 600 per day). If only a fraction of the companies and individuals doing those downloads would put in 1 weekend, or 1 day, or 1 hour of time or were financially contributing $50, $20, or $5 per month, we would be moving significantly faster than we are now (mind you, porting on Lucene.NET 4.8.0 started in September 2014). \r\n\r\n### For most small businesses, $50 per month is not going to break their budget. But for us, it is a crucial lifeline to completing the port.\r\n\r\n| | | |\r\n|----------------|:------------------------------------:|------------------------------------:|\r\n| [Shad Storhaug](https://github.com/NightOwl888) | [![Sponsor with GitHub Sponsors](https://img.shields.io/badge/Sponsor%20with%20GitHub-5b5b5b?logo=GitHub%20Sponsors)](https://github.com/sponsors/NightOwl888) | [![Sponsor with PayPal](https://img.shields.io/badge/Sponsor%20with%20PayPal-5b5b5b?logo=paypal&logoColor=white)](https://www.paypal.me/ShadStorhaug) |\r\n| [Shannon Deminick](https://github.com/Shazwazza) | [![Sponsor with GitHub Sponsors](https://img.shields.io/badge/Sponsor%20with%20GitHub-5b5b5b?logo=GitHub%20Sponsors)](https://github.com/sponsors/Shazwazza) | |\r\n| [Ron Clabo](https://github.com/rclabo) | [![Sponsor with GitHub Sponsors](https://img.shields.io/badge/Sponsor%20with%20GitHub-5b5b5b?logo=GitHub%20Sponsors)](https://github.com/sponsors/rclabo)| |\r\n\r\n> I think it important that the roadmap be visible so that individuals or companies with the resources, can assist and with the development where they can.\r\n\r\nThanks for the feedback.\r\n\r\nCreating such a list is a drain on our already small number of resources. Porting work isn't quite the same as developing new applications where the requirements can be well-defined. There is a significant amount of analysis and research that goes into finding the best API or technology to map to on the new platform, and if it doesn't exist or behaves radically differently, we have to build it. What was done initially was a \"best guess\" for how it should fit together, but in some cases the wrong technology was picked and in others a significant performance degradation happened or unintentional bug was introduced because the new API differs in behavior from the original one. For many of the \"tasks\" that we are aware of to complete, the analysis has not yet been done. In other words, they are just a general \"analyze this and determine how to break this into more tasks\".\r\n\r\nOf course, crowd sourcing the analysis work would be a big help. If everyone reading this spent just 30 minutes to pick a random file and compare [the Lucene.NET source](https://github.com/apache/lucenenet) line by line against [lucene 4.8.0](https://github.com/apache/lucene/tree/releases/lucene-solr%2F4.8.0), Googling to verify that each line they are unsure of is ported in a reasonable way, and made us aware of all of the uncommented differences, we would have a leg up on the analysis work.\r\n\r\nMost of what has been determined has already been posted above or as a GitHub issue. There is a spreadsheet that exists to keep track at a high level, but it is a significant amount of work to keep it up to date. I have made an effort to put some of the more well-defined tasks into GitHub issues that would take anywhere from 30 minutes to a weekend to complete, but despite some of them being on the board for 3 years, I am the one who ends up closing them. I am just not convinced that spending all of my time to pre-analyze everything and update a list is going to bring more help. We have tried this to some degree, and it has not worked. Even for basic stuff like [creating a wrapper batch file](https://github.com/apache/lucenenet/issues/364), [creating icons for our NuGet package dependencies](https://github.com/apache/lucenenet/issues/253), and [updating the theme of the code colorizer on our website](https://github.com/apache/lucenenet/issues/458).\r\n\r\nAs part of #460, I got involved with the effort to revive [IKVM](https://github.com/ikvm-revived/ikvm). On that project, people offer to help out frequently. But since IKVM was abandoned by its original contributor and has some confusing native bits, it is difficult to navigate through how to help. I can see how creating a list could help out on that project. But for some reason, despite Lucene.NET having nearly 13 million downloads on NuGet and a steady increase in demand over time, we aren't getting many offers for help to complete the port.\r\n\r\n> NOTE: We have a plan to upgrade to the latest version of Lucene once the Lucene.NET 4.8.0 port is complete. The Lucene design hasn't changed significantly and the dependencies ([ICU4N](https://github.com/NightOwl888/ICU4N) and [J2N](https://github.com/NightOwl888/J2N)) now exist in .NET, so we can do it in around 1800 hours rather than the 5000+ hours that it took to get from 3.x to 4.x.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002637929/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002790795","html_url":"https://github.com/apache/lucenenet/issues/591#issuecomment-1002790795","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/591","id":1002790795,"node_id":"IC_kwDOAAJ06c47xV-L","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-29T21:58:17Z","updated_at":"2021-12-29T21:58:17Z","author_association":"CONTRIBUTOR","body":"I agree that the #1 reason that Shad listed is almost certainly the issue.  If you are opening and closing the reader frequently it can be a huge performance hit as all caches will need to be rebuild including any fieldCaches used for sorting or other LuceneNet features.  In fact, general guidance is to not only use a single `IndexReader` or single `IndexWriter` ie `IndexWriter.GetReader()` **but also** to perform a few typical queries on that object at system startup to \"warm up the system\" and give it a chance to build those caches.  So, if instead the system closes and reopens the reader each search, Then the system is basically paying that \"warm up\" penalty for every search, over and over again.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1002790795/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1006900379","html_url":"https://github.com/apache/lucenenet/issues/591#issuecomment-1006900379","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/591","id":1006900379,"node_id":"IC_kwDOAAJ06c48BBSb","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-06T20:09:17Z","updated_at":"2022-01-06T20:09:17Z","author_association":"CONTRIBUTOR","body":"This question appears to be answered satisfactorily. Let us know if you need further assistance.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1006900379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1008936862","html_url":"https://github.com/apache/lucenenet/pull/596#issuecomment-1008936862","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/596","id":1008936862,"node_id":"IC_kwDOAAJ06c48Iyee","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-10T14:39:50Z","updated_at":"2022-01-10T14:39:50Z","author_association":"CONTRIBUTOR","body":"Wow, look like good work.  There is still so much about build automation I don't understand.  I think I will watch some youtube videos about GitHub Actions today and try to raise my knowledge on this a bit.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1008936862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1015883920","html_url":"https://github.com/apache/lucenenet/issues/601#issuecomment-1015883920","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/601","id":1015883920,"node_id":"IC_kwDOAAJ06c48jSiQ","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-18T22:16:46Z","updated_at":"2022-01-18T22:16:46Z","author_association":"CONTRIBUTOR","body":"Should be fine :) I saw your PR https://github.com/apache/lucenenet/pull/603 i'll have a look later today hopefully","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1015883920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016606409","html_url":"https://github.com/apache/lucenenet/issues/601#issuecomment-1016606409","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/601","id":1016606409,"node_id":"IC_kwDOAAJ06c48mC7J","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-19T15:53:37Z","updated_at":"2022-01-19T15:53:37Z","author_association":"CONTRIBUTOR","body":"Great. Note that all of the projects have a [package reference on Microsoft.NETFramework.ReferenceAssemblies](https://github.com/apache/lucenenet/blob/b030c4072cfdd7b7e0070791c5e50403901515b9/Directory.Build.targets#L154), so we don't need to worry about installing them on the build machine.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016606409/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016926760","html_url":"https://github.com/apache/lucenenet/pull/603#issuecomment-1016926760","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/603","id":1016926760,"node_id":"IC_kwDOAAJ06c48nRIo","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-19T22:22:45Z","updated_at":"2022-01-19T22:22:45Z","author_association":"CONTRIBUTOR","body":"Also, based on your comments in https://github.com/apache/lucenenet/issues/601 it seems like we need to update the docs.ps1 and site.ps1 files to ensure we are using at least docfx 2.59 ? That can be done by modifying the lines where we issue a `Invoke-WebRequest` but we should probably just store the docfx version in these files as a variable to be used.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016926760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016944232","html_url":"https://github.com/apache/lucenenet/pull/603#issuecomment-1016944232","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/603","id":1016944232,"node_id":"IC_kwDOAAJ06c48nVZo","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-19T22:52:00Z","updated_at":"2022-01-19T22:52:00Z","author_association":"CONTRIBUTOR","body":"Looks like we'll also need some assembly binding updates since the docs build eventually fails with \r\n\r\n```\r\n[22-01-19 10:50:44.322]Error:System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nFile name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at LuceneDocsPlugins.LuceneDfmEngineCustomizer.Customize(DfmEngineBuilder builder, IReadOnlyDictionary`2 parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService..ctor(DfmServiceProvider provider, String baseDir, String templateDir, ICompositionContainer container, ImmutableDictionary`2 tokens, IReadOnlyList`1 fallbackFolders, IReadOnlyDictionary`2 parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.BuildCore(DocumentBuildParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.Build(DocumentBuildParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.BuildCore(DocumentBuildParameters parameter, IMarkdownServiceProvider markdownServiceProvider, BuildInfo currentBuildInfo, BuildInfo lastBuildInfo)\r\n   at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.Build(IList`1 parameters, String outputDirectory)\r\n   at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument(BuildJsonConfig config, TemplateManager templateManager, String baseDirectory, String outputDirectory, String pluginDirectory, String templateDirectory)\r\n   at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument()\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n\r\n\r\n\r\nBuild failed.\r\n[22-01-19 10:50:44.381]Error:System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nFile name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at LuceneDocsPlugins.LuceneDfmEngineCustomizer.Customize(DfmEngineBuilder builder, IReadOnlyDictionary`2 parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService..ctor(DfmServiceProvider provider, String baseDir, String templateDir, ICompositionContainer container, ImmutableDictionary`2 tokens, IReadOnlyList`1 fallbackFolders, IReadOnlyDictionary`2 parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.BuildCore(DocumentBuildParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.Build(DocumentBuildParameters parameters)\r\n   at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.BuildCore(DocumentBuildParameters parameter, IMarkdownServiceProvider markdownServiceProvider, BuildInfo currentBuildInfo, BuildInfo lastBuildInfo)\r\n   at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.Build(IList`1 parameters, String outputDirectory)\r\n   at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument(BuildJsonConfig config, TemplateManager templateManager, String baseDirectory, String outputDirectory, String pluginDirectory, String templateDirectory)\r\n   at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument()\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1016944232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017171189","html_url":"https://github.com/apache/lucenenet/pull/603#issuecomment-1017171189","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/603","id":1017171189,"node_id":"IC_kwDOAAJ06c48oMz1","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T06:52:57Z","updated_at":"2022-01-20T06:57:48Z","author_association":"CONTRIBUTOR","body":"> I can confirm that the sln and cproj open and build. When I run the docs build however, I now get this warning\r\n> \r\n> ```\r\n> [22-01-19 10:16:40.609]Warning:[ExtractMetadata](Z:/src/Lucene.Net.Codecs/Lucene.Net.Codecs.csproj)Workspace failed with: [Failure] Msbuild failed when processing the file 'Z:\\src\\Lucene.Net.Codecs\\Lucene.Net.Codecs.csproj' with message: C:\\Program Files\\dotnet\\sdk\\5.0.404\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets: (241, 5): Package J2N, version 2.0.0-beta-0016 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.\r\n> [22-01-19 10:16:41.353]Warning:[ExtractMetadata](Z:/src/Lucene.Net.Codecs/Lucene.Net.Codecs.csproj)Workspace failed with: [Failure] Msbuild failed when processing the file 'Z:\\src\\Lucene.Net\\Lucene.Net.csproj' with message: C:\\Program Files\\dotnet\\sdk\\5.0.404\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets: (241, 5): Package J2N, version 2.0.0-beta-0016 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.\r\n> \r\n> \r\n> Build succeeded with warning.\r\n> [22-01-19 10:17:04.629]Warning:[ExtractMetadata](Z:/src/Lucene.Net.Codecs/Lucene.Net.Codecs.csproj)Workspace failed with: [Failure] Msbuild failed when processing the file 'Z:\\src\\Lucene.Net.Codecs\\Lucene.Net.Codecs.csproj' with message: C:\\Program Files\\dotnet\\sdk\\5.0.404\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets: (241, 5): Package J2N, version 2.0.0-beta-0016 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.\r\n> [22-01-19 10:17:04.630]Warning:[ExtractMetadata](Z:/src/Lucene.Net.Codecs/Lucene.Net.Codecs.csproj)Workspace failed with: [Failure] Msbuild failed when processing the file 'Z:\\src\\Lucene.Net\\Lucene.Net.csproj' with message: C:\\Program Files\\dotnet\\sdk\\5.0.404\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets: (241, 5): Package J2N, version 2.0.0-beta-0016 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.\r\n>         2 Warning(s)\r\n>         0 Error(s)\r\n> ```\r\n> \r\n> I've mapped a network drive to this location to reduce the path length in case that was the cause but this hasn't resolved the warning. Have you seen this warning before (perhaps not caused by this PR)?\r\n\r\nI can't think of a reason why J2N 2.0.0-beta-0016 cannot resolve. However, do note that the current version is 2.0.0. Given that fact, I suspect there might be a problem with not having all of the changes on your local system (although I am not sure how that could happen).\r\n\r\nI was able to get a successful docs build on Azure DevOps: https://dev.azure.com/lucene-net-temp2/Lucene.NET/_build/results?buildId=846&view=results (although, it looks like the build needs to be fixed to update the PackageVersion env variable).\r\n\r\nThe `build` folder (where `dependencies.props` resides) had to be renamed `.build` to resolve a name conflict when building on Linux. Make sure you have that folder, and that you have cleaned out any remnants of the `build` folder.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017171189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017188292","html_url":"https://github.com/apache/lucenenet/pull/603#issuecomment-1017188292","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/603","id":1017188292,"node_id":"IC_kwDOAAJ06c48oQ_E","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T07:24:14Z","updated_at":"2022-01-20T07:24:14Z","author_association":"CONTRIBUTOR","body":"> Also, based on your comments in #601 it seems like we need to update the docs.ps1 and site.ps1 files to ensure we are using at least docfx 2.59 ? That can be done by modifying the lines where we issue a `Invoke-WebRequest` but we should probably just store the docfx version in these files as a variable to be used.\r\n\r\nAccording to https://github.com/dotnet/docfx/issues/5553#issuecomment-591275853, 2.58 should be high enough, but we could upgrade if this isn't resolved another way.\r\n\r\nAll of the dependency versions are in `dependencies.props`. Since it is unlikely we will ever need to make the version conditional, the simple solution is to parse the XML from that file to get the version number from a new property that contains it. Simply add a new PropertyGroup, as follows.\r\n\r\n```xml\r\n<PropertyGroup Label=\"Tool Versions\">\r\n    <DocFxVersion>2.58</DocFxVersion>\r\n</PropertyGroup>\r\n```\r\n\r\nI didn't migrate the package reference versions for ` LuceneDocsPlugins.csproj` to `dependencies.props` in this PR, but perhaps that should be done, as well.  `dependencies.props` is [imported in the root Directory.Build.targets file](https://github.com/NightOwl888/lucenenet/blob/fix/GH-601-docs-build/Directory.Build.targets#L23), so it is automatically added to every project.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017188292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017194327","html_url":"https://github.com/apache/lucenenet/pull/603#issuecomment-1017194327","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/603","id":1017194327,"node_id":"IC_kwDOAAJ06c48oSdX","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T07:35:06Z","updated_at":"2022-01-20T07:35:06Z","author_association":"CONTRIBUTOR","body":"> Looks like we'll also need some assembly binding updates since the docs build eventually fails with\r\n> \r\n> ```\r\n> [22-01-19 10:50:44.322]Error:System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n> File name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n>    at LuceneDocsPlugins.LuceneDfmEngineCustomizer.Customize(DfmEngineBuilder builder, IReadOnlyDictionary`2 parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService..ctor(DfmServiceProvider provider, String baseDir, String templateDir, ICompositionContainer container, ImmutableDictionary`2 tokens, IReadOnlyList`1 fallbackFolders, IReadOnlyDictionary`2 parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.BuildCore(DocumentBuildParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.Build(DocumentBuildParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.BuildCore(DocumentBuildParameters parameter, IMarkdownServiceProvider markdownServiceProvider, BuildInfo currentBuildInfo, BuildInfo lastBuildInfo)\r\n>    at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.Build(IList`1 parameters, String outputDirectory)\r\n>    at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument(BuildJsonConfig config, TemplateManager templateManager, String baseDirectory, String outputDirectory, String pluginDirectory, String templateDirectory)\r\n>    at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument()\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> \r\n> \r\n> \r\n> Build failed.\r\n> [22-01-19 10:50:44.381]Error:System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n> File name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n>    at LuceneDocsPlugins.LuceneDfmEngineCustomizer.Customize(DfmEngineBuilder builder, IReadOnlyDictionary`2 parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService..ctor(DfmServiceProvider provider, String baseDir, String templateDir, ICompositionContainer container, ImmutableDictionary`2 tokens, IReadOnlyList`1 fallbackFolders, IReadOnlyDictionary`2 parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.BuildCore(DocumentBuildParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.Build(DocumentBuildParameters parameters)\r\n>    at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.BuildCore(DocumentBuildParameters parameter, IMarkdownServiceProvider markdownServiceProvider, BuildInfo currentBuildInfo, BuildInfo lastBuildInfo)\r\n>    at Microsoft.DocAsCode.Build.Engine.DocumentBuilder.Build(IList`1 parameters, String outputDirectory)\r\n>    at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument(BuildJsonConfig config, TemplateManager templateManager, String baseDirectory, String outputDirectory, String pluginDirectory, String templateDirectory)\r\n>    at Microsoft.DocAsCode.SubCommands.DocumentBuilderWrapper.BuildDocument()\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> ```\r\n\r\nWell, I suspect there is something going on with your clone not being fully updated. Some things you could try:\r\n\r\n1. Run [git clean](https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-to-use-the-git-clean-command)\r\n2. Clone the repo directly from the [PR branch](https://github.com/NightOwl888/lucenenet/blob/fix/GH-601-docs-build)\r\n3. Upgrade the .NET SDK to [6.0.101](https://dotnet.microsoft.com/en-us/download/dotnet/6.0).\r\n\r\nWe probably don't need the binding redirects, but if we do, one way to resolve them is to add a package reference to the updated version of `System.Collections.Immutable` to `LuceneDocsPlugins.csproj`.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017194327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017271058","html_url":"https://github.com/apache/lucenenet/issues/604#issuecomment-1017271058","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/604","id":1017271058,"node_id":"IC_kwDOAAJ06c48olMS","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T09:21:28Z","updated_at":"2022-01-20T09:21:28Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nCould you please provide a complete example that we can run to reproduce the issue?\r\n\r\n`WeakDictionary` doesn't tell us anything other than that you are using .NET Framework. Unfortunately, Microsoft didn't expose the enumerator of `ConditionalWeakTable` until .NET Standard 2.1, so we are left without a reasonable alternative. `WeakDictionary` is just a workaround for .NET Framework.\r\n\r\nDo note that it is not supposed to keep references internally for any objects that are put in it. You have to hold onto the references from outside of the application (assuming that you are adding them explicitly), otherwise there is no guarantee that they will be retrievable.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017271058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017284252","html_url":"https://github.com/apache/lucenenet/issues/604#issuecomment-1017284252","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/604","id":1017284252,"node_id":"IC_kwDOAAJ06c48ooac","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T09:36:35Z","updated_at":"2022-01-20T09:36:35Z","author_association":"NONE","body":"Thanks for the quick response and I'm expecting quick response till further. \r\nSteps to reproduce it:\r\n1. Initialize Lucene Directory and IndexWriter.\r\n2. Build Index e.g 1000 Documents.\r\n3. Run the below mention code. \r\n4. In result of step 3, you will get the reported issue. \r\n```\r\n               if (!analyzer.GetType().Equals(new WhitespaceAnalyzer(version).GetType()))\r\n                    filterTerm = filterTerm.ToLower();\r\n\r\n                Filter filter = new QueryWrapperFilter(new TermQuery(new Term(fieldName, filterTerm)));\r\n\r\n                QueryParser parser = new QueryParser(version, fieldName, analyzer);\r\n                Query query = parser.Parse(searchTerm);\r\n\r\n                Sort sort = new Sort(new SortField(\"Category2\", SortFieldType.STRING_VAL));\r\n\r\n                TopFieldDocs fields = searcher.Search(query, filter, TOTAL_ITEMS, sort, true, false);\r\n\r\n                if (fields.MaxScore > 0)\r\n                    throw new Exception(fields.MaxScore + \" is returned as MaxScore however it was marked false.\");\r\n\r\n                ScoreDoc[] docsFound = fields.ScoreDocs;\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017284252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017408563","html_url":"https://github.com/apache/lucenenet/issues/604#issuecomment-1017408563","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/604","id":1017408563,"node_id":"IC_kwDOAAJ06c48pGwz","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T11:35:52Z","updated_at":"2022-01-20T11:35:52Z","author_association":"NONE","body":"I fixed this issue in this PR #605 ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017408563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017599138","html_url":"https://github.com/apache/lucenenet/issues/604#issuecomment-1017599138","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/604","id":1017599138,"node_id":"IC_kwDOAAJ06c48p1Si","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T15:03:17Z","updated_at":"2022-01-20T15:03:17Z","author_association":"CONTRIBUTOR","body":"I have searched the entire codebase and the getter for `WeakDictionary<TKey, TValue>` isn't called anywhere. So, the only way this can fail is if you are using a copy of `WeakDictionary<TKey, TValue>` in your own code (since it is marked internal).\r\n\r\nIf you need a weak dictionary in your own code, please use [`ConditionalWeakTable<TKey, TValue>`](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2) instead. The only reason we use `WeakDictionary<TKey, TValue>` is because the enumerator API wasn't exposed on `ConditionalWeakTable<TKey, TValue>` in .NET Framework and .NET Standard 2.0. Many use cases don't require enumeration. But if you need enumeration, I would recommend upgrading to .NET Core rather than copying our substandard workaround into your project.\r\n\r\nNote there is no `this[index]` property on `ConditionalWeakTable<TKey, TValue>`, to get a single value, you must call `TryGetValue()` instead, which is what we are doing throughout the codebase on `WeakDictionary<TKey, TValue>`. But `WeakDictionary<TKey, TValue>` must always be used with locking to make it threadsafe, which is one of many reasons why we haven't exposed it as public.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1017599138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1018517938","html_url":"https://github.com/apache/lucenenet/issues/607#issuecomment-1018517938","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/607","id":1018517938,"node_id":"IC_kwDOAAJ06c48tVmy","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-21T13:45:18Z","updated_at":"2022-01-21T13:45:18Z","author_association":"CONTRIBUTOR","body":"IndexSearcher does not have a dispose method because it’s the responsibility of the SearcherManager to manage the IndexSearchers.  Below is an example of how to use an IndexSearcher.\n\n \n\nIndexSearcher indexSearcher = searcherManager.Acquire();\n\ntry {\n\n    query = new TermQuery(new Term(\"examplePrimaryKey\", \"002\"));\n\nTopDocs topDocs = indexSearcher.Search(query, n:100);\n\n \n\n    //do someting with the topDocs\n\n \n\n} finally {\n\n    searcherManager.Release(indexSearcher);\n\n}\n\n \n\n-Ron\n\n \n\nFrom: Hamza Shoukat ***@***.*** \nSent: Friday, January 21, 2022 1:46 AM\nTo: apache/lucenenet\nCc: Subscribed\nSubject: [apache/lucenenet] IndexSearcher Must be IDisposable (Issue #607)\n\n \n\nIndexSearcher does not have the dispose functionality which may cause process high memory. Kindly elaborate why lucenenet are not providing the searcher dispose method.\n\nDue to update in reader state will force user to create new searcher, and there is no functionality of disposing the resources of searcher using. So, this can cause high memory and in result performance will drop.\n\nI'm assuming the quick response.\n\nThanks\n\n—\nReply to this email directly, view it on GitHub <https://github.com/apache/lucenenet/issues/607> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABU7VW464HLPAV67H5JOKNLUXD6LTANCNFSM5MOWT7VA> .\nTriage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>  or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub> . \nYou are receiving this because you are subscribed to this thread.  <https://github.com/notifications/beacon/ABU7VW3IEI6PCA6VWM3D7V3UXD6LTA5CNFSM5MOWT7VKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4QRLAKGA.gif> Message ID: ***@***.***>\n\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1018517938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1018706260","html_url":"https://github.com/apache/lucenenet/issues/607#issuecomment-1018706260","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/607","id":1018706260,"node_id":"IC_kwDOAAJ06c48uDlU","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-21T17:16:58Z","updated_at":"2022-01-21T17:19:31Z","author_association":"CONTRIBUTOR","body":"@rclabo is correct. Alternatively, to release resources more implicitly you can use the `ReferenceManagerExtensions.GetContext()` extension method in a using block.\r\n\r\n```c#\r\n// import at the top of the file\r\nusing Lucene.Net.Search;\r\n\r\n\r\n// Create a ReferenceManager. This will be disposed implicitly when it goes out of scope.\r\nusing ReferenceManager<IndexSearcher> referenceManager = new SearcherManager(writer, new SearcherFactory());\r\n\r\n// Create a reference to the disposable wrapper. The reference will be released implicitly when it goes out of scope.\r\n// This eliminates the need for the explicit searcherManager.Release(indexSearcher) call in a finally block.\r\nusing ReferenceContext<IndexSearcher> context = referenceManager.GetContext();\r\n\r\n// reference the IndexSearcher instance\r\nIndexSearcher indexSearcher = context.Reference;\r\n\r\nquery = new TermQuery(new Term(\"examplePrimaryKey\", \"002\"));\r\n\r\nTopDocs topDocs = indexSearcher.Search(query, n:100);\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1018706260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019308237","html_url":"https://github.com/apache/lucenenet/issues/607#issuecomment-1019308237","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/607","id":1019308237,"node_id":"IC_kwDOAAJ06c48wWjN","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-22T16:54:55Z","updated_at":"2022-01-22T16:54:55Z","author_association":"NONE","body":"Thanks for the valuable comment.\r\n\r\nI'm satisfied with the answer.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019308237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019340920","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1019340920","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1019340920,"node_id":"IC_kwDOAAJ06c48weh4","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-22T19:11:21Z","updated_at":"2022-01-22T19:11:21Z","author_association":"CONTRIBUTOR","body":"`MMapDirectory` is a wrapper around the [`MemoryMappedFile` class](https://docs.microsoft.com/en-us/dotnet/api/system.io.memorymappedfiles.memorymappedfile?view=net-6.0), and is meant to keep some data in RAM for fast read access. If you are only writing, you might be better off using [`NIOFSDirectory`](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/core/Lucene.Net.Store.NIOFSDirectory.html) or [`SimpleFSDirectory`](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/core/Lucene.Net.Store.SimpleFSDirectory.html) instead. Have you tried either of these?\r\n\r\nNote that the documentation may not be correct about the performance characteristics of these directories, as some of the information is still referring to issues that occur in Java (so they don't necessarily apply in .NET).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019340920/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019342385","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1019342385","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1019342385,"node_id":"IC_kwDOAAJ06c48we4x","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-22T19:19:59Z","updated_at":"2022-01-22T19:19:59Z","author_association":"CONTRIBUTOR","body":"Memory Mapped Files allow to you fast random access to file content.\r\nthis is done by letting the OS to manage what's to keep in ram. this memory also can be free quite fast\r\n\r\nif you have free memory, most of the time you want to get the most of it, and use it. (that's why you paid for it)\r\nso high usage of memory shouldn't bother you, because this memory will use in the future as cached page if you'll read it.\r\n\r\nas @NightOwl888 said, if you're only writing you can use the SimpleFSDirectory\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019342385/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019417015","html_url":"https://github.com/apache/lucenenet/issues/610#issuecomment-1019417015","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/610","id":1019417015,"node_id":"IC_kwDOAAJ06c48wxG3","user":{"login":"justcurious","id":395328,"node_id":"MDQ6VXNlcjM5NTMyOA==","avatar_url":"https://avatars.githubusercontent.com/u/395328?v=4","gravatar_id":"","url":"https://api.github.com/users/justcurious","html_url":"https://github.com/justcurious","followers_url":"https://api.github.com/users/justcurious/followers","following_url":"https://api.github.com/users/justcurious/following{/other_user}","gists_url":"https://api.github.com/users/justcurious/gists{/gist_id}","starred_url":"https://api.github.com/users/justcurious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justcurious/subscriptions","organizations_url":"https://api.github.com/users/justcurious/orgs","repos_url":"https://api.github.com/users/justcurious/repos","events_url":"https://api.github.com/users/justcurious/events{/privacy}","received_events_url":"https://api.github.com/users/justcurious/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-23T05:28:47Z","updated_at":"2022-01-23T05:28:47Z","author_association":"NONE","body":"I don't know what running that with `-Pre` will give me","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1019417015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1020161947","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1020161947","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1020161947,"node_id":"IC_kwDOAAJ06c48zm-b","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T14:32:04Z","updated_at":"2022-01-24T14:32:04Z","author_association":"CONTRIBUTOR","body":">I'm facing the issue of high memory because of MMapDirectory. In my scenario, I'm opening 100 directories and writers respectively for 100 different indexes. After writing around 1 million documents, the process reaches around 35 GB. I took the dump of that process, after analysis of that dump. I found that there is a lot of memory consumption because of MMapDirectory.\r\n\r\nI'm curious.  When you were seeing that memory consumption, had you written 1 million documents to all 100 indexes.  Ie. 100 million documents total?  Also just for out of curiosity, how many fields were in the typical index? ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1020161947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1020822694","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1020822694","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1020822694,"node_id":"IC_kwDOAAJ06c482ISm","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-25T05:20:58Z","updated_at":"2022-01-25T06:32:18Z","author_association":"NONE","body":"I am feeling awesome that you are interested in my issue. I had noticed that memory consumption when I indexed 1 million documents in total. And there were a different number of fields in each document.  Some have 3 or some have 6 fields.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1020822694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021227361","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1021227361","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1021227361,"node_id":"IC_kwDOAAJ06c483rFh","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-25T14:17:44Z","updated_at":"2022-01-25T14:17:44Z","author_association":"CONTRIBUTOR","body":"There were a million documents total that you indexed.  But how many documents were indexed by each of the 100 indexes that were open.  So for example did each of the 100 indexes index 10,000 documents (ie 10,000 x 100 = 1,000,000) or did one of the indexes index 900,000 documents and the other 99 indexes each indexed approx 1010 documents each).  That sort of thing.  I'm trying to get a sense of how many documents were indexed by each index.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021227361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021492762","html_url":"https://github.com/apache/lucenenet/issues/610#issuecomment-1021492762","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/610","id":1021492762,"node_id":"IC_kwDOAAJ06c484r4a","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-25T18:38:29Z","updated_at":"2022-01-25T18:38:29Z","author_association":"CONTRIBUTOR","body":"Hi there. Thanks for pointing that out. It was copied from NuGet.org verbatim several years ago, and being that we never use that command on multi-targeted libraries, we were unaware the syntax has changed.\r\n\r\nIt looks like the switch was changed at some point to `-AllowPrereleaseVersions` instead of the shortened form `-Pre`. Although, it boggles the mind why the old switch is no longer aliased.\r\n\r\nhttps://docs.microsoft.com/en-us/powershell/module/packagemanagement/install-package?view=powershell-7.2\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021492762/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021627355","html_url":"https://github.com/apache/lucenenet/pull/589#issuecomment-1021627355","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/589","id":1021627355,"node_id":"IC_kwDOAAJ06c485Mvb","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-25T21:30:43Z","updated_at":"2022-01-25T21:30:43Z","author_association":"CONTRIBUTOR","body":"Superseded by #612","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1021627355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024085963","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024085963","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024085963,"node_id":"IC_kwDOAAJ06c49Ck_L","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T10:33:00Z","updated_at":"2022-01-28T10:33:00Z","author_association":"NONE","body":"Sorry for the late reply. \r\n\r\nYes, there is a random number per index. You can say that 10,000 documents per index. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024085963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024086422","html_url":"https://github.com/apache/lucenenet/issues/604#issuecomment-1024086422","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/604","id":1024086422,"node_id":"IC_kwDOAAJ06c49ClGW","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T10:33:37Z","updated_at":"2022-01-28T10:33:37Z","author_association":"NONE","body":"Issue fixed with the latest commit.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024086422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024221252","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024221252","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024221252,"node_id":"IC_kwDOAAJ06c49DGBE","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T13:22:06Z","updated_at":"2022-01-28T13:22:06Z","author_association":"CONTRIBUTOR","body":"That does seem really odd to me that such a situation would use 35 GB.  I have ran tests in the past, that while not quite the same, didn't need anything like that much memory. In one test I had 100 indexes open each with quite a few docs (cant remember how many) and in another test I had created one index with 500,000 docs.  But it ran fine on my machine that only has 16 GB and I had many other apps running as well.  \r\n\r\nIs it possible for your to share your data and code?  If so that would be ideal.  If not can you provide more information about the type of each field used in the documents?  And info on the typical size of any text or byte arrays stored in those fields?  I'd be interested to try to replicate what you saw because that seems very unusual to me.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024221252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024274497","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024274497","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024274497,"node_id":"IC_kwDOAAJ06c49DTBB","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T14:26:27Z","updated_at":"2022-01-28T14:29:22Z","author_association":"CONTRIBUTOR","body":"@rclabo \r\n\r\nI suspect this has something to do with the fact that .NET Framework uses `WeakDictionary` rather than `ConditionalWeakTable` to manage weak references. When running experiments, I discovered that `WeakReference<T>` (used by `WeakDictionary`) hangs onto references when they go out of scope for some time, where `ConditionalWeakTable` releases references much more quickly.\r\n\r\nI found [an implementation of `ConditionalWeakTable` for .NET 3.5](https://github.com/Dual-Iron/weak-tables/tree/master/src/Collections), but it also [holds onto references much longer than `ConditionalWeakTable`](https://github.com/Dual-Iron/weak-tables/issues/1#issue-1038896576). Unfortunately, without being able to tie directly into the garbage collector in native code the way `ConditionalWeakTable` does, there doesn't seem to be a realistic alternative to duplicating the behavior.\r\n\r\nOf course, on .NET Core you will never hit this memory management problem because it is using `ConditionalWeakTable` throughout and doesn't even compile `WeakDictionary` into the release.\r\n\r\nAlthough #256 is still open, we have nearly exhausted every possibility except going to Microsoft and requesting that they re-release `ConditionalWeakTable` with an enumerator on .NET Standard 2.0 and changing our .NET Framework target to at least `net461` (to utilize the .NET Standard 2.0 package) so we can eliminate the use of `WeakDictionary` entirely.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024274497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024293906","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024293906","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024293906,"node_id":"IC_kwDOAAJ06c49DXwS","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T14:48:54Z","updated_at":"2022-01-28T14:48:54Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 Gotcha.  If he is running .NET Framework version rather then .NET Core this that makes total sense and no need to dig further.\r\n\r\n@hamzashoukat94 Can you confirm you saw this memory consumption while using LuceneNET with .NET Framework rather then .NET Core, .Net5 or .NET6 ?  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024293906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024348985","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024348985","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024348985,"node_id":"IC_kwDOAAJ06c49DlM5","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T15:50:44Z","updated_at":"2022-01-28T15:50:44Z","author_association":"NONE","body":"Yes @rclabo I can confirm that I observed this memory consumption issue while using .NET Framework. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024348985/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024447874","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024447874","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024447874,"node_id":"IC_kwDOAAJ06c49D9WC","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T17:32:38Z","updated_at":"2022-01-28T17:32:38Z","author_association":"NONE","body":"Suggestion: \r\n\r\nI have read all the discussion. I came  to point that we should implement our own `ConditionalWeakTable` by extending it. The main difference I analyzed that the problem of enumerator in `ConditionalWeakTable` because in `.NETSTANDARD2.0`, there is no support of enumerator in this class. So, we can implement our own enumerator in our wrapper class. As, we are using this class for FieldCaching which is specific to LUCENENET. Then we should not need to wait for Microsoft to re-release `.NetStandard2.0` by providing enumerator in this class. We should not be dependent on Microsoft entirely. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024447874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024503498","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1024503498","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1024503498,"node_id":"IC_kwDOAAJ06c49EK7K","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-28T18:38:50Z","updated_at":"2022-01-28T20:13:00Z","author_association":"CONTRIBUTOR","body":"@hamzashoukat94 \r\n\r\nThanks for the suggestion. We have done a LOT of exploration on this issue already, and we are at a dead end with extending `ConditionalWeakTable` (see #256). It is designed to hold *weak* references on its keys, so there is no way to enumerate them without creating *strong* references (which defeats the whole purpose). And since in native C++ code, they tie directly into the garbage collector, there is effectively no way to add the APIs that are required to make an enumerator.\r\n\r\nWe actually have 2 missing APIs on .NET Fraemwork/.NET Standard 2.0:\r\n\r\n- [GetEnumerator()](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2.system-collections-generic-ienumerable-system-collections-generic-keyvaluepair-tkey-tvalue---getenumerator?view=net-6.0)\r\n- [AddOrUpdate](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.conditionalweaktable-2.addorupdate?view=net-6.0)\r\n\r\n### GetEnumerator()\r\n\r\nI took a look and we only have 4 classes that depend on the enumerator.\r\n\r\n- [ByteBufferIndexInput](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net/Store/ByteBufferIndexInput.cs#L409)\r\n- [CachedOrdinalsReader](https://github.com/apache/lucenenet/blob/41ffbc7b54cd5427a87e63c8bc3c4c3c290e1161/src/Lucene.Net.Facet/Taxonomy/CachedOrdinalsReader.cs#L211)\r\n- [CachingWrappingFilter](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net/Search/CachingWrapperFilter.cs#L181)\r\n- [IndexReader](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net/Index/IndexReader.cs#L203)\r\n\r\nSince we don't have a way to replicate a weak enumerator, it occurred to me that we may be able to use _weak events_ to call the instances without keeping references to them. It turns out that in WPF, this very problem was already solved with [weak event patterns](https://docs.microsoft.com/en-us/dotnet/desktop/wpf/advanced/weak-event-patterns?view=netframeworkdesktop-4.8). I put together a [proof of concept](https://github.com/NightOwl888/WeakEventPoC) and it turns out you can attach weak events without holding references to the event targets.\r\n\r\nI believe this solves the problem for .NET Framework, but not for all of .NET Standard 2.0. However, [WeakEventManager](https://referencesource.microsoft.com/#windowsbase/Base/System/Windows/WeakEventManager.cs) doesn't appear to have any native dependencies (other than `ConditionalWeakTable`'s dependencies), so I believe we can port it and all of its dependences in their entirety to .NET Standard 2.0 to completely work around the lack of enumerator on .NET Standard 2.0 and .NET Framework.\r\n\r\n~~Alternatively, we could use a 3rd party package, such as https://github.com/taori/Amusoft.EventManagement instead of porting the `WeakEventManager` from .NET Framework.~~ - Scratch that. The library uses `WeakReference` internally, so it will hang onto references just as long as `WeakDictionary` does. However, `WeakEventManager` uses `ConditionalWeakTable` so it should release the event references much quicker.\r\n\r\n### AddOrUpdate\r\n\r\nThis is less of a problem than the enumerator, and there are effectively 3 ways to work around it:\r\n\r\n1. Call `Add()` and if there is an `ArgumentException` (key already exists) call `Remove()` followed by `Add()`.\r\n2. Call `TryGetValue()`. If the return value is `false`, call `Add()`, if it is true, call `Remove()` followed by `Add()`.\r\n3. Always call `Remove()` followed by `Add()`.\r\n\r\nI suspect checking either using the exception or `TryGetValue` will be more efficient than removing without first checking to see if the element is there, but it probably needs to be taken on a case-by-case basis to work out which method to use. Each case will also require some form of locking to ensure both the check and the operation(s) occur atomically.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1024503498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025307217","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1025307217","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1025307217,"node_id":"IC_kwDOAAJ06c49HPJR","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-31T01:52:24Z","updated_at":"2022-01-31T01:52:24Z","author_association":"CONTRIBUTOR","body":"@hamzashoukat94\r\n\r\nI just submitted #613 with the patch using weak events. This completely eliminates the `WeakDictionary` class and replaces the `ConditionalWeakTable` enumerator functionality with weak events.\r\n\r\nWhen you get a chance, please download the packages from [the nuget artifact here](https://dev.azure.com/LuceneNET-Temp/Lucene.NET/_build/results?buildId=1941&view=artifacts&pathAsName=false&type=publishedArtifacts) and re-run the indexing and let us know if this fixes the high memory allocation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025307217/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025541193","html_url":"https://github.com/apache/lucenenet/issues/608#issuecomment-1025541193","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/608","id":1025541193,"node_id":"IC_kwDOAAJ06c49IIRJ","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-31T09:33:56Z","updated_at":"2022-01-31T09:34:07Z","author_association":"NONE","body":"@NightOwl888  \r\n\r\nI appreciate your interest in this issue. \r\n\r\nI'm here to tell you one thing we have another in a critical phase. I will test your changes as soon I am free from the current release. \r\n\r\nOne thing I want to mention here is you people are very amazing and love to work with you. Hope so we will work in the future also.\r\n\r\nThanks\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025541193/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025763020","html_url":"https://github.com/apache/lucenenet/pull/613#issuecomment-1025763020","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/613","id":1025763020,"node_id":"IC_kwDOAAJ06c49I-bM","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-31T13:55:26Z","updated_at":"2022-01-31T13:55:26Z","author_association":"CONTRIBUTOR","body":"WOW! You are amazing!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025763020/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025869779","html_url":"https://github.com/apache/lucenenet/pull/613#issuecomment-1025869779","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/613","id":1025869779,"node_id":"IC_kwDOAAJ06c49JYfT","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-31T15:14:33Z","updated_at":"2022-01-31T15:14:33Z","author_association":"CONTRIBUTOR","body":"I second the WOW! comment, can't believe you find a solution for this...","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1025869779/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1026863054","html_url":"https://github.com/apache/lucenenet/pull/613#issuecomment-1026863054","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/613","id":1026863054,"node_id":"IC_kwDOAAJ06c49NK_O","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-01T13:48:43Z","updated_at":"2022-02-01T13:48:43Z","author_association":"CONTRIBUTOR","body":"Even though it's not relevant for me (I'm using net core for years), \r\nI'm really curious, did this solve the memory leak issue?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1026863054/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028320228","html_url":"https://github.com/apache/lucenenet/issues/614#issuecomment-1028320228","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/614","id":1028320228,"node_id":"IC_kwDOAAJ06c49Suvk","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T20:16:08Z","updated_at":"2022-02-02T20:16:08Z","author_association":"CONTRIBUTOR","body":">yes, I know there is SearchAfter, but I don't have the last document from previous page\r\n\r\nIf `SearchAfter` is a possible solution for you then I'd be really tempted to find a way to hang onto the last document and cache it in memory in a way that is related to a session or cookie. Then you would have it for the next query.  Although if the search engine is asking for several \"pages of results\" in parallel then that won't necessarily work. But there may be ways to beat that.  One way is to only give the option to \"get more results\" rather then provide links to lots of future pages of results.  But if you are set on doing the later then you could maybe pre-cache the last result of each page that a link is shown for.  Just thinking out loud here.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028320228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028718924","html_url":"https://github.com/apache/lucenenet/issues/615#issuecomment-1028718924","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/615","id":1028718924,"node_id":"IC_kwDOAAJ06c49UQFM","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-03T08:24:52Z","updated_at":"2022-02-03T08:24:52Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nTechnically, this is a duplicate of #265. We haven't yet reviewed the `IDisposable` usages to ensure they are correct from a .NET perspective. Although, that issue is up-for-grabs if you are interested in contributing, and **we welcome your assistance**. We have largely saved this task for the community and have been focusing on more complicated issues that require more than just an understanding of .NET best practices to solve.\r\n\r\nLucene.NET is (for the most part) a line-by-line port of [Lucene 4.8.0](https://github.com/apache/lucene/tree/releases/lucene-solr%2F4.8.0/lucene). As such, we carried over many of the gaps between Java and .NET. One such gap is that in Java the [Closable interface](https://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html) inherits the [AutoCloseable interface](https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html), which can be configured to automatically be cleaned up. We haven't yet researched whether Lucene is configured with that option enabled, but suspect that is the reason why the code doesn't explicitly call `.close()` (and why the .NET version doesn't explicitly call `.Dispose()`). This includes the two [you mentioned](https://github.com/apache/lucenenet/issues/615#issue-1122670124).\r\n\r\nGiven this fact, there are likely lots of places where there are missing calls to `Dispose()`, most of which can be added (with a comment `LUCENENET specific: added call to Dispose()` or `LUCENENET specific: added using block`).\r\n\r\nNote there is at least 1 known place where the call to `Dispose()` is problematic in #271. We are seeing multiple calls to `Dispose()` because we have added [this line in `Tokenizer`](https://github.com/apache/lucenenet/blob/972d1f50dcb7b49cd08ae91cd984309f942909b8/src/Lucene.Net/Analysis/Tokenizer.cs#L76) that [didn't exist in Lucene](https://github.com/apache/lucene/blob/releases/lucene-solr/4.8.0/lucene/core/src/java/org/apache/lucene/analysis/Tokenizer.java#L65-L70). I suspect that Lucene falls back to the `AutoCloseable` config in this case, and the closest .NET equivalent is to use a [finalizer](https://techcommunity.microsoft.com/t5/iis-support-blog/understanding-when-to-use-a-finalizer-in-your-net-class/ba-p/347760), but both of these assumptions need confirmation. Clearly, using a finalizer has drawbacks and we should avoid that approach and use explicit calls to `Dispose()`, if possible. It also seems like `Dispose()` and `Close()` should be separate concepts in this particular case, being that this class is expected to be reused after it is \"closed\" without creating a new instance. But, the bottom line is we cannot just add all of the missing `Dispose()` calls and `using` statements and assume that is the correct approach - each case needs to be considered carefully according to its existing usage in Java.\r\n\r\nIt sounds like [CodeQL](https://codeql.github.com/docs/codeql-language-guides/codeql-for-csharp/) can be utilized to speed up the process of locating them. My suggestion would be to submit a separate commit for each of the issues you found, and break them down into multiple PRs in some sensible way, so we can review and test them thoroughly chunk by chunk\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028718924/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028746624","html_url":"https://github.com/apache/lucenenet/issues/614#issuecomment-1028746624","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/614","id":1028746624,"node_id":"IC_kwDOAAJ06c49UW2A","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-03T08:55:07Z","updated_at":"2022-02-03T08:55:07Z","author_association":"CONTRIBUTOR","body":"@eladmarg \r\n\r\nThis sounds like a good question to either post on [StackOverflow](https://stackoverflow.com/questions/tagged/lucene.net) (including the `lucene` tag) or to the [Lucene team](https://lucene.apache.org/core/discussion.html), as it doesn't sound like this is a technology specific question.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028746624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028758427","html_url":"https://github.com/apache/lucenenet/pull/613#issuecomment-1028758427","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/613","id":1028758427,"node_id":"IC_kwDOAAJ06c49UZub","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-03T09:03:26Z","updated_at":"2022-02-03T09:03:26Z","author_association":"CONTRIBUTOR","body":"@eladmarg \r\n\r\nNot sure. Being that `ConditionalWeakTable` requires the key and values to be dereferenced before it will clean them up, this poses a problem to be able to check whether they actually still exist (because they cannot be looked up without those references). So, maybe the only way to check is to profile/benchmark the app to see if it makes a difference, but other suggestions are welcome.\r\n\r\nHowever, testing on .NET Framework seems to have settled at around 1-2 min longer than .NET 5, where before it varied and was for the most part around 14 minutes instead of around 11-12 minutes.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1028758427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1029557910","html_url":"https://github.com/apache/lucenenet/pull/613#issuecomment-1029557910","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/613","id":1029557910,"node_id":"IC_kwDOAAJ06c49Xc6W","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-04T01:30:44Z","updated_at":"2022-02-04T01:30:44Z","author_association":"CONTRIBUTOR","body":"I have altered this a bit:\r\n\r\n1. The events were migrated to a new `Lucene.Net.Util.Events` internal static class.\r\n2. Removed the `GetRamBytesUsedEvent` and `GetDocIdSetsEvent` and reused the `GetCacheKeysEvent` in these cases, looking up the values from the `ConditionalWeakTable` based on the keys. While this makes the event functionality a bit slower, it avoids putting `DocIdSet` and `CachedOrds` objects into the finalizer queue and shifts the responsibility of cleaning up events to `IndexReader.Dispose()`. This method is almost certainly guaranteed to be called by the consumer, which takes it out of the finalizer queue.\r\n3. Changed the event tracking to allow multiple instances of the same event to be attached to an `IndexReader` instance, which solves any potential limitations if the same `IndexReader` instance is involved in 2 or more different contexts that require events.\r\n\r\nSo, this basically avoids any finalizer calls to enable the weak event functionality.\r\n\r\nBut even if that were not so, avoiding the [huge overhead of re-allocating a Dictionary repeatedly](https://github.com/apache/lucenenet/blob/41ffbc7b54cd5427a87e63c8bc3c4c3c290e1161/src/Lucene.Net/Support/WeakDictionary.cs#L63-L89) by relying only on `ConditionalWeakTable` and weak events is certainly more efficient than `WeakDictionary`.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1029557910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1030885712","html_url":"https://github.com/apache/lucenenet/issues/615#issuecomment-1030885712","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/615","id":1030885712,"node_id":"IC_kwDOAAJ06c49chFQ","user":{"login":"ShreyTiwari","id":31770485,"node_id":"MDQ6VXNlcjMxNzcwNDg1","avatar_url":"https://avatars.githubusercontent.com/u/31770485?v=4","gravatar_id":"","url":"https://api.github.com/users/ShreyTiwari","html_url":"https://github.com/ShreyTiwari","followers_url":"https://api.github.com/users/ShreyTiwari/followers","following_url":"https://api.github.com/users/ShreyTiwari/following{/other_user}","gists_url":"https://api.github.com/users/ShreyTiwari/gists{/gist_id}","starred_url":"https://api.github.com/users/ShreyTiwari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ShreyTiwari/subscriptions","organizations_url":"https://api.github.com/users/ShreyTiwari/orgs","repos_url":"https://api.github.com/users/ShreyTiwari/repos","events_url":"https://api.github.com/users/ShreyTiwari/events{/privacy}","received_events_url":"https://api.github.com/users/ShreyTiwari/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-06T18:16:06Z","updated_at":"2022-02-06T18:16:06Z","author_association":"NONE","body":"Thank you for all the useful links. From the current analysis it doesn't seem like all the alerts that have been raised could be bugs. For example, \"MemoryStream\" instances in the code do not necessarily have to be disposed since they would be garbage collected without causing any resource leaks.\r\n\r\nI will raise PR's for the bugs and submit the fixes as part of separate commits. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1030885712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1033913053","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1033913053","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1033913053,"node_id":"IC_kwDOAAJ06c49oELd","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T15:55:30Z","updated_at":"2022-02-09T15:55:30Z","author_association":"CONTRIBUTOR","body":"I suspect you are trying to open the index via more than one `IndexWriter`.  This is not allowed.  You can have multiple threads writing to the index but they need to do it through the same `IndexWriter`.   ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1033913053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034001416","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034001416","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034001416,"node_id":"IC_kwDOAAJ06c49oZwI","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T17:15:44Z","updated_at":"2022-02-09T17:15:44Z","author_association":"CONTRIBUTOR","body":"Is this question also you?\r\n\r\nhttps://stackoverflow.com/questions/71047400/whos-locking-the-cfs-file-in-lucene\r\n\r\nIt might be helpful if you explain a little more about what you are trying to do. We have the `FileShare` flags set up in a way that the tests pass, but the tests may not cover every use case that is allowed in Lucene, so we might need to adjust some of the settings.\r\n\r\nDo note that there are several CFS commands in the [lucene-cli tool](https://lucenenet.apache.org/docs/4.8.0-beta00015/cli/index.html), but in general the assumption (by us) is that the commands will be performed while the index is not being used. However, there shouldn't be any reason why we can't add the `FileShare.Read` flag so multiple file streams can at least read the files (on every file except for `write.lock`).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034001416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034080011","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034080011","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034080011,"node_id":"IC_kwDOAAJ06c49os8L","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T18:43:27Z","updated_at":"2022-02-09T18:43:27Z","author_association":"NONE","body":"Yes, I asked this question on stack overflow.  \r\n\r\nI'm working on Lucene's structure. I need to copy the index files from one path to another using fileStream.  Meanwhile, readers and searchers are opening and closing on index files. Readers are taken from the writer or directory in different applications. \r\n\r\nLet's say you have an index on path1, and on-demand, you need to transfer a portion of index files to the second path. That's why I need to open the filestream. \r\n\r\n\r\n\r\n> Is this question also you?\r\n> \r\n> https://stackoverflow.com/questions/71047400/whos-locking-the-cfs-file-in-lucene\r\n> \r\n> It might be helpful if you explain a little more about what you are trying to do. We have the `FileShare` flags set up in a way that the tests pass, but the tests may not cover every use case that is allowed in Lucene, so we might need to adjust some of the settings.\r\n> \r\n> Do note that there are several CFS commands in the [lucene-cli tool](https://lucenenet.apache.org/docs/4.8.0-beta00015/cli/index.html), but in general the assumption (by us) is that the commands will be performed while the index is not being used. However, there shouldn't be any reason why we can't add the `FileShare.Read` flag so multiple file streams can at least read the files (on every file except for `write.lock`).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034080011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034120596","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034120596","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034120596,"node_id":"IC_kwDOAAJ06c49o22U","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T19:33:05Z","updated_at":"2022-02-09T19:33:05Z","author_association":"CONTRIBUTOR","body":"If you just need to copy the index while it is being used, one option is to use the [`Lucene.Net.Replicator` module](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/replicator/Lucene.Net.Replicator.html).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034120596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034127138","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034127138","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034127138,"node_id":"IC_kwDOAAJ06c49o4ci","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T19:41:33Z","updated_at":"2022-02-09T19:41:33Z","author_association":"CONTRIBUTOR","body":"I agree with Shad, If you are trying to make a copy of the index while it's being written to then using the Replicator is probably a good way to go.  You may find the info in this issue helpful: https://github.com/apache/lucenenet/issues/401#issuecomment-759258652","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034127138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034480865","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034480865","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034480865,"node_id":"IC_kwDOAAJ06c49qOzh","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-10T04:27:05Z","updated_at":"2022-02-10T04:27:05Z","author_association":"NONE","body":"Ok I got your point. \r\n\r\nBut I need to know why I'm getting the access denied exception. If you can identify then it will be good for me. I tried to close all the instance of IndexWriter, IndexReader and IndexSearcher. But still I'm facing this issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034480865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034538056","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034538056","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034538056,"node_id":"IC_kwDOAAJ06c49qcxI","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-10T06:18:16Z","updated_at":"2022-02-10T06:18:16Z","author_association":"CONTRIBUTOR","body":"> Ok I got your point.\r\n> \r\n> But I need to know why I'm getting the access denied exception. If you can identify then it will be good for me. I tried to close all the instance of IndexWriter, IndexReader and IndexSearcher. But still I'm facing this issue.\r\n\r\nI see. Then this is likely some kind of bug, but it is hard to pinpoint in such a large application which of the 50+ `FileStream` usages or other file write methods that could be keeping a file handle open without a [minimal reproducable example](https://stackoverflow.com/help/minimal-reproducible-example), ideally provided as a standalone console app or as a test. In other words, code that we can run *without modification* to observe the issue.\r\n\r\nNote that we haven't yet reviewed `IDisposable` usage (see #265), so it is possible we have something hanging open, especially due to the fact that Lucene may be relying on the fact that the [Closable interface](https://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html) inherits the [AutoClosable interface](https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html), which can be configured to automatically clean up.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034538056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034873687","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034873687","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034873687,"node_id":"IC_kwDOAAJ06c49rutX","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-10T12:38:12Z","updated_at":"2022-02-10T12:38:12Z","author_association":"NONE","body":"\r\n```\r\n  IndexWriter writer = null;\r\n\r\n  lock (_lockObject)\r\n  {\r\n\r\n      if (IndexWriters.ContainsKey(bucketId))\r\n      {\r\n          writer = IndexWriters[bucketId];\r\n         \r\n          if (writer != null)\r\n          {\r\n              try\r\n              {\r\n                //  writer.DeleteUnusedFiles();\r\n                  writer.DeleteAll();\r\n                  writer.Commit();\r\n                  writer.Dispose();\r\n              }\r\n              finally\r\n              {\r\n                  \r\n                  if (IndexWriter.IsLocked(writer.Directory))\r\n                  {\r\n                      IndexWriter.Unlock(writer.Directory);\r\n                      _directory.RemoveSubDirectory(bucketId);\r\n                  }\r\n                  writer = `null;`\r\n              }\r\n\r\n              \r\n          }\r\n          IndexWriters.Remove(bucketId);\r\n      }\r\n      }\r\n  }\r\n```\r\n\r\nI have shared the code for deleting the index from the source directory.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034873687/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034887280","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034887280","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034887280,"node_id":"IC_kwDOAAJ06c49ryBw","user":{"login":"hamzashoukat94","id":50887243,"node_id":"MDQ6VXNlcjUwODg3MjQz","avatar_url":"https://avatars.githubusercontent.com/u/50887243?v=4","gravatar_id":"","url":"https://api.github.com/users/hamzashoukat94","html_url":"https://github.com/hamzashoukat94","followers_url":"https://api.github.com/users/hamzashoukat94/followers","following_url":"https://api.github.com/users/hamzashoukat94/following{/other_user}","gists_url":"https://api.github.com/users/hamzashoukat94/gists{/gist_id}","starred_url":"https://api.github.com/users/hamzashoukat94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamzashoukat94/subscriptions","organizations_url":"https://api.github.com/users/hamzashoukat94/orgs","repos_url":"https://api.github.com/users/hamzashoukat94/repos","events_url":"https://api.github.com/users/hamzashoukat94/events{/privacy}","received_events_url":"https://api.github.com/users/hamzashoukat94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-10T12:53:06Z","updated_at":"2022-02-10T12:53:06Z","author_association":"NONE","body":"Why `indexWriter.Dispose()`  does not release the handle from the cfs file.?\r\nAdditionally, I'm also unlocking the writer. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034887280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034955598","html_url":"https://github.com/apache/lucenenet/issues/616#issuecomment-1034955598","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/616","id":1034955598,"node_id":"IC_kwDOAAJ06c49sCtO","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-10T14:00:25Z","updated_at":"2022-02-10T14:00:25Z","author_association":"CONTRIBUTOR","body":"Thanks for the snippet. However, due to the fact that nearly every component in Lucene is pluggable, short snippets are not much use for tracking issues down. Please provide a *complete* example (that runs) as either a standalone console app or a test. This is so we can be sure we are using the same components that you are.\r\n\r\nIf you prefer, you may provide a working example in a GitHub repository and provide a link.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1034955598/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1035939483","html_url":"https://github.com/apache/lucenenet/issues/618#issuecomment-1035939483","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/618","id":1035939483,"node_id":"IC_kwDOAAJ06c49vy6b","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-11T07:23:07Z","updated_at":"2022-02-12T07:08:00Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nAs this is a line-by-line port from Java Lucene 4.8.0 (for the most part), we have faithfully reproduced the [ASCIIFoldingFilter](https://github.com/apache/lucene/blob/releases/lucene-solr/4.8.1/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java) in its entirety. While we have admittedly included some patches from later versions of Lucene where they affect usability (for example, `Lucene.Net.Analysis.Common` all came from 4.8.1), the change you are suggesting isn't even reflected in the [ASCIIFoldingFilter in the latest commit](https://github.com/apache/lucene/blob/8ac26737913d0c1555019e93bc6bf7db1ab9047e/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java#L1154-L1173).\r\n\r\nIf you wish to pursue adding more characters to `ASCIIFoldingFilter`, I suggest you take it up with the Lucene design team on their [dev mailing list](https://lucene.apache.org/core/discussion.html).\r\n\r\nHowever, do note this isn't the only filter included in the box that is capable of removing diacritics from ASCII characters. Some alternatives:\r\n\r\n1. [Nomalizer2Filter](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/icu/Lucene.Net.Analysis.Icu.ICUNormalizer2Filter.html)\r\n2. [ICUFoldingFilter](https://lucenenet.apache.org/docs/4.8.0-beta00015/api/icu/Lucene.Net.Analysis.Icu.ICUFoldingFilter.html)\r\n\r\nNote that you can also create a custom folding filter by using a similar approach in the [ICUFoldingFilter implementation](https://github.com/apache/lucenenet/blob/docs/4.8.0-beta00015/src/Lucene.Net.Analysis.ICU/Analysis/Icu/ICUFoldingFilter.cs/#L66) (ported from Lucene 7.1.0). There is a [tool you can port](https://github.com/apache/lucene/blob/releases/lucene-solr/7.1.0/lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java) to generate a `.nrm` binary file from modified versions of [these text files](https://github.com/apache/lucene/tree/releases/lucene-solr/7.1.0/lucene/analysis/icu/src/data/utr30). The `.nrm` file can then be provided to the constructor of `ICU4N.Text.Normalizer2` - more about the data format can be found in the [ICU normalization docs](https://unicode-org.github.io/icu/userguide/transforms/normalization/). Note that the `.nrm` file is the same binary format used in C++ and Java.\r\n\r\nAlternatively, if you wish to extend the `ASCIIFoldingFilter` with your own custom brew of characters, you can simply chain your own filter to `ASCIIFoldingFilter` as pointed out in [this article](https://www.extutorial.com/en/share/1404275).\r\n\r\n```c#\r\npublic TokenStream GetTokenStream(string fieldName, TextReader reader)\r\n{\r\n    TokenStream result = new StandardTokenizer(reader);\r\n    result = new StandardFilter(result);\r\n    result = new LowerCaseFilter(result);\r\n    // etc etc ...\r\n    result = new StopFilter(result, yourSetOfStopWords);\r\n    result = new MyCustomFoldingFilter(result);\r\n    result = new ASCIIFoldingFilter(result);\r\n    return result;\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1035939483/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null}]