[{"url":"https://api.github.com/repos/apache/druid/issues/comments/279112324","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279112324","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279112324,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTExMjMyNA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T02:00:38Z","updated_at":"2017-02-11T02:00:38Z","author_association":"CONTRIBUTOR","body":"The memory architecture kind of grew organically from something quite simple, all the while trying to add functionality while maintaining backward compatibility.  It is admittedly kind of unwieldy now and needs a complete refresh.  There are some other urgent reasons I need to publish a new release of the library and the complete reworking of the memory module will take some time.  So I will likely do a new release, then we can work together on what the new Memory architecture and interfaces need to look like.  Let me put some thoughts into a new architecture and I'll pass it by you.\r\n\r\nI have thought about adding Strings, but I have resisted because it is the start of a slippery slope. Strings could be done now by converting the string to a byte[] or char[] first using the encoding of your choice.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279112324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279112400","html_url":"https://github.com/apache/druid/pull/3883#issuecomment-279112400","issue_url":"https://api.github.com/repos/apache/druid/issues/3883","id":279112400,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTExMjQwMA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T02:01:37Z","updated_at":"2017-02-11T02:01:37Z","author_association":"CONTRIBUTOR","body":"Cool. I didn't dig deep into the logic, but if the unit tests cover it then I trust the tests.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279112400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279121304","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279121304","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279121304,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTEyMTMwNA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T04:51:39Z","updated_at":"2017-02-13T06:21:41Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> The memory architecture kind of grew organically from something quite simple, all the while trying to add functionality while maintaining backward compatibility. It is admittedly kind of unwieldy now and needs a complete refresh. There are some other urgent reasons I need to publish a new release of the library and the complete reworking of the memory module will take some time. So I will likely do a new release, then we can work together on what the new Memory architecture and interfaces need to look like. Let me put some thoughts into a new architecture and I'll pass it by you.\r\n\r\nSure, there is no hurry for releasing the new API.\r\n\r\n> I have thought about adding Strings, but I have resisted because it is the start of a slippery slope. Strings could be done now by converting the string to a byte[] or char[] first using the encoding of your choice.\r\n\r\nYes, it is possible, but my heart bleeds when I see how inefficient it is. 3-4 unnecessary data copies, creating a lot of garbage objects, `ThreadLocal` access, comparison of unrelated `String`s. And it is done not only during segment construction, it could be done thousands of times in the Druid historical query path, if the query uses `DimensionSelector.lookupName()` to build a BitSet.\r\n\r\n<hr>\r\n\r\nHere is my API proposition:\r\n\r\n```java\r\nabstract class Memory implements AutoCloseable {\r\n  static WritableMemory allocate(long size);\r\n  static WritableMemory allocateDirect(long size);\r\n  static Memory wrap(ByteBuffer);\r\n  static WritableMemory wrapForWrite(ByteBuffer);\r\n  static Memory map(File);\r\n  static Memory map(File, long pos, long len);\r\n  static WritableMemory mapForWrite(File);\r\n  static WritableMemory mapForWrite(File, long pos, long len);\r\n\r\n  PositionedMemoryRegion region(long start, long limit);\r\n\r\n  ByteBuffer toReadOnlyByteBuffer();\r\n\r\n  .. get methods\r\n\r\n  void close();\r\n}\r\n\r\nabstract class WritableMemory extends Memory {\r\n  WritablePositionedMemoryRegion regionForWrite(long start, long limit);\r\n\r\n  .. put methods\r\n}\r\n\r\ninterface PositionedMemoryRegion extends AutoCloseable {\r\n  Memory memory();\r\n  long position();\r\n  PositionedMemoryRegion position(long position);\r\n\r\n  .. get methods without offset parameter\r\n  \r\n  void close();\r\n}\r\n\r\ninterface WritablePositionedMemoryRegion extends PositionedMemoryRegion {\r\n  WritableMemory memory();\r\n\r\n  .. put methods without offset parameter\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279121304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279170629","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279170629","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279170629,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE3MDYyOQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T19:43:12Z","updated_at":"2017-02-11T19:44:53Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nThis is _very_ similar to what I was thinking.  I am working out the low level details of what offset & address values to keep and where in the hierarchy.\r\n\r\nSome subtle differences: You seem to prefer having two primary classes: a \"read-only\" `Memory` and `WritableMemory`.  But the `Memory wrapForWrite(ByteBuffer)` seems inconsistent and also would throw an exception if the given BB is read-only.   I would prefer having one public `Memory` from which one could create the read-only and writable versions.  In the case of BB, we could have:\r\n\r\n```\r\nstatic Memory wrap(ByteBuffer);  //results in a RO `Memory` if ByteBuffer is RO.\r\nstatic Memory wrapForReadOnly(ByteBuffer) //results in a RO `Memory` regardless of the state of ByteBuffer.\r\n```\r\nWe would have to do something similar for mapped files.\r\n\r\nQuestion about AutoCloseable: Other than being recognized by try-with-resources construct, are there any other JVM costs associated with this?  Cleaner keeps a linked-list of all Cleaners, for example. More specifically, are there any hidden costs associated with having the heap-associated parts of the Memory hierarchy AutoCloseable, when they clearly don't need it?\r\n\r\nQuestion about \"positional\" capabilities:  Do we need all the capabilities now present in `Buffer`? Or a subset?  I think we might regret doing a subset.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279170629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279173943","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279173943","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279173943,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE3Mzk0Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T20:36:41Z","updated_at":"2017-02-11T20:37:25Z","author_association":"MEMBER","body":"@leerho \r\n\r\nSeparation between \"readable\" and \"writable\" interfaces has proven to be a good move. Most recently designed (buffer) APIs have it, e. g. in Chronicle Bytes: `ReadCommon` and `WriteCommon`, in Argona: `DirectBuffer` and `MutableDirectBuffer`. Also a bit unrelated, but Kotlin has separate read-only `List`, `Set`, `Map`, `Collection` and `MutableList`, `MutableSet`, `MutableMap` and `MutableCollection` interfaces.\r\n\r\nThis is like `const` modifier in C++. Without separation, contracts of methods that take buffers as parameters are always unclear: could this method modify the buffer or not? If it's not, how do we protect from unintentional modification? This spawns a lot of unnecessary `.asReadOnlyBuffer()` in Druid source code now, out of \"fear\" or for \"safety\". If e. g. `ObjectStrategy.fromByteBuffer()` accepts read-only `Memory`, it makes the contract clear, and no \"asReadOnly\" conversion is needed on the boundaries: java compiler and type system check everything for us. We should avoid just two things: explicit cast to `WritableMemory` in our code, and using `Memory` as generic type argument. Both could be enforced using Checkstyle rules.\r\n\r\nI took the idea of giving to the read-only interfaces and static factory methods short names, and to writable versions - longer names from Kotlin as well. It favors using read-only when possible.\r\n\r\n> Question about AutoCloseable: Other than being recognized by try-with-resources construct, are there any other JVM costs associated with this? Cleaner keeps a linked-list of all Cleaners, for example. More specifically, are there any hidden costs associated with having the heap-associated parts of the Memory hierarchy AutoCloseable, when they clearly don't need it?\r\n\r\nNo, there is no penalty. `AutoCloseable` allows special syntax construction: try-with-resources, similarly to how `Iterable` allows for-each loop.\r\n\r\n> Question about \"positional\" capabilities: Do we need all the capabilities now present in Buffer? Or a subset? I think we might regret doing a subset.\r\n\r\nI think we don't know the answer to this question until we actually try to migrate Druid's code. @niketh needed right away in the first PR: #3915","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279173943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279181019","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279181019","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279181019,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE4MTAxOQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T22:39:53Z","updated_at":"2017-02-11T23:12:18Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nSome ideas:\r\n\r\nAll classes package private except where noted. Thus, only two public classes.\r\n\r\nThe classes noted as \"Thought abstractions\" may not be actual classes, as they are very small with only a constructor and 2-3 instance variables. They also might appear as simple interfaces.  \r\nFor example, the only difference between `DirectR` and `DirectW` is the parent class that they extend.  Indentation indicates \"extends\". \r\n\r\n```\r\nBaseMemory // Thought abstraction\r\n\r\n    public Memory //has \"absolute\" Read-Only methods and launches the rest using factory methods\r\n        DirectR // Thought abstraction. \r\n            MemoryDR   //Requires AutoClosable and Cleaner\r\n            ByteBufDR\r\n            MapDR      //Requires AutoClosable and Cleaner\r\n        HeapR // Thought abstraction\r\n            MemoryHR\r\n            ByteBufHR\r\n        \r\n        MemoryW //has the \"absolute\" W methods\r\n            DirectW // Thought abstraction. \r\n                MemoryDW   //Requires AutoClosable and Cleaner\r\n                ByteBufDW\r\n                MapDW      //Requires AutoClosable and Cleaner\r\n            HeapW // Thought abstraction\r\n                MemoryW\r\n                ByteBufW\r\n\r\n    public PositionalMemory //has positional \"Buffer\" logic & variables, positional RO methods, and launches the rest\r\n        DirectPR // Thought abstraction. \r\n            MemoryPDR.    //Requires AutoClosable and Cleaner\r\n            ByteBufPDR\r\n            MapPDR.       //Requires AutoClosable and Cleaner\r\n        HeapPPR // Thought abstraction\r\n            MemoryPHR\r\n            ByteBufPHR\r\n        \r\n        MemoryPW //positional W methods\r\n            DirectPW // Thought abstraction. \r\n                MemoryPDW.   //Requires AutoClosable and Cleaner\r\n                ByteBufPDW\r\n                MapPDW.      //Requires AutoClosable and Cleaner\r\n            HeapPW // Thought abstraction\r\n                MemoryPW\r\n                ByteBufPW\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279181019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279182961","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279182961","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279182961,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE4Mjk2MQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-11T23:15:48Z","updated_at":"2017-02-11T23:15:48Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nI think you misunderstood my previous comment.  I have no problem with \"separation\".  My concern was  \r\n\r\n> But the Memory wrapForWrite(ByteBuffer) seems inconsistent and also would throw an exception if the given BB is read-only.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279182961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279192422","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279192422","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279192422,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE5MjQyMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-12T02:42:47Z","updated_at":"2017-02-12T02:42:47Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nGo to [experimental](https://github.com/DataSketches/experimental/tree/master/src/main/java/com/yahoo/memory2) to look at early \"sketch\" of what I'm thinking at the moment.  The hierarchical outline is in `package-info`.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279192422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279198506","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279198506","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279198506,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTE5ODUwNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-12T05:42:55Z","updated_at":"2017-02-12T05:42:55Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> But the Memory wrapForWrite(ByteBuffer) seems inconsistent and also would throw an exception if the given BB is read-only.\r\n\r\nInconsistent with what? Yes, it should throw exception if the given BB is read-only. Why this is bad?\r\n\r\nGenerally I think `wrap(BB)` might even not be needed at all. It could be needed only on the boundaries with third-party libraries, which use ByteBuffer. Even if it is needed, it is going to be used in a very few places.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279198506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279250002","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279250002","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279250002,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI1MDAwMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-12T21:19:20Z","updated_at":"2017-02-12T21:19:34Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nDataSketches will need wrap(BB) as there are many other users outside of Druid who have BB.\r\n\r\nMy comment on inconsistent was a misinterpretation of what you were trying to do.  Never mind :)\r\n\r\nIn experimental I have the first skeleton round-trip working: reading and writing longs to direct memory.  Take a look.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279250002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279258513","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279258513","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279258513,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI1ODUxMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-12T23:01:12Z","updated_at":"2017-02-12T23:01:12Z","author_association":"MEMBER","body":"@leerho \r\n\r\nI don't see your arguments against the idea of separating read-only and writable on the type system level, by making two separate interfaces, rather than on runtime level, by having impls which throw UnsupportedOperationException.\r\n\r\nMy arguments pro this idea are:\r\n - Clearer for readers, safer interfaces of methods like `ObjectStrategy.read()`\r\n - Don't need `asReadOnly()` conversion on boundaries, there is automatic upcast to the read-only interface.\r\n - Can have twice less classes in the memory package, R/W separation not needed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279258513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279271662","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-279271662","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":279271662,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI3MTY2Mg==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T01:03:11Z","updated_at":"2017-02-13T01:50:24Z","author_association":"CONTRIBUTOR","body":"@b-slim I try to fix you pointed. Is it going right direction? Please correct if it goes wrong. Thanks for your kind support! :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279271662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279274431","html_url":"https://github.com/apache/druid/pull/3920#issuecomment-279274431","issue_url":"https://api.github.com/repos/apache/druid/issues/3920","id":279274431,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI3NDQzMQ==","user":{"login":"KurtYoung","id":955396,"node_id":"MDQ6VXNlcjk1NTM5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/955396?v=4","gravatar_id":"","url":"https://api.github.com/users/KurtYoung","html_url":"https://github.com/KurtYoung","followers_url":"https://api.github.com/users/KurtYoung/followers","following_url":"https://api.github.com/users/KurtYoung/following{/other_user}","gists_url":"https://api.github.com/users/KurtYoung/gists{/gist_id}","starred_url":"https://api.github.com/users/KurtYoung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KurtYoung/subscriptions","organizations_url":"https://api.github.com/users/KurtYoung/orgs","repos_url":"https://api.github.com/users/KurtYoung/repos","events_url":"https://api.github.com/users/KurtYoung/events{/privacy}","received_events_url":"https://api.github.com/users/KurtYoung/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T01:33:42Z","updated_at":"2017-02-13T01:33:42Z","author_association":"CONTRIBUTOR","body":"LGTM, +1 to merge","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279274431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279289186","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279289186","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279289186,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI4OTE4Ng==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T03:55:39Z","updated_at":"2017-02-13T04:42:45Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nOK. You are right. I thought I would be able to save some code duplication of the R/W methods, but there will the same amount of code duplication either way.  The current scheme requires 1 read method and 2 write methods (one throws).  Full splitting at the public level will require 2 reads and 1 write.\r\n\r\nI don't see the 2X reduction in number of classes.  Most of the classes I have at the leaf level (`MemoryDR`, etc.) can be consolidated as the sister leafs only differ by the factory method.  I split them up just for my own clarity while laying it out.  \r\n\r\nI will try it your way and see what happens :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279289186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279296784","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279296784","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279296784,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTI5Njc4NA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T05:20:08Z","updated_at":"2017-02-13T05:20:08Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nChecked in the totally split skeleton into experimental.  Again I don't see a 2X difference in number of classes just due to this change.  \r\n\r\nWhy did you do the following:\r\n\r\n```\r\n  static Memory wrapForWrite(ByteBuffer);\r\n```\r\nI would think you would want the following, which is simpler:\r\n\r\n```\r\n  static WritableMemory wrap(ByteBuffer);\r\n```\r\n\r\nThe same applies to map.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279296784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279304755","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279304755","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279304755,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTMwNDc1NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T06:30:17Z","updated_at":"2017-02-13T06:30:17Z","author_association":"MEMBER","body":"@leerho thank you!\r\n\r\n> Why did you do the following:\r\n\r\n>  static Memory wrapForWrite(ByteBuffer);\r\n> I would think you would want the following, which is simpler:\r\n\r\nIt's a mistake in my comment (now fixed), yes definitely it should return the writable interface.\r\n\r\nMostly LGTM, a couple of comments:\r\n - `Memory allocate()` doesn't make sense, only reading from just allocated memory.\r\n - We completely forgot about #3716 and the idea to use `Memory` instead of it's `DataInput` and `DataOutput`. For this, it seems to me that `Memory` should be stateless (no fields) and have a public constructor. Essentially, it should be like Java 8's interface with static factory methods and default implementations of some methods. We use abstract class just in order to overcome artificial limitations of interfaces in Java 7. Also would really like to hear @weijietong's feedback on the interfaces that we are designing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279304755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279308735","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279308735","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279308735,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTMwODczNQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T07:01:21Z","updated_at":"2017-02-13T07:01:21Z","author_association":"MEMBER","body":"@leerho regarding x2 less classes, I meant that the separation between read-only and writable implementations is not needed. There are only writable implementations. The only thing that e. g. `map()` does is delegation to `mapWritable()`, and return the read-only interface. It is safe on the type-system level with very little precautions. Your approach with runtime separation provides extra safety, if you want to keep this safety - yes, you either still have x2 classes, or e. g. have a boolean flag \"writable\" and check it guarded by assertion, e. g. in `checkOffset()` method, along with the offset check.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279308735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279329062","html_url":"https://github.com/apache/druid/pull/3928#issuecomment-279329062","issue_url":"https://api.github.com/repos/apache/druid/issues/3928","id":279329062,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTMyOTA2Mg==","user":{"login":"erikdubbelboer","id":522870,"node_id":"MDQ6VXNlcjUyMjg3MA==","avatar_url":"https://avatars.githubusercontent.com/u/522870?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdubbelboer","html_url":"https://github.com/erikdubbelboer","followers_url":"https://api.github.com/users/erikdubbelboer/followers","following_url":"https://api.github.com/users/erikdubbelboer/following{/other_user}","gists_url":"https://api.github.com/users/erikdubbelboer/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdubbelboer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdubbelboer/subscriptions","organizations_url":"https://api.github.com/users/erikdubbelboer/orgs","repos_url":"https://api.github.com/users/erikdubbelboer/repos","events_url":"https://api.github.com/users/erikdubbelboer/events{/privacy}","received_events_url":"https://api.github.com/users/erikdubbelboer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T09:02:10Z","updated_at":"2017-02-13T09:02:10Z","author_association":"CONTRIBUTOR","body":"I'm thinking now that I could add the old constructor to `SelectorDimFilter` but just not annotate it with `@JsonCreator`. That way the diff would be a lot smaller as all current invocations could use this old constructor. Would this work and would this be better?\r\n\r\nIs there a test somewhere that tests this JSON parsing?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279329062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279331582","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279331582","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279331582,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTMzMTU4Mg==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T09:14:28Z","updated_at":"2017-02-13T09:14:44Z","author_association":"CONTRIBUTOR","body":"@pjain1 @leventov @fjy  Can you review","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279331582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279454184","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279454184","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279454184,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ1NDE4NA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T17:03:14Z","updated_at":"2017-02-13T17:03:14Z","author_association":"CONTRIBUTOR","body":"@niketh instead of rebuilding the set every time, is it possible to `remove`-then-`add` the location whenever it is used?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279454184/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279457376","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279457376","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279457376,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ1NzM3Ng==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T17:14:23Z","updated_at":"2017-02-13T17:52:15Z","author_association":"CONTRIBUTOR","body":"@leventov\r\n\r\n- WRT  memory allocate() makes no sense.   I know, it is a temporary place holder for a region, which I will address next.  There are several other silly constructs in the skeleton that need to be ironed out. \r\n\r\n- WRT DataInput / DataOutput. I didn't follow that discussion very closely.  So perhaps you could restate the objective and the benefit of overloading that on top of what we are trying to do now.   Nonetheless, I am very skeptical that Memory could be made stateless, without compromising other objectives like achieving performance of Unsafe with a safer and friendlier interface, and effectively replacing ByteBuffer with a much richer API. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279457376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279472602","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279472602","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279472602,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ3MjYwMg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T18:06:47Z","updated_at":"2017-02-13T18:06:47Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> WRT DataInput / DataOutput. I didn't follow that discussion very closely. So perhaps you could restate the objective and the benefit of overloading that on top of what we are trying to do now. Nonetheless, I am very skeptical that Memory could be made stateless, without compromising other objectives like achieving performance of Unsafe with a safer and friendlier interface, and effectively replacing ByteBuffer with a much richer API.\r\n\r\nI meant to make `Memory` stateless (hence remove `BaseMemory`), but not the package-private implementation classes, essentially push fields from `BaseMemory` down to the private classes. I don't think it should affect performance at all.\r\n\r\nThe idea is that a third-party could provide a `Memory` implementation based e. g. on distributed FS.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279472602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279482210","html_url":"https://github.com/apache/druid/pull/3925#issuecomment-279482210","issue_url":"https://api.github.com/repos/apache/druid/issues/3925","id":279482210,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ4MjIxMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T18:41:22Z","updated_at":"2017-02-13T18:41:22Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279482210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279490183","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279490183","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279490183,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ5MDE4Mw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T19:08:41Z","updated_at":"2017-02-13T19:10:27Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nBaseMemory is a \"thought abstraction\" at the moment and may migrate down the hierarchy anyway. But we can do that optimization later.  Right now,  I want to get the basic skeleton machinery of R/W Regions, ByteBuffers and MMF working and start some characterization tests to see where we stand on performance.  If it is as simple as you say, then I'm not going to worry about it right now.\r\n\r\nHowever, something that we should consider at this early stage is whether we will need thread concurrency.  And instead of wrapping everything with `Synchronized` after we are all done, which is rather inefficient, we should think about using low-level read/write locks, or perhaps optimistic locking.  \r\n\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279490183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279496145","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279496145","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279496145,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ5NjE0NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T19:29:06Z","updated_at":"2017-02-13T19:29:06Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> However, something that we should consider at this early stage is whether we will need thread concurrency. And instead of wrapping everything with Synchronized after we are all done, which is rather inefficient, we should think about using low-level read/write locks, or perhaps optimistic locking.\r\n\r\nBecause of this and generally, I think it's time to try to apply this API, in a manner similar to #3915","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279496145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279498628","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-279498628","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":279498628,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTQ5ODYyOA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T19:37:50Z","updated_at":"2017-02-13T19:37:50Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nHmm.  The only way I see to do that is to make M and WM abstract and create the concrete impls with the Unsafe calls  a layer below.  The  BM functionality must be at the same level (or higher) then where the Unsafe calls occur.  Not sure how that impacts performance.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279498628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279507300","html_url":"https://github.com/apache/druid/issues/3924#issuecomment-279507300","issue_url":"https://api.github.com/repos/apache/druid/issues/3924","id":279507300,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUwNzMwMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T20:08:48Z","updated_at":"2017-02-13T20:08:48Z","author_association":"CONTRIBUTOR","body":"Fwiw, the Imply distro (https://imply.io/download) is served over HTTPS and we publish sha256 hashes over HTTPS as well. This issue for druid-io.github.com is about trying to bring some of that same love to community Druid: https://github.com/druid-io/druid-io.github.io/issues/372.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279507300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279507314","html_url":"https://github.com/apache/druid/pull/3899#issuecomment-279507314","issue_url":"https://api.github.com/repos/apache/druid/issues/3899","id":279507314,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUwNzMxNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T20:08:51Z","updated_at":"2017-02-13T20:08:51Z","author_association":"CONTRIBUTOR","body":"Requesting more class docs for the cache helper, but not strong enough to block the PR","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279507314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279510986","html_url":"https://github.com/apache/druid/pull/3899#issuecomment-279510986","issue_url":"https://api.github.com/repos/apache/druid/issues/3899","id":279510986,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUxMDk4Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T20:23:37Z","updated_at":"2017-02-13T20:23:37Z","author_association":"CONTRIBUTOR","body":"Going to merge this one then, but @jihoonson could you please do a follow up adding the javadocs that @drcrallen mentioned to CacheKeyBuilder? thx","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279510986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279514365","html_url":"https://github.com/apache/druid/pull/3930#issuecomment-279514365","issue_url":"https://api.github.com/repos/apache/druid/issues/3930","id":279514365,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUxNDM2NQ==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T20:36:47Z","updated_at":"2017-02-13T20:36:47Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279514365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279514465","html_url":"https://github.com/apache/druid/pull/3931#issuecomment-279514465","issue_url":"https://api.github.com/repos/apache/druid/issues/3931","id":279514465,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUxNDQ2NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T20:37:16Z","updated_at":"2017-02-13T20:37:16Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279514465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279524119","html_url":"https://github.com/apache/druid/pull/3877#issuecomment-279524119","issue_url":"https://api.github.com/repos/apache/druid/issues/3877","id":279524119,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUyNDExOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T21:13:35Z","updated_at":"2017-02-13T21:13:35Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279524119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279531761","html_url":"https://github.com/apache/druid/issues/3378#issuecomment-279531761","issue_url":"https://api.github.com/repos/apache/druid/issues/3378","id":279531761,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUzMTc2MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T21:42:12Z","updated_at":"2017-02-13T21:42:12Z","author_association":"CONTRIBUTOR","body":"Un-milestoning this from 0.10.0.\r\n\r\n@jon-wei reading through this it looks like some of it has been done already as part of PRs in 0.10.0 and some of it has not. (And actually some of it it looks like we decided to go in a different direction: like filters not taking dimensionSpecs.)\r\n\r\nDo you think we should keep it open and scope down to what still makes sense given what has already been done? Or close and reimagine and open new proposals?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279531761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279532729","html_url":"https://github.com/apache/druid/pull/2883#issuecomment-279532729","issue_url":"https://api.github.com/repos/apache/druid/issues/2883","id":279532729,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUzMjcyOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T21:45:49Z","updated_at":"2017-02-13T21:45:49Z","author_association":"CONTRIBUTOR","body":"@jaehc thanks, re-reviewing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279532729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279533132","html_url":"https://github.com/apache/druid/pull/3542#issuecomment-279533132","issue_url":"https://api.github.com/repos/apache/druid/issues/3542","id":279533132,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUzMzEzMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T21:47:19Z","updated_at":"2017-02-13T21:47:19Z","author_association":"CONTRIBUTOR","body":"@navis, we can do this for 0.10.0 if you can address the subquery issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279533132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279534648","html_url":"https://github.com/apache/druid/pull/3919#issuecomment-279534648","issue_url":"https://api.github.com/repos/apache/druid/issues/3919","id":279534648,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUzNDY0OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T21:52:32Z","updated_at":"2017-02-13T21:52:32Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279534648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279546548","html_url":"https://github.com/apache/druid/issues/3039#issuecomment-279546548","issue_url":"https://api.github.com/repos/apache/druid/issues/3039","id":279546548,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU0NjU0OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T22:38:18Z","updated_at":"2017-02-13T22:38:18Z","author_association":"CONTRIBUTOR","body":"This looks like a duplicate of #3038; the root cause of this NPE was that tearDown was trying to tear down things that hadn't ever been made, because setUp failed:\r\n\r\n```\r\norg.I0Itec.zkclient.exception.ZkTimeoutException: Unable to connect to zookeeper server within timeout: 30000\r\n\tat org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:1223)\r\n\tat org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:155)\r\n\tat org.I0Itec.zkclient.ZkClient.<init>(ZkClient.java:129)\r\n\tat kafka.utils.ZkUtils$.createZkClientAndConnection(ZkUtils.scala:89)\r\n\tat kafka.utils.ZkUtils$.apply(ZkUtils.scala:71)\r\n\tat kafka.server.KafkaServer.initZk(KafkaServer.scala:278)\r\n\tat kafka.server.KafkaServer.startup(KafkaServer.scala:168)\r\n\tat io.druid.indexing.kafka.test.TestBroker.start(TestBroker.java:73)\r\n\tat io.druid.indexing.kafka.KafkaIndexTaskTest.setUp(KafkaIndexTaskTest.java:248)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279546548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279548275","html_url":"https://github.com/apache/druid/issues/3038#issuecomment-279548275","issue_url":"https://api.github.com/repos/apache/druid/issues/3038","id":279548275,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU0ODI3NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T22:45:11Z","updated_at":"2017-02-13T22:45:11Z","author_association":"CONTRIBUTOR","body":"Even though a 30s timeout is pretty generous, my best guess is this was likely due to CI infrastructure being slow. I don't see anything that jumps out as wrong in the code. I'll leave this open in case someone sees it again but will untag the 0.10.0 milestone.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279548275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279548730","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-279548730","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":279548730,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU0ODczMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T22:47:15Z","updated_at":"2017-02-13T22:47:15Z","author_association":"CONTRIBUTOR","body":"@pjain1 @fjy @jon-wei @nishantmonu51 anyone interested to take another look after the most recent changes?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279548730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279554672","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279554672","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279554672,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU1NDY3Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:13:27Z","updated_at":"2017-02-13T23:13:27Z","author_association":"CONTRIBUTOR","body":"adding to 0.10.0 since this appears to be a regression since 0.9.2.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279554672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279557588","html_url":"https://github.com/apache/druid/pull/3932#issuecomment-279557588","issue_url":"https://api.github.com/repos/apache/druid/issues/3932","id":279557588,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU1NzU4OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:27:58Z","updated_at":"2017-02-13T23:27:58Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279557588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279557706","html_url":"https://github.com/apache/druid/pull/3909#issuecomment-279557706","issue_url":"https://api.github.com/repos/apache/druid/issues/3909","id":279557706,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU1NzcwNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:28:32Z","updated_at":"2017-02-13T23:28:32Z","author_association":"CONTRIBUTOR","body":"@DaimonPl I raised #3932 to adjust formatting in PreComputedHyperUniquesSerde.java to match Druid standard style, in the future you can do this automatically by applying the IntelliJ or Eclipse code styles from here: https://github.com/druid-io/druid/blob/master/CONTRIBUTING.md","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279557706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279560219","html_url":"https://github.com/apache/druid/pull/3863#issuecomment-279560219","issue_url":"https://api.github.com/repos/apache/druid/issues/3863","id":279560219,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU2MDIxOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:41:30Z","updated_at":"2017-02-13T23:41:30Z","author_association":"CONTRIBUTOR","body":"@gianm just for readability. I simply run GroupByBenchmark and got the same result.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279560219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279560959","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279560959","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279560959,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU2MDk1OQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:45:18Z","updated_at":"2017-02-13T23:45:49Z","author_association":"CONTRIBUTOR","body":"@cheddar @drcrallen  I thought of doing that but that would mean we would have to synchronize the removeFromSet , updateLocation, addToSet operations because the historical can have more than 1 downloading thread. \r\n\r\nIt seemed a lot cleaner to compute sorted order when required. Do you think we should move this to the remove-and-add model?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279560959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279562267","html_url":"https://github.com/apache/druid/pull/3899#issuecomment-279562267","issue_url":"https://api.github.com/repos/apache/druid/issues/3899","id":279562267,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU2MjI2Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-13T23:52:43Z","updated_at":"2017-02-13T23:52:43Z","author_association":"CONTRIBUTOR","body":"@gianm, @drcrallen thanks for your review. I opened #3933 for adding docs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279562267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279569433","html_url":"https://github.com/apache/druid/pull/2767#issuecomment-279569433","issue_url":"https://api.github.com/repos/apache/druid/issues/2767","id":279569433,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU2OTQzMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T00:33:09Z","updated_at":"2017-02-14T00:33:09Z","author_association":"CONTRIBUTOR","body":"IMO, if we're going to change the default of fromNext, we should also make it mandatory to specify either `fromNext: false` or `fromNext: true`. This means that people that don't pass fromNext in their queries will get failures starting in 0.10.0, which I think is better than getting wrong results.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279569433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279572630","html_url":"https://github.com/apache/druid/issues/3350#issuecomment-279572630","issue_url":"https://api.github.com/repos/apache/druid/issues/3350","id":279572630,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU3MjYzMA==","user":{"login":"michaelschiff","id":1669670,"node_id":"MDQ6VXNlcjE2Njk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1669670?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelschiff","html_url":"https://github.com/michaelschiff","followers_url":"https://api.github.com/users/michaelschiff/followers","following_url":"https://api.github.com/users/michaelschiff/following{/other_user}","gists_url":"https://api.github.com/users/michaelschiff/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelschiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelschiff/subscriptions","organizations_url":"https://api.github.com/users/michaelschiff/orgs","repos_url":"https://api.github.com/users/michaelschiff/repos","events_url":"https://api.github.com/users/michaelschiff/events{/privacy}","received_events_url":"https://api.github.com/users/michaelschiff/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T00:51:40Z","updated_at":"2017-02-14T00:55:23Z","author_association":"CONTRIBUTOR","body":"Hey thanks for pointing this out, these metrics are missing from our dashboards as well.\r\n\r\nRight now the StatsDEmitter converts everything to long before handing to the StatsD client\r\n```\r\nswitch (metricType) {\r\n    case count:\r\n      statsd.count(fullName, value.longValue())\r\n      break;\r\n    case timer:\r\n      statsd.time(fullName, value.longValue());\r\n      break;\r\n    case gauge:\r\n      statsd.gauge(fullName, value.longValue());\r\n      break;\r\n}\r\n```\r\n\r\nwhere value is a Number.  If 0 <= value < 1 then this will round down to 0, producing the empty metrics we've observed.  I think your suggestion makes the most sense: for metrics whose value is between 0 and 1 we need to convert to a 0-100 range, and then round to nearest integer.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279572630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588360","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279588360","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279588360,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU4ODM2MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T02:22:38Z","updated_at":"2017-02-14T02:22:38Z","author_association":"CONTRIBUTOR","body":"Shall we also disable travis builds for jdk7? They, of course, do not pass after applying this patch.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588835","html_url":"https://github.com/apache/druid/issues/3030#issuecomment-279588835","issue_url":"https://api.github.com/repos/apache/druid/issues/3030","id":279588835,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU4ODgzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T02:25:26Z","updated_at":"2017-02-14T02:25:26Z","author_association":"CONTRIBUTOR","body":"@b-slim are you still planning to drive this? Shall we move to 0.10.1?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588852","html_url":"https://github.com/apache/druid/issues/3082#issuecomment-279588852","issue_url":"https://api.github.com/repos/apache/druid/issues/3082","id":279588852,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTU4ODg1Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T02:25:34Z","updated_at":"2017-02-14T02:25:34Z","author_association":"CONTRIBUTOR","body":"@b-slim are you still planning to drive this? Shall we move to 0.10.1?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279588852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279614723","html_url":"https://github.com/apache/druid/issues/3864#issuecomment-279614723","issue_url":"https://api.github.com/repos/apache/druid/issues/3864","id":279614723,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTYxNDcyMw==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T05:50:39Z","updated_at":"2017-02-14T09:08:07Z","author_association":"CONTRIBUTOR","body":"One more question.\r\n\r\nAs I understand those changes will be available in druid 0.10.0. currently we are using 0.9.2 - is there any way to get it included in older branch (other than our own custom fork with merge) ?\r\n\r\nIs it posible to merge it to 0.9.3 ? If yes when do you think 0.9.3 would be released?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279614723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279684032","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279684032","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279684032,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTY4NDAzMg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T11:35:39Z","updated_at":"2017-02-14T11:36:10Z","author_association":"CONTRIBUTOR","body":"I tested this PR for hadoop compatibility with:\r\n* sequenceiq hadoop docker image 2.3.0 to 2.7.3\r\n* cloudera quickstart docker image latest\r\n* hortonworks hdp 2.5 docker image\r\n* an EMR 5.0.0 cluster\r\n\r\nall running Java 8 on the hadoop cluster side, running a batch ingestion task on the wikiticker data, those all passed","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279684032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279698125","html_url":"https://github.com/apache/druid/pull/3928#issuecomment-279698125","issue_url":"https://api.github.com/repos/apache/druid/issues/3928","id":279698125,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTY5ODEyNQ==","user":{"login":"erikdubbelboer","id":522870,"node_id":"MDQ6VXNlcjUyMjg3MA==","avatar_url":"https://avatars.githubusercontent.com/u/522870?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdubbelboer","html_url":"https://github.com/erikdubbelboer","followers_url":"https://api.github.com/users/erikdubbelboer/followers","following_url":"https://api.github.com/users/erikdubbelboer/following{/other_user}","gists_url":"https://api.github.com/users/erikdubbelboer/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdubbelboer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdubbelboer/subscriptions","organizations_url":"https://api.github.com/users/erikdubbelboer/orgs","repos_url":"https://api.github.com/users/erikdubbelboer/repos","events_url":"https://api.github.com/users/erikdubbelboer/events{/privacy}","received_events_url":"https://api.github.com/users/erikdubbelboer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T12:46:02Z","updated_at":"2017-02-14T12:46:02Z","author_association":"CONTRIBUTOR","body":"I cleaned up the changes a lot by adding the extra constructor to `SelectorDimFilter`.\r\n\r\nOld changes can still be found at: https://github.com/erikdubbelboer/druid/commit/81e1c1fbf730f253fb9a2daca68a1154c7c56851","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279698125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279715371","html_url":"https://github.com/apache/druid/issues/3935#issuecomment-279715371","issue_url":"https://api.github.com/repos/apache/druid/issues/3935","id":279715371,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTcxNTM3MQ==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T14:05:39Z","updated_at":"2017-02-14T14:05:39Z","author_association":"CONTRIBUTOR","body":"Just checked that `hyperUnique` has similar problem:\r\n\r\n```\r\n{\r\n  \"error\" : \"Unknown exception\",\r\n  \"errorMessage\" : \"io.druid.query.aggregation.hyperloglog.HLLCV1 cannot be cast to java.lang.Number\",\r\n  \"errorClass\" : \"java.lang.ClassCastException\",\r\n  \"host\" : null\r\n}\r\n```\r\n\r\nBut can be solved by using `hyperUniqueCardinality` instead of `fieldAccess`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279715371/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279715992","html_url":"https://github.com/apache/druid/issues/3935#issuecomment-279715992","issue_url":"https://api.github.com/repos/apache/druid/issues/3935","id":279715992,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTcxNTk5Mg==","user":{"login":"schmee","id":3405586,"node_id":"MDQ6VXNlcjM0MDU1ODY=","avatar_url":"https://avatars.githubusercontent.com/u/3405586?v=4","gravatar_id":"","url":"https://api.github.com/users/schmee","html_url":"https://github.com/schmee","followers_url":"https://api.github.com/users/schmee/followers","following_url":"https://api.github.com/users/schmee/following{/other_user}","gists_url":"https://api.github.com/users/schmee/gists{/gist_id}","starred_url":"https://api.github.com/users/schmee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmee/subscriptions","organizations_url":"https://api.github.com/users/schmee/orgs","repos_url":"https://api.github.com/users/schmee/repos","events_url":"https://api.github.com/users/schmee/events{/privacy}","received_events_url":"https://api.github.com/users/schmee/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T14:08:11Z","updated_at":"2017-02-14T14:08:11Z","author_association":"NONE","body":"You need to wrap the `fieldAccess` in a `thetaSketchEstimate`, i.e:\r\n```\r\n{\r\n  \"type\": \"thetaSketchEstimate\",\r\n  \"name\": \"some_name\",\r\n  \"field\": {\r\n    \"type\": \"fieldAccess\",\r\n    \"name\": \"distinct_all\",\r\n    \"fieldName\": \"distinct_all\"\r\n  }\r\n}\r\n```\r\nTake a look at the docs for more info: http://druid.io/docs/0.9.2/development/extensions-core/datasketches-aggregators.html.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279715992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279720825","html_url":"https://github.com/apache/druid/issues/3935#issuecomment-279720825","issue_url":"https://api.github.com/repos/apache/druid/issues/3935","id":279720825,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTcyMDgyNQ==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T14:26:39Z","updated_at":"2017-02-14T14:26:39Z","author_association":"CONTRIBUTOR","body":"Thx, it worked :) here's code if someone had similar problem\r\n\r\n```\r\n{\r\n  \"aggregations\": [\r\n    {\r\n      \"type\": \"longSum\",\r\n      \"fieldName\": \"goals\",\r\n      \"name\": \"sum__concrete\"\r\n    },\r\n    {\r\n      \"type\": \"thetaSketch\",\r\n      \"fieldName\": \"all_visits\",\r\n      \"name\": \"distinct_all\",\r\n      \"size\": 16384\r\n    }\r\n  ],\r\n  \"intervals\": \"2017-02-10T11:49:24+00:00/2017-02-11T11:49:24+00:00\",\r\n  \"granularity\": \"all\",\r\n  \"postAggregations\": [\r\n    {\r\n      \"type\": \"arithmetic\",\r\n      \"name\": \"conversion\",\r\n      \"fn\": \"*\",\r\n      \"fields\": [\r\n        {\r\n          \"type\": \"arithmetic\",\r\n          \"name\": \"div\",\r\n          \"fn\": \"/\",\r\n          \"fields\": [\r\n            {\r\n              \"type\": \"fieldAccess\",\r\n              \"name\": \"sum__concrete\",\r\n              \"fieldName\": \"sum__concrete\"\r\n            },\r\n            {\r\n              \"type\": \"thetaSketchEstimate\",\r\n              \"name\": \"some_name\",\r\n              \"field\": {\r\n                \"type\": \"fieldAccess\",\r\n                \"name\": \"distinct_all\",\r\n                \"fieldName\": \"distinct_all\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"type\": \"constant\",\r\n          \"name\": \"const\",\r\n          \"value\": 100\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"queryType\": \"timeseries\",\r\n  \"dataSource\": \"conversion\"\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279720825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279748816","html_url":"https://github.com/apache/druid/issues/3082#issuecomment-279748816","issue_url":"https://api.github.com/repos/apache/druid/issues/3082","id":279748816,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc0ODgxNg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T15:59:13Z","updated_at":"2017-02-14T15:59:13Z","author_association":"CONTRIBUTOR","body":"@gianm i think this need to reconcile with bunch of other PR and proposals as well will look into that ASAP.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279748816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279749213","html_url":"https://github.com/apache/druid/issues/3030#issuecomment-279749213","issue_url":"https://api.github.com/repos/apache/druid/issues/3030","id":279749213,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc0OTIxMw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T16:00:30Z","updated_at":"2017-02-14T16:00:30Z","author_association":"CONTRIBUTOR","body":"This has a low priority right now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279749213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279773335","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279773335","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279773335,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc3MzMzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T17:18:50Z","updated_at":"2017-02-14T17:18:50Z","author_association":"CONTRIBUTOR","body":"Thanks @jon-wei! In that case I'll take off the WIP tag and this is ready for review.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279773335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279777393","html_url":"https://github.com/apache/druid/pull/3916#issuecomment-279777393","issue_url":"https://api.github.com/repos/apache/druid/issues/3916","id":279777393,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc3NzM5Mw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T17:33:40Z","updated_at":"2017-02-14T17:33:40Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279777393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279790481","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279790481","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279790481,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc5MDQ4MQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T18:20:08Z","updated_at":"2017-02-14T18:20:08Z","author_association":"CONTRIBUTOR","body":"Discussed in dev sync. @gianm was going to update travis yaml before merge","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279790481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279798204","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279798204","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279798204,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTc5ODIwNA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T18:49:01Z","updated_at":"2017-02-14T18:49:01Z","author_association":"CONTRIBUTOR","body":"@leventov I don't think we are going to make the change to introduce `LargeGenericIndexed` separate from `GenericIndexed`.  As I mentioned, we originally considered two methods of doing this already and chose the current because `GenericIndexed` already has the abstraction that we needed in place and introducing another class would basically just be a bunch of C&P.  I think there is likely room for further optimization in a subsequent PR, but don't think we should delay this PR anymore on this.\r\n\r\nIs that acceptable or are you actively veto'ing this PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279798204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279802478","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279802478","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279802478,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgwMjQ3OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T19:03:54Z","updated_at":"2017-02-14T19:03:54Z","author_association":"CONTRIBUTOR","body":"Removed jdk7 from travis.yml.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279802478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279803143","html_url":"https://github.com/apache/druid/pull/3914#issuecomment-279803143","issue_url":"https://api.github.com/repos/apache/druid/issues/3914","id":279803143,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgwMzE0Mw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T19:06:17Z","updated_at":"2017-02-14T19:06:17Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279803143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279814313","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279814313","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279814313,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgxNDMxMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T19:44:40Z","updated_at":"2017-02-14T19:44:40Z","author_association":"MEMBER","body":"@cheddar @akashdw could you please go through my arguments pro separation:\r\n - Instead of having two big-endian impls now, and adding two native-endian later, you can do LargeGenericIndexed native-endian now and don't introduce any new version of LargeGenericIndexed in the future\r\n - Remove the unused 4-byte field for each stored object in LargeGenericIndexed\r\n - If a subsequent PR won't be merged before 0.10.0, the format introduced in this PR is sealed.\r\n - Separation of GenericIndexed and LargeGenericIndexed doesn't seem to require much development, it's a regrouping of existing code (and making fixes in LargeGenericIndexed suggested above). I don't see a risk of not doing it before 0.10.0\r\n - I don't see much code is really shared in GenericIndexed now. `fromIterable()` supports version 1 only. Two separate constructors without shared code. Most other methods just check the format version one way or another and then start executing separate, unshared code for different formats. The only method that is really shared is `indexOf()`, it could be easily converted to a static accepting any `Indexed` and called from both GenericIndexed and LargeGenericIndexed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279814313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279821635","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279821635","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279821635,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgyMTYzNQ==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T20:11:38Z","updated_at":"2017-02-14T20:11:38Z","author_association":"CONTRIBUTOR","body":"> Instead of having two big-endian impls now, and adding two native-endian later, you can do LargeGenericIndexed native-endian now and don't introduce any new version of LargeGenericIndexed in the future\r\n\r\nWe will likely need to reimplement for the changes for `Memory` anyway, so spending time right now isn't really that useful.  It seems more prudent to me to just introduce things as we have them right now and then in the `Memory` future, we introduce a new binary version that is all native endian and handles all and any sizes and migrate everything to just use that.\r\n\r\n> Remove the unused 4-byte field for each stored object in LargeGenericIndexed\r\n\r\nThis is not a significant storage cost (Parag had a PR out to resolve that and introduce a new version of Generic Indexed that sat without anyone looking at it for months).  Introducing that change would also actually have performance implications on indexing, because we currently do not re-process the payloads when we notice that the column needs to become large.  In order to switch to that implementation, we would need to start reprocessing then.  Once we are in the `Memory` future and these things collapse together, it will be trivial to remove that.\r\n\r\n> If a subsequent PR won't be merged before 0.10.0, the format introduced in this PR is sealed.\r\n\r\nThat's exactly why we version our binary formats.  In the future we will introduce another version and move things towards that.\r\n\r\n> Separation of GenericIndexed and LargeGenericIndexed doesn't seem to require much development, it's a regrouping of existing code (and making fixes in LargeGenericIndexed suggested above). I don't see a risk of not doing it before 0.10.0\r\n> I don't see much code is really shared in GenericIndexed now. fromIterable() supports version 1 only. Two separate constructors without shared code. Most other methods just check the format version one way or another and then start executing separate, unshared code for different formats. The only method that is really shared is indexOf(), it could be easily converted to a static accepting any Indexed and called from both GenericIndexed and LargeGenericIndexed.\r\n\r\nThe code path that I'm talking about is the main contract of the `GenericIndexed` object, where the `get()` code is being reused and we are taking advantage of the abstraction that is already in place to switch between the implementations.  \r\n\r\nIf your issues are just generally with how `GenericIndexed` works and you want to reimplement that, I'm totally down with that and see that as something that can have potential benefits, but I do not think it should be coupled with this PR.\r\n\r\nThe point of this PR is to introduce the ability to handle columns larger than 2GB in as minimally invasive of a way as possible.  In order to do that we also ended up needing to expand the abstraction for `ComplexColumnSerde`, which we did and has significant benefits for the extension point.  We are not trying to innovate on the actual algorithm of `GenericIndexed` nor fix anything else other than allow for larger columns.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279821635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832070","html_url":"https://github.com/apache/druid/issues/3746#issuecomment-279832070","issue_url":"https://api.github.com/repos/apache/druid/issues/3746","id":279832070,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgzMjA3MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T20:52:07Z","updated_at":"2017-02-14T20:52:07Z","author_association":"CONTRIBUTOR","body":"Closed by #3914","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832111","html_url":"https://github.com/apache/druid/issues/3745#issuecomment-279832111","issue_url":"https://api.github.com/repos/apache/druid/issues/3745","id":279832111,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgzMjExMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T20:52:16Z","updated_at":"2017-02-14T20:52:16Z","author_association":"CONTRIBUTOR","body":"Closed by #3914","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832174","html_url":"https://github.com/apache/druid/issues/3595#issuecomment-279832174","issue_url":"https://api.github.com/repos/apache/druid/issues/3595","id":279832174,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTgzMjE3NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T20:52:29Z","updated_at":"2017-02-14T20:52:29Z","author_association":"CONTRIBUTOR","body":"Closed by #3914","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279832174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279865954","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279865954","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279865954,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg2NTk1NA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T23:08:06Z","updated_at":"2017-02-14T23:08:06Z","author_association":"CONTRIBUTOR","body":"I think the synchronization will be cheaper than sorting constantly.  Downloading segments is already a background activity and as long as the synchronization isn't around the actual download of the segment, there should be minimal contention (if any, 'cause the default and most clusters are going to have just a single thread).\r\n\r\nOn the other hand, I've seen implementations that lazily convert from a list to a sorted thing get inadvertently used incorrectly upstream and generate really bad complexity algorithms.  This set of code is not really likely to be misused in that way, so my fear is more that the pattern would get replicated somewhere else that is more performance sensitive.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279865954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279867353","html_url":"https://github.com/apache/druid/pull/3929#issuecomment-279867353","issue_url":"https://api.github.com/repos/apache/druid/issues/3929","id":279867353,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg2NzM1Mw==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-14T23:14:56Z","updated_at":"2017-02-14T23:14:56Z","author_association":"CONTRIBUTOR","body":"Then again, arguing against myself, the size of the list is gonna be minimal (in most cases likely just 1) and this happens so seldom that re-sorting every time is also likely not a performance concern.  So the simplicity of redoing it every time might be worth it.  I would say, instead of using the tree set, I *think* it will be faster and am sure it will be nicer on object creation to clone the list (or actually, even, store it as an array) and use `Collections.sort`.\r\n\r\nOn the synchronization question.  Are we sure that `StorageLocation` is thread-safe?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279867353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279879218","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279879218","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279879218,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg3OTIxOA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T00:19:17Z","updated_at":"2017-02-15T00:20:15Z","author_association":"MEMBER","body":"Ok, I agree not to change LargeGenericIndexed format (not removing the size field and changing ordering)\r\n\r\n> The code path that I'm talking about is the main contract of the GenericIndexed object, where the get() code is being reused and we are taking advantage of the abstraction that is already in place to switch between the implementations.\r\n\r\nThis abstraction, `BufferedIndexed`, could be made a top-level package-private class, copying three fields from `GenericIndexed`/`LargeGenericIndexed`: `size`, `strategy`, and `allowReverseLookup`. Both `GenericIndexed` and `LargeGenericIndexed` could use it. _None_ other code in the currently proposed version of `GenericIndexed` is shared between versions.\r\n\r\nOn the normal `GenericIndexed.get()`, `size()`, `getClazz()` and `iterator()` path `BufferedIndexed` is not needed at all, as I noted here: https://github.com/druid-io/druid/pull/3743#issuecomment-279105008 (I don't require this to be a part of this PR, can fix it myself later).\r\n\r\n> If your issues are just generally with how GenericIndexed works and you want to reimplement that, I'm totally down with that and see that as something that can have potential benefits, but I do not think it should be coupled with this PR.\r\n\r\nWhat I currently displeased with is that `GenericIndexed` looks like a perfect mix of two separate sets of logic, that makes `GenericIndexed` unnecessarily complex. There should be two different classes.\r\n\r\nYour argument against separation is that it's going to be \"large C&P of the code\", but I actually don't see _any_ code that should be copied.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279879218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279881337","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279881337","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279881337,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg4MTMzNw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T00:31:39Z","updated_at":"2017-02-15T00:32:05Z","author_association":"MEMBER","body":"Or e. g. `AbstractGenericIndexed` with three fields: `size`, `strategy` and `allowsReverseLookup`, inner package-private `BufferedIndexed` class, and static constants. `GenericIndexed` and `LargeGenericIndexed` extend it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279881337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279884530","html_url":"https://github.com/apache/druid/pull/3919#issuecomment-279884530","issue_url":"https://api.github.com/repos/apache/druid/issues/3919","id":279884530,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg4NDUzMA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T00:50:59Z","updated_at":"2017-02-15T00:50:59Z","author_association":"CONTRIBUTOR","body":"looks good so far, will take another look after conflict fix","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279884530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279886300","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279886300","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279886300,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg4NjMwMA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T01:01:19Z","updated_at":"2017-02-15T01:01:19Z","author_association":"CONTRIBUTOR","body":"@leventov if I can repeat what I think you are saying.  You are annoyed that `GenericIndexed` has fields for \"both\" sets of use cases.  I.e. it is maintaining both\r\n\r\n```\r\nprivate final List<ByteBuffer> valueBuffers;\r\nprivate final ByteBuffer headerBuffer;\r\nprivate int logBaseTwoOfElementsPerValueFile;\r\n```\r\n\r\nand\r\n\r\n```\r\nprivate ByteBuffer theBuffer;\r\n```\r\n\r\nIf we can consolidate the fields into just one of those two sets for both uses, is that a reasonable compromise?\r\n\r\nSeparating it out into separate classes seems like all it is doing is shuffling code around and I'm not sure it's really enabling or solving something other than aligning with a specific aesthetic.  While it might be nicer to look at each of those pieces individually, it will also mean that the currently relatively self-contained `GenericIndexed` will become an amalgam of a number of disparate classes.  At the end of the `Memory` changes, I would hope to have just one primary implementation in use again, which would hopefully just be a new implementation of `Indexed` without any of this complexity at all.  I don't really see a significant benefit to making changes now given that it's not an abstraction that I expect to continue being important in the future nor do I think that the abstraction introduced would enable us to do something new and wonderful.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279886300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279891160","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-279891160","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":279891160,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg5MTE2MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T01:29:41Z","updated_at":"2017-02-15T01:29:41Z","author_association":"MEMBER","body":"@cheddar I'm annoyed not so much with the fields, but with the fact that the logic of the cases is interspersed. I'm ok with a compromise that the logic just inside `GenericIndexed` is regrouped so that logic for v1 and v2 is grouped together. After all I think better I do it myself in a subsequent PR, along with some other fixes like proposed here: https://github.com/druid-io/druid/pull/3743#issuecomment-279105008.\r\n\r\nI'll take another (hopefully final) look at the code in this PR later this week\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279891160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279895773","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-279895773","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":279895773,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg5NTc3Mw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T01:59:18Z","updated_at":"2017-02-15T01:59:18Z","author_association":"MEMBER","body":"@dkhwangbo you are using an unbounded queue here and thus you have no control on how big this queue can grow (and can potentially grow big enough to cause JVM heap to go out of memory). Also, you do not need another queue, kafka producer already maintains an internal buffer whose size can be configured by user using property `buffer.memory`. Thus user can choose how many events they want to buffer at the producer side.\r\n\r\nIn my opinion what would be better is to configure kafka producer to throw exception when its buffer gets full by setting `block.on.buffer.full` to `false` and thus drop the events that cannot be accommodated something like this - https://github.com/yahoo/druid-extensions/blob/master/metric_collector/src/main/java/com/yahoo/druid/metriccollector/MetricCollectorResource.java#L254\r\n\r\nThis way users can choose how many events they want to buffer and how much heap memory they are ready to spare for the producer. If you decide to go this route, it would be good to maintain a counter of how many events were dropped because of this and log that count every X number of dropped events. X can be a million or something like that.\r\n\r\nThat would be my advice @b-slim what do you think ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279895773/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279898982","html_url":"https://github.com/apache/druid/pull/3937#issuecomment-279898982","issue_url":"https://api.github.com/repos/apache/druid/issues/3937","id":279898982,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTg5ODk4Mg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T02:22:29Z","updated_at":"2017-02-15T02:22:29Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279898982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279901500","html_url":"https://github.com/apache/druid/pull/3919#issuecomment-279901500","issue_url":"https://api.github.com/repos/apache/druid/issues/3919","id":279901500,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTkwMTUwMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T02:41:11Z","updated_at":"2017-02-15T02:41:11Z","author_association":"CONTRIBUTOR","body":"thx for the review @jon-wei, pushed a fix for conflicts.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279901500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279916310","html_url":"https://github.com/apache/druid/issues/3934#issuecomment-279916310","issue_url":"https://api.github.com/repos/apache/druid/issues/3934","id":279916310,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTkxNjMxMA==","user":{"login":"aubdiy","id":9246111,"node_id":"MDQ6VXNlcjkyNDYxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/9246111?v=4","gravatar_id":"","url":"https://api.github.com/users/aubdiy","html_url":"https://github.com/aubdiy","followers_url":"https://api.github.com/users/aubdiy/followers","following_url":"https://api.github.com/users/aubdiy/following{/other_user}","gists_url":"https://api.github.com/users/aubdiy/gists{/gist_id}","starred_url":"https://api.github.com/users/aubdiy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aubdiy/subscriptions","organizations_url":"https://api.github.com/users/aubdiy/orgs","repos_url":"https://api.github.com/users/aubdiy/repos","events_url":"https://api.github.com/users/aubdiy/events{/privacy}","received_events_url":"https://api.github.com/users/aubdiy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T04:48:56Z","updated_at":"2017-02-15T04:48:56Z","author_association":"NONE","body":"i forget run \"bin/init\"....","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279916310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/279918357","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-279918357","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":279918357,"node_id":"MDEyOklzc3VlQ29tbWVudDI3OTkxODM1Nw==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T05:08:05Z","updated_at":"2017-02-15T05:08:05Z","author_association":"CONTRIBUTOR","body":"@pjain1 Hi. I have a question for your advise. \r\nIn Kafka documentation, `block.on.buffer.full` is deprecated from 0.9.0.0.\r\n> The producer config block.on.buffer.full has been deprecated and will be removed in future release. Currently its default value has been changed to false. The KafkaProducer will no longer throw BufferExhaustedException but instead will use max.block.ms value to block, after which it will throw a TimeoutException.\r\n\r\nIn terms of code maintenance, Using `block.on.buffer.full` is a little bit questionable solution. also, @b-slim mentioned, `emit` should never be blocking but using `producer.send` in `emit` has potential blocking issue because of `max.block.ms`. This is why I use another queue and using `queue.add` in `emit`. \r\n\r\nSo, I think next step is 1) fix using unbounded queue, or 2) rollback last commit and set `max.block.ms` to `1` (or another reasonable value) and drop message when `TimeoutException` occured. What do you think? Please comment. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/279918357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280012498","html_url":"https://github.com/apache/druid/issues/3739#issuecomment-280012498","issue_url":"https://api.github.com/repos/apache/druid/issues/3739","id":280012498,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDAxMjQ5OA==","user":{"login":"kosii","id":419033,"node_id":"MDQ6VXNlcjQxOTAzMw==","avatar_url":"https://avatars.githubusercontent.com/u/419033?v=4","gravatar_id":"","url":"https://api.github.com/users/kosii","html_url":"https://github.com/kosii","followers_url":"https://api.github.com/users/kosii/followers","following_url":"https://api.github.com/users/kosii/following{/other_user}","gists_url":"https://api.github.com/users/kosii/gists{/gist_id}","starred_url":"https://api.github.com/users/kosii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kosii/subscriptions","organizations_url":"https://api.github.com/users/kosii/orgs","repos_url":"https://api.github.com/users/kosii/repos","events_url":"https://api.github.com/users/kosii/events{/privacy}","received_events_url":"https://api.github.com/users/kosii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T13:38:11Z","updated_at":"2017-02-15T13:38:11Z","author_association":"NONE","body":"Hi,\r\n\r\nI'm @fphilippon's colleague. The error occurred again this morning. Any idea why is this happening?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280012498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280062410","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-280062410","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":280062410,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDA2MjQxMA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T16:35:30Z","updated_at":"2017-02-16T16:01:46Z","author_association":"MEMBER","body":"I was not aware that this property is deprecated. Thanks for looking into it.\r\n\r\nSo, I guess one way to use queue is to implement a memory bounded queue, something like this - https://gist.github.com/pjain1/96ed2369bb8de4cb691317d5f2945888 and use that instead of unbounded queue.\r\n\r\nAnother option as you mentioned is to use `max.block.ms` and set it to lets say `50` by default and make it such that the property `max.block.ms` is overridable by user supplied config.\r\n\r\nI am in favor of using `max.block.ms` @b-slim what do you prefer ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280062410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280064262","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-280064262","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":280064262,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDA2NDI2Mg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T16:41:43Z","updated_at":"2017-02-15T16:41:43Z","author_association":"CONTRIBUTOR","body":"This is one of my favorite interview questions for new platform eng hires 😆 (handling buffer full conditions)\r\n\r\nI suggest we retain the behavior in the other emitters and drop new data in favor of old data. AKA record the dropped event count and continue on, occasionally warning of dropped events in the log.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280064262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280085083","html_url":"https://github.com/apache/druid/pull/3877#issuecomment-280085083","issue_url":"https://api.github.com/repos/apache/druid/issues/3877","id":280085083,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDA4NTA4Mw==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T17:50:13Z","updated_at":"2017-02-15T17:50:13Z","author_association":"CONTRIBUTOR","body":"Thanks @gianm, addressed comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280085083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280100522","html_url":"https://github.com/apache/druid/pull/3940#issuecomment-280100522","issue_url":"https://api.github.com/repos/apache/druid/issues/3940","id":280100522,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDEwMDUyMg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T18:44:52Z","updated_at":"2017-02-15T18:44:52Z","author_association":"CONTRIBUTOR","body":"FYI https://issues.apache.org/jira/browse/HADOOP-14028 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280100522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280120075","html_url":"https://github.com/apache/druid/pull/3850#issuecomment-280120075","issue_url":"https://api.github.com/repos/apache/druid/issues/3850","id":280120075,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDEyMDA3NQ==","user":{"login":"praveev","id":297278,"node_id":"MDQ6VXNlcjI5NzI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/297278?v=4","gravatar_id":"","url":"https://api.github.com/users/praveev","html_url":"https://github.com/praveev","followers_url":"https://api.github.com/users/praveev/followers","following_url":"https://api.github.com/users/praveev/following{/other_user}","gists_url":"https://api.github.com/users/praveev/gists{/gist_id}","starred_url":"https://api.github.com/users/praveev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveev/subscriptions","organizations_url":"https://api.github.com/users/praveev/orgs","repos_url":"https://api.github.com/users/praveev/repos","events_url":"https://api.github.com/users/praveev/events{/privacy}","received_events_url":"https://api.github.com/users/praveev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T19:53:45Z","updated_at":"2017-02-15T19:53:45Z","author_association":"CONTRIBUTOR","body":"@leventov mostly addressed the stuff you wanted. let me know","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280120075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280156206","html_url":"https://github.com/apache/druid/pull/3919#issuecomment-280156206","issue_url":"https://api.github.com/repos/apache/druid/issues/3919","id":280156206,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE1NjIwNg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T22:09:12Z","updated_at":"2017-02-15T22:09:12Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280156206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280170798","html_url":"https://github.com/apache/druid/pull/3930#issuecomment-280170798","issue_url":"https://api.github.com/repos/apache/druid/issues/3930","id":280170798,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE3MDc5OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-15T23:07:46Z","updated_at":"2017-02-15T23:07:46Z","author_association":"CONTRIBUTOR","body":"LGTM, will wait for nishant's comment to be resolved though","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280170798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280184209","html_url":"https://github.com/apache/druid/issues/3820#issuecomment-280184209","issue_url":"https://api.github.com/repos/apache/druid/issues/3820","id":280184209,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE4NDIwOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T00:06:15Z","updated_at":"2017-02-16T00:06:15Z","author_association":"CONTRIBUTOR","body":"I'm working on this issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280184209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280187830","html_url":"https://github.com/apache/druid/issues/3938#issuecomment-280187830","issue_url":"https://api.github.com/repos/apache/druid/issues/3938","id":280187830,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE4NzgzMA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T00:23:38Z","updated_at":"2017-02-16T00:23:38Z","author_association":"CONTRIBUTOR","body":"looking into this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280187830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280192127","html_url":"https://github.com/apache/druid/pull/3930#issuecomment-280192127","issue_url":"https://api.github.com/repos/apache/druid/issues/3930","id":280192127,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDE5MjEyNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T00:45:48Z","updated_at":"2017-02-16T00:45:48Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 @jon-wei pushed an update for nishant's comment","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280192127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280202553","html_url":"https://github.com/apache/druid/issues/3924#issuecomment-280202553","issue_url":"https://api.github.com/repos/apache/druid/issues/3924","id":280202553,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIwMjU1Mw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T01:39:54Z","updated_at":"2017-02-16T01:39:54Z","author_association":"CONTRIBUTOR","body":"I'm curious if AWS codebuild can do this easily.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280202553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280204087","html_url":"https://github.com/apache/druid/pull/3930#issuecomment-280204087","issue_url":"https://api.github.com/repos/apache/druid/issues/3930","id":280204087,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIwNDA4Nw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T01:48:41Z","updated_at":"2017-02-16T01:48:41Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280204087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280209894","html_url":"https://github.com/apache/druid/pull/3942#issuecomment-280209894","issue_url":"https://api.github.com/repos/apache/druid/issues/3942","id":280209894,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIwOTg5NA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T02:20:07Z","updated_at":"2017-02-16T02:20:07Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280209894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280223153","html_url":"https://github.com/apache/druid/issues/3938#issuecomment-280223153","issue_url":"https://api.github.com/repos/apache/druid/issues/3938","id":280223153,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIyMzE1Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T03:47:28Z","updated_at":"2017-02-16T03:47:28Z","author_association":"CONTRIBUTOR","body":"I found that this rarely happens only when nested queries have a simple count aggregation like ```select count(*) from (select d1, sum(m1) from foo group by d1) t```. And in this case, it seems normal because the simple count aggregation needs just merging inputs instead of accumulating them. \r\nI'll close this issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280223153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280229662","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-280229662","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":280229662,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIyOTY2Mg==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T04:42:29Z","updated_at":"2017-02-16T04:42:29Z","author_association":"CONTRIBUTOR","body":"@pjain1 Thanks for your kind explanation! Your explanation is always helpful to me. @b-slim Please share your idea. If you agree with @pjain1 's second option(set `max.block.ms` to `50`) I'll drive with that.\r\n\r\n@drcrallen Thanks for your interesting! I'll keep in mind this subject and your suggestion when I'll take interview 😄 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280229662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280231365","html_url":"https://github.com/apache/druid/issues/3938#issuecomment-280231365","issue_url":"https://api.github.com/repos/apache/druid/issues/3938","id":280231365,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIzMTM2NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T04:56:41Z","updated_at":"2017-02-16T04:56:41Z","author_association":"CONTRIBUTOR","body":"@jihoonson are you saying the behavior you saw is not actually a bug?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280231365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280233530","html_url":"https://github.com/apache/druid/issues/3938#issuecomment-280233530","issue_url":"https://api.github.com/repos/apache/druid/issues/3938","id":280233530,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIzMzUzMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T05:15:21Z","updated_at":"2017-02-16T05:15:21Z","author_association":"CONTRIBUTOR","body":"Yes, it seems normal. \r\nMore precisely speaking, in ```CombiningSequence.accumulation()```, ```baseSequence.accumulate(null, combiningAccumulator)``` consumes only a single row because the simple count aggregation always produces a single row. And in this case, ```CombiningAccumulator.accumulate()``` always executes the below code which doesn't have to acquire a merge buffer.\r\n```\r\nif (prevValue == null) {\r\n  return mergeFn.apply(t, null);\r\n}\r\n```\r\nThus, even though the merge buffer of the input sequence is released before the current sequence is accumulated, the intermediate result of the input sequence accumulation is kept as ```lastValue``` which is the result of ```baseSequence.accumulate(null, combiningAccumulator)``` in ```CombiningSequence.accumulation()```.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280233530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/280234359","html_url":"https://github.com/apache/druid/issues/3938#issuecomment-280234359","issue_url":"https://api.github.com/repos/apache/druid/issues/3938","id":280234359,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MDIzNDM1OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-16T05:22:16Z","updated_at":"2017-02-16T05:22:16Z","author_association":"CONTRIBUTOR","body":"You can reproduce this by checking out https://github.com/jihoonson/druid/tree/merge-buffer-debug and running GroupByQueryMergeBufferTest. The tests in this class of this branch emit some logs which show what happens in sequence.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/280234359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]