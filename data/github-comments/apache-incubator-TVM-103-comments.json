[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496812635","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-496812635","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":496812635,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjgxMjYzNQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T07:05:53Z","updated_at":"2019-05-29T07:05:53Z","author_association":"MEMBER","body":"> As a side note, to demonstrate the flexibility of the new transform API. I hope we can revive relay.build in python, which calls into the transform API without calling into C++. This is a slight divergence but given that the code is short enough, I believe a useful thing to do. Eventually, we can also have a DefaultOptPipeline that returns the default sequential pipeline we use for optimization.\r\n\r\nDoesn't this actively work against the goal to have a pure C++ pipeline for the compiler? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496812635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496816409","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-496816409","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":496816409,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjgxNjQwOQ==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T07:19:06Z","updated_at":"2019-05-29T07:34:44Z","author_association":"NONE","body":"> From my experience, we needn't q_relu. But we need q_add / q_concate and so on. I suggest we use MobilenetV2 quant model for example, \r\n\r\nYes, I believe the MobilenetV2 relu_6 is effectively fused in by the downscale saturation.  You might need it if you want to support their way of training, though.\r\n\r\nYes Mobilenet has the q_add, but I suggest the Inceptionv3  for q_concatenate, since it also has concat nodes feeding into concat nodes, and tflite also has to rescale inputs inside the concat operations.  \r\n\r\nAlso,  the MobilenetV2 q_add inputs require rescale... but in both q_concat and q_add you can recalculate the prior op downscale multipliers so you can eliminate the extra rescales. \r\n\r\nAlso, depending on your allocation capabilities, you can get rid of all concats.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496816409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496892083","html_url":"https://github.com/apache/tvm/pull/3200#issuecomment-496892083","issue_url":"https://api.github.com/repos/apache/tvm/issues/3200","id":496892083,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njg5MjA4Mw==","user":{"login":"nscotto","id":44670538,"node_id":"MDQ6VXNlcjQ0NjcwNTM4","avatar_url":"https://avatars.githubusercontent.com/u/44670538?v=4","gravatar_id":"","url":"https://api.github.com/users/nscotto","html_url":"https://github.com/nscotto","followers_url":"https://api.github.com/users/nscotto/followers","following_url":"https://api.github.com/users/nscotto/following{/other_user}","gists_url":"https://api.github.com/users/nscotto/gists{/gist_id}","starred_url":"https://api.github.com/users/nscotto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nscotto/subscriptions","organizations_url":"https://api.github.com/users/nscotto/orgs","repos_url":"https://api.github.com/users/nscotto/repos","events_url":"https://api.github.com/users/nscotto/events{/privacy}","received_events_url":"https://api.github.com/users/nscotto/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T11:10:27Z","updated_at":"2019-05-29T14:43:50Z","author_association":"NONE","body":"Package name in source code does not correspond to the folder structure (`ml.dmlc.tvm.android.androidcamerademo` and `ml/dmlc/tvm/android/demo`).\r\n\r\nAlso the application crashes for me with a null pointer error:\r\n```\r\n--------- beginning of crash\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: FATAL EXCEPTION: main\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: Process: ml.dmlc.tvm.android.androidcamerademo, PID: 19294\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: java.lang.RuntimeException: Unable to resume activity {ml.dmlc.tvm.android.androidcamerademo/ml.dmlc.tvm.android.androidcamerademo.MainActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.view.TextureView.isAvailable()' on a null object reference\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.performResumeActivity(ActivityThread.java:3790)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3830)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3038)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1696)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:105)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.main(ActivityThread.java:6944)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat java.lang.reflect.Method.invoke(Native Method)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.view.TextureView.isAvailable()' on a null object reference\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat ml.dmlc.tvm.android.androidcamerademo.Camera2BasicFragment.onResume(Camera2BasicFragment.java:787)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.Fragment.performResume(Fragment.java:2657)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1319)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1549)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1611)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentManagerImpl.dispatchMoveToState(FragmentManager.java:3045)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentManagerImpl.dispatchResume(FragmentManager.java:3007)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.FragmentController.dispatchResume(FragmentController.java:201)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.Activity.performResume(Activity.java:7382)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \tat android.app.ActivityThread.performResumeActivity(ActivityThread.java:3765)\r\n05-29 12:00:40.659 19294 19294 E AndroidRuntime: \t... 10 more\r\n```\r\nI am using api 26 with recent ndk.\r\nThat should not be difficult to solve, I am going to investigate it later in the day.\r\nEdit: `mAutoFitTextureView` is null in `onResume`, but not in `onViewCreated`, which should be called before... Are they called from the same thread?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496892083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496892642","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-496892642","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":496892642,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njg5MjY0Mg==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T11:12:27Z","updated_at":"2019-05-29T11:12:27Z","author_association":"CONTRIBUTOR","body":"Hi @anijain2305 regarding the requantization, if the it is not going to put in conv op, the op may suppose to output FP32, otherwise the semantic is confusing. The requantization can convert FP32 to INT8. The multiplier/shift based reuantization approach introduced by TFLite is also adopted by Caffe2/QNNPACK.\r\n\r\nAnd, maybe we can put the quantization parameters in tensor, as the *scale* and *zero point* are describing the INT8 tensor data rather than the op. The op are supposed to read these parameters and get things done.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496892642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496995241","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-496995241","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":496995241,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk5NTI0MQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T15:49:34Z","updated_at":"2019-05-29T15:49:34Z","author_association":"CONTRIBUTOR","body":"> For the `q_conv2d`, we will add two more arguments.\r\n> \r\n> ```python\r\n>   output_min=0, \r\n>   output_max=0\r\n> ```\r\n> \r\n> These will be used for restrict the output range, which could be calculated previously.\r\n\r\nI see what you are saying, but I am not sure if this is the right approach. In my opinion, it will be better to put it out of conv. The reason we have these 2 extra min/maxes is because of fused activation in TFLite. It seems better to keep it separate so that both MxNet and TFLite can share quantized_conv2d. In case of TFLite, when we see a fused conv, we can add one more clamp operator in the sequence of ops at the end.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496995241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496996627","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-496996627","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":496996627,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk5NjYyNw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T15:52:59Z","updated_at":"2019-05-29T15:52:59Z","author_association":"CONTRIBUTOR","body":"> Yes, I believe the MobilenetV2 relu_6 is effectively fused in by the downscale saturation. You might need it if you want to support their way of training, though.\r\n> \r\n> Yes Mobilenet has the q_add, but I suggest the Inceptionv3 for q_concatenate, since it also has concat nodes feeding into concat nodes, and tflite also has to rescale inputs inside the concat operations.\r\n\r\nMake sense. For now, I was thinking of not worrying about depth-wise conv. So, decided to take Inception V3 into account. I think given we are in the starting position, I don't have any big inclination towards any network. My motive is to focus on getting the right infrastructure in the start and showcase it with one large network. The performance micro-optimizations can then phased.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496996627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496998142","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-496998142","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":496998142,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk5ODE0Mg==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T15:56:41Z","updated_at":"2019-05-29T15:56:41Z","author_association":"CONTRIBUTOR","body":"> Hi @anijain2305 regarding the requantization, if the it is not going to put in conv op, the op may suppose to output FP32, otherwise the semantic is confusing. The requantization can convert FP32 to INT8. The multiplier/shift based reuantization approach introduced by TFLite is also adopted by Caffe2/QNNPACK.\r\n\r\nMakes sense. Does it make sense to add accumulator_dtype as one of the attributes of quantized_conv2d. This will be set to int32 for TFLite, Caffe2, QNNPACK. But, if some network needs accumulation in FP32, then it will support that as well.\r\n\r\n> And, maybe we can put the quantization parameters in tensor, as the scale and zero point are describing the INT8 tensor data rather than the op. The op are supposed to read these parameters and get things done.\r\n\r\nNot sure about this. The good thing is the conv2d relay operator can be shared across FP32 and quantized tensor types. The bad thing is compute depends on the quantized tensor type now. This might require new Relay optimizations, preventing us to fully use the existing infrastructure.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496998142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496999649","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-496999649","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":496999649,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk5OTY0OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T16:00:12Z","updated_at":"2019-05-29T16:00:12Z","author_association":"MEMBER","body":"What I mean is to have a python pipeline alone with the c++ one, given both of them are short enough, we want to make sure it is easy to customize compilation pipeline from python ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/496999649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497026145","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-497026145","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":497026145,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzAyNjE0NQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T17:09:15Z","updated_at":"2019-05-29T17:09:15Z","author_association":"MEMBER","body":"yeah, we can probably have a separate discussion about adding the parallel optimization pipeline. Currently, we can finish the migration and clean up `ir_pass.py` and `pass.h`. How do you guys think?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497026145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497031263","html_url":"https://github.com/apache/tvm/pull/3213#issuecomment-497031263","issue_url":"https://api.github.com/repos/apache/tvm/issues/3213","id":497031263,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzAzMTI2Mw==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T17:23:12Z","updated_at":"2019-05-29T17:23:12Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 , the change request already addressed, please kindly let me know if you have any other comments.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497031263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497031857","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497031857","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497031857,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzAzMTg1Nw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T17:24:47Z","updated_at":"2019-05-29T17:24:47Z","author_association":"MEMBER","body":"> > For the `q_conv2d`, we will add two more arguments.\r\n> > ```python\r\n> >   output_min=0, \r\n> >   output_max=0\r\n> > ```\r\n> > \r\n> > \r\n> > These will be used for restrict the output range, which could be calculated previously.\r\n> \r\n> I see what you are saying, but I am not sure if this is the right approach. In my opinion, it will be better to put it out of conv. The reason we have these 2 extra min/maxes is because of fused activation in TFLite. It seems better to keep it separate so that both MxNet and TFLite can share quantized_conv2d. In case of TFLite, when we see a fused conv, we can add one more clamp operator in the sequence of ops at the end.\r\n\r\nNo matter whether we have fused activation function, we always need output_min / output_max. Because we will get conv int32 result, but we will need uint8 result. So we must restrict int32 to uint8. If we don't have fused activation function, (When we have quantized model of TFLite, we don't have fused activation many cases), the output_min / output_max will be 0 / 255 to restrict int32 result. If we have relu6, output_min / output_max will be 0 / 6. So I think we are better put these two into conv argument. And we could avoid producing another clamp, just be calculated in conv2d requantize int32 -> uint8 process and it is nature.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497031857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497057012","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497057012","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497057012,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA1NzAxMg==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T18:32:03Z","updated_at":"2019-05-29T18:32:03Z","author_association":"CONTRIBUTOR","body":"> > > For the `q_conv2d`, we will add two more arguments.\r\n> > > ```python\r\n> > >   output_min=0, \r\n> > >   output_max=0\r\n> > > ```\r\n> > > \r\n> > > \r\n> > > These will be used for restrict the output range, which could be calculated previously.\r\n> > \r\n> > \r\n> > I see what you are saying, but I am not sure if this is the right approach. In my opinion, it will be better to put it out of conv. The reason we have these 2 extra min/maxes is because of fused activation in TFLite. It seems better to keep it separate so that both MxNet and TFLite can share quantized_conv2d. In case of TFLite, when we see a fused conv, we can add one more clamp operator in the sequence of ops at the end.\r\n> \r\n> No matter whether we have fused activation function, we always need output_min / output_max. Because we will get conv int32 result, but we will need uint8 result. So we must restrict int32 to uint8. If we don't have fused activation function, (When we have quantized model of TFLite, we don't have fused activation many cases), the output_min / output_max will be 0 / 255 to restrict int32 result. If we have relu6, output_min / output_max will be 0 / 6. So I think we are better put these two into conv argument. And we could avoid producing another clamp, just be calculated in conv2d requantize int32 -> uint8 process and it is nature.\r\n\r\nIn the case the activation is not fused, the values have to clamped to 0/255 or uint8 range, which is basically the out_dtype. So, we do not need any extra information for the quantized_conv2d for going back to uint8/int8 other than out_dtype. Correct? \r\n\r\nNow, If the activation is fused, I agree that we will have two clamps now. One inside the quantized_conv2d (0/255), and one  for the relu6 (0/6). I think this is fine. We can also write a Relay that replaces two back-to-back clamping with one clamp Relay operator.\r\n\r\nThe reason I am saying this is that TFLite chooses one way to handle things, which other frameworks might not. So, it is necessary to come up with right abstractions first. The performance can be then be achieved by writing Relay passes.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497057012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497074984","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497074984","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497074984,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA3NDk4NA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T19:21:39Z","updated_at":"2019-05-29T19:21:39Z","author_association":"MEMBER","body":"> > > > For the `q_conv2d`, we will add two more arguments.\r\n> > > > ```python\r\n> > > >   output_min=0, \r\n> > > >   output_max=0\r\n> > > > ```\r\n> > > > \r\n> > > > \r\n> > > > These will be used for restrict the output range, which could be calculated previously.\r\n> > > \r\n> > > \r\n> > > I see what you are saying, but I am not sure if this is the right approach. In my opinion, it will be better to put it out of conv. The reason we have these 2 extra min/maxes is because of fused activation in TFLite. It seems better to keep it separate so that both MxNet and TFLite can share quantized_conv2d. In case of TFLite, when we see a fused conv, we can add one more clamp operator in the sequence of ops at the end.\r\n> > \r\n> > \r\n> > No matter whether we have fused activation function, we always need output_min / output_max. Because we will get conv int32 result, but we will need uint8 result. So we must restrict int32 to uint8. If we don't have fused activation function, (When we have quantized model of TFLite, we don't have fused activation many cases), the output_min / output_max will be 0 / 255 to restrict int32 result. If we have relu6, output_min / output_max will be 0 / 6. So I think we are better put these two into conv argument. And we could avoid producing another clamp, just be calculated in conv2d requantize int32 -> uint8 process and it is nature.\r\n> \r\n> In the case the activation is not fused, the values have to clamped to 0/255 or uint8 range, which is basically the out_dtype. So, we do not need any extra information for the quantized_conv2d for going back to uint8/int8 other than out_dtype. Correct?\r\n> \r\n> Now, If the activation is fused, I agree that we will have two clamps now. One inside the quantized_conv2d (0/255), and one for the relu6 (0/6). I think this is fine. We can also write a Relay that replaces two back-to-back clamping with one clamp Relay operator.\r\n> \r\n> The reason I am saying this is that TFLite chooses one way to handle things, which other frameworks might not. So, it is necessary to come up with right abstractions first. The performance can be then be achieved by writing Relay passes.\r\n\r\nYes, I agree when we don't have activation, we don't need anything. However, Another thing we should consider: How to integrate with other libraries, such as QNNPACK. QNNPACK also need output min / output max too. https://github.com/pytorch/QNNPACK/blob/master/include/qnnpack.h#L62-L63\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497074984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497084412","html_url":"https://github.com/apache/tvm/issues/3245#issuecomment-497084412","issue_url":"https://api.github.com/repos/apache/tvm/issues/3245","id":497084412,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA4NDQxMg==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T19:50:54Z","updated_at":"2019-05-29T19:50:54Z","author_association":"MEMBER","body":"Good catch. Are you interested in sending a patch?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497084412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497084632","html_url":"https://github.com/apache/tvm/issues/3246#issuecomment-497084632","issue_url":"https://api.github.com/repos/apache/tvm/issues/3246","id":497084632,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA4NDYzMg==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T19:51:30Z","updated_at":"2019-05-29T19:53:57Z","author_association":"MEMBER","body":"This can be a custom weight, but we just use 0.0. \r\nThe candidates for `submodular_pick` are already picked from a large set by score.\r\nFor example,\r\n10000 candidates -> (sort by score)  128 candidates -> (sort by w * score + diversity) -> 64 candidates.\r\nSo it is reasonable to set w to 0.0","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497084632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497092451","html_url":"https://github.com/apache/tvm/issues/3245#issuecomment-497092451","issue_url":"https://api.github.com/repos/apache/tvm/issues/3245","id":497092451,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA5MjQ1MQ==","user":{"login":"eqy","id":2239616,"node_id":"MDQ6VXNlcjIyMzk2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/2239616?v=4","gravatar_id":"","url":"https://api.github.com/users/eqy","html_url":"https://github.com/eqy","followers_url":"https://api.github.com/users/eqy/followers","following_url":"https://api.github.com/users/eqy/following{/other_user}","gists_url":"https://api.github.com/users/eqy/gists{/gist_id}","starred_url":"https://api.github.com/users/eqy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eqy/subscriptions","organizations_url":"https://api.github.com/users/eqy/orgs","repos_url":"https://api.github.com/users/eqy/repos","events_url":"https://api.github.com/users/eqy/events{/privacy}","received_events_url":"https://api.github.com/users/eqy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T20:15:20Z","updated_at":"2019-05-29T20:15:20Z","author_association":"CONTRIBUTOR","body":"@merrymercy this problem should be at least partially covered by this heuristic right\r\nhttps://github.com/dmlc/tvm/blob/4767554c580f5aa0521727629e51f04f5315f025/python/tvm/autotvm/tuner/model_based_tuner.py#L238","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497092451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497133378","html_url":"https://github.com/apache/tvm/pull/3255#issuecomment-497133378","issue_url":"https://api.github.com/repos/apache/tvm/issues/3255","id":497133378,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzEzMzM3OA==","user":{"login":"hlu1","id":14827759,"node_id":"MDQ6VXNlcjE0ODI3NzU5","avatar_url":"https://avatars.githubusercontent.com/u/14827759?v=4","gravatar_id":"","url":"https://api.github.com/users/hlu1","html_url":"https://github.com/hlu1","followers_url":"https://api.github.com/users/hlu1/followers","following_url":"https://api.github.com/users/hlu1/following{/other_user}","gists_url":"https://api.github.com/users/hlu1/gists{/gist_id}","starred_url":"https://api.github.com/users/hlu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hlu1/subscriptions","organizations_url":"https://api.github.com/users/hlu1/orgs","repos_url":"https://api.github.com/users/hlu1/repos","events_url":"https://api.github.com/users/hlu1/events{/privacy}","received_events_url":"https://api.github.com/users/hlu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T22:34:56Z","updated_at":"2019-05-29T22:34:56Z","author_association":"CONTRIBUTOR","body":"@ajtulloch, could you review pls?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497133378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497146216","html_url":"https://github.com/apache/tvm/pull/2184#issuecomment-497146216","issue_url":"https://api.github.com/repos/apache/tvm/issues/2184","id":497146216,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE0NjIxNg==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T23:36:16Z","updated_at":"2019-05-29T23:36:16Z","author_association":"MEMBER","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497146216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497154275","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497154275","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497154275,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE1NDI3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T00:19:08Z","updated_at":"2019-05-30T00:19:19Z","author_association":"MEMBER","body":"Here are some points to discuss:\r\n\r\n- namespace for the tflite quantize style dialect\r\n- List of ops that might need tvm's compute declaration\r\n- set of possible passes that lower the rest into the core ops\r\n\r\nSome of the discussions involve fusion, and that is something where TVM might be able to help. For example, in the current symmetric scheme, clip,  relu6, and subsequent downcasting ops are automatically fused into the conv2d ops. While the conv2d op can simply just output int32(because followup ops will get fused).\r\n\r\nI agree with @anijain2305  that we could try to get something minimum that is working, then start thinking about possible rewriting rules to get to some useful patterns if we decide that manual intervention is necessary.\r\n\r\nIdeally, we should have a generic schedule template that works for any fused patterns, just as those in the current symmetric version, so we do not need to have all the different variants of fused conv2d ops\r\n\r\nalso cc @vinx13 @ZihengJiang \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497154275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497164483","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497164483","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497164483,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE2NDQ4Mw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T01:18:33Z","updated_at":"2019-05-30T01:43:34Z","author_association":"CONTRIBUTOR","body":"@jroesch has asked me to take over this PR so I will work on addressing feedback and fixing linting errors to get this to a mergeable state soon. The next step would be to add ADTs and matching to the text format so the entire prelude can be written in the text format (I think that should be a separate PR)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497164483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497167502","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497167502","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497167502,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE2NzUwMg==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T01:34:25Z","updated_at":"2019-05-30T01:36:12Z","author_association":"NONE","body":"I want to point out that the min and max values you mentioned are not related to the activation range in the original model.  They are saturation values.  In the case of mobilenet, for example, which has relu_6 use everywhere, I'm printing out the min and max activation values from the tflite mobilenet V2 below.  The model uses uint8 downscale between layers, and uses the min and max value to clamp/saturate the values to 0..255 for all layers in that model.  The thing it could be used for (but isn't here) is for more or fewer quantization bits or for signed int quantization ... but tflite is using all uint8 quantization for MobilenetV2.\r\n\r\nthe amin and amax values below are tflite output_activation_min, output_activation_max from their quantized reference ops for conv and dw_conv.\r\n\r\n(base) jay@jay-desktop:~/tensorflow/tensorflow/lite/dbg$ grep conv mod2.log\r\n `\r\n(base) jay@jay-desktop:~/tensorflow/tensorflow/lite/dbg$ grep conv mod2.log\r\n---------conv in_h=224, in_w=224,out_h=112,out_w=112,f_h=3,f_w=3,mpy=1992157658,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=112, in_w=112,out_h=112,out_w=112,f_h=3,f_w=3,mpy=1254985768,shft=-1,amin=0, amax=255\r\n---------conv in_h=112, in_w=112,out_h=112,out_w=112,f_h=1,f_w=1,mpy=2090511665,shft=-5,amin=0, amax=255\r\n-------dwconv in_h=112, in_w=112,out_h=56,out_w=56,f_h=3,f_w=3,mpy=1729896231,shft=-1,amin=0, amax=255\r\n---------conv in_h=56, in_w=56,out_h=56,out_w=56,f_h=1,f_w=1,mpy=2081950125,shft=-6,amin=0, amax=255\r\n-------dwconv in_h=56, in_w=56,out_h=56,out_w=56,f_h=3,f_w=3,mpy=2080045879,shft=-4,amin=0, amax=255\r\n---------conv in_h=56, in_w=56,out_h=56,out_w=56,f_h=1,f_w=1,mpy=1890535782,shft=-6,amin=0, amax=255\r\n-------dwconv in_h=56, in_w=56,out_h=28,out_w=28,f_h=3,f_w=3,mpy=1151606277,shft=-5,amin=0, amax=255\r\n---------conv in_h=28, in_w=28,out_h=28,out_w=28,f_h=1,f_w=1,mpy=2089579858,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=28, in_w=28,out_h=28,out_w=28,f_h=3,f_w=3,mpy=1410648286,shft=-4,amin=0, amax=255\r\n---------conv in_h=28, in_w=28,out_h=28,out_w=28,f_h=1,f_w=1,mpy=1767908551,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=28, in_w=28,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1850037283,shft=-6,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=1260482936,shft=-6,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1269068532,shft=-4,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=1456865727,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1464063813,shft=-4,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=1364297475,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1948805937,shft=-5,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=2136047634,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1671906928,shft=-5,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=1327474777,shft=-6,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=14,out_w=14,f_h=3,f_w=3,mpy=1330877207,shft=-5,amin=0, amax=255\r\n---------conv in_h=14, in_w=14,out_h=14,out_w=14,f_h=1,f_w=1,mpy=1497258311,shft=-7,amin=0, amax=255\r\n-------dwconv in_h=14, in_w=14,out_h=7,out_w=7,f_h=3,f_w=3,mpy=1076915935,shft=-6,amin=0, amax=255\r\n---------conv in_h=7, in_w=7,out_h=7,out_w=7,f_h=1,f_w=1,mpy=1124144746,shft=-6,amin=0, amax=255\r\n-------dwconv in_h=7, in_w=7,out_h=7,out_w=7,f_h=3,f_w=3,mpy=1083785823,shft=-2,amin=0, amax=255\r\n---------conv in_h=7, in_w=7,out_h=7,out_w=7,f_h=1,f_w=1,mpy=1240259613,shft=-5,amin=0, amax=255\r\n---------conv in_h=1, in_w=1,out_h=1,out_w=1,f_h=1,f_w=1,mpy=1553319078,shft=-10,amin=0, amax=255\r\n\r\n`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497167502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497167862","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497167862","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497167862,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE2Nzg2Mg==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T01:36:10Z","updated_at":"2019-05-30T01:36:10Z","author_association":"CONTRIBUTOR","body":"Pinging reviewers: @wweic @joshpoll @MarisaKirisame","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497167862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497171748","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497171748","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497171748,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE3MTc0OA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T01:57:06Z","updated_at":"2019-05-30T01:57:06Z","author_association":"NONE","body":"similarly, for the tflite quantized inception v3 model, all those output_activation_min, output_activation_max are 0 and 255\r\nI'll attach a zip file with the log.\r\n[inv3.zip](https://github.com/dmlc/tvm/files/3235141/inv3.zip)\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497171748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497176262","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497176262","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497176262,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE3NjI2Mg==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T02:20:22Z","updated_at":"2019-05-30T02:20:22Z","author_association":"NONE","body":"to explain a little further ... during training they determine the range of input values, and they determine the downscale multiplier that will shrink the observed range to 0..255 (for the uint8 quantization).  The fp downscale multiplier is coverted to integer mpy and right-shift constants, which are the mpy and shft values in my log.  At inference time, the downscaled accumulator (after applying the downscale) may be outside the uint8 quantization range, and so they clamp/saturate to that range.  In these current models, they are using uint8 quantization ... so the range is 0..255,  but it appears to me they are providing the min and max to support other numbers of bits in the quantization.  I see support for several 4 bit gpu implementations recently, so maybe this is to support something like that.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497176262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497181882","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497181882","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497181882,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE4MTg4Mg==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T02:50:24Z","updated_at":"2019-05-30T02:50:24Z","author_association":"CONTRIBUTOR","body":"@tmoreau89  could you help to review this patch?\r\n\r\nThanks\r\nHua","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497181882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497195716","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497195716","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497195716,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzE5NTcxNg==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T04:14:11Z","updated_at":"2019-05-30T04:14:18Z","author_association":"CONTRIBUTOR","body":"Thanks for the feedback. I also removed `test_prelude` because it is redundant, since `test_adt` tests the prelude functions, which would require loading the file","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497195716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497208993","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497208993","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497208993,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIwODk5Mw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T05:33:53Z","updated_at":"2019-05-30T05:33:53Z","author_association":"CONTRIBUTOR","body":"Fixing the previous test failure led me to realize that we have an issue with the parser flag: If we want to have the Prelude and other important Relay functionality written using the text format, should the parser be an optional flag? I changed the prelude to check whether the parser is enabled and default to the old manually written ASTs, but this does not seem like a particularly good practice, since it requires us to maintain two definitions, one of which is indeed a manually assembled AST. What do you all believe is a good approach moving forward? (addressed to the reviewers, also @jroesch and @tqchen)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497208993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497222461","html_url":"https://github.com/apache/tvm/pull/3255#issuecomment-497222461","issue_url":"https://api.github.com/repos/apache/tvm/issues/3255","id":497222461,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIyMjQ2MQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T06:38:45Z","updated_at":"2019-05-30T06:40:20Z","author_association":"MEMBER","body":"LGTM, would be good to get a review from @ajtulloch and then we can merge. Does this have any approximation or numerical stability issues? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497222461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497232401","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497232401","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497232401,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIzMjQwMQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T07:20:31Z","updated_at":"2019-05-31T07:01:50Z","author_association":"CONTRIBUTOR","body":"Some comments for @anijain2305 's [reply](https://github.com/dmlc/tvm/issues/2351#issuecomment-496998142) :)\r\n\r\n> > Hi @anijain2305 regarding the requantization, if the it is not going to put in conv op, the op may suppose to output FP32, otherwise the semantic is confusing. The requantization can convert FP32 to INT8. The multiplier/shift based reuantization approach introduced by TFLite is also adopted by Caffe2/QNNPACK.\r\n> \r\n> Makes sense. Does it make sense to add accumulator_dtype as one of the attributes of quantized_conv2d. This will be set to int32 for TFLite, Caffe2, QNNPACK. But, if some network needs accumulation in FP32, then it will support that as well.\r\n\r\nA network uses operators (or layers or anything we'd like to call it) regardless of the *accumulation format*. The format is part of a software system's mechanism. So, I guess we don't need a `accumulator_dtype` and the `out_dtype` is what we want. The discussion is about whether we put requantization inside the conv2d op.\r\n\r\n> > And, maybe we can put the quantization parameters in tensor, as the scale and zero point are describing the INT8 tensor data rather than the op. The op are supposed to read these parameters and get things done.\r\n> \r\n> Not sure about this. The good thing is the conv2d relay operator can be shared across FP32 and quantized tensor types. The bad thing is compute depends on the quantized tensor type now. This might require new Relay optimizations, preventing us to fully use the existing infrastructure.\r\n\r\nI was saying extending existing tensor rather than introduce new tensor type. I assume that this won't lead to new Relay opt :)\r\n\r\nEDIT: Btw, the *channel-wise* quantization parameter is likely to be included in TensorFlow/TFLite, also the TVM stack as a roadmap. In this way, it could be easier to manage a tensor described parameter. \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497232401/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497237872","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497237872","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497237872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIzNzg3Mg==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T07:42:18Z","updated_at":"2019-05-30T07:59:00Z","author_association":"CONTRIBUTOR","body":"Regarding @jnorwood 's comments on output min/max of conv2d.\r\n\r\nYour observations about the **values** of output min max are correct. But they are still activations. One thing I always try to deliver is that, the INT8 values in quantization are a representation of original FP32 values.\r\n\r\nWhen we talking about ReLU6 activations, it means that in FP32 format, the op outputs FP32 values in range [0, 6]. For INT8 quantization, INT8 data is an representation of FP32 value, which means, the output min/max (which is typically [0, 255] of INT8 type in pre-provided quantized MobileNet) are representing [0, 6] of FP32 type - the INT8 0/255 is actually FP32 0/6. Try the output scale (0.023528477177023888) with the activation min/max, we will get value range like [0, 5.999761581420898] (from output of the first conv of the pre-provided quantized MobileNet).\r\n\r\nConclusions can easily draw once we have this in mind :) ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497237872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497239673","html_url":"https://github.com/apache/tvm/pull/3258#issuecomment-497239673","issue_url":"https://api.github.com/repos/apache/tvm/issues/3258","id":497239673,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzIzOTY3Mw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T07:49:23Z","updated_at":"2019-05-30T07:49:23Z","author_association":"MEMBER","body":"Okay did two passes over the design, overall looks good to me and mostly makes sense from a mid-level of understanding. My main comments are to provide more high-level explanation about what you are doing, common design patterns, and how things fit together so new people can get up to speed by reading some of the code without needing to ask as many questions. It would be good to bake in some of your design insights, comment on tricky pieces, and explain optimizations if you can.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497239673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497241852","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-497241852","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":497241852,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzI0MTg1Mg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T07:57:53Z","updated_at":"2019-05-30T07:57:53Z","author_association":"MEMBER","body":"Yeah this is annoying, @zhreshold  @tqchen can we bump the ONNX version? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497241852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497243570","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497243570","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497243570,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzI0MzU3MA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T08:04:16Z","updated_at":"2019-05-30T08:04:16Z","author_association":"MEMBER","body":"We should conditionally support generating the parser, when we check in we should generate a copy, commit it, and mark the files as binaries in my opinion, it satisfies both design tensions. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497243570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497292320","html_url":"https://github.com/apache/tvm/pull/1694#issuecomment-497292320","issue_url":"https://api.github.com/repos/apache/tvm/issues/1694","id":497292320,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzI5MjMyMA==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T11:01:26Z","updated_at":"2019-05-30T11:01:26Z","author_association":"MEMBER","body":"There seem to be a concurrent effort at #3258, closing this PR for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497292320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497369521","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-497369521","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":497369521,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM2OTUyMQ==","user":{"login":"SWu","id":199065,"node_id":"MDQ6VXNlcjE5OTA2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/199065?v=4","gravatar_id":"","url":"https://api.github.com/users/SWu","html_url":"https://github.com/SWu","followers_url":"https://api.github.com/users/SWu/followers","following_url":"https://api.github.com/users/SWu/following{/other_user}","gists_url":"https://api.github.com/users/SWu/gists{/gist_id}","starred_url":"https://api.github.com/users/SWu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWu/subscriptions","organizations_url":"https://api.github.com/users/SWu/orgs","repos_url":"https://api.github.com/users/SWu/repos","events_url":"https://api.github.com/users/SWu/events{/privacy}","received_events_url":"https://api.github.com/users/SWu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T15:23:01Z","updated_at":"2019-05-30T15:23:01Z","author_association":"CONTRIBUTOR","body":"I'm interested in helping contribute gradient implementations, but I'm finding it a bit difficult to understand what orientation the original op arguments are in, and what role `collapse_sum_like` plays (its documentation, \"Return a scalar value array with the same shape and type as the input array.\" is identical to `broadcast_to_like`, and I'm not really understanding the mathematical operation it's performing).\r\n\r\nAs an example, by trial and error I arrived at the following for `nn.dense`:\r\n\r\n```\r\n@register_gradient(\"nn.dense\")\r\ndef dense_grad(orig, grad):\r\n    data, weight = orig.args\r\n    return [collapse_sum_like(transpose(transpose(weight) * grad), data),\r\n            collapse_sum_like(transpose(grad * transpose(data)), weight)]\r\n```\r\n\r\nI'm verifying this by checking gradient values numerically from a toy tensorflow model with a dense layer that I converted. I would not have expected to need the outer `transpose` here, but without it it seems like `collapse_sum_like` was broadcasting a sum on the wrong axis.\r\n\r\nWould it be possible to provide a more detailed tutorial about how to translate a known mathematical form of a gradient to a relay implementation, to make it easier for the community to contribute some of these implementations?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497369521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497389536","html_url":"https://github.com/apache/tvm/pull/3260#issuecomment-497389536","issue_url":"https://api.github.com/repos/apache/tvm/issues/3260","id":497389536,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM4OTUzNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:19:46Z","updated_at":"2019-05-30T16:19:46Z","author_association":"MEMBER","body":"Thanks for the contribution, please request reviews from Reviewers","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497389536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497389857","html_url":"https://github.com/apache/tvm/pull/3259#issuecomment-497389857","issue_url":"https://api.github.com/repos/apache/tvm/issues/3259","id":497389857,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM4OTg1Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:20:41Z","updated_at":"2019-05-30T16:20:41Z","author_association":"MEMBER","body":"Given that this is a quite significant feature, please also send an RFC","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497389857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497392862","html_url":"https://github.com/apache/tvm/pull/3227#issuecomment-497392862","issue_url":"https://api.github.com/repos/apache/tvm/issues/3227","id":497392862,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM5Mjg2Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:29:13Z","updated_at":"2019-05-30T16:29:13Z","author_association":"MEMBER","body":"@weberlo please fix the CI error and make sure CI is green. @liangfu please help to do another round of review. also cc @grwlf @Mutinifni @MarisaKirisame @kazum @vinx13. Please help review if you can. \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497392862/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497393525","html_url":"https://github.com/apache/tvm/pull/3156#issuecomment-497393525","issue_url":"https://api.github.com/repos/apache/tvm/issues/3156","id":497393525,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM5MzUyNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:31:02Z","updated_at":"2019-05-30T16:31:02Z","author_association":"MEMBER","body":"@zhiics @wweic please do another round of review and https://docs.tvm.ai/contribute/code_review.html#approve-and-request-changes-explicitly","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497393525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497394671","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-497394671","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":497394671,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM5NDY3MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:34:19Z","updated_at":"2019-05-30T16:34:36Z","author_association":"MEMBER","body":"Ideally, we should make the code compatible with both versions. Please try to do that and let us merge it in.  Please send a PR to https://github.com/dmlc/tvm/blob/master/docker/install/ubuntu_install_onnx.sh#L24 to ping the onnx to a specific version. then we can try to upgrade the image","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497394671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497396999","html_url":"https://github.com/apache/tvm/pull/3260#issuecomment-497396999","issue_url":"https://api.github.com/repos/apache/tvm/issues/3260","id":497396999,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM5Njk5OQ==","user":{"login":"cbalint13","id":3974360,"node_id":"MDQ6VXNlcjM5NzQzNjA=","avatar_url":"https://avatars.githubusercontent.com/u/3974360?v=4","gravatar_id":"","url":"https://api.github.com/users/cbalint13","html_url":"https://github.com/cbalint13","followers_url":"https://api.github.com/users/cbalint13/followers","following_url":"https://api.github.com/users/cbalint13/following{/other_user}","gists_url":"https://api.github.com/users/cbalint13/gists{/gist_id}","starred_url":"https://api.github.com/users/cbalint13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbalint13/subscriptions","organizations_url":"https://api.github.com/users/cbalint13/orgs","repos_url":"https://api.github.com/users/cbalint13/repos","events_url":"https://api.github.com/users/cbalint13/events{/privacy}","received_events_url":"https://api.github.com/users/cbalint13/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T16:41:14Z","updated_at":"2019-05-30T16:41:14Z","author_association":"CONTRIBUTOR","body":"cc @jroesch @MarisaKirisame @wweic @icemelon9 \r\n  \r\n  Please help with review.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497396999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497405098","html_url":"https://github.com/apache/tvm/pull/3255#issuecomment-497405098","issue_url":"https://api.github.com/repos/apache/tvm/issues/3255","id":497405098,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQwNTA5OA==","user":{"login":"pavpanchekha","id":30707,"node_id":"MDQ6VXNlcjMwNzA3","avatar_url":"https://avatars.githubusercontent.com/u/30707?v=4","gravatar_id":"","url":"https://api.github.com/users/pavpanchekha","html_url":"https://github.com/pavpanchekha","followers_url":"https://api.github.com/users/pavpanchekha/followers","following_url":"https://api.github.com/users/pavpanchekha/following{/other_user}","gists_url":"https://api.github.com/users/pavpanchekha/gists{/gist_id}","starred_url":"https://api.github.com/users/pavpanchekha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavpanchekha/subscriptions","organizations_url":"https://api.github.com/users/pavpanchekha/orgs","repos_url":"https://api.github.com/users/pavpanchekha/repos","events_url":"https://api.github.com/users/pavpanchekha/events{/privacy}","received_events_url":"https://api.github.com/users/pavpanchekha/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T17:05:14Z","updated_at":"2019-05-30T17:07:48Z","author_association":"NONE","body":"@jroesch Asked me to take a look accuracy-wise—it's not a review, just a quick take.\r\n\r\nThe Eigen tanh is implemented using rational approximation on [-9, 9] and is set to ±1 outside that range. (See comment in [the source](https://github.com/eigenteam/eigen-git-mirror/blob/80f488a7bc9b7c64c9d0c0e8fb301fd905ad1b95/Eigen/src/Core/MathFunctionsImpl.h#L26) though note that the implementation is actually done by clamping.) In GLIBC, which I assume is the currently-used implementation, `atanh` is computed via `log1p` (See comment in [the source in this mirror](https://github.com/bminor/glibc/blob/master/sysdeps/ieee754/dbl-64/e_atanh.c#L20)).\r\n\r\nLet's start with single precision. Generally speaking, I expect the Eigen implementation to be faster (evaluating two polynomials, plus one division, is going to be much faster than a logarithm!) and I assume the polynomials are well-chosen so that the accuracy is going to be acceptable (the comment says that it's within a few ULPs... that they don't say how many doesn't inspire confidence, but they're using a 13/6 approximation which seems good enough). Plus, I assume you're using this implementation for an activation function, which which exact accuracy is likely unimportant. And the rational approximation is going to be monotonic, which is nice.\r\n\r\nNow let's do double precision. Here, the Eigen implementation will only be as accurate as a single-precision computation, because it's missing terms in the polynomial. And, while clamping at ±9 is appropriate in single precision, in double precision you have to clamp at 19 (and so need a rational approximation accurate that far out). I don't know what exactly your users think about accuracy, but I suspect they wouldn't be happy with double-precision being no more accurate than single precision.\r\n\r\nThe safe but practical thing, I think, is using the Eigen `atanh` for single precision but not double precision. If you wanted to, you could derive an analogous polynomial and get a double-precision version that way, or you could keep using the GLIBC implementation in that case and hope the higher memory bandwidth of double precision masks and additional CPU time computing `atanh`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497405098/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497410209","html_url":"https://github.com/apache/tvm/pull/3238#issuecomment-497410209","issue_url":"https://api.github.com/repos/apache/tvm/issues/3238","id":497410209,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQxMDIwOQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T17:20:30Z","updated_at":"2019-05-30T17:20:30Z","author_association":"CONTRIBUTOR","body":"@tqchen @jroesch @slyubomirsky can you guys give it a round of review?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497410209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497410265","html_url":"https://github.com/apache/tvm/pull/3033#issuecomment-497410265","issue_url":"https://api.github.com/repos/apache/tvm/issues/3033","id":497410265,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQxMDI2NQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T17:20:39Z","updated_at":"2019-05-30T17:20:39Z","author_association":"CONTRIBUTOR","body":"@tqchen @jroesch @slyubomirsky can you guys give it a round of review?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497410265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497418179","html_url":"https://github.com/apache/tvm/issues/3240#issuecomment-497418179","issue_url":"https://api.github.com/repos/apache/tvm/issues/3240","id":497418179,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQxODE3OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T17:43:30Z","updated_at":"2019-05-30T17:43:30Z","author_association":"MEMBER","body":"@kevinthesun please followup to propose a fix for this.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497418179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497426202","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497426202","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497426202,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQyNjIwMg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T18:05:54Z","updated_at":"2019-05-30T18:05:54Z","author_association":"CONTRIBUTOR","body":"Thanks for fixing Pynq support for 2.3 image. If we do release 2.3 support, we'll need to update the documentation. Can you also update the doc in the PR? You can find it under `tvm/docs/vta/install.md`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497426202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497447367","html_url":"https://github.com/apache/tvm/pull/3211#issuecomment-497447367","issue_url":"https://api.github.com/repos/apache/tvm/issues/3211","id":497447367,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ0NzM2Nw==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T19:05:06Z","updated_at":"2019-05-30T19:05:06Z","author_association":"MEMBER","body":"@srkreddy1238  all test cases are added, pls take another look","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497447367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497472125","html_url":"https://github.com/apache/tvm/pull/3156#issuecomment-497472125","issue_url":"https://api.github.com/repos/apache/tvm/issues/3156","id":497472125,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ3MjEyNQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T20:22:12Z","updated_at":"2019-05-30T20:22:12Z","author_association":"MEMBER","body":"Sorry for missing this. I will do another review tonight.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497472125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497481986","html_url":"https://github.com/apache/tvm/pull/3256#issuecomment-497481986","issue_url":"https://api.github.com/repos/apache/tvm/issues/3256","id":497481986,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ4MTk4Ng==","user":{"login":"Laurawly","id":3700467,"node_id":"MDQ6VXNlcjM3MDA0Njc=","avatar_url":"https://avatars.githubusercontent.com/u/3700467?v=4","gravatar_id":"","url":"https://api.github.com/users/Laurawly","html_url":"https://github.com/Laurawly","followers_url":"https://api.github.com/users/Laurawly/followers","following_url":"https://api.github.com/users/Laurawly/following{/other_user}","gists_url":"https://api.github.com/users/Laurawly/gists{/gist_id}","starred_url":"https://api.github.com/users/Laurawly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Laurawly/subscriptions","organizations_url":"https://api.github.com/users/Laurawly/orgs","repos_url":"https://api.github.com/users/Laurawly/repos","events_url":"https://api.github.com/users/Laurawly/events{/privacy}","received_events_url":"https://api.github.com/users/Laurawly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T20:52:40Z","updated_at":"2019-05-30T20:52:40Z","author_association":"CONTRIBUTOR","body":"Have you compared you current sort implementation with existing one? Is there any performance regression for large workloads like (1, 8000)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497481986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497486741","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497486741","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497486741,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ4Njc0MQ==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T21:08:14Z","updated_at":"2019-05-30T21:08:14Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 ,  the content of vta/install.md already reflect pynq 2.3, and a former PR  https://github.com/dmlc/tvm/pull/1945 did such change, please kindly let me know if you need any other change.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497486741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497498489","html_url":"https://github.com/apache/tvm/issues/3245#issuecomment-497498489","issue_url":"https://api.github.com/repos/apache/tvm/issues/3245","id":497498489,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ5ODQ4OQ==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T21:49:42Z","updated_at":"2019-05-30T21:49:42Z","author_association":"MEMBER","body":"But it is still a bug in `find_maximums`..","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497498489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497515793","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497515793","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497515793,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUxNTc5Mw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T23:02:50Z","updated_at":"2019-05-30T23:05:36Z","author_association":"CONTRIBUTOR","body":"I agree that there should be a pre-generated parser available for users who do not intend to modify the grammar or parser. It would be good not to have to introduce ANTLR as a mandatory dependency for users who want to use Relay's text format. Does everyone agree that we should have a pre-generated parser committed and marked as a binary?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497515793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497519109","html_url":"https://github.com/apache/tvm/pull/3255#issuecomment-497519109","issue_url":"https://api.github.com/repos/apache/tvm/issues/3255","id":497519109,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUxOTEwOQ==","user":{"login":"hlu1","id":14827759,"node_id":"MDQ6VXNlcjE0ODI3NzU5","avatar_url":"https://avatars.githubusercontent.com/u/14827759?v=4","gravatar_id":"","url":"https://api.github.com/users/hlu1","html_url":"https://github.com/hlu1","followers_url":"https://api.github.com/users/hlu1/followers","following_url":"https://api.github.com/users/hlu1/following{/other_user}","gists_url":"https://api.github.com/users/hlu1/gists{/gist_id}","starred_url":"https://api.github.com/users/hlu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hlu1/subscriptions","organizations_url":"https://api.github.com/users/hlu1/orgs","repos_url":"https://api.github.com/users/hlu1/repos","events_url":"https://api.github.com/users/hlu1/events{/privacy}","received_events_url":"https://api.github.com/users/hlu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T23:17:40Z","updated_at":"2019-05-30T23:17:40Z","author_association":"CONTRIBUTOR","body":"@pavpanchekha, thanks for the comment. It makes a lot of sense.\r\nI added the logic to only invoke the Eigen fast_tanh_float for fp32 and fallback to default GLIBC `tanh` implementation for all other datatypes. Double precision test for `tanh` is also added.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497519109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497521737","html_url":"https://github.com/apache/tvm/pull/3203#issuecomment-497521737","issue_url":"https://api.github.com/repos/apache/tvm/issues/3203","id":497521737,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUyMTczNw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T23:29:43Z","updated_at":"2019-05-30T23:29:43Z","author_association":"CONTRIBUTOR","body":"Pinging @MarisaKirisame and @icemelon9 for final review","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497521737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497523943","html_url":"https://github.com/apache/tvm/pull/3233#issuecomment-497523943","issue_url":"https://api.github.com/repos/apache/tvm/issues/3233","id":497523943,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUyMzk0Mw==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T23:40:54Z","updated_at":"2019-05-31T00:29:24Z","author_association":"CONTRIBUTOR","body":"@vinx13 I may not get the point. Does it matter to merge those two i32 cast? The main residual block still will output 8bit (in front of the `stop_fusion`). Will it influent the accuracy or just performance?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497523943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497528304","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497528304","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497528304,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUyODMwNA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T00:04:47Z","updated_at":"2019-05-31T00:05:19Z","author_association":"CONTRIBUTOR","body":"I would suggest to design the infrastructure that supports both symmetric/asymmetric quantization. We can certainly start with symmetric to flush the flow, while keeping in mind that we can share as much infrastructure as possible between them.\r\n\r\n> * namespace for the tflite quantize style dialect\r\n\r\nI think this is required for both asymmetric and symmetric quantization. These ops will be rewritten to low-level instructions by a Relay pass. How about using `relay.op._quantization` as the namespace? So, the operations can be `relay.op._quantization.conv2d` or `relay.op._quantization.quantize`.\r\n\r\n> * List of ops that might need tvm's compute declaration\r\n\r\nI am not sure yet. The only unknown to me are the special rounding operations that are used in converting the Floating point to Integer multiplication in scaling the quantized conv matrix. But, they might already be covered in current low-level ops.\r\n\r\n> * set of possible passes that lower the rest into the core ops\r\n\r\nI was hoping to re-use the FForwardRewrite infrastructure to lower the ops. Do you anticipate more passes here?\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497528304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497535071","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497535071","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497535071,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUzNTA3MQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T00:44:57Z","updated_at":"2019-05-31T00:44:57Z","author_association":"CONTRIBUTOR","body":"I've now added the parser to the repo so users can always run the parser, even if they don't have ANTLR enabled in their build. It will be easy to revert that commit if this choice is objectionable","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497535071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497535524","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497535524","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497535524,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUzNTUyNA==","user":{"login":"wweic","id":594848,"node_id":"MDQ6VXNlcjU5NDg0OA==","avatar_url":"https://avatars.githubusercontent.com/u/594848?v=4","gravatar_id":"","url":"https://api.github.com/users/wweic","html_url":"https://github.com/wweic","followers_url":"https://api.github.com/users/wweic/followers","following_url":"https://api.github.com/users/wweic/following{/other_user}","gists_url":"https://api.github.com/users/wweic/gists{/gist_id}","starred_url":"https://api.github.com/users/wweic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wweic/subscriptions","organizations_url":"https://api.github.com/users/wweic/orgs","repos_url":"https://api.github.com/users/wweic/repos","events_url":"https://api.github.com/users/wweic/events{/privacy}","received_events_url":"https://api.github.com/users/wweic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T00:47:46Z","updated_at":"2019-05-31T00:47:46Z","author_association":"CONTRIBUTOR","body":"I think having a pre-generated parser is a good idea, it will also enable running text format unit test for every tvm user without ANTLR installed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497535524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497539081","html_url":"https://github.com/apache/tvm/issues/3246#issuecomment-497539081","issue_url":"https://api.github.com/repos/apache/tvm/issues/3246","id":497539081,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUzOTA4MQ==","user":{"login":"deadlywing","id":25818621,"node_id":"MDQ6VXNlcjI1ODE4NjIx","avatar_url":"https://avatars.githubusercontent.com/u/25818621?v=4","gravatar_id":"","url":"https://api.github.com/users/deadlywing","html_url":"https://github.com/deadlywing","followers_url":"https://api.github.com/users/deadlywing/followers","following_url":"https://api.github.com/users/deadlywing/following{/other_user}","gists_url":"https://api.github.com/users/deadlywing/gists{/gist_id}","starred_url":"https://api.github.com/users/deadlywing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deadlywing/subscriptions","organizations_url":"https://api.github.com/users/deadlywing/orgs","repos_url":"https://api.github.com/users/deadlywing/repos","events_url":"https://api.github.com/users/deadlywing/events{/privacy}","received_events_url":"https://api.github.com/users/deadlywing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T01:09:09Z","updated_at":"2019-05-31T01:09:09Z","author_association":"NONE","body":"I see, Thanks a lot!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497539081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497539375","html_url":"https://github.com/apache/tvm/pull/3043#issuecomment-497539375","issue_url":"https://api.github.com/repos/apache/tvm/issues/3043","id":497539375,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUzOTM3NQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T01:11:01Z","updated_at":"2019-05-31T01:11:01Z","author_association":"CONTRIBUTOR","body":"Would appreciate input from anyone knowledgeable whether the generated parser files _should_ have the Apache headers on them (we'd need to script for them to be appended during the build if so)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497539375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497542019","html_url":"https://github.com/apache/tvm/pull/3238#issuecomment-497542019","issue_url":"https://api.github.com/repos/apache/tvm/issues/3238","id":497542019,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU0MjAxOQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T01:27:34Z","updated_at":"2019-05-31T01:27:34Z","author_association":"CONTRIBUTOR","body":"At a high level, the implementation in this PR seems very reasonably written. I think it would be good to have unit tests, many tiny programs that each exhibit the specific features. Checking for graphs, recursion, etc. are good as tricky cases (also, should global var recursion be checked too? Many prelude functions are recursive).\r\n\r\nI think there should be discussion about the concern @vinx13 raised in his comment, as to whether there should be more high-level features and what those features should be. (I don't think you should get rid of per-AST node checks, as they can be useful for some passes, but it's worth asking what other features could be good to have.)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497542019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497543111","html_url":"https://github.com/apache/tvm/pull/3033#issuecomment-497543111","issue_url":"https://api.github.com/repos/apache/tvm/issues/3033","id":497543111,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU0MzExMQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T01:33:44Z","updated_at":"2019-05-31T01:33:44Z","author_association":"CONTRIBUTOR","body":"I think it would be good to include some explanation as to the use of the creation time mechanism and why it's important for termination checking, as that was all very difficult for me to understand. More varied test cases (given how complicated the feature is) would be good too.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497543111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497546658","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497546658","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497546658,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU0NjY1OA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T01:54:48Z","updated_at":"2019-05-31T01:54:48Z","author_association":"NONE","body":">  We can certainly start with symmetric to flush the flow, while keeping in mind that we can share as much infrastructure as possible between them.\r\n\r\nAll the tflite quantized models I've tested use the asymmetric uint8 quantization.  If you are planning to use those as examples, it will be hard to debug if you throw in the change to symmetric. \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497546658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497549839","html_url":"https://github.com/apache/tvm/pull/3260#issuecomment-497549839","issue_url":"https://api.github.com/repos/apache/tvm/issues/3260","id":497549839,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU0OTgzOQ==","user":{"login":"vinx13","id":7195739,"node_id":"MDQ6VXNlcjcxOTU3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/7195739?v=4","gravatar_id":"","url":"https://api.github.com/users/vinx13","html_url":"https://github.com/vinx13","followers_url":"https://api.github.com/users/vinx13/followers","following_url":"https://api.github.com/users/vinx13/following{/other_user}","gists_url":"https://api.github.com/users/vinx13/gists{/gist_id}","starred_url":"https://api.github.com/users/vinx13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinx13/subscriptions","organizations_url":"https://api.github.com/users/vinx13/orgs","repos_url":"https://api.github.com/users/vinx13/repos","events_url":"https://api.github.com/users/vinx13/events{/privacy}","received_events_url":"https://api.github.com/users/vinx13/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T02:14:30Z","updated_at":"2019-05-31T02:14:30Z","author_association":"MEMBER","body":"Thanks @cbalint13 @wweic @jroesch @anijain2305  this is merged ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497549839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497551458","html_url":"https://github.com/apache/tvm/pull/3233#issuecomment-497551458","issue_url":"https://api.github.com/repos/apache/tvm/issues/3233","id":497551458,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU1MTQ1OA==","user":{"login":"vinx13","id":7195739,"node_id":"MDQ6VXNlcjcxOTU3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/7195739?v=4","gravatar_id":"","url":"https://api.github.com/users/vinx13","html_url":"https://github.com/vinx13","followers_url":"https://api.github.com/users/vinx13/followers","following_url":"https://api.github.com/users/vinx13/following{/other_user}","gists_url":"https://api.github.com/users/vinx13/gists{/gist_id}","starred_url":"https://api.github.com/users/vinx13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinx13/subscriptions","organizations_url":"https://api.github.com/users/vinx13/orgs","repos_url":"https://api.github.com/users/vinx13/repos","events_url":"https://api.github.com/users/vinx13/events{/privacy}","received_events_url":"https://api.github.com/users/vinx13/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T02:23:36Z","updated_at":"2019-05-31T02:23:36Z","author_association":"MEMBER","body":"@ZihengJiang It will impact the performance. Although Stop_fusion can make sure that conv2d + fused ops produce int8 result, if the int32 casts are merged, it will be put into a separate sub function ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497551458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497552720","html_url":"https://github.com/apache/tvm/issues/3265#issuecomment-497552720","issue_url":"https://api.github.com/repos/apache/tvm/issues/3265","id":497552720,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU1MjcyMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T02:30:48Z","updated_at":"2019-05-31T02:30:48Z","author_association":"MEMBER","body":"Thanks for reporting the problem, please open a new thread in  https://discuss.tvm.ai/ Likely this was due to python typing dependency. try to install python3.6","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497552720/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497553317","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497553317","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497553317,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU1MzMxNw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T02:33:52Z","updated_at":"2019-05-31T02:33:52Z","author_association":"CONTRIBUTOR","body":"Ah good point, what I meant was that the current version of VTA is at 2.4. I believe that there isn't a difference between these two versions in terms of library paths. Would you mind double checking that it works on 2.4, and update the doc accordingly since this is the image that's available at the moment?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497553317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497554998","html_url":"https://github.com/apache/tvm/pull/3238#issuecomment-497554998","issue_url":"https://api.github.com/repos/apache/tvm/issues/3238","id":497554998,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU1NDk5OA==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T02:44:04Z","updated_at":"2019-05-31T02:44:04Z","author_association":"CONTRIBUTOR","body":"@slyubomirsky all feature is tested (graph one is tested in test_anf/test_gnf).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497554998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497567990","html_url":"https://github.com/apache/tvm/issues/3266#issuecomment-497567990","issue_url":"https://api.github.com/repos/apache/tvm/issues/3266","id":497567990,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU2Nzk5MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T04:08:53Z","updated_at":"2019-05-31T04:08:53Z","author_association":"MEMBER","body":"Please use https://discuss.tvm.ai/ for general usage discussions","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497567990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497568370","html_url":"https://github.com/apache/tvm/pull/3263#issuecomment-497568370","issue_url":"https://api.github.com/repos/apache/tvm/issues/3263","id":497568370,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU2ODM3MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T04:11:41Z","updated_at":"2019-05-31T04:11:41Z","author_association":"MEMBER","body":"Thanks, @hlu1 , this is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497568370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497570824","html_url":"https://github.com/apache/tvm/issues/3246#issuecomment-497570824","issue_url":"https://api.github.com/repos/apache/tvm/issues/3246","id":497570824,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU3MDgyNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T04:27:39Z","updated_at":"2019-05-31T04:27:39Z","author_association":"MEMBER","body":"Thanks for great discussions, @deadlywing , for other followup discussions, you are more than welcomed to use  https://discuss.tvm.ai/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497570824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497587967","html_url":"https://github.com/apache/tvm/pull/3267#issuecomment-497587967","issue_url":"https://api.github.com/repos/apache/tvm/issues/3267","id":497587967,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU4Nzk2Nw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T06:07:37Z","updated_at":"2019-05-31T06:07:37Z","author_association":"CONTRIBUTOR","body":"@jroesch @zhiics @yzhliu ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497587967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497588137","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497588137","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497588137,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU4ODEzNw==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T06:08:28Z","updated_at":"2019-05-31T06:08:28Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 , thanks for the clarify, this patch not target for pynq 2.4 and just 2.3 issue fixed, about 2.4 support, how about we use different PR to address? I can work for this 2.4 support issue then use separate PR for doc and any other necessary fix, please kindly let me know how you think. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497588137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497592360","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-497592360","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":497592360,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzU5MjM2MA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T06:28:59Z","updated_at":"2019-05-31T06:28:59Z","author_association":"MEMBER","body":"@tqchen Now all passes are moved to `Optimize` and it is `Module` to `Module`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497592360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497624136","html_url":"https://github.com/apache/tvm/pull/3267#issuecomment-497624136","issue_url":"https://api.github.com/repos/apache/tvm/issues/3267","id":497624136,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzYyNDEzNg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T08:27:16Z","updated_at":"2019-05-31T08:27:16Z","author_association":"MEMBER","body":"Great catch, probably due to the type annotation field changing after the hashing code was written by me. LGTM.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497624136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497639689","html_url":"https://github.com/apache/tvm/pull/3094#issuecomment-497639689","issue_url":"https://api.github.com/repos/apache/tvm/issues/3094","id":497639689,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzYzOTY4OQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T09:17:39Z","updated_at":"2019-05-31T09:17:39Z","author_association":"MEMBER","body":"> We need to debate a bit about the API. given that numpy's size is ndarray.size, we may not want to directly use `relay.size` as the operator name. If it is a contrib op, consider something like `relay.contrib.array_size`\r\n\r\nI think we should name `tensor_size` given we only talk about Tensors in Relay and not arrays.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497639689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497640407","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-497640407","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":497640407,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzY0MDQwNw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T09:19:48Z","updated_at":"2019-05-31T09:20:59Z","author_association":"MEMBER","body":"@altanh could you maybe further improve upon the docs when you open your PR and try to address some of @SWu's comments.\r\n\r\nAltan has revived the work in the past few weeks and we have been working on a library for using Relay for training, he will hopefully follow up on this thread with more details. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497640407/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497648135","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497648135","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497648135,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzY0ODEzNQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T09:44:01Z","updated_at":"2019-05-31T09:44:01Z","author_association":"CONTRIBUTOR","body":"> > We can certainly start with symmetric to flush the flow, while keeping in mind that we can share as much infrastructure as possible between them.\r\n> \r\n> All the tflite quantized models I've tested use the asymmetric uint8 quantization. If you are planning to use those as examples, it will be hard to debug if you throw in the change to symmetric.\r\n\r\nTensorFlow quantization-aware training supports both asymmetric/symmetric. We are seeing asymmetric models because it is the default. If we'd like to start from symmetric approach, set the [symmetric](https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/contrib/quantize/python/quantize_graph.py#L149) and go on. Which, requires extra effort I think...","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497648135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497783018","html_url":"https://github.com/apache/tvm/pull/3268#issuecomment-497783018","issue_url":"https://api.github.com/repos/apache/tvm/issues/3268","id":497783018,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzc4MzAxOA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T16:54:00Z","updated_at":"2019-05-31T16:54:00Z","author_association":"MEMBER","body":"cc @jroesch @wweic the CI problem could relate to limitations in VM","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497783018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497787607","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-497787607","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":497787607,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzc4NzYwNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T17:08:02Z","updated_at":"2019-05-31T17:08:22Z","author_association":"MEMBER","body":"I can merge this in as it is clearly an improvement over what we had before. However, I am still not happy with the Optimize. Here is a mock example of an \"ideal code\" of optimize:\r\n\r\n```python\r\n\r\n# mostly device invariant optimizations\r\nopt = transform.Sequential([\r\n    transform.FoldConstant(),\r\n    transform.SimplifyInference(),\r\n    transform.EnableIf(lambda ctx: len(ctx.targets) == 1, transform.AlterLayout()),\r\n ])\r\n\r\n# target specific optimizations\r\nlower = transform.Sequential([\r\n       transform.DeviceAnnotation(), # only enables for multiple target\r\n       transform.FuseOps()\r\n    ])\r\n\r\nwith transform.PassContext(target=target_device_map):\r\n     mod = optimzie(mod)\r\n     mod = lower(mod)\r\n```\r\n\r\nThis is only a quick alternative that pops out from my head. @zhiics feel free to the critic. But we should really move to minimize the code of this lowering process.\r\n\r\nAlso cc @merrymercy @vinx13 @yzhliu @jroesch for more thoughts, perhaps we could use another RFC if necessary :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497787607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497797554","html_url":"https://github.com/apache/tvm/issues/3265#issuecomment-497797554","issue_url":"https://api.github.com/repos/apache/tvm/issues/3265","id":497797554,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzc5NzU1NA==","user":{"login":"alannnna","id":3324520,"node_id":"MDQ6VXNlcjMzMjQ1MjA=","avatar_url":"https://avatars.githubusercontent.com/u/3324520?v=4","gravatar_id":"","url":"https://api.github.com/users/alannnna","html_url":"https://github.com/alannnna","followers_url":"https://api.github.com/users/alannnna/followers","following_url":"https://api.github.com/users/alannnna/following{/other_user}","gists_url":"https://api.github.com/users/alannnna/gists{/gist_id}","starred_url":"https://api.github.com/users/alannnna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alannnna/subscriptions","organizations_url":"https://api.github.com/users/alannnna/orgs","repos_url":"https://api.github.com/users/alannnna/repos","events_url":"https://api.github.com/users/alannnna/events{/privacy}","received_events_url":"https://api.github.com/users/alannnna/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T17:37:22Z","updated_at":"2019-05-31T17:37:22Z","author_association":"NONE","body":"Python 3.6 fixed it, so I won't open a new thread this time. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497797554/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497800075","html_url":"https://github.com/apache/tvm/pull/3094#issuecomment-497800075","issue_url":"https://api.github.com/repos/apache/tvm/issues/3094","id":497800075,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgwMDA3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T17:45:13Z","updated_at":"2019-05-31T17:45:13Z","author_association":"MEMBER","body":"@jroesch the naming convention is a bit debatable, given numpy use ndarray and we also use NDArray as our storage type, my guess is that array_size is fine if we want to be relatively consistent with numpy","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497800075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497813125","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497813125","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497813125,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgxMzEyNQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T18:24:22Z","updated_at":"2019-05-31T18:24:22Z","author_association":"CONTRIBUTOR","body":"@huajsj since 2.4 is now the version that can be downloaded from the pynq.io website I believe it would be best to support that now. I believe that if you flash a new SD card, you should be able to get your branch to build - therefore if you could just verify that it works, and update the documentation, we can keep this PR as is.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497813125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497813230","html_url":"https://github.com/apache/tvm/pull/3257#issuecomment-497813230","issue_url":"https://api.github.com/repos/apache/tvm/issues/3257","id":497813230,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgxMzIzMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T18:24:37Z","updated_at":"2019-05-31T18:24:37Z","author_association":"CONTRIBUTOR","body":"in other words, no need for a new PR","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497813230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497827326","html_url":"https://github.com/apache/tvm/pull/3251#issuecomment-497827326","issue_url":"https://api.github.com/repos/apache/tvm/issues/3251","id":497827326,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgyNzMyNg==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:07:58Z","updated_at":"2019-05-31T19:07:58Z","author_association":"MEMBER","body":"> I can merge this in as it is clearly an improvement over what we had before. However, I am still not happy with the Optimize. Here is a mock example of an \"ideal code\" of optimize:\r\n>This is only a quick alternative that pops out from my head. @zhiics feel free to the critic. But we should really move to minimize the code of this lowering process.\r\n\r\nSorry. I totally missed this. I totally agree with you that it makes sense to separate target dependent and independent opts. Actually, I have been thinking of this as well. We can probably have another RFC for it. But let us keep this code change minimum for now.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497827326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497828163","html_url":"https://github.com/apache/tvm/pull/3054#issuecomment-497828163","issue_url":"https://api.github.com/repos/apache/tvm/issues/3054","id":497828163,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgyODE2Mw==","user":{"login":"baowenlei","id":40643946,"node_id":"MDQ6VXNlcjQwNjQzOTQ2","avatar_url":"https://avatars.githubusercontent.com/u/40643946?v=4","gravatar_id":"","url":"https://api.github.com/users/baowenlei","html_url":"https://github.com/baowenlei","followers_url":"https://api.github.com/users/baowenlei/followers","following_url":"https://api.github.com/users/baowenlei/following{/other_user}","gists_url":"https://api.github.com/users/baowenlei/gists{/gist_id}","starred_url":"https://api.github.com/users/baowenlei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baowenlei/subscriptions","organizations_url":"https://api.github.com/users/baowenlei/orgs","repos_url":"https://api.github.com/users/baowenlei/repos","events_url":"https://api.github.com/users/baowenlei/events{/privacy}","received_events_url":"https://api.github.com/users/baowenlei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:10:57Z","updated_at":"2019-05-31T19:10:57Z","author_association":"NONE","body":"@tqchen @FrozenGene Thanks for the feedback. \r\nIt seems that we do not have any record of the difference. \r\nBut the problem is that for release version of the code, the assertion will be gone.\r\nHowever, here the assertion is instrument in llvm level, which will exist in either release or debug version.\r\nThe point is that user should have option to have it in their generated code or not. \r\n\r\nRegarding to the PR, I am sorry I recent does not have time to work on that. Tight with other works. But I will update that once I got time. Feel free to close this for now.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497828163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497831902","html_url":"https://github.com/apache/tvm/pull/3054#issuecomment-497831902","issue_url":"https://api.github.com/repos/apache/tvm/issues/3054","id":497831902,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgzMTkwMg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:24:16Z","updated_at":"2019-05-31T19:24:16Z","author_association":"MEMBER","body":"close for now due to inactive status","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497831902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497831958","html_url":"https://github.com/apache/tvm/pull/3054#issuecomment-497831958","issue_url":"https://api.github.com/repos/apache/tvm/issues/3054","id":497831958,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzgzMTk1OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:24:26Z","updated_at":"2019-05-31T19:24:26Z","author_association":"MEMBER","body":"Thanks @FrozenGene @baowenlei ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497831958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497840763","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497840763","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497840763,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg0MDc2Mw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:55:53Z","updated_at":"2019-05-31T19:55:53Z","author_association":"CONTRIBUTOR","body":"This is most probably out of the context of the issue, but is it possible for all of the people commenting here to join a conference call for an hour and figure out the next steps? I can take notes and document them here for everybody else to see. I think it will be more productive.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497840763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497840835","html_url":"https://github.com/apache/tvm/pull/3168#issuecomment-497840835","issue_url":"https://api.github.com/repos/apache/tvm/issues/3168","id":497840835,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg0MDgzNQ==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T19:56:08Z","updated_at":"2019-05-31T19:56:08Z","author_association":"CONTRIBUTOR","body":"@tqchen - sorry I've been a bit busy recently. I've now pushed in my updates with the tests.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497840835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497875202","html_url":"https://github.com/apache/tvm/pull/3238#issuecomment-497875202","issue_url":"https://api.github.com/repos/apache/tvm/issues/3238","id":497875202,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg3NTIwMg==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T22:08:39Z","updated_at":"2019-05-31T22:08:39Z","author_association":"CONTRIBUTOR","body":"I realize that the features appear, but I think it would be good to have unit tests for each feature specifically so we can get a more accurate idea of what is wrong if future changes break something","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497875202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497879478","html_url":"https://github.com/apache/tvm/pull/3268#issuecomment-497879478","issue_url":"https://api.github.com/repos/apache/tvm/issues/3268","id":497879478,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg3OTQ3OA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T22:29:56Z","updated_at":"2019-05-31T22:33:11Z","author_association":"MEMBER","body":"operator fusion tests are heavily dependent on concat being fusible as injective. If we want to make concat opaque, corresponding updates to fusion tests are needed.\r\n\r\nIf this is indeed a temporary solution, I suggest just disable fusion tests that involve concat.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497879478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497879569","html_url":"https://github.com/apache/tvm/pull/3156#issuecomment-497879569","issue_url":"https://api.github.com/repos/apache/tvm/issues/3156","id":497879569,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg3OTU2OQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T22:30:35Z","updated_at":"2019-05-31T22:30:35Z","author_association":"CONTRIBUTOR","body":"Thank you for the feedback!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497879569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497893882","html_url":"https://github.com/apache/tvm/pull/3256#issuecomment-497893882","issue_url":"https://api.github.com/repos/apache/tvm/issues/3256","id":497893882,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5Mzg4Mg==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:02:59Z","updated_at":"2019-06-01T03:33:18Z","author_association":"MEMBER","body":"@Laurawly I evaluated the CUDA performance of argsort with input size (1, 8000) on p3. Existing one take 28.57ms to finish, and the one in this PR takes 15.11ms. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497893882/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497894283","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-497894283","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":497894283,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5NDI4Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:06:23Z","updated_at":"2019-06-01T00:06:23Z","author_association":"MEMBER","body":"re \"conference calls\". I totally agree that calling or in person sync will speed up reaching consensus. Doing most of the development in the public archivable process is preferred https://docs.tvm.ai/contribute/committer_guide.html#public-archive-principle \r\n\r\nWe do need to acknowledge the overhead of the asynchronous communication, but should also acknowledge the gains we get by leaving a trace for the broader community. I would encourage us to try to rely more on asynchronous communication in public channels first. The main bottleneck of asynchronous discussion is the overhead of latency and a good way to improve it is to \r\n\r\nHere is a possible proposal:\r\n- Everyone who are primarily driving this process, send out a proposal\r\n   - List of points to be discussed.\r\n   - List questions\r\n   - List pros and cons of decisions if there is a decision being made.\r\n- Every one can critique\r\n\r\nWe could also use the slack for semi-sync chats, but please note that everything relates to design decision need to be properly sent back to the public channel. I understand that there is more overhead in this approach, but I believe it is a price worth paying to get more people involved.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497894283/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497894286","html_url":"https://github.com/apache/tvm/pull/3258#issuecomment-497894286","issue_url":"https://api.github.com/repos/apache/tvm/issues/3258","id":497894286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5NDI4Ng==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:06:25Z","updated_at":"2019-06-01T00:06:25Z","author_association":"MEMBER","body":"[Update] Alright, thanks to the heroic (detailed) review from @jroesch @liangfu @huajsj. I just finished adding the feedback from all of you. I know there are some challenges regarding documentation and how everything works but I think we will add those along the way.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497894286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497897121","html_url":"https://github.com/apache/tvm/issues/3142#issuecomment-497897121","issue_url":"https://api.github.com/repos/apache/tvm/issues/3142","id":497897121,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5NzEyMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:33:40Z","updated_at":"2019-06-01T00:33:40Z","author_association":"MEMBER","body":"the problem still occurs http://ci.tvm.ai:8080/blue/organizations/jenkins/tvm/detail/PR-3156/32/pipeline","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497897121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497897135","html_url":"https://github.com/apache/tvm/issues/3142#issuecomment-497897135","issue_url":"https://api.github.com/repos/apache/tvm/issues/3142","id":497897135,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5NzEzNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:33:48Z","updated_at":"2019-06-01T00:33:48Z","author_association":"MEMBER","body":"cc @Laurawly ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497897135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497898492","html_url":"https://github.com/apache/tvm/pull/3258#issuecomment-497898492","issue_url":"https://api.github.com/repos/apache/tvm/issues/3258","id":497898492,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5ODQ5Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:48:23Z","updated_at":"2019-06-01T00:48:23Z","author_association":"MEMBER","body":"Let us talk about plans about tests/python/tsim/ As we finish the migration. I hope we have a unified VTA test-suite that test both (sim, tsim, and remote if it is available).\r\n\r\nThe original VTA test infrastructure https://github.com/dmlc/tvm/blob/master/vta/tests/python/unittest/test_vta_insn.py#L74\r\n\r\nis built in a way such that testing.run will run the test case for each available environment. See the implementation of run https://github.com/dmlc/tvm/blob/master/vta/python/vta/testing/util.py#L34\r\n\r\nI hope we can reuse that instead of creating separate test cases for tsim only\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497898492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497898964","html_url":"https://github.com/apache/tvm/issues/3142#issuecomment-497898964","issue_url":"https://api.github.com/repos/apache/tvm/issues/3142","id":497898964,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzg5ODk2NA==","user":{"login":"Laurawly","id":3700467,"node_id":"MDQ6VXNlcjM3MDA0Njc=","avatar_url":"https://avatars.githubusercontent.com/u/3700467?v=4","gravatar_id":"","url":"https://api.github.com/users/Laurawly","html_url":"https://github.com/Laurawly","followers_url":"https://api.github.com/users/Laurawly/followers","following_url":"https://api.github.com/users/Laurawly/following{/other_user}","gists_url":"https://api.github.com/users/Laurawly/gists{/gist_id}","starred_url":"https://api.github.com/users/Laurawly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Laurawly/subscriptions","organizations_url":"https://api.github.com/users/Laurawly/orgs","repos_url":"https://api.github.com/users/Laurawly/repos","events_url":"https://api.github.com/users/Laurawly/events{/privacy}","received_events_url":"https://api.github.com/users/Laurawly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-01T00:54:16Z","updated_at":"2019-06-01T00:54:16Z","author_association":"CONTRIBUTOR","body":"@tqchen I wonder if this change https://github.com/dmlc/tvm/blob/1f3a49417ec8f2712aa979b8e3d56a838734dcf1/src/codegen/build_module.cc#L86 will fix the problem.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/497898964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]