[{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660422223","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-660422223","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":660422223,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDQyMjIyMw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T04:19:29Z","updated_at":"2020-07-18T04:19:29Z","author_association":"CONTRIBUTOR","body":"I still wonder whether some folks might make use of current GString mutability in scenarios like templating. I wonder whether just applying the optimisations when @CompileStatic is in play makes sense. In that scenario, we could leave GString and GStringImpl classes alone and have a GStringImplCS class.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660422223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660442083","html_url":"https://github.com/apache/groovy/pull/1311#issuecomment-660442083","issue_url":"https://api.github.com/repos/apache/groovy/issues/1311","id":660442083,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDQ0MjA4Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T07:19:20Z","updated_at":"2020-07-18T07:19:20Z","author_association":"CONTRIBUTOR","body":"Proposed PR merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660442083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660458357","html_url":"https://github.com/apache/groovy/pull/1313#issuecomment-660458357","issue_url":"https://api.github.com/repos/apache/groovy/issues/1313","id":660458357,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDQ1ODM1Nw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T09:50:36Z","updated_at":"2020-07-18T09:50:36Z","author_association":"CONTRIBUTOR","body":"Merged.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660458357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660546351","html_url":"https://github.com/apache/groovy/pull/1296#issuecomment-660546351","issue_url":"https://api.github.com/repos/apache/groovy/issues/1296","id":660546351,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU0NjM1MQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T21:39:55Z","updated_at":"2020-07-18T21:39:55Z","author_association":"CONTRIBUTOR","body":"PR#1316 now covers this case.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660546351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660549463","html_url":"https://github.com/apache/groovy/pull/1318#issuecomment-660549463","issue_url":"https://api.github.com/repos/apache/groovy/issues/1318","id":660549463,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU0OTQ2Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T22:09:13Z","updated_at":"2020-07-18T22:09:13Z","author_association":"CONTRIBUTOR","body":"This seems okay. It doesn't seem to break the existing import of static classes using \"import static\", which while possibly unexpected from a Java point-of-view, we have supported for a long time. I'll note that your patch doesn't extend to another \"exotic\" case we currently support.\r\n```\r\nimport java.util.Map as SomeMap\r\nimport static SomeMap.Entry as SomeEntry\r\n\r\nassert SomeEntry instanceof Class\r\n```\r\nworks but not without the static. It is also somewhat unusual but accounts for aliases to some degree and we have supported it for along time too. We can cover that off separately.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660549463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660549908","html_url":"https://github.com/apache/groovy/pull/1318#issuecomment-660549908","issue_url":"https://api.github.com/repos/apache/groovy/issues/1318","id":660549908,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU0OTkwOA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T22:13:18Z","updated_at":"2020-07-18T22:13:18Z","author_association":"CONTRIBUTOR","body":"Merged, thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660549908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660556422","html_url":"https://github.com/apache/groovy/pull/1318#issuecomment-660556422","issue_url":"https://api.github.com/repos/apache/groovy/issues/1318","id":660556422,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU1NjQyMg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T23:20:02Z","updated_at":"2020-07-18T23:20:02Z","author_association":"MEMBER","body":"> ... your patch doesn't extend to another \"exotic\" case we currently support.\r\n> \r\n> ```\r\n> import java.util.Map as SomeMap\r\n> import static SomeMap.Entry as SomeEntry\r\n> \r\n> assert SomeEntry instanceof Class\r\n> ```\r\n> \r\n> works but not without the static. It is also somewhat unusual but accounts for aliases to some degree and we have supported it for along time too. We can cover that off separately.\r\n\r\nIf you wanted to shut down this \"exotic\" behavior, you could change this bit:\r\n```\r\n    public void visitClass(final ClassNode node) {\r\n        ...\r\n            for (ImportNode importNode : module.getStaticImports().values()) {\r\n                ClassNode type = importNode.getType();\r\n                if (resolve(type, true, true, true)) continue; // set flags to \"false, false, true\" to not use other imports to help resolve this import\r\n                addError(\"unable to resolve class \" + type.getName(), type);\r\n            }\r\n```\r\n\r\nJust an option to consider.  I don't think anyone coming into the language is expecting one import to influence another.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660556422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660559360","html_url":"https://github.com/apache/groovy/pull/1318#issuecomment-660559360","issue_url":"https://api.github.com/repos/apache/groovy/issues/1318","id":660559360,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU1OTM2MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T23:52:13Z","updated_at":"2020-07-18T23:52:13Z","author_association":"CONTRIBUTOR","body":"Not planning to shut it down at this stage. I have had numerous folks (albeit quite a few years ago now) who've come up to me at conferences and expressed their like for that feature and how it made it easier for DSLs and various porting scenarios.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660559360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660591379","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-660591379","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":660591379,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDU5MTM3OQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T05:39:42Z","updated_at":"2020-07-19T05:40:48Z","author_association":"CONTRIBUTOR","body":"STC supports mutability of `GString` too, so it would be a breaking change anyway. If some user changes the strings/values via the **bad practice** and is impacted by the change, creating a new `GString` instance could be a workaround.\r\n\r\n```groovy\r\n@groovy.transform.CompileStatic\r\ndef x() {\r\n    def s = \"a${1}b\"\r\n    s.strings[0] = 'c'\r\n    s.values[0] = 2\r\n    s\r\n}\r\n\r\nx()  // yields c2b\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660591379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660605634","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-660605634","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":660605634,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDYwNTYzNA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T08:01:27Z","updated_at":"2020-07-19T08:01:27Z","author_association":"CONTRIBUTOR","body":"I understood it would remain a breaking change but users would have an easy and known approach to getting back the original behavior, i.e. go dynamic, and those wanting more performance would have a known approach for getting that - create the GString in a @CS method or as a field of a @CS class. Might be worth discussing on the mailing list.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660605634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660618512","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-660618512","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":660618512,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDYxODUxMg==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T09:52:40Z","updated_at":"2020-07-19T09:52:40Z","author_association":"CONTRIBUTOR","body":"How about adding some kind of makeMutable/makeImmutabel methods on GString to control this (please find a better name)? controling this by @cs I find a bit dangerous","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660618512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660621265","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-660621265","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":660621265,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDYyMTI2NQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T10:17:49Z","updated_at":"2020-07-19T10:17:49Z","author_association":"CONTRIBUTOR","body":"Let me clarify a bit more, the **immutable** we discuss means the arrays `strings` and `values` stored in `GString` instance are immutable, which is what the PR has done. \r\nWithout applying the PR, they are both mutable because they are returned as they are, i.e. not returning their copy.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/660621265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/661996400","html_url":"https://github.com/apache/groovy/pull/1321#issuecomment-661996400","issue_url":"https://api.github.com/repos/apache/groovy/issues/1321","id":661996400,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTk5NjQwMA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T17:23:28Z","updated_at":"2020-07-21T17:23:28Z","author_association":"CONTRIBUTOR","body":"It would be better to have a test to show the improved  error message.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/661996400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662149467","html_url":"https://github.com/apache/groovy/pull/1321#issuecomment-662149467","issue_url":"https://api.github.com/repos/apache/groovy/issues/1321","id":662149467,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjE0OTQ2Nw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T23:01:19Z","updated_at":"2020-07-21T23:01:19Z","author_association":"CONTRIBUTOR","body":"> It would be better to have a test to show the improved error message.\r\n\r\nYes, I plan to add a testcase. I just hadn't decided the best one to add. The example I had in the issue completes \"successfully\" via the MOP path which is then taken. It supplies a null in the constructor and then coerces the Date to a String for the subsequent setter call. If you swap from a String property to something with no coercion you then get a GroovyCastException which I think is okay. To get the same kind of \"failed to invoke constructor\" message, we'd need to throw the exception instead of return null in the code which would rule out some MOP tricks like the coercion.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662149467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662237401","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-662237401","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":662237401,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjIzNzQwMQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T04:42:31Z","updated_at":"2020-07-22T04:43:20Z","author_association":"CONTRIBUTOR","body":"@blackdrag Did you have in mind a property/switch like we can turn on int optimisations for our classic bytecode generation?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662237401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662237433","html_url":"https://github.com/apache/groovy/pull/1321#issuecomment-662237433","issue_url":"https://api.github.com/repos/apache/groovy/issues/1321","id":662237433,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjIzNzQzMw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T04:42:39Z","updated_at":"2020-07-22T04:42:39Z","author_association":"CONTRIBUTOR","body":"Also, we could use lambda to avoid duplicated code:\r\n\r\n```java\r\nBiPredicate<Object, Integer> bp = (res, cnt) -> {\r\n   res instanceof CachedConstructor && ((CachedConstructor)res).getParameterTypes().length == cnt\r\n}\r\n\r\nif (bp.test(res, 1)) return null;\r\n    ...\r\nif (bp.test(res, 2)) return null;\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662237433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662355159","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-662355159","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":662355159,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjM1NTE1OQ==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T09:44:06Z","updated_at":"2020-07-22T09:44:06Z","author_association":"CONTRIBUTOR","body":"@paulk-asert @danielsun1106 now you guys forced me to look into this in much more detail and thought. The current implementation in this PR will build the string potentially only once and then this will be the final result. The part with clone I did originally not even see (I think I looked at it before you did that change), also does not improve performance. But you need it to ensure the output string is always the same. But I think this is all thought a bit to hasty/short, because you have no control over the subclasses of GString, which might be another class than GStringimpl:\r\n* breaking change: subclass may override getValues and expect changes from there taken into account for the final string. Since you are now using this.value, this cannot happen anymore\r\n* breaking change: you now assume all subclasses of GString will be GStringImpl by imposing the restriction on getStrings. But nothing can ensure this right now\r\n* breaking change: classes subclassing GStringImpl and overriding getStrings not returning the same strings will be ignored in GString\r\n* breaking change: calling getValues and then changing an element of the array no longer takes affect\r\n* breaking change: calling getStrings and then changing an element of the array no longer takes affect, if the implementing class is GStringImpl\r\n\r\nIf we really wanted to go in this direction, then I would do the following:\r\n* merge GString and GStringImpl, since the implementation split with unchecked restrictions makes no sense for more than one possible subclass\r\n* make getValues and getStrings final or the class itself, since it makes no sense for classes to change that anymore\r\n* add a method to change the behaviour of GString between calculating once and every time. (property could be used to control the default) \r\n\r\nBut actually I am unsure about this last point... because if you change the behaviour it works fine with mutable classes, for which this PR already caters. So it is values/strings set from outside that really matter here, and the PR does actually not allow them being set, because of the methods returning a cloned array.\r\n\r\nWhich means for me, that the current version of this PR is quite a stripped down version of what it was before and more a structured string, than what it was before. Not that this is bad in itself, it just has other use cases than GString. If all the old use cases of GString are important to us, we cannot do this here like this. If not, well, then we have a major breaking change.\r\n\r\nWe could of course also do this slightly different. Let's say:\r\n* keep getValues and getStrings return the cloned array\r\n* add mutator methods for values and strings which will reset the output string\r\n\r\nThis is still a breaking change of course and especially the part with changing array elements of getValues being ignored is not nice, since it will be a silent bug. Instead I would think of these methods returning a list instead and make that immutable, which allows for better error messages.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662355159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662464019","html_url":"https://github.com/apache/groovy/pull/1292#issuecomment-662464019","issue_url":"https://api.github.com/repos/apache/groovy/issues/1292","id":662464019,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjQ2NDAxOQ==","user":{"login":"erichelgeson","id":271734,"node_id":"MDQ6VXNlcjI3MTczNA==","avatar_url":"https://avatars.githubusercontent.com/u/271734?v=4","gravatar_id":"","url":"https://api.github.com/users/erichelgeson","html_url":"https://github.com/erichelgeson","followers_url":"https://api.github.com/users/erichelgeson/followers","following_url":"https://api.github.com/users/erichelgeson/following{/other_user}","gists_url":"https://api.github.com/users/erichelgeson/gists{/gist_id}","starred_url":"https://api.github.com/users/erichelgeson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erichelgeson/subscriptions","organizations_url":"https://api.github.com/users/erichelgeson/orgs","repos_url":"https://api.github.com/users/erichelgeson/repos","events_url":"https://api.github.com/users/erichelgeson/events{/privacy}","received_events_url":"https://api.github.com/users/erichelgeson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T13:48:52Z","updated_at":"2020-07-22T13:48:52Z","author_association":"CONTRIBUTOR","body":"@paulk-asert I get an error either way:\r\n\r\nChange it to groovy 2.5.13 (leaving void) I get:\r\n```\r\n> Task :grails-console:compileGroovy FAILED\r\nstartup failed:\r\n/Users/erichelgeson/source/grails-core/grails-console/src/main/groovy/grails/ui/console/support/GroovyConsoleApplicationContext.groovy: 47: The return type of boolean exit(java.util.EventObject) in grails.ui.console.support.GroovyConsoleApplicationContext$1 is incompatible with void in groovy.ui.Console\r\n. At [47:13]  @ line 47, column 13.\r\n               @Override\r\n```\r\n\r\nChange it to boolean, I get:\r\n```\r\n/Users/erichelgeson/source/grails-core/grails-console/src/main/groovy/grails/ui/console/support/GroovyConsoleApplicationContext.groovy: 47: The return type of void exit(java.util.EventObject) in grails.ui.console.support.GroovyConsoleApplicationContext$1 is incompatible with boolean in groovy.ui.Console\r\n. At [47:13]  @ line 47, column 13.\r\n               @Override\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662464019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662467459","html_url":"https://github.com/apache/groovy/pull/1292#issuecomment-662467459","issue_url":"https://api.github.com/repos/apache/groovy/issues/1292","id":662467459,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjQ2NzQ1OQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T13:55:13Z","updated_at":"2020-07-22T13:55:13Z","author_association":"CONTRIBUTOR","body":"Are your error messages around the wrong way? The void variant is meant to be a synthetic bridge method and shouldn't be checked against. Does removing `@Override` help?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662467459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662471535","html_url":"https://github.com/apache/groovy/pull/1292#issuecomment-662471535","issue_url":"https://api.github.com/repos/apache/groovy/issues/1292","id":662471535,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjQ3MTUzNQ==","user":{"login":"erichelgeson","id":271734,"node_id":"MDQ6VXNlcjI3MTczNA==","avatar_url":"https://avatars.githubusercontent.com/u/271734?v=4","gravatar_id":"","url":"https://api.github.com/users/erichelgeson","html_url":"https://github.com/erichelgeson","followers_url":"https://api.github.com/users/erichelgeson/followers","following_url":"https://api.github.com/users/erichelgeson/following{/other_user}","gists_url":"https://api.github.com/users/erichelgeson/gists{/gist_id}","starred_url":"https://api.github.com/users/erichelgeson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erichelgeson/subscriptions","organizations_url":"https://api.github.com/users/erichelgeson/orgs","repos_url":"https://api.github.com/users/erichelgeson/repos","events_url":"https://api.github.com/users/erichelgeson/events{/privacy}","received_events_url":"https://api.github.com/users/erichelgeson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T14:02:24Z","updated_at":"2020-07-22T14:02:24Z","author_association":"CONTRIBUTOR","body":"Yes, copy/pasted in reverse order, but issue stays the same :) Removing override does not change the issue.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662471535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662474763","html_url":"https://github.com/apache/groovy/pull/1292#issuecomment-662474763","issue_url":"https://api.github.com/repos/apache/groovy/issues/1292","id":662474763,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjQ3NDc2Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T14:08:05Z","updated_at":"2020-07-22T14:08:05Z","author_association":"CONTRIBUTOR","body":"We are checking for synthetic/bridge only on the overriding method (`overridingMethod`) not parent method (`oldMethod`):\r\nhttps://github.com/apache/groovy/blob/GROOVY_2_5_X/src/main/java/org/codehaus/groovy/classgen/Verifier.java#L1347\r\nI'll have to trace through whether the bridge method is getting passed through as `oldMethod`.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662474763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662814220","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-662814220","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":662814220,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgxNDIyMA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T04:36:14Z","updated_at":"2020-07-23T04:36:14Z","author_association":"CONTRIBUTOR","body":"Your latest changes provide a consistent design but are a complete breaking change. This might end up being the way to go but let's hold off for a little while. I'd like to ponder alternatives which give us a better binary compatibility story.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662814220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662822845","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-662822845","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":662822845,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgyMjg0NQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T05:18:06Z","updated_at":"2020-07-23T05:18:06Z","author_association":"CONTRIBUTOR","body":"Here is the test script. Groovy 3.0.5 costs about 8500ms, and this PR costs about 210ms.\r\n\r\n```groovy\r\nlong b = System.currentTimeMillis()\r\ndef gstr = \"integer: ${1}, double: ${1.2d}, string: ${'x'}, class: ${Map.class}, boolean: ${true}\"\r\nfor (int i = 0; i < 10000000; i++) {\r\n\tgstr.toString()\r\n}\r\nlong e = System.currentTimeMillis()\r\nprintln \"${e - b}ms\"\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662822845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662834699","html_url":"https://github.com/apache/groovy/pull/1309#issuecomment-662834699","issue_url":"https://api.github.com/repos/apache/groovy/issues/1309","id":662834699,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgzNDY5OQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:07:38Z","updated_at":"2020-07-23T06:07:38Z","author_association":"CONTRIBUTOR","body":"superseded by https://github.com/apache/groovy/pull/1322","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662834699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662854952","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-662854952","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":662854952,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg1NDk1Mg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T07:16:09Z","updated_at":"2020-07-23T07:16:09Z","author_association":"CONTRIBUTOR","body":"I tried the PR and found no performance improvement. I assume `toString()` has not used `cachedStringLiteral`.\r\n```\r\nD:\\_TEMP\\GROOVY-9637>groovy -v\r\nGroovy Version: 4.0.0-SNAPSHOT JVM: 11.0.7 Vendor: Azul Systems, Inc. OS: Windows 10\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n8758ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n8651ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n9018ms\r\n```\r\n\r\nFYI. https://github.com/apache/groovy/pull/1309#issuecomment-662822845","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662854952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662893283","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-662893283","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":662893283,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg5MzI4Mw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T08:53:19Z","updated_at":"2020-07-23T08:53:19Z","author_association":"CONTRIBUTOR","body":"The performance is improved a lot ;-)\r\nThe costed time is reduced from `8700ms` to `370ms`\r\n\r\n```\r\nD:\\_TEMP\\GROOVY-9637>groovy -v\r\nGroovy Version: 4.0.0-SNAPSHOT JVM: 11.0.7 Vendor: Azul Systems, Inc. OS: Windows 10\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n399ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n365ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n361ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n290ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>groovy Groovy9637.groovy\r\n337ms\r\n\r\nD:\\_TEMP\\GROOVY-9637>\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662893283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662901999","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-662901999","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":662901999,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjkwMTk5OQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T09:13:05Z","updated_at":"2020-07-23T09:13:05Z","author_association":"CONTRIBUTOR","body":"It is still a breaking change but much fewer cases now:\r\n```\r\ndef s = ['The ', ' brown '] as String[]\r\ndef v = ['quick', 'fox'] as Object[]\r\ndef gstr = new org.codehaus.groovy.runtime.GStringImpl(v, s)\r\nprintln gstr // The quick brown fox\r\nv[0] = 'sly'\r\ns[1] = ' old '\r\nprintln gstr // with caching: The quick brown fox, before: The sly old fox\r\n```\r\nNormally the input array isn't accessible, so perhaps not a problem.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662901999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662909737","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-662909737","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":662909737,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjkwOTczNw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T09:31:12Z","updated_at":"2020-07-23T09:31:12Z","author_association":"CONTRIBUTOR","body":"Using `GString#plus` can return a cacheable GString and doesn't impact the existing GStrings:\r\n```\r\nlong b = System.currentTimeMillis()\r\ndef g1 = \"integer: ${1}, double: ${1.2d}, string: ${'x'}\"\r\ndef g2 = \"class: ${Map.class}, boolean: ${true}\"\r\ndef g3 = g1 + ' ' + g2\r\nfor (int i = 0; i < 10000000; i++) {\r\n\tg1.toString()\r\n\tg2.toString()\r\n\tg3.toString()\r\n}\r\nlong e = System.currentTimeMillis()\r\nprintln \"${e - b}ms\"\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662909737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662949525","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-662949525","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":662949525,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjk0OTUyNQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T11:15:41Z","updated_at":"2020-07-23T11:15:41Z","author_association":"CONTRIBUTOR","body":"> It is still a breaking change but much fewer cases now:\r\n> \r\n> ```\r\n> def s = ['The ', ' brown '] as String[]\r\n> def v = ['quick', 'fox'] as Object[]\r\n> def gstr = new org.codehaus.groovy.runtime.GStringImpl(v, s)\r\n> println gstr // The quick brown fox\r\n> v[0] = 'sly'\r\n> s[1] = ' old '\r\n> println gstr // with caching: The quick brown fox, before: The sly old fox\r\n> ```\r\n> \r\n> Normally the input array isn't accessible, so perhaps not a problem.\r\n\r\nAgreed :-) ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/662949525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663301750","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-663301750","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":663301750,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzMwMTc1MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T00:52:21Z","updated_at":"2020-07-24T00:52:21Z","author_association":"CONTRIBUTOR","body":"@blackdrag If you get a chance, please cast your eye over this PR instead of the earlier one","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663301750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663308085","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-663308085","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":663308085,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzMwODA4NQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T01:21:34Z","updated_at":"2020-07-24T01:21:34Z","author_association":"CONTRIBUTOR","body":"@paulk-asert Should we take the multi-thread issues into account?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663308085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663390620","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-663390620","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":663390620,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM5MDYyMA==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T07:41:30Z","updated_at":"2020-07-24T07:41:30Z","author_association":"CONTRIBUTOR","body":"This again puts a big question mark on the split between GString and GStringImpl. I think code like those instanceof checks should be avoided. Could we shortly summarize the goal? I am not sure if the focus is set right in total.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663390620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663448502","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-663448502","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":663448502,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQ0ODUwMg==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T09:32:49Z","updated_at":"2020-07-24T09:45:07Z","author_association":"CONTRIBUTOR","body":"**_Goal_**: improve the performance of GStrings where possible but without foregoing behavior where a value can be dynamically supplied by a closure including lazily evaluated\r\n**_Highly desired_**: don't break binary compatibility unless we really have to to minimise impact on any frameworks that might be extending the existing classes in ways unknown to us\r\n**_Highly desired_**: should be invisible to the user\r\n**_Somewhat desired_**: don't break less commonly used practice of mutating strings/values if possible\r\n**_Current approach_**: cache only where all values are simple types and known to be immutable - and skip caching even in that case if the values/strings are accessed externally\r\n\r\nThe pre-existing design (class split and array inputs/outputs) all work against maximising the potential cases which could be cached, so the current PR is very much \"handle quick wins\" and nothing more. We could totally re-design those classes and have a major breaking change and deal with more cases but we'd possibly forgo some existing dynamic GString use cases and for a dynamic language you could argue little would be achieved because metaprogramming could alter what should be output each time. We currently have things like GROOVY-2599 and hard-coded InvokerHelper paths actually limiting metaprogramming impact somewhat but they might be things we want to fix down the track.\r\n\r\n@danielsun1106 chime in if you have any differing view","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663448502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663452909","html_url":"https://github.com/apache/groovy/pull/1292#issuecomment-663452909","issue_url":"https://api.github.com/repos/apache/groovy/issues/1292","id":663452909,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQ1MjkwOQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T09:40:13Z","updated_at":"2020-07-24T09:40:13Z","author_association":"CONTRIBUTOR","body":"Can you try the latest SNAPSHOT after changing to boolean?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663452909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663497524","html_url":"https://github.com/apache/groovy/pull/1321#issuecomment-663497524","issue_url":"https://api.github.com/repos/apache/groovy/issues/1321","id":663497524,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQ5NzUyNA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T11:37:56Z","updated_at":"2020-07-24T11:37:56Z","author_association":"CONTRIBUTOR","body":"Merged.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663497524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663812931","html_url":"https://github.com/apache/groovy/pull/1323#issuecomment-663812931","issue_url":"https://api.github.com/repos/apache/groovy/issues/1323","id":663812931,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzgxMjkzMQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T05:34:09Z","updated_at":"2020-07-25T05:34:09Z","author_association":"CONTRIBUTOR","body":"It would be better to have a test in this PR","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663812931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663836768","html_url":"https://github.com/apache/groovy/pull/1323#issuecomment-663836768","issue_url":"https://api.github.com/repos/apache/groovy/issues/1323","id":663836768,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzgzNjc2OA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T10:01:28Z","updated_at":"2020-07-25T10:01:28Z","author_association":"CONTRIBUTOR","body":"Merged with some minor tweaks.\r\nThanks for your contribution!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663836768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663838967","html_url":"https://github.com/apache/groovy/pull/1323#issuecomment-663838967","issue_url":"https://api.github.com/repos/apache/groovy/issues/1323","id":663838967,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzgzODk2Nw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T10:25:28Z","updated_at":"2020-07-25T10:25:28Z","author_association":"CONTRIBUTOR","body":"BTW, I find you are the 300th contributor. Congratulations!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663838967/reactions","total_count":2,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663855269","html_url":"https://github.com/apache/groovy/pull/1324#issuecomment-663855269","issue_url":"https://api.github.com/repos/apache/groovy/issues/1324","id":663855269,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mzg1NTI2OQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T13:24:21Z","updated_at":"2020-07-25T13:24:21Z","author_association":"CONTRIBUTOR","body":"@blackdrag this is the other alternative I alluded to in earlier comments. No change to `GString`, `GStringImpl` enhanced slightly with a flag that enables defensive copy in/out for the string and value arrays. We create GStrings in @CompileStatic code with that flag set. Caching is only enabled when that flag is set and values are simple immutables. This piggy-backs on the idea that @CS turns off \"dynamic behaviors\" even though mutating those arrays is a bit of a stretch of what constitutes dynamic behavior.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663855269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663855778","html_url":"https://github.com/apache/groovy/pull/1324#issuecomment-663855778","issue_url":"https://api.github.com/repos/apache/groovy/issues/1324","id":663855778,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mzg1NTc3OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T13:29:46Z","updated_at":"2020-07-25T13:32:40Z","author_association":"CONTRIBUTOR","body":"Daniel's simple benchmark:\r\n```\r\ndef gstr = makeGString()\r\nlong b = System.currentTimeMillis()\r\nfor (int i = 0; i < 10000000; i++) {\r\n\tgstr.toString()\r\n}\r\nlong e = System.currentTimeMillis()\r\nprintln \"${e - b}ms\"\r\n\r\n//@groovy.transform.CompileStatic\r\ndef makeGString() {\r\n    def now = java.time.LocalDateTime.now()\r\n    \"integer: ${1}, double: ${1.2d}, string: ${'x'}, class: ${Map.class}, boolean: ${true}, now: ${now}\"\r\n}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/663855778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664822302","html_url":"https://github.com/apache/groovy/pull/1306#issuecomment-664822302","issue_url":"https://api.github.com/repos/apache/groovy/issues/1306","id":664822302,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDgyMjMwMg==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T07:13:16Z","updated_at":"2020-07-28T07:13:16Z","author_association":"CONTRIBUTOR","body":"@danielsun1106 I am actually wondering why you added the order of the fields in this PR. Be ensured that the only way to read fields in declaration order from a class in Java is by reading the bytecode directly. Reflection may or may not present you the fields in the right order. There is no guarantee. Which means to me:\r\n* keeping the order of fields in Groovy is questionable as long as we use reflection to build such structures\r\n* having tests depending on the order of fields is wrong","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664822302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664923324","html_url":"https://github.com/apache/groovy/pull/1306#issuecomment-664923324","issue_url":"https://api.github.com/repos/apache/groovy/issues/1306","id":664923324,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDkyMzMyNA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T09:36:36Z","updated_at":"2020-07-28T09:36:36Z","author_association":"CONTRIBUTOR","body":"@blackdrag Actually I have not sorted the fields on purpose. After we use `LinkedHashMap`, the order changes and I find it always keeps the order of fields declared. In order to control the expectation of users, I do not announce keeping field order in the JIRA ticket now ;-)","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664923324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664929715","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-664929715","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":664929715,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDkyOTcxNQ==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T09:41:52Z","updated_at":"2020-07-28T09:41:52Z","author_association":"CONTRIBUTOR","body":"> **_Goal_**: improve the performance of GStrings where possible but without foregoing behavior where a value can be dynamically supplied by a closure including lazily evaluated\r\n\r\nI see that as the main goal and the other points less as strict constraints or subgoals, more as nice-to-have\r\n\r\n> **_Highly desired_**: don't break binary compatibility unless we really have to to minimise impact on any frameworks that might be extending the existing classes in ways unknown to us\r\n> **_Highly desired_**: should be invisible to the user\r\n> **_Somewhat desired_**: don't break less commonly used practice of mutating strings/values if possible\r\n> **_Current approach_**: cache only where all values are simple types and known to be immutable - and skip caching even in that case if the values/strings are accessed externally\r\n\r\nis being able to subclass GString still desired. I mean it goes a little bit into binary compatibility, but of course only if you are actually subclassing GString and even then only maybe\r\n\r\n> The pre-existing design (class split and array inputs/outputs) all work against maximising the potential cases which could be cached, so the current PR is very much \"handle quick wins\" and nothing more. We could totally re-design those classes and have a major breaking change and deal with more cases but we'd possibly forgo some existing dynamic GString use cases and for a dynamic language you could argue little would be achieved because metaprogramming could alter what should be output each time. We currently have things like [GROOVY-2599](https://issues.apache.org/jira/browse/GROOVY-2599) and hard-coded InvokerHelper paths actually limiting metaprogramming impact somewhat but they might be things we want to fix down the track.\r\n> \r\n> @danielsun1106 chime in if you have any differing view\r\n\r\nI like that we have the optimization in GStringImpl now. The part with the internal in GString is still bothering me though:\r\n\r\n>  return gs instanceof GStringImpl ? ((GStringImpl) gs).getStringList().toArray(EMPTY_STRING_ARRAY) : gs.getStrings();\r\n\r\nI have not tried it out, but I would like this to be considered:\r\n\r\n* change implementation to work with lists instead of array \r\n* remove the get*Internal methods and use get*List methods instead\r\n\r\nthis will allow the list variant to become the fast case in the sense of not having to convert from an array... \r\n\r\nNow I am rethinking the approach... what about if we\r\n\r\n* remove the list methods and internal methods in GString\r\n* have a \"freeze\" method that will return a new GString, which will potentially ignore changes to the array. I would use that in GStringImpl only though\r\n* have GString more or less like it is now, which means no string cache at all\r\n* give GStringImpl control over the optimization\r\n* calling getValues and getStrings on GString and GStringImpl will then still invalidate the cached String, unless the GStringImpl has been frozen\r\n* a frozen GStringImpl will always return the cached string\r\n* have non invalidating methods to return the values and strings arrays in GStringImpl and use them for toString\r\n* move the string building code of GString into a utility class and call it from GString and GStringImpl with their respective method getValues/getStrings methods\r\n\r\nAPI writers can the use \"freeze\" if they want to look at the structure of a GString, without maybe causing a performance hit - but actually I think the cases where we look at the structure of a GString have much bigger code following that. Actually I think the freeze feature is more a nice-to-have. After all, not having freeze does not worsen the situation compared to today at all. And of course API users that mutate the arrays will still be able to change the GString.\r\n\r\nTo show what I mean: https://github.com/apache/groovy/pull/1327\r\nOf course that can be improved by a bit of refactoring and moving the static methods as well as the logic for build and writeTo into a utility class, that is then used by GString and GStringImpl to avoid code duplication and have the only the call to the utility method and the getting of values and strings in the class itself.\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664929715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664964538","html_url":"https://github.com/apache/groovy/pull/1306#issuecomment-664964538","issue_url":"https://api.github.com/repos/apache/groovy/issues/1306","id":664964538,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDk2NDUzOA==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T10:34:27Z","updated_at":"2020-07-28T10:34:27Z","author_association":"CONTRIBUTOR","body":"@danielsun1106 not announcing the field order is a good move imho ;-) But of course that shows imho two things: LinkedHashMap will not be able to fulfill the prupose of keeping the declaration order and those JSON tests should be order independent - if they should not, then there is a problem.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664964538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664967564","html_url":"https://github.com/apache/groovy/pull/1306#issuecomment-664967564","issue_url":"https://api.github.com/repos/apache/groovy/issues/1306","id":664967564,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDk2NzU2NA==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T10:42:07Z","updated_at":"2020-07-28T10:42:07Z","author_association":"CONTRIBUTOR","body":"@danielsun1106 actual there are two points I am wondering about - well actually only one: performance. How does creating a meta class compare to the old version. And how is the read performance of the new managed map compared to the old. I am asking here especially because those \"new ManagedKey\" calls sound like they could cost a lot of performance and the map you replace actually came into existence because of us using before maps with a key generation that took too long.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/664967564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665499343","html_url":"https://github.com/apache/groovy/pull/1327#issuecomment-665499343","issue_url":"https://api.github.com/repos/apache/groovy/issues/1327","id":665499343,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTQ5OTM0Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T07:53:35Z","updated_at":"2020-07-29T07:53:35Z","author_association":"CONTRIBUTOR","body":"I'll take a look. If you get a chance to examine the alternative, that would be great:\r\nhttps://github.com/apache/groovy/pull/1324","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665499343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665509587","html_url":"https://github.com/apache/groovy/pull/1324#issuecomment-665509587","issue_url":"https://api.github.com/repos/apache/groovy/issues/1324","id":665509587,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTUwOTU4Nw==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T08:12:38Z","updated_at":"2020-07-29T08:12:38Z","author_association":"CONTRIBUTOR","body":"My feeling is that stretch is a bit too far.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665509587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665679403","html_url":"https://github.com/apache/groovy/pull/1327#issuecomment-665679403","issue_url":"https://api.github.com/repos/apache/groovy/issues/1327","id":665679403,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTY3OTQwMw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T13:55:41Z","updated_at":"2020-07-29T13:55:41Z","author_association":"CONTRIBUTOR","body":"So, after refactoring, something like this:\r\nhttps://github.com/apache/groovy/pull/1329","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665679403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665679995","html_url":"https://github.com/apache/groovy/pull/1324#issuecomment-665679995","issue_url":"https://api.github.com/repos/apache/groovy/issues/1324","id":665679995,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTY3OTk5NQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T13:56:46Z","updated_at":"2020-07-29T13:56:46Z","author_association":"CONTRIBUTOR","body":"Closing this one but see:\r\nhttps://github.com/apache/groovy/pull/1329","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665679995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665680574","html_url":"https://github.com/apache/groovy/pull/1322#issuecomment-665680574","issue_url":"https://api.github.com/repos/apache/groovy/issues/1322","id":665680574,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTY4MDU3NA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T13:57:53Z","updated_at":"2020-07-29T13:57:53Z","author_association":"CONTRIBUTOR","body":"Closing this one but see:\r\nhttps://github.com/apache/groovy/pull/1329","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665680574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665997982","html_url":"https://github.com/apache/groovy/pull/1306#issuecomment-665997982","issue_url":"https://api.github.com/repos/apache/groovy/issues/1306","id":665997982,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTk5Nzk4Mg==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T00:20:56Z","updated_at":"2020-07-30T00:21:56Z","author_association":"CONTRIBUTOR","body":"@blackdrag As to your worries about performance, I created benchmark project to test the performance of concurrent maps ( https://github.com/danielsun1106/benchmark-concurrentmaps )\r\n\r\nHere is the result generated on my local machine:\r\n```\r\nBenchmark                                                 Mode  Cnt    Score    Error   Units\r\nConcurrentMapBench.testConcurrentIdentityHashMap_get     thrpt   15  176.293 ± 14.399  ops/ms\r\nConcurrentMapBench.testConcurrentIdentityHashMap_put     thrpt   15   11.263 ±  8.088  ops/ms\r\nConcurrentMapBench.testConcurrentReferenceHashMap_get    thrpt   15  197.955 ± 12.753  ops/ms\r\nConcurrentMapBench.testConcurrentReferenceHashMap_put    thrpt   15  194.053 ±  4.108  ops/ms\r\nConcurrentMapBench.testManagedConcurrentMap_get          thrpt   15  154.559 ±  5.860  ops/ms\r\nConcurrentMapBench.testManagedConcurrentMap_put          thrpt   15   10.226 ±  9.142  ops/ms\r\nConcurrentMapBench.testManagedIdentityConcurrentMap_get  thrpt   15  140.041 ±  2.827  ops/ms\r\nConcurrentMapBench.testManagedIdentityConcurrentMap_put  thrpt   15    6.897 ±  5.559  ops/ms\r\n```\r\n\r\nAccording to the performance test report, `ManagedIdentityConcurrentMap` is as efficient as `ManagedConcurrentMap` when executing `get` method, but less efficient when executing `put` method.\r\n\r\nAlso, `ConcurrentReferenceHashMap` based on `ConcurrentMap` is more efficient than other alternatives, so I am going to polish `ManagedIdentityConcurrentMap` and make it base on `ConcurrentReferenceHashMap` written by Doug Lea.\r\n\r\nP.S. `ManagedIdentityConcurrentMap` and `ManagedConcurrentMap` are from Groovy 4.0 (master branch), and `ConcurrentIdentityHashMap` is written by Doug Lea too.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/665997982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666576029","html_url":"https://github.com/apache/groovy/pull/1330#issuecomment-666576029","issue_url":"https://api.github.com/repos/apache/groovy/issues/1330","id":666576029,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjU3NjAyOQ==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T18:15:39Z","updated_at":"2020-07-30T18:15:39Z","author_association":"CONTRIBUTOR","body":"@eric-milles what about first getting the context loader and check if it can load ProcessingUnit and if the ProcessingUnit loaded by that is the same as the presented ProcessingLoader class, and only fall back to ProcessingUnit.class.classLoader if that fails?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666576029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666586087","html_url":"https://github.com/apache/groovy/pull/1330#issuecomment-666586087","issue_url":"https://api.github.com/repos/apache/groovy/issues/1330","id":666586087,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjU4NjA4Nw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T18:31:51Z","updated_at":"2020-07-30T18:31:51Z","author_association":"MEMBER","body":"I just went with the simplest alternative.  If there is a specific reason that the context class loader is needed, I'm interested to know why.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666586087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666613745","html_url":"https://github.com/apache/groovy/pull/1330#issuecomment-666613745","issue_url":"https://api.github.com/repos/apache/groovy/issues/1330","id":666613745,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjYxMzc0NQ==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T19:12:50Z","updated_at":"2020-07-30T19:12:50Z","author_association":"CONTRIBUTOR","body":"@eric-milles that was just to keep backwards compatibility. It is difficult to find a reason for something somebody else wrote 15 years ago and did not create a ticket for, nor is it easy to tell if that \"feature\" is used by someone","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/666613745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667094288","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667094288","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667094288,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzA5NDI4OA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T12:26:16Z","updated_at":"2020-07-31T12:36:36Z","author_association":"MEMBER","body":"Could `ModuleNode#addImport` do copy-on-write instead?  That seems to be the only source of backwards compatibility issues:\r\n```java\r\n  private void visit(ModuleNode moduleNode, SourceUnit sourceUnit) {\r\n    for (ImportNode importNode : moduleNode.getImports()) {\r\n      if (shouldTransformClass(importNode.getType())) {\r\n        moduleNode.addImport(importNode.getAlias(), rewriteType(importNode.getType()));\r\n      }\r\n    }\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667094288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667101625","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667101625","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667101625,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzEwMTYyNQ==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T12:45:39Z","updated_at":"2020-07-31T12:45:39Z","author_association":"MEMBER","body":"It is only the plain imports that have this issue because they were previously managed by a map and returned as a list.  The other types of imports were returning the internal representation (list for list, map for map).","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667101625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667134508","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667134508","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667134508,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzEzNDUwOA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T14:00:21Z","updated_at":"2020-07-31T14:44:35Z","author_association":"CONTRIBUTOR","body":"The following all fail for me in 3.0.5:\r\n```\r\nimport org.codehaus.groovy.ast.ModuleNode\r\nimport org.codehaus.groovy.control.SourceUnit\r\nimport org.codehaus.groovy.ast.ClassHelper\r\n\r\ndef mn = new ModuleNode((SourceUnit)null)\r\n\r\nmn.addStarImport('foo.bar')\r\nassert mn.starImports.size() == 1\r\nfor (starImport in mn.starImports) {\r\n    mn.addStarImport(starImport.packageName.toUpperCase())\r\n}\r\nassert mn.starImports.size() == 2\r\n\r\nmn.addStaticStarImport('Integer', ClassHelper.Integer_TYPE)\r\nmn.addStaticStarImport('Long', ClassHelper.Integer_TYPE)\r\nassert mn.staticStarImports.size() == 2\r\nfor (staticStarImport in mn.staticStarImports) {\r\n  mn.addStaticStarImport('Short', ClassHelper.Long_TYPE)\r\n}\r\nassert mn.staticStarImports.size() == 4\r\n\r\nmn.addStaticImport(ClassHelper.Integer_TYPE, 'MIN_VALUE', 'MIN_VALUE')\r\nmn.addStaticImport(ClassHelper.Long_TYPE, 'MIN_VALUE', 'MIN_VALUE')\r\nassert mn.staticImports.size() == 2\r\nfor (staticImport in mn.staticImports) {\r\n  mn.addStaticImport(staticImport.value.type, 'MAX_VALUE', 'MAX_VALUE')\r\n}\r\nassert mn.staticImports.size() == 4\r\n\r\nmn.addImport('Integer', ClassHelper.Integer_TYPE)\r\nassert mn.imports.size() == 1\r\nfor (importNode in mn.imports) {\r\n  mn.addImport('Natural', ClassHelper.Integer_TYPE)\r\n}\r\nassert mn.imports.size() == 2\r\n\r\nmn.addMethod(null)\r\nassert mn.methods.size() == 1\r\nfor (method in mn.methods) {\r\n  mn.addMethod(null)\r\n}\r\nassert mn.methods.size() == 2\r\n```\r\nYou are correct that most also failed on 3.0.4 but if we are going to support that style for `addImport`, we should probably be consistent.\r\n\r\nIt is messy though. Just looking at 3_0_X up until 3.0.4 and 2_5_X, we actually return the original collections for `methods`, `starImports`, `staticStarImports` and `staticImports`. So, even returning a copy is a breaking change, i.e.\r\n```\r\nmn.addStarImport('foo.bar')\r\nassert mn.starImports.size() == 1\r\nassert mn.starImports*.text == ['import foo.bar*']\r\n\r\n// simulate xform that manipulates imports\r\ndef copy = mn.starImports.clone()\r\nmn.starImports.clear()\r\nfor (starImport in copy) {\r\n   mn.addStarImport(starImport.packageName.toUpperCase())\r\n}\r\n\r\nassert mn.starImports.size() == 1\r\nassert mn.starImports*.text == ['import FOO.BAR*']\r\n```\r\nSo, I think we need to just put it back the way it was.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667134508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667153834","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667153834","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667153834,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzE1MzgzNA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T14:39:08Z","updated_at":"2020-07-31T14:39:08Z","author_association":"MEMBER","body":"> even returning a copy is a breaking change\r\n\r\nThat's my take.  Since there is little chance of avoiding a breaking change, why not stick with returning immutables and let Vert.x adjust to making a copy to iterate over or performing changes after iteration is completed.  I don't think the design was to return something for modification; that's exposing the implementation of `ModuleNode`.  The emergent behavior that `getImports()` could be iterated over and `addImport(...)` could be called was not intended IMO.\r\n\r\nWorst case, could 3.x get the change just for `getImports()` and master be left as is?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667153834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667160358","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667160358","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667160358,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzE2MDM1OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T14:51:57Z","updated_at":"2020-07-31T14:51:57Z","author_association":"CONTRIBUTOR","body":"I will put it back the way it was and add the test cases from above which work. We have had many long discussions about changing the AST data structures to be more immutable (or even more consistently mutable!) but it isn't something which is easy to half do. We can certainly re-look for 4 but it will be some work.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667160358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667413849","html_url":"https://github.com/apache/groovy/pull/1333#issuecomment-667413849","issue_url":"https://api.github.com/repos/apache/groovy/issues/1333","id":667413849,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzQxMzg0OQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T22:35:39Z","updated_at":"2020-07-31T22:35:39Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667413849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667417724","html_url":"https://github.com/apache/groovy/pull/1329#issuecomment-667417724","issue_url":"https://api.github.com/repos/apache/groovy/issues/1329","id":667417724,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzQxNzcyNA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T22:52:20Z","updated_at":"2020-07-31T22:52:20Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667417724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667505876","html_url":"https://github.com/apache/groovy/pull/1329#issuecomment-667505876","issue_url":"https://api.github.com/repos/apache/groovy/issues/1329","id":667505876,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzUwNTg3Ng==","user":{"login":"blackdrag","id":470278,"node_id":"MDQ6VXNlcjQ3MDI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/470278?v=4","gravatar_id":"","url":"https://api.github.com/users/blackdrag","html_url":"https://github.com/blackdrag","followers_url":"https://api.github.com/users/blackdrag/followers","following_url":"https://api.github.com/users/blackdrag/following{/other_user}","gists_url":"https://api.github.com/users/blackdrag/gists{/gist_id}","starred_url":"https://api.github.com/users/blackdrag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blackdrag/subscriptions","organizations_url":"https://api.github.com/users/blackdrag/orgs","repos_url":"https://api.github.com/users/blackdrag/repos","events_url":"https://api.github.com/users/blackdrag/events{/privacy}","received_events_url":"https://api.github.com/users/blackdrag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T09:54:29Z","updated_at":"2020-08-01T09:54:29Z","author_association":"CONTRIBUTOR","body":"I think we got a good solution in the end","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667505876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667508577","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-667508577","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":667508577,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzUwODU3Nw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T10:17:56Z","updated_at":"2020-08-01T10:17:56Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667508577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667551313","html_url":"https://github.com/apache/groovy/pull/1329#issuecomment-667551313","issue_url":"https://api.github.com/repos/apache/groovy/issues/1329","id":667551313,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzU1MTMxMw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T15:51:39Z","updated_at":"2020-08-01T15:51:39Z","author_association":"CONTRIBUTOR","body":"@blackdrag \r\nYep ;-) About only 290ms costs in the simple benchmark on machine when the PR applied.\r\n\r\n```groovy\r\ndef gstr = makeGString()\r\nlong b = System.currentTimeMillis()\r\nfor (int i = 0; i < 10000000; i++) {\r\n\tgstr.toString()\r\n}\r\nlong e = System.currentTimeMillis()\r\nprintln \"${e - b}ms\"\r\n\r\n//@groovy.transform.CompileStatic\r\ndef makeGString() {\r\n    def now = java.time.LocalDateTime.now()\r\n    \"integer: ${1}, double: ${1.2d}, string: ${'x'}, class: ${Map.class}, boolean: ${true}, now: ${now}\"\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667551313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667600420","html_url":"https://github.com/apache/groovy/pull/1325#issuecomment-667600420","issue_url":"https://api.github.com/repos/apache/groovy/issues/1325","id":667600420,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzYwMDQyMA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T23:35:20Z","updated_at":"2020-08-01T23:35:20Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667600420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667654391","html_url":"https://github.com/apache/groovy/pull/1326#issuecomment-667654391","issue_url":"https://api.github.com/repos/apache/groovy/issues/1326","id":667654391,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzY1NDM5MQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-02T10:08:39Z","updated_at":"2020-08-02T10:08:39Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/667654391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/668368268","html_url":"https://github.com/apache/groovy/pull/1335#issuecomment-668368268","issue_url":"https://api.github.com/repos/apache/groovy/issues/1335","id":668368268,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODM2ODI2OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-04T04:09:30Z","updated_at":"2020-08-04T04:09:30Z","author_association":"CONTRIBUTOR","body":"Merged, thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/668368268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/668397614","html_url":"https://github.com/apache/groovy/pull/1336#issuecomment-668397614","issue_url":"https://api.github.com/repos/apache/groovy/issues/1336","id":668397614,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODM5NzYxNA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-04T06:02:23Z","updated_at":"2020-08-04T06:02:23Z","author_association":"CONTRIBUTOR","body":"Proposed PR merged.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/668397614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/669138850","html_url":"https://github.com/apache/groovy/pull/1332#issuecomment-669138850","issue_url":"https://api.github.com/repos/apache/groovy/issues/1332","id":669138850,"node_id":"MDEyOklzc3VlQ29tbWVudDY2OTEzODg1MA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-05T11:26:07Z","updated_at":"2020-08-05T11:26:07Z","author_association":"CONTRIBUTOR","body":"> > even returning a copy is a breaking change\r\n> \r\n> That's my take. Since there is little chance of avoiding a breaking change, why not stick with returning immutables and let Vert.x adjust to making a copy to iterate over or performing changes after iteration is completed. I don't think the design was to return something for modification; that's exposing the implementation of `ModuleNode`. The emergent behavior that `getImports()` could be iterated over and `addImport(...)` could be called was not intended IMO.\r\n> \r\n> Worst case, could 3.x get the change just for `getImports()` and master be left as is?\r\n\r\n@eric-milles As you will have seen, I reverted everything for now. It would be good to make these all consistent in Groovy 4 but we should provide a consistent approach across all AST nodes and a considered approach for mutating and have any breaking changes (if needed) documented in the release notes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/669138850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/669940506","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-669940506","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":669940506,"node_id":"MDEyOklzc3VlQ29tbWVudDY2OTk0MDUwNg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-06T13:53:21Z","updated_at":"2020-08-06T13:53:21Z","author_association":"MEMBER","body":"Rename \"useAs\" to \"coerce\"?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/669940506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670269846","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-670269846","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":670269846,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDI2OTg0Ng==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T01:22:31Z","updated_at":"2020-08-07T01:22:31Z","author_association":"CONTRIBUTOR","body":"Seems fine to me, @eric-milles.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670269846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670311104","html_url":"https://github.com/apache/groovy/pull/1342#issuecomment-670311104","issue_url":"https://api.github.com/repos/apache/groovy/issues/1342","id":670311104,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDMxMTEwNA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T04:11:05Z","updated_at":"2020-08-07T04:11:05Z","author_association":"CONTRIBUTOR","body":"Since checking individual methods could have a performance impact, I have used a single system property to turn on the disabling feature. E.g.\r\n```\r\n-Dgroovy.macro.disable=true    // turn on globally\r\n-Dgroovy.macro.disable.foo=true  // disable the 'foo' macro (any macro with that name)\r\n\r\n-Dgroovy.extension.disable=true    // turn on globally\r\n-Dgroovy.extension.disable.dump=true  // disable the 'dump' extension method (any with that name)\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670311104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670512582","html_url":"https://github.com/apache/groovy/pull/1343#issuecomment-670512582","issue_url":"https://api.github.com/repos/apache/groovy/issues/1343","id":670512582,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDUxMjU4Mg==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T13:19:14Z","updated_at":"2020-08-07T13:19:14Z","author_association":"MEMBER","body":"Could it be named simply \"groovy-macros\"?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670512582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670514899","html_url":"https://github.com/apache/groovy/pull/1342#issuecomment-670514899","issue_url":"https://api.github.com/repos/apache/groovy/issues/1342","id":670514899,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDUxNDg5OQ==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T13:24:34Z","updated_at":"2020-08-07T13:24:34Z","author_association":"MEMBER","body":"Is there ever a reason to set one of these properties to true?  Instead how about one property that is set the the name(s) of the disabled macros or extensions?  Like, `-Dgroovy.macro.disable=*` or `-Dgroovy.macro.disable=foo,bar` or a pattern that could be compiled once and matched against the names.\r\n\r\nWill it be possible to disable macros or extensions using compiler configuration?  Or is this just a system property mechanism?  IMO there are too many special system property controls/switches.\r\n\r\nIf I want to disable just one instance of `each` or `getAt` (for example) is that possible or must it be all or none?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670514899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670515610","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-670515610","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":670515610,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDUxNTYxMA==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T13:26:13Z","updated_at":"2020-08-07T13:26:13Z","author_association":"MEMBER","body":"Why is the generated method set to skip type checking?  Was it producing STC errors?","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670515610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670761899","html_url":"https://github.com/apache/groovy/pull/1343#issuecomment-670761899","issue_url":"https://api.github.com/repos/apache/groovy/issues/1343","id":670761899,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDc2MTg5OQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T22:26:32Z","updated_at":"2020-08-07T22:26:32Z","author_association":"CONTRIBUTOR","body":"could be but I think that is too close to `groovy-macro`","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670761899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670772378","html_url":"https://github.com/apache/groovy/pull/1342#issuecomment-670772378","issue_url":"https://api.github.com/repos/apache/groovy/issues/1342","id":670772378,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDc3MjM3OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T22:41:37Z","updated_at":"2020-08-07T22:41:37Z","author_association":"CONTRIBUTOR","body":"We could probably do the `-Dgroovy.macro.disable=foo,bar` variant. We want something that is going to be fast, so I'd avoid Patterns.\r\n\r\nA compiler configuration option isn't enough - it doesn't cover dynamic Groovy and I think it might be a little messy trying to block off access to extensions/macros once they are in our caches. Good news though for @CompileStatic code is that you only need the switch during compilation.\r\n\r\nWe could get fancier trying to disable particular variants of extensions/macros but I felt YAGNI calling. I imagine disabling would mostly be for folks already using methods with those names when new macros are introduced. They'd just want to block all variants and perhaps consider refactoring and removing the disable switch later.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670772378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670818274","html_url":"https://github.com/apache/groovy/pull/1342#issuecomment-670818274","issue_url":"https://api.github.com/repos/apache/groovy/issues/1342","id":670818274,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDgxODI3NA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-08T03:44:23Z","updated_at":"2020-08-08T03:44:23Z","author_association":"CONTRIBUTOR","body":"@eric-milles adjusted as per your suggestion","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670818274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670826498","html_url":"https://github.com/apache/groovy/pull/1328#issuecomment-670826498","issue_url":"https://api.github.com/repos/apache/groovy/issues/1328","id":670826498,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDgyNjQ5OA==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-08T05:21:02Z","updated_at":"2020-08-08T05:21:02Z","author_association":"CONTRIBUTOR","body":"Merged, thanks. Agree we need to look further at static compilation cases.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670826498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670842757","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-670842757","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":670842757,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDg0Mjc1Nw==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-08T08:10:11Z","updated_at":"2020-08-08T08:10:11Z","author_association":"CONTRIBUTOR","body":"When define method in a class like this:\r\n\r\n```groovy\r\n@CompileStatic\r\nclass App {\r\n    @NamedVariant(coerce = true)\r\n    void run(int number) {\r\n        println(number)\r\n    }\r\n}\r\n```\r\n\r\nThe generated method will also be compiled statically. So when I call the method:\r\n\r\n```groovy\r\nrun(number: \"123\")\r\n```\r\n\r\nIt will call `DefaultGroovyMethods.asType()` instead of `StringGroovyMethods.asType()`, so the string cannot convert to integer properly. So I must skip `@CompileStatic`.\r\nIn order to achieve this goal, I skip type checking explicitly.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670842757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670842874","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-670842874","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":670842874,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDg0Mjg3NA==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-08T08:11:23Z","updated_at":"2020-08-08T08:11:23Z","author_association":"CONTRIBUTOR","body":"Sorry, I don't know what are the STC errors.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/670842874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671001607","html_url":"https://github.com/apache/groovy/pull/1330#issuecomment-671001607","issue_url":"https://api.github.com/repos/apache/groovy/issues/1330","id":671001607,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTAwMTYwNw==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-09T03:40:03Z","updated_at":"2020-08-09T03:40:03Z","author_association":"CONTRIBUTOR","body":"Merged with some trivial tweaks for better backward compatibility. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671001607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671002758","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671002758","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671002758,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTAwMjc1OA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-09T03:58:25Z","updated_at":"2020-08-09T03:58:25Z","author_association":"CONTRIBUTOR","body":"The relevant test is expected for verifying the changes.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671002758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671006159","html_url":"https://github.com/apache/groovy/pull/1342#issuecomment-671006159","issue_url":"https://api.github.com/repos/apache/groovy/issues/1342","id":671006159,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTAwNjE1OQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-09T04:52:09Z","updated_at":"2020-08-09T04:52:09Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671006159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671006231","html_url":"https://github.com/apache/groovy/pull/1343#issuecomment-671006231","issue_url":"https://api.github.com/repos/apache/groovy/issues/1343","id":671006231,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTAwNjIzMQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-09T04:53:36Z","updated_at":"2020-08-09T04:53:36Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671006231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671053663","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671053663","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671053663,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTA1MzY2Mw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-09T13:42:51Z","updated_at":"2020-08-09T13:43:35Z","author_association":"MEMBER","body":"Instead of calling the `asType` method, you can wrap the expression in a `CastExpression` with coerce set to true.  The compiler will take care of the rest.  This is the literal equivalent of \"expr as Type\" in source.  `GeneralUtils#castX` will create the `CastExpression` and you can then call `setCoerce(true)` or you could go the extra mile and add an `asX` factory method to GeneralUtils that performs these steps.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671053663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671146899","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671146899","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671146899,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTE0Njg5OQ==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T03:26:37Z","updated_at":"2020-08-10T03:26:37Z","author_association":"CONTRIBUTOR","body":"OK, I use `as` expression instead of directly calling `asType()` method.\r\n\r\nAdd I add a test for this.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671146899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671175921","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671175921","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671175921,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTE3NTkyMQ==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T06:00:09Z","updated_at":"2020-08-10T06:00:09Z","author_association":"CONTRIBUTOR","body":"Already add assert to the test, @danielsun1106.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671175921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671180780","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671180780","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671180780,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTE4MDc4MA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T06:15:24Z","updated_at":"2020-08-10T06:15:24Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671180780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671640515","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671640515","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671640515,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTY0MDUxNQ==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T23:31:53Z","updated_at":"2020-08-10T23:31:53Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671640515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671644480","html_url":"https://github.com/apache/groovy/pull/1345#issuecomment-671644480","issue_url":"https://api.github.com/repos/apache/groovy/issues/1345","id":671644480,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTY0NDQ4MA==","user":{"login":"daniellansun","id":9151616,"node_id":"MDQ6VXNlcjkxNTE2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9151616?v=4","gravatar_id":"","url":"https://api.github.com/users/daniellansun","html_url":"https://github.com/daniellansun","followers_url":"https://api.github.com/users/daniellansun/followers","following_url":"https://api.github.com/users/daniellansun/following{/other_user}","gists_url":"https://api.github.com/users/daniellansun/gists{/gist_id}","starred_url":"https://api.github.com/users/daniellansun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniellansun/subscriptions","organizations_url":"https://api.github.com/users/daniellansun/orgs","repos_url":"https://api.github.com/users/daniellansun/repos","events_url":"https://api.github.com/users/daniellansun/events{/privacy}","received_events_url":"https://api.github.com/users/daniellansun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T23:46:46Z","updated_at":"2020-08-10T23:46:46Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671644480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671679821","html_url":"https://github.com/apache/groovy/pull/1339#issuecomment-671679821","issue_url":"https://api.github.com/repos/apache/groovy/issues/1339","id":671679821,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTY3OTgyMQ==","user":{"login":"moonfruit","id":1070090,"node_id":"MDQ6VXNlcjEwNzAwOTA=","avatar_url":"https://avatars.githubusercontent.com/u/1070090?v=4","gravatar_id":"","url":"https://api.github.com/users/moonfruit","html_url":"https://github.com/moonfruit","followers_url":"https://api.github.com/users/moonfruit/followers","following_url":"https://api.github.com/users/moonfruit/following{/other_user}","gists_url":"https://api.github.com/users/moonfruit/gists{/gist_id}","starred_url":"https://api.github.com/users/moonfruit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moonfruit/subscriptions","organizations_url":"https://api.github.com/users/moonfruit/orgs","repos_url":"https://api.github.com/users/moonfruit/repos","events_url":"https://api.github.com/users/moonfruit/events{/privacy}","received_events_url":"https://api.github.com/users/moonfruit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T02:00:55Z","updated_at":"2020-08-11T02:00:55Z","author_association":"CONTRIBUTOR","body":"Glad to hear that!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671679821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671909119","html_url":"https://github.com/apache/groovy/pull/1345#issuecomment-671909119","issue_url":"https://api.github.com/repos/apache/groovy/issues/1345","id":671909119,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTkwOTExOQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T12:13:55Z","updated_at":"2020-08-11T12:13:55Z","author_association":"CONTRIBUTOR","body":"I have a few more changes in mind. I'll amend here before committing.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/671909119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/675767703","html_url":"https://github.com/apache/groovy/pull/1348#issuecomment-675767703","issue_url":"https://api.github.com/repos/apache/groovy/issues/1348","id":675767703,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTc2NzcwMw==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-18T23:25:45Z","updated_at":"2020-08-18T23:25:45Z","author_association":"MEMBER","body":"> Are there any parsing tests that needs to be updated?\r\n\r\nThere are tests for the parser.  I'm not sure exactly where to add this in.  Probably there is a test for \"1 { -> ... }\" and there could be an addition of \"[] { -> ... }\" for your case.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/675767703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/675768280","html_url":"https://github.com/apache/groovy/pull/1348#issuecomment-675768280","issue_url":"https://api.github.com/repos/apache/groovy/issues/1348","id":675768280,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NTc2ODI4MA==","user":{"login":"MykolaGolubyev","id":11657860,"node_id":"MDQ6VXNlcjExNjU3ODYw","avatar_url":"https://avatars.githubusercontent.com/u/11657860?v=4","gravatar_id":"","url":"https://api.github.com/users/MykolaGolubyev","html_url":"https://github.com/MykolaGolubyev","followers_url":"https://api.github.com/users/MykolaGolubyev/followers","following_url":"https://api.github.com/users/MykolaGolubyev/following{/other_user}","gists_url":"https://api.github.com/users/MykolaGolubyev/gists{/gist_id}","starred_url":"https://api.github.com/users/MykolaGolubyev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MykolaGolubyev/subscriptions","organizations_url":"https://api.github.com/users/MykolaGolubyev/orgs","repos_url":"https://api.github.com/users/MykolaGolubyev/repos","events_url":"https://api.github.com/users/MykolaGolubyev/events{/privacy}","received_events_url":"https://api.github.com/users/MykolaGolubyev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-18T23:27:45Z","updated_at":"2020-08-18T23:27:45Z","author_association":"NONE","body":"@eric-milles do you want me to add the test? ","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/675768280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/678829547","html_url":"https://github.com/apache/groovy/pull/1348#issuecomment-678829547","issue_url":"https://api.github.com/repos/apache/groovy/issues/1348","id":678829547,"node_id":"MDEyOklzc3VlQ29tbWVudDY3ODgyOTU0Nw==","user":{"login":"MykolaGolubyev","id":11657860,"node_id":"MDQ6VXNlcjExNjU3ODYw","avatar_url":"https://avatars.githubusercontent.com/u/11657860?v=4","gravatar_id":"","url":"https://api.github.com/users/MykolaGolubyev","html_url":"https://github.com/MykolaGolubyev","followers_url":"https://api.github.com/users/MykolaGolubyev/followers","following_url":"https://api.github.com/users/MykolaGolubyev/following{/other_user}","gists_url":"https://api.github.com/users/MykolaGolubyev/gists{/gist_id}","starred_url":"https://api.github.com/users/MykolaGolubyev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MykolaGolubyev/subscriptions","organizations_url":"https://api.github.com/users/MykolaGolubyev/orgs","repos_url":"https://api.github.com/users/MykolaGolubyev/repos","events_url":"https://api.github.com/users/MykolaGolubyev/events{/privacy}","received_events_url":"https://api.github.com/users/MykolaGolubyev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-23T21:53:33Z","updated_at":"2020-08-23T21:53:33Z","author_association":"NONE","body":"oh nice!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/678829547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682231062","html_url":"https://github.com/apache/groovy/pull/1356#issuecomment-682231062","issue_url":"https://api.github.com/repos/apache/groovy/issues/1356","id":682231062,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjIzMTA2Mg==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-27T22:54:34Z","updated_at":"2020-08-27T22:54:34Z","author_association":"CONTRIBUTOR","body":"@eric-milles To avoid the breaking change on 3_0_X, would something like this keep the IDE happy.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682231062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682250429","html_url":"https://github.com/apache/groovy/pull/1356#issuecomment-682250429","issue_url":"https://api.github.com/repos/apache/groovy/issues/1356","id":682250429,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjI1MDQyOQ==","user":{"login":"eric-milles","id":18193802,"node_id":"MDQ6VXNlcjE4MTkzODAy","avatar_url":"https://avatars.githubusercontent.com/u/18193802?v=4","gravatar_id":"","url":"https://api.github.com/users/eric-milles","html_url":"https://github.com/eric-milles","followers_url":"https://api.github.com/users/eric-milles/followers","following_url":"https://api.github.com/users/eric-milles/following{/other_user}","gists_url":"https://api.github.com/users/eric-milles/gists{/gist_id}","starred_url":"https://api.github.com/users/eric-milles/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eric-milles/subscriptions","organizations_url":"https://api.github.com/users/eric-milles/orgs","repos_url":"https://api.github.com/users/eric-milles/repos","events_url":"https://api.github.com/users/eric-milles/events{/privacy}","received_events_url":"https://api.github.com/users/eric-milles/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-28T00:02:22Z","updated_at":"2020-08-28T00:02:22Z","author_association":"MEMBER","body":"@paulk-asert What is the breaking change?  I'm doubtful anyone relies on runtime retention since the implementation is to read the closure literal's source text and execute that as a script.  You can't even add the arrow to the closure expression without it failing.  There is nothing about the compiled result that is used by ASTTestTransformation.  Only if someone used the ASTTest annotation afterwards for some other purpose would this be a breaking change.\r\n\r\nIt is okay not to merge back into earlier Groovy versions if you are at all concerned.  This particular change would stop the IDE from giving a warning if you fail to supply a closure, so I don't think it is desirable.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682250429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682433893","html_url":"https://github.com/apache/groovy/pull/1356#issuecomment-682433893","issue_url":"https://api.github.com/repos/apache/groovy/issues/1356","id":682433893,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjQzMzg5Mw==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-28T09:44:51Z","updated_at":"2020-08-28T09:44:51Z","author_association":"CONTRIBUTOR","body":"@eric-milles Okay, I'll work on an alternative. Just setting the value to a \"nulled out\" closure expression as per your PR now merged on the master branch isn't good enough if we leave the retention as RUNTIME. And agreed its a very minor breaking change - so I will document it as such in the release notes.","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/682433893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/groovy/issues/comments/683247531","html_url":"https://github.com/apache/groovy/pull/1354#issuecomment-683247531","issue_url":"https://api.github.com/repos/apache/groovy/issues/1354","id":683247531,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MzI0NzUzMQ==","user":{"login":"paulk-asert","id":280016,"node_id":"MDQ6VXNlcjI4MDAxNg==","avatar_url":"https://avatars.githubusercontent.com/u/280016?v=4","gravatar_id":"","url":"https://api.github.com/users/paulk-asert","html_url":"https://github.com/paulk-asert","followers_url":"https://api.github.com/users/paulk-asert/followers","following_url":"https://api.github.com/users/paulk-asert/following{/other_user}","gists_url":"https://api.github.com/users/paulk-asert/gists{/gist_id}","starred_url":"https://api.github.com/users/paulk-asert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulk-asert/subscriptions","organizations_url":"https://api.github.com/users/paulk-asert/orgs","repos_url":"https://api.github.com/users/paulk-asert/repos","events_url":"https://api.github.com/users/paulk-asert/events{/privacy}","received_events_url":"https://api.github.com/users/paulk-asert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-29T06:55:19Z","updated_at":"2020-08-29T06:55:19Z","author_association":"CONTRIBUTOR","body":"Merged. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/groovy/issues/comments/683247531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]