[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521066","html_url":"https://github.com/apache/storm/issues/4474#issuecomment-2612521066","issue_url":"https://api.github.com/repos/apache/storm/issues/4474","id":2612521066,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjEwNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-12T21:49:22Z","updated_at":"2025-01-24T13:22:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/393#issuecomment-74160282\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/393#issuecomment-74160282</a></p>\n\n<p>    +1 (since this is just a doc update, we probably don't need to wait for additional review)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523838","html_url":"https://github.com/apache/storm/issues/4495#issuecomment-2612523838","issue_url":"https://api.github.com/repos/apache/storm/issues/4495","id":2612523838,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjM4Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T00:22:18Z","updated_at":"2025-01-24T13:23:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=parth.brahmbhatt\">parth.brahmbhatt</a>:</i>\n<p><a href=\"https://github.com/Parth-Brahmbhatt/incubator-storm/pull/3\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/Parth-Brahmbhatt/incubator-storm/pull/3</a> posted pull request against my own branch.</p>\n\n<p>I haven't implemented the caching yet. I think we should just cache CluasterInfo. The ui right now makes 4 requests(cluster summary, supervisor summary, topology summary and now nimbus summary) to getClusterInfo for the index page. GetClusterInfo does not have any filters so we end up reading everything form zookeeper even though only one of the 4 params are used by a single request. I don't think consistency is really important in this case and caching this will both improve ui performance and reduce load on zookeeper. </p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74185884","html_url":"https://github.com/apache/storm/pull/354#issuecomment-74185884","issue_url":"https://api.github.com/repos/apache/storm/issues/354","id":74185884,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MTg1ODg0","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T00:53:19Z","updated_at":"2015-02-13T00:53:19Z","author_association":"CONTRIBUTOR","body":"upmerged to master and added the discovery using a thrift API. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74185884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612511212","html_url":"https://github.com/apache/storm/issues/4402#issuecomment-2612511212","issue_url":"https://api.github.com/repos/apache/storm/issues/4402","id":2612511212,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTEyMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T01:24:09Z","updated_at":"2025-01-24T13:17:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\">ptgoetz</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=marz\" class=\"user-hover\" rel=\"marz\">Nathan Marz</a> Maybe the context here (at least the JIRA title) betrays at least what I have in mind...</p>\n\n<p>Assume the title of this JIRA is something like \"Slick GUI for Topology Editing/Management\".</p>\n\n<p>If someone created a great GUI for defining/editing and submitting topologies (no coding or maven packaging required), and that under the covers the app used JSON/YAML to store topology definitions (in a modular/reusable way), would you opposed to adding it as a module under `external`?</p>\n\n<p>When I think of \"Dynamic Topologies\" like the title of this JIRA implies, I think of something more along the lines of what you are alluding to. And I would be supportive of both.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612511212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74202499","html_url":"https://github.com/apache/storm/pull/350#issuecomment-74202499","issue_url":"https://api.github.com/repos/apache/storm/issues/350","id":74202499,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MjAyNDk5","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T04:08:41Z","updated_at":"2015-02-13T04:08:41Z","author_association":"CONTRIBUTOR","body":"Thanks @ptgoetz  for the review. Added sponsors and included you.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74202499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612438872","html_url":"https://github.com/apache/storm/issues/3971#issuecomment-2612438872","issue_url":"https://api.github.com/repos/apache/storm/issues/3971","id":2612438872,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Mzg4NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T17:21:21Z","updated_at":"2025-01-24T12:40:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zroadhouse-rmn\">zroadhouse-rmn</a>:</i>\n<p>This is a problem for us since we'd like to include 3rd party tools like the AWS Java SDK which require libraries that are newer than what are included by Storm.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612438872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467299","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467299","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467299,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjcyOTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T17:30:46Z","updated_at":"2025-01-24T12:54:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24680701\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24680701</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Total number of connection attempts.<br/>\n    +     */<br/>\n    +    private final AtomicInteger totalConnectionAttempts = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of connection attempts since the last disconnect.<br/>\n    +     */<br/>\n    +    private final AtomicInteger connectionAttempts = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages successfully sent to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicInteger messagesSent = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages that could not be sent to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicInteger messagesLost = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages buffered in memory.<br/>\n    +     */<br/>\n    +    private final AtomicLong pendingMessages = new AtomicLong(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * This flag is set to true if and only if a client instance is being closed.<br/>\n    +     */<br/>\n    +    private volatile boolean closing = false;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * When set to true, then the background flusher thread will flush any pending messages on its next run.<br/>\n    +     */<br/>\n    +    private final AtomicBoolean backgroundFlushingEnabled = new AtomicBoolean(false);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The absolute time (in ms) when the next background flush should be performed.<br/>\n    +     *<br/>\n    +     * Note: The flush operation will only be performed if backgroundFlushingEnabled is true, too.<br/>\n    +     */<br/>\n    +    private final AtomicLong nextBackgroundFlushTimeMs = new AtomicLong(DISTANT_FUTURE_TIME_MS);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The time interval (in ms) at which the background flusher thread will be run to check for any pending messages<br/>\n    +     * to be flushed.<br/>\n    +     */<br/>\n    +    private final int flushCheckIntervalMs;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * How many messages should be batched together before sending them to the remote destination.<br/>\n    +     *<br/>\n    +     * Messages are batched to optimize network throughput at the expense of latency.<br/>\n    +     */<br/>\n    +    private final int messageBatchSize;</li>\n</ul>\n\n\n<p> private MessageBatch messageBatch = null;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private AtomicLong flushCheckTimer;</li>\n\t<li>private int flushCheckInterval;</li>\n\t<li>private ScheduledExecutorService scheduler;<br/>\n    +    private final ListeningScheduledExecutorService scheduler;<br/>\n    +    protected final Map stormConf;</li>\n</ul>\n\n\n<p> @SuppressWarnings(\"rawtypes\")</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Client(Map storm_conf, ChannelFactory factory,</li>\n\t<li>ScheduledExecutorService scheduler, String host, int port) {</li>\n\t<li>this.storm_conf = storm_conf;</li>\n\t<li>this.factory = factory;</li>\n\t<li>this.scheduler = scheduler;</li>\n\t<li>channelRef = new AtomicReference<Channel>(null);<br/>\n    +    Client(Map stormConf, ChannelFactory factory, ScheduledExecutorService scheduler, String host, int port) {<br/>\n     closing = false;</li>\n\t<li>pendings = new AtomicLong(0);</li>\n\t<li>flushCheckTimer = new AtomicLong(Long.MAX_VALUE);</li>\n\t<li>totalReconnects = new AtomicInteger(0);</li>\n\t<li>messagesSent = new AtomicInteger(0);</li>\n\t<li>messagesLostReconnect = new AtomicInteger(0);<br/>\n    -</li>\n\t<li>// Configure</li>\n\t<li>buffer_size = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));</li>\n\t<li>max_retries = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_RETRIES));</li>\n\t<li>base_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MIN_SLEEP_MS));</li>\n\t<li>max_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_SLEEP_MS));</li>\n\t<li>retryPolicy = new StormBoundedExponentialBackoffRetry(base_sleep_ms, max_sleep_ms, max_retries);<br/>\n    -</li>\n\t<li>this.messageBatchSize = Utils.getInt(storm_conf.get(Config.STORM_NETTY_MESSAGE_BATCH_SIZE), 262144);</li>\n\t<li></li>\n\t<li>flushCheckInterval = Utils.getInt(storm_conf.get(Config.STORM_NETTY_FLUSH_CHECK_INTERVAL_MS), 10); // default 10 ms<br/>\n    -</li>\n\t<li>LOG.info(\"New Netty Client, connect to \" + host + \", \" + port</li>\n\t<li>+ \", config: \" + \", buffer_size: \" + buffer_size);<br/>\n    -</li>\n\t<li>bootstrap = new ClientBootstrap(factory);<br/>\n    +this.stormConf = stormConf;<br/>\n    +this.scheduler =  MoreExecutors.listeningDecorator(scheduler);<br/>\n    +int bufferSize = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));<br/>\n    +LOG.info(\"creating Netty Client, connecting to {}:{}, bufferSize: {}\", host, port, bufferSize);<br/>\n    +messageBatchSize = Utils.getInt(stormConf.get(Config.STORM_NETTY_MESSAGE_BATCH_SIZE), 262144);<br/>\n    +flushCheckIntervalMs = Utils.getInt(stormConf.get(Config.STORM_NETTY_FLUSH_CHECK_INTERVAL_MS), 10);<br/>\n    +<br/>\n    +maxReconnectionAttempts = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MAX_RETRIES));<br/>\n    +int minWaitMs = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MIN_SLEEP_MS));<br/>\n    +int maxWaitMs = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MAX_SLEEP_MS));<br/>\n    +retryPolicy = new StormBoundedExponentialBackoffRetry(minWaitMs, maxWaitMs, maxReconnectionAttempts);<br/>\n    +<br/>\n    +// Initiate connection to remote destination<br/>\n    +bootstrap = createClientBootstrap(factory, bufferSize);<br/>\n    +dstAddress = new InetSocketAddress(host, port);<br/>\n    +dstAddressPrefixedName = prefixedName(dstAddress);<br/>\n    +connect(NO_DELAY_MS);<br/>\n    +<br/>\n    +// Launch background flushing thread<br/>\n    +pauseBackgroundFlushing();<br/>\n    +long initialDelayMs = Math.min(MINIMUM_INITIAL_DELAY_MS, maxWaitMs * maxReconnectionAttempts);<br/>\n    +scheduler.scheduleWithFixedDelay(createBackgroundFlusher(), initialDelayMs, flushCheckIntervalMs,<br/>\n    +    TimeUnit.MILLISECONDS);<br/>\n    +    }<br/>\n    +<br/>\n    +    private ClientBootstrap createClientBootstrap(ChannelFactory factory, int bufferSize) \n{\n    +ClientBootstrap bootstrap = new ClientBootstrap(factory);\n     bootstrap.setOption(\"tcpNoDelay\", true);\n    -bootstrap.setOption(\"sendBufferSize\", buffer_size);\n    +bootstrap.setOption(\"sendBufferSize\", bufferSize);\n     bootstrap.setOption(\"keepAlive\", true);\n    -\n    -// Set up the pipeline factory.\n     bootstrap.setPipelineFactory(new StormClientPipelineFactory(this));\n    +return bootstrap;\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>// Start the connection attempt.</li>\n\t<li>remote_addr = new InetSocketAddress(host, port);</li>\n\t<li></li>\n\t<li>// setup the connection asyncly now</li>\n\t<li>scheduler.execute(new Runnable() {</li>\n\t<li>@Override</li>\n\t<li>public void run() \n{   \n    -connect();\n    -    }</li>\n\t<li>});</li>\n\t<li></li>\n\t<li>Runnable flusher = new Runnable() {<br/>\n    +    private String prefixedName(InetSocketAddress dstAddress) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (null != dstAddress) {\n    +    return PREFIX + dstAddress.toString();\n    +}    +return \"\";    +    }</span> </div>\n<p>    +<br/>\n    +    private Runnable createBackgroundFlusher() {<br/>\n    +return new Runnable() {<br/>\n @Override<br/>\n public void run() {<br/>\n    -</p></li>\n\t<li>if(!closing) {</li>\n\t<li>long flushCheckTime = flushCheckTimer.get();</li>\n\t<li>long now = System.currentTimeMillis();</li>\n\t<li>if (now > flushCheckTime) {</li>\n\t<li>Channel channel = channelRef.get();</li>\n\t<li>if (null != channel && channel.isWritable()) \n{\n    -    flush(channel);\n    -}</li>\n\t<li>}<br/>\n    +if(!closing && backgroundFlushingEnabled.get() && nowMillis() > nextBackgroundFlushTimeMs.get()) {<br/>\n    +    LOG.debug(\"flushing {} pending messages to {} in background\", messageBatch.size(),<br/>\n    +dstAddressPrefixedName);<br/>\n    +    flushPendingMessages();<br/>\n     }</li>\n\t<li><p> }<br/>\n     };</p></li>\n\t<li></li>\n\t<li>long initialDelay = Math.min(30L * 1000, max_sleep_ms * max_retries); //max wait for 30s</li>\n\t<li>scheduler.scheduleWithFixedDelay(flusher, initialDelay, flushCheckInterval, TimeUnit.MILLISECONDS);<br/>\n    +    }<br/>\n    +<br/>\n    +    private void pauseBackgroundFlushing() \n{\n    +backgroundFlushingEnabled.set(false);\n    +    }\n<p>    +<br/>\n    +    private void resumeBackgroundFlushing() </p>\n{\n    +backgroundFlushingEnabled.set(true);\n    +    }\n<p>    +<br/>\n    +    private synchronized void flushPendingMessages() {<br/>\n    +Channel channel = channelRef.get();<br/>\n    +if (containsMessages(messageBatch)) {<br/>\n    +    if (connectionEstablished(channel)) </p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (channel.isWritable()) {\n    +    pauseBackgroundFlushing();\n    +    MessageBatch toBeFlushed = messageBatch;\n    +    flushMessages(channel, toBeFlushed);\n    +    messageBatch = null;\n    +}    +else if (closing) {\n    +    // Ensure background flushing is enabled so that we definitely have a chance to re-try the flush\n    +    // operation in case the client is being gracefully closed (where we have a brief time window where\n    +    // the client will wait for pending messages to be sent).\n    +    resumeBackgroundFlushing();\n    +}    +    }</span> </div>\n<p>    +    else </p>\n{\n    +closeChannelAndReconnect(channel);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private long nowMillis() </p>\n{\n    +return System.currentTimeMillis();\n }</li>\n</ul>\n\n\n<p> /**</p>\n<ul>\n\t<li>We will retry connection with exponential back-off policy<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private synchronized void connect() {<br/>\n    +    private synchronized void connect(long delayMs) {<br/>\n     try {<br/>\n    +    if (closing) \n{\n    +return;\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>Channel channel = channelRef.get();</li>\n\t<li>if (channel != null && channel.isConnected()) {<br/>\n    +    if (connectionEstablished(channelRef.get())) \n{\n     return;\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>int tried = 0;</li>\n\t<li>//setting channel to null to make sure we throw an exception when reconnection fails</li>\n\t<li>channel = null;</li>\n\t<li>while (tried <= max_retries) {<br/>\n    -</li>\n\t<li>LOG.info(\"Reconnect started for {}... <span class=\"error\">&#91;{}&#93;</span>\", name(), tried);</li>\n\t<li>LOG.debug(\"connection started...\");<br/>\n    -</li>\n\t<li>totalReconnects.getAndIncrement();</li>\n\t<li>ChannelFuture future = bootstrap.connect(remote_addr);</li>\n\t<li>future.awaitUninterruptibly();</li>\n\t<li>Channel current = future.getChannel();</li>\n\t<li>if (!future.isSuccess()) {</li>\n\t<li>if (null != current) {</li>\n\t<li>current.close();<br/>\n    +    connectionAttempts.getAndIncrement();<br/>\n    +    if (reconnectingAllowed()) {<br/>\n    +totalConnectionAttempts.getAndIncrement();<br/>\n    +LOG.info(\"connection attempt {} to {} scheduled to run in {} ms\", connectionAttempts.get(),<br/>\n    +    dstAddressPrefixedName, delayMs);<br/>\n    +ListenableFuture<Channel> channelFuture = scheduler.schedule(<br/>\n    +    new Connector(dstAddress, connectionAttempts.get()), delayMs, TimeUnit.MILLISECONDS);<br/>\n    +Futures.addCallback(channelFuture, new FutureCallback<Channel>() {<br/>\n    +    @Override public void onSuccess(Channel result) {<br/>\n    +if (connectionEstablished(result)) {<br/>\n    +    setChannel(result);<br/>\n    +    LOG.info(\"connection established to {}\", dstAddressPrefixedName);<br/>\n    +    connectionAttempts.set(0);<br/>\n    +}<br/>\n    +else \n{\n    +    reconnectAgain(new RuntimeException(\"Returned channel was actually not established\"));\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override public void onFailure(Throwable t) </p>\n{\n    +reconnectAgain(t);\n }</li>\n\t<li>} else \n{\n    -    channel = current;\n    -    break;\n    -}</li>\n\t<li>Thread.sleep(retryPolicy.getSleepTimeMs(tried, 0));</li>\n\t<li>tried++;<br/>\n    +<br/>\n    +    private void reconnectAgain(Throwable t) \n{\n    +String baseMsg = String.format(\"connection attempt %s to %s failed\", connectionAttempts,\n    +    dstAddressPrefixedName);\n    +String failureMsg = (t == null)? baseMsg : baseMsg + \": \" + t.toString();\n    +LOG.error(failureMsg);\n    +long nextDelayMs = retryPolicy.getSleepTimeMs(connectionAttempts.get(), 0);\n    +connect(nextDelayMs);\n    +    }\n<p>    +});<br/>\n }</p></li>\n\t<li>if (null != channel) \n{\n    -LOG.info(\"connection established to a remote host \" + name() + \", \" + channel.toString());\n    -channelRef.set(channel);\n    -    }\n<p> else {<br/>\n    +    else </p>\n{\n     close();\n    -throw new RuntimeException(\"Remote address is not reachable. We will close this client \" + name());\n    +throw new RuntimeException(\"Giving up to connect to \" + dstAddressPrefixedName + \" after \" +\n    +    connectionAttempts + \" failed attempts\");\n }</li>\n\t<li>} catch (InterruptedException e) \n{\n    -    throw new RuntimeException(\"connection failed \" + name(), e);\n     }\n<p>    +catch (Exception e) </p>\n{\n    +    throw new RuntimeException(\"Failed to connect to \" + dstAddressPrefixedName, e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private void setChannel(Channel channel) </p>\n{\n    +channelRef.set(channel);\n    +    }\n<p>    +<br/>\n    +    private boolean reconnectingAllowed() </p>\n{\n    +return !closing && connectionAttempts.get() <= (maxReconnectionAttempts + 1);\n    +    }\n<p>    +<br/>\n    +    private boolean connectionEstablished(Channel channel) </p>\n{\n    +// Because we are using TCP (which is a connection-oriented transport unlike UDP), a connection is only fully\n    +// established iff the channel is connected.  That is, a TCP-based channel must be in the CONNECTED state before\n    +// anything can be read or written to the channel.\n    +//\n    +// See:\n    +// - http://netty.io/3.9/api/org/jboss/netty/channel/ChannelEvent.html\n    +// - http://stackoverflow.com/questions/13356622/what-are-the-netty-channel-state-transitions\n    +return channel != null && channel.isConnected();\n }</li>\n</ul>\n\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Enqueue task messages to be sent to server<br/>\n    +     * Note:  Storm will check via this method whether a worker can be activated safely during the initial startup of a<br/>\n    +     * topology.  The worker will only be activated once all of the its connections are ready.<br/>\n  */</li>\n\t<li>synchronized public void send(Iterator<TaskMessage> msgs) {<br/>\n    +    @Override<br/>\n    +    public Status status() \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (closing) {\n    +    return Status.Closed;\n    +}    +else if (!connectionEstablished(channelRef.get())) {\n    +    return Status.Connecting;\n    +}    +else {\n    +    return Status.Ready;\n    +}    +    }</span> </div>\n<p>    +<br/>\n    +    /**<br/>\n    +     * Receiving messages is not supported by a client.<br/>\n    +     *<br/>\n    +     * @throws java.lang.UnsupportedOperationException whenever this method is being called.<br/>\n    +     */<br/>\n    +    @Override<br/>\n    +    public Iterator<TaskMessage> recv(int flags, int clientId) </p>\n{\n    +throw new UnsupportedOperationException(\"Client connection should not receive any messages\");\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>// throw exception if the client is being closed<br/>\n    +    @Override<br/>\n    +    public void send(int taskId, byte[] payload) \n{\n    +TaskMessage msg = new TaskMessage(taskId, payload);\n    +List<TaskMessage> wrapper = new ArrayList<TaskMessage>(1);\n    +wrapper.add(msg);\n    +send(wrapper.iterator());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Enqueue task messages to be sent to the remote destination (cf. `host` and `port`).<br/>\n    +     */<br/>\n    +    @Override<br/>\n    +    public synchronized void send(Iterator<TaskMessage> msgs) {<br/>\n     if (closing) {</p></li>\n\t<li>throw new RuntimeException(\"Client is being closed, and does not take requests any more\");<br/>\n    +    int numMessages = iteratorSize(msgs);<br/>\n    +    LOG.warn(\"discarding {} messages because the Netty client to {} is being closed\", numMessages,<br/>\n    +dstAddressPrefixedName);<br/>\n    +    return;<br/>\n     }</li>\n\t<li></li>\n\t<li>if (null == msgs || !msgs.hasNext()) {<br/>\n    +<br/>\n    +if (!hasMessages(msgs)) \n{\n return;\n     }</li>\n</ul>\n\n\n<p>     Channel channel = channelRef.get();</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (null == channel) {</li>\n\t<li>connect();</li>\n\t<li>channel = channelRef.get();<br/>\n    +if (!connectionEstablished(channel)) \n{\n    +    // Closing the channel and reconnecting should be done before handling the messages.\n    +    closeChannelAndReconnect(channel);\n    +    handleMessagesWhenConnectionIsUnavailable(msgs);\n    +    return;\n     }</li>\n</ul>\n\n\n<p>    +// Collect messages into batches (to optimize network throughput), then flush them.<br/>\n     while (msgs.hasNext()) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (!channel.isConnected()) \n{\n    -connect();\n    -channel = channelRef.get();\n    -    }\n<p> TaskMessage message = msgs.next();</p></li>\n\t<li>if (null == messageBatch) {<br/>\n    +    if (messageBatch == null) \n{\n     messageBatch = new MessageBatch(messageBatchSize);\n }</li>\n</ul>\n\n\n<p> messageBatch.add(message);<br/>\n if (messageBatch.isFull()) </p>\n{\n     MessageBatch toBeFlushed = messageBatch;\n    -flushRequest(channel, toBeFlushed);\n    +flushMessages(channel, toBeFlushed);\n     messageBatch = null;\n }\n<p>     }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (null != messageBatch && !messageBatch.isEmpty()) {</li>\n\t<li>if (channel.isWritable()) {</li>\n\t<li>flushCheckTimer.set(Long.MAX_VALUE);</li>\n\t<li></li>\n\t<li>// Flush as fast as we can to reduce the latency<br/>\n    +// Handle any remaining messages in case the \"last\" batch was not full.<br/>\n    +if (containsMessages(messageBatch)) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    if (connectionEstablished(channel) && channel.isWritable()) {\n    +// We can write to the channel, so we flush the remaining messages immediately to minimize latency.\n    +pauseBackgroundFlushing();\n     MessageBatch toBeFlushed = messageBatch;\n     messageBatch = null;\n    -flushRequest(channel, toBeFlushed);\n    -\n    -    } else {\n    -// when channel is NOT writable, it means the internal netty buffer is full. \n    -// In this case, we can try to buffer up more incoming messages.\n    -flushCheckTimer.set(System.currentTimeMillis() + flushCheckInterval);\n    +flushMessages(channel, toBeFlushed);\n    +    }    +    else {\n    +// We cannot write to the channel, which means Netty's internal write buffer is full.\n    +// In this case, we buffer the remaining messages and wait for the next messages to arrive.\n    +//\n    +// Background:\n    +// Netty 3.x maintains an internal write buffer with a high water mark for each channel (default: 64K).\n    +// This represents the amount of data waiting to be flushed to operating system buffers.  If the\n    +// outstanding data exceeds this value then the channel is set to non-writable.  When this happens, a\n    +// INTEREST_CHANGED channel event is triggered.  Netty sets the channel to writable again once the data\n    +// has been flushed to the system buffers.\n    +//\n    +// See http://stackoverflow.com/questions/14049260\n    +resumeBackgroundFlushing();\n    +nextBackgroundFlushTimeMs.set(nowMillis() + flushCheckIntervalMs);\n }     }</span> </div></li>\n</ul>\n\n\n<p> }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public String name() {</li>\n\t<li>if (null != remote_addr) \n{\n    -    return PREFIX + remote_addr.toString();\n    -}</li>\n\t<li>return \"\";<br/>\n    +    private boolean hasMessages(Iterator<TaskMessage> msgs) \n{\n    +return msgs != null && msgs.hasNext();\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private synchronized void flush(Channel channel) {</li>\n\t<li>if (!closing) {</li>\n\t<li>if (null != messageBatch && !messageBatch.isEmpty()) {</li>\n\t<li>MessageBatch toBeFlushed = messageBatch;</li>\n\t<li>flushCheckTimer.set(Long.MAX_VALUE);</li>\n\t<li>flushRequest(channel, toBeFlushed);</li>\n\t<li>messageBatch = null;<br/>\n    +    /**<br/>\n    +     * We will drop pending messages and let at-least-once message replay kick in.<br/>\n    +     *<br/>\n    +     * Another option would be to buffer the messages in memory.  But this option has the risk of causing OOM errors,<br/>\n    +     * especially for topologies that disable message acking because we don't know whether the connection recovery will<br/>\n    +     * succeed  or not, and how long the recovery will take.<br/>\n    +     */<br/>\n    +    private void handleMessagesWhenConnectionIsUnavailable(Iterator<TaskMessage> msgs) {<br/>\n    +LOG.error(\"connection to {} is unavailable\", dstAddressPrefixedName);<br/>\n    +dropPendingMessages(msgs);<br/>\n    +    }<br/>\n    +<br/>\n    +    private void dropPendingMessages(Iterator<TaskMessage> msgs) {<br/>\n    +// We consume the iterator by traversing and thus \"emptying\" it.<br/>\n    +int msgCount = iteratorSize(msgs);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    We are throwing away messages, it would be nice to include that in the state so we can know how many messages we threw away waiting for a worker to come up.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467302","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467302","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467302,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T17:35:21Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24681006\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24681006</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I'm not sure we want a maximum number of reconnection attempts, or if we have it we need to think about how we intend to recover from it.  This could be a separate JIRA, but we ran into a situation where we hit the maximum number of reconnection attempts, and the exception was eaten because it was thrown from a background thread and it just killed the background thread.  This code appears to do the same thing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74302421","html_url":"https://github.com/apache/storm/pull/412#issuecomment-74302421","issue_url":"https://api.github.com/repos/apache/storm/issues/412","id":74302421,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzAyNDIx","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T18:33:25Z","updated_at":"2015-02-13T18:33:25Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74302421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521928","html_url":"https://github.com/apache/storm/issues/4481#issuecomment-2612521928","issue_url":"https://api.github.com/repos/apache/storm/issues/4481","id":2612521928,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjE5Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T18:33:26Z","updated_at":"2025-01-24T13:23:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/412#issuecomment-74302421\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/412#issuecomment-74302421</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74308624","html_url":"https://github.com/apache/storm/pull/354#issuecomment-74308624","issue_url":"https://api.github.com/repos/apache/storm/issues/354","id":74308624,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzA4NjI0","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T19:11:01Z","updated_at":"2015-02-13T19:12:10Z","author_association":"CONTRIBUTOR","body":"@revans2 I have added the nimbus discovery using thrift API to address your concerns around clients connecting directly to zookeeper. \n\nFor fencing around zk, non leader nimbuses still need to write some information (e.g. they write /storm/code-distributor/ what topologies they have locally replicated,and now they also write their nimbus summary under /storm/nimbuses) which means I can not put a single fencing around all zk write. One way or another I will have to differentiate between leader operations vs non leader operation. I prefer to put the fencing upfront so any in memory states are also not altered.\n\nI can make the assumption that ICodeDistributor implementation are always backed by highly available storage systems and that will allow for removal of coupling with replication count but then unless STORM-411 is done we will have to force users to use HDFS to achieve nimbus HA.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74308624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478459","html_url":"https://github.com/apache/storm/issues/4253#issuecomment-2612478459","issue_url":"https://api.github.com/repos/apache/storm/issues/4253","id":2612478459,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzg0NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T19:11:05Z","updated_at":"2025-01-24T13:00:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/354#issuecomment-74308624\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/354#issuecomment-74308624</a></p>\n\n<p>    @revans2 I have added the nimbus discovery using thrift API to address your concerns around clients connecting directly to zookeeper. </p>\n\n<p>    For fencing around zk, non leader nimbuses still need to write some information (e.g. they write /storm/code-distributor/ what topologies they have locally replicated,and now they also write their nimbus summary under /storm/nimbuses) which means I can not put a single fencing around all zk write. One way or another I will have to differentiate between leader operations vs non leader operation. I prefer to put the fencing upfront so any in memory states are also not altered.</p>\n\n<p>    The coupling between storage layer and leader election is a side effect of having to support a protocol like bittorrent in absence of any highly available storage from which other hosts could download .torrent files. I can make the assumption that ICodeDistributor implementation are always backed by highly available storage systems and that will allow for removal of coupling with replication count but then unless <a href=\"https://issues.apache.org/jira/browse/STORM-411\" title=\"Extend file uploads to support more distributed cache like semantics\" class=\"issue-link\" data-issue-key=\"STORM-411\"><del>STORM-411</del></a> is done we will have to force users to use HDFS to achieve nimbus HA.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74308715","html_url":"https://github.com/apache/storm/pull/354#issuecomment-74308715","issue_url":"https://api.github.com/repos/apache/storm/issues/354","id":74308715,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzA4NzE1","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T19:11:30Z","updated_at":"2015-02-13T19:11:30Z","author_association":"CONTRIBUTOR","body":"@ptgoetz When you have time can you please review this?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74308715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74317241","html_url":"https://github.com/apache/storm/pull/408#issuecomment-74317241","issue_url":"https://api.github.com/repos/apache/storm/issues/408","id":74317241,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzE3MjQx","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T20:02:40Z","updated_at":"2015-02-13T20:02:40Z","author_association":"MEMBER","body":"+1 I think this will just prevent stacktraces due to the immediate shutdown, but I'm fine with the change.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74317241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523083","html_url":"https://github.com/apache/storm/issues/4489#issuecomment-2612523083","issue_url":"https://api.github.com/repos/apache/storm/issues/4489","id":2612523083,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjMwODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T20:02:41Z","updated_at":"2025-01-24T13:23:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/408#issuecomment-74317241\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/408#issuecomment-74317241</a></p>\n\n<p>    +1 I think this will just prevent stacktraces due to the immediate shutdown, but I'm fine with the change.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612514351","html_url":"https://github.com/apache/storm/issues/4425#issuecomment-2612514351","issue_url":"https://api.github.com/repos/apache/storm/issues/4425","id":2612514351,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTQzNTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T20:29:29Z","updated_at":"2025-01-24T13:19:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thinking about it now this is probably marked too high in severity.  The current state is two wrongs making it not that bad.  The logging metrics consumer just puts its logs in with the worker logs.  This works just fine, so long as you don't mind filtering them out. Perhaps we should just remove the section for metircs.log altogether and call it good.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612514351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74323953","html_url":"https://github.com/apache/storm/pull/354#issuecomment-74323953","issue_url":"https://api.github.com/repos/apache/storm/issues/354","id":74323953,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzIzOTUz","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T20:45:52Z","updated_at":"2015-02-13T20:45:52Z","author_association":"MEMBER","body":"@Parth-Brahmbhatt I'm in the process, but it might take a while. I want to run some tests with different failure scenarios, but so far I like what I see.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74323953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74326698","html_url":"https://github.com/apache/storm/pull/354#issuecomment-74326698","issue_url":"https://api.github.com/repos/apache/storm/issues/354","id":74326698,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzI2Njk4","user":{"login":"tdunning","id":250490,"node_id":"MDQ6VXNlcjI1MDQ5MA==","avatar_url":"https://avatars.githubusercontent.com/u/250490?v=4","gravatar_id":"","url":"https://api.github.com/users/tdunning","html_url":"https://github.com/tdunning","followers_url":"https://api.github.com/users/tdunning/followers","following_url":"https://api.github.com/users/tdunning/following{/other_user}","gists_url":"https://api.github.com/users/tdunning/gists{/gist_id}","starred_url":"https://api.github.com/users/tdunning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tdunning/subscriptions","organizations_url":"https://api.github.com/users/tdunning/orgs","repos_url":"https://api.github.com/users/tdunning/repos","events_url":"https://api.github.com/users/tdunning/events{/privacy}","received_events_url":"https://api.github.com/users/tdunning/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T21:05:34Z","updated_at":"2015-02-13T21:05:34Z","author_association":"NONE","body":"This is a bit late, but a ZK capability that might help with fencing is the multi operation.  What you can do is to a check on a leader election znode in the same multi that you are doing a state update.  If the leader election znode does not have the expected value, the state update will not be done.\n\nYou may also be able to use version numbers to achieve the desired fencing.  You could do a read of the state, verify that the correct master is listed in the state and then do a modify that requires a known version.  This will fail if somebody else has updated the state, but will succeed if the updating node is still the master.\n\nThese sorts of guaranteed updates are more secure than most other forms of fencing because they are guaranteed against race conditions, partitions and time faults.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74326698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74335484","html_url":"https://github.com/apache/storm/pull/237#issuecomment-74335484","issue_url":"https://api.github.com/repos/apache/storm/issues/237","id":74335484,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzM1NDg0","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T22:06:26Z","updated_at":"2015-02-13T22:06:26Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74335484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612482639","html_url":"https://github.com/apache/storm/issues/4283#issuecomment-2612482639","issue_url":"https://api.github.com/repos/apache/storm/issues/4283","id":2612482639,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODI2Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T22:06:27Z","updated_at":"2025-01-24T13:02:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/237#issuecomment-74335484\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/237#issuecomment-74335484</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612482639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523326","html_url":"https://github.com/apache/storm/issues/4491#issuecomment-2612523326","issue_url":"https://api.github.com/repos/apache/storm/issues/4491","id":2612523326,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjMzMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-13T23:57:10Z","updated_at":"2025-01-24T13:23:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jkreps\">jkreps</a>:</i>\n<p>Hey guys, from my pov the best thing to do would be to get on the new and improved Java APIs. We believe these should do what you want and should allow dramatically simplifying your code.</p>\n\n<p>There are several incidental improvements you should get out of this: (1) no more scala dependency, (2) clients are in their own jar so no pulling in server deps, (3) richer api which should make reaching around to ZK unnecessary. These are intended to be the long term supported JVM apis.</p>\n\n<p>The new producer is ready to go and is in the 0.8.2 release. It is protocol compatible with any 0.8.x release so depending on this doesn't require users to upgrade their Kafka installation. It's much much faster than the previous producer in general but especially when doing synchronous acknowledgements.</p>\n\n<p>The new consumer is on trunk now and is beta quality. It does not yet include the regular expression support and it does not yet allow automatic partition balancing (that is pending server-side features). Both those are coming, though (but I don't think you guys do regex now and you do your own partition assignment anyway). The advantage of this new client for the consumer is it will give you full control over your offset, includes support for committing offsets, and gives you full control over partition assignment but doesn't require you to manually discover brokers and manage failover which is hyper error-prone. The timeline for a production-quality release is probably about 3 months. </p>\n\n<p>The producer APIs are still changeable as this is pre-release, so if there is any gap in what you would need, now we be a fantastic time to flag it. You can see the new APIs here:<br/>\n<a href=\"http://kafka.apache.org/083/javadoc/index.html?org/apache/kafka/clients/consumer/KafkaConsumer.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://kafka.apache.org/083/javadoc/index.html?org/apache/kafka/clients/consumer/KafkaConsumer.html</a></p>\n\n<p>If anyone would like to have a brief conversation about the APIs I'd be happy to do that sometime after next week.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523332","html_url":"https://github.com/apache/storm/issues/4491#issuecomment-2612523332","issue_url":"https://api.github.com/repos/apache/storm/issues/4491","id":2612523332,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjMzMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T00:12:45Z","updated_at":"2025-01-24T13:23:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wurstmeister\">wurstmeister</a>:</i>\n<p>Hi Jay,</p>\n\n<p>thanks for the feedback. I'll have a look at the new consumer API and will see how we could make it fit so that we can get an idea for a migration path.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612523332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612515806","html_url":"https://github.com/apache/storm/issues/4435#issuecomment-2612515806","issue_url":"https://api.github.com/repos/apache/storm/issues/4435","id":2612515806,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTU4MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T00:25:45Z","updated_at":"2025-01-24T13:19:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sriharsha\">sriharsha</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=harshab85%40gmail.com\" class=\"user-hover\" rel=\"harshab85@gmail.com\">HARSHA BALASUBRAMANIAN</a> Any update on this JIRA. If you made progress on this jira can you please share your findings. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612515806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74376482","html_url":"https://github.com/apache/storm/pull/280#issuecomment-74376482","issue_url":"https://api.github.com/repos/apache/storm/issues/280","id":74376482,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc2NDgy","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T14:12:48Z","updated_at":"2015-02-14T14:12:48Z","author_association":"CONTRIBUTOR","body":"@dashengju @harshach \nSince there's no exec on Windows, we can check os, and use sub.call() if it's Windows, and use os.execvp() if it's not Windows.\nIf you think it makes sense, I'll file new JIRA and post a relevant PR.\nThanks!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74376482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612488768","html_url":"https://github.com/apache/storm/issues/4329#issuecomment-2612488768","issue_url":"https://api.github.com/repos/apache/storm/issues/4329","id":2612488768,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODg3Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T14:12:49Z","updated_at":"2025-01-24T13:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/280#issuecomment-74376482\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/280#issuecomment-74376482</a></p>\n\n<p>    @dashengju @harshach <br/>\n    Since there's no exec on Windows, we can check os, and use sub.call() if it's Windows, and use os.execvp() if it's not Windows.<br/>\n    If you think it makes sense, I'll file new JIRA and post a relevant PR.<br/>\n    Thanks!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612488768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74376629","html_url":"https://github.com/apache/storm/pull/365#issuecomment-74376629","issue_url":"https://api.github.com/repos/apache/storm/issues/365","id":74376629,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc2NjI5","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T14:16:05Z","updated_at":"2015-02-14T14:16:05Z","author_association":"CONTRIBUTOR","body":"Since we changed committer sponsor, seems like we can pull this in.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74376629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612517995","html_url":"https://github.com/apache/storm/issues/4450#issuecomment-2612517995","issue_url":"https://api.github.com/repos/apache/storm/issues/4450","id":2612517995,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTc5OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-14T14:16:05Z","updated_at":"2025-01-24T13:20:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/365#issuecomment-74376629\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/365#issuecomment-74376629</a></p>\n\n<p>    Since we changed committer sponsor, seems like we can pull this in.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612517995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612525814","html_url":"https://github.com/apache/storm/issues/4512#issuecomment-2612525814","issue_url":"https://api.github.com/repos/apache/storm/issues/4512","id":2612525814,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjU4MTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-15T11:29:29Z","updated_at":"2025-01-24T13:25:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lewuathe\">lewuathe</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a> Can I work on this issue? My understanding to this measurement is that each component save slowest serialization/deserialization time in TopologyInfo and user can lookup this metrics from ui view, right?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612525814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74449611","html_url":"https://github.com/apache/storm/pull/389#issuecomment-74449611","issue_url":"https://api.github.com/repos/apache/storm/issues/389","id":74449611,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NDQ5NjEx","user":{"login":"rekhajoshm","id":5987836,"node_id":"MDQ6VXNlcjU5ODc4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/5987836?v=4","gravatar_id":"","url":"https://api.github.com/users/rekhajoshm","html_url":"https://github.com/rekhajoshm","followers_url":"https://api.github.com/users/rekhajoshm/followers","following_url":"https://api.github.com/users/rekhajoshm/following{/other_user}","gists_url":"https://api.github.com/users/rekhajoshm/gists{/gist_id}","starred_url":"https://api.github.com/users/rekhajoshm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rekhajoshm/subscriptions","organizations_url":"https://api.github.com/users/rekhajoshm/orgs","repos_url":"https://api.github.com/users/rekhajoshm/repos","events_url":"https://api.github.com/users/rekhajoshm/events{/privacy}","received_events_url":"https://api.github.com/users/rekhajoshm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T01:39:28Z","updated_at":"2015-02-16T01:39:28Z","author_association":"NONE","body":"closing to correct branch issue.thanks\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74449611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612504227","html_url":"https://github.com/apache/storm/issues/4370#issuecomment-2612504227","issue_url":"https://api.github.com/repos/apache/storm/issues/4370","id":2612504227,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MDQyMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T01:39:30Z","updated_at":"2025-01-24T13:13:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user rekhajoshm closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/389\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/389</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612504227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74460727","html_url":"https://github.com/apache/storm/pull/288#issuecomment-74460727","issue_url":"https://api.github.com/repos/apache/storm/issues/288","id":74460727,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NDYwNzI3","user":{"login":"BuDongDong","id":8804618,"node_id":"MDQ6VXNlcjg4MDQ2MTg=","avatar_url":"https://avatars.githubusercontent.com/u/8804618?v=4","gravatar_id":"","url":"https://api.github.com/users/BuDongDong","html_url":"https://github.com/BuDongDong","followers_url":"https://api.github.com/users/BuDongDong/followers","following_url":"https://api.github.com/users/BuDongDong/following{/other_user}","gists_url":"https://api.github.com/users/BuDongDong/gists{/gist_id}","starred_url":"https://api.github.com/users/BuDongDong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BuDongDong/subscriptions","organizations_url":"https://api.github.com/users/BuDongDong/orgs","repos_url":"https://api.github.com/users/BuDongDong/repos","events_url":"https://api.github.com/users/BuDongDong/events{/privacy}","received_events_url":"https://api.github.com/users/BuDongDong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T05:11:18Z","updated_at":"2015-02-16T05:11:18Z","author_association":"CONTRIBUTOR","body":"@revans2 ok, i will close this pull request.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74460727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74463198","html_url":"https://github.com/apache/storm/pull/312#issuecomment-74463198","issue_url":"https://api.github.com/repos/apache/storm/issues/312","id":74463198,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NDYzMTk4","user":{"login":"BuDongDong","id":8804618,"node_id":"MDQ6VXNlcjg4MDQ2MTg=","avatar_url":"https://avatars.githubusercontent.com/u/8804618?v=4","gravatar_id":"","url":"https://api.github.com/users/BuDongDong","html_url":"https://github.com/BuDongDong","followers_url":"https://api.github.com/users/BuDongDong/followers","following_url":"https://api.github.com/users/BuDongDong/following{/other_user}","gists_url":"https://api.github.com/users/BuDongDong/gists{/gist_id}","starred_url":"https://api.github.com/users/BuDongDong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BuDongDong/subscriptions","organizations_url":"https://api.github.com/users/BuDongDong/orgs","repos_url":"https://api.github.com/users/BuDongDong/repos","events_url":"https://api.github.com/users/BuDongDong/events{/privacy}","received_events_url":"https://api.github.com/users/BuDongDong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T05:58:26Z","updated_at":"2015-02-16T06:04:26Z","author_association":"CONTRIBUTOR","body":"@revans2 I create a new repository, and  pull this request again. see https://github.com/apache/storm/pull/433.\nI have filed a JIRA, https://issues.apache.org/jira/browse/STORM-554.\nyou can merge https://github.com/apache/storm/pull/433.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74463198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510232","html_url":"https://github.com/apache/storm/issues/4395#issuecomment-2612510232","issue_url":"https://api.github.com/repos/apache/storm/issues/4395","id":2612510232,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTAyMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T05:58:27Z","updated_at":"2025-01-24T13:17:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user BuDongDong commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/312#issuecomment-74463198\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/312#issuecomment-74463198</a></p>\n\n<p>    @revans2 I create a new repository, and  pull this request again. see <a href=\"https://github.com/apache/storm/pull/433\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/433</a>.<br/>\n    I have filed a JIRA, <a href=\"https://issues.apache.org/jira/browse/STORM-554\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-554</a>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510238","html_url":"https://github.com/apache/storm/issues/4395#issuecomment-2612510238","issue_url":"https://api.github.com/repos/apache/storm/issues/4395","id":2612510238,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTAyMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T06:02:12Z","updated_at":"2025-01-24T13:17:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhangjinlong\">zhangjinlong</a>:</i>\n<p>please see <a href=\"https://github.com/apache/storm/pull/433\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/433</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510244","html_url":"https://github.com/apache/storm/issues/4395#issuecomment-2612510244","issue_url":"https://api.github.com/repos/apache/storm/issues/4395","id":2612510244,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTAyNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T06:02:30Z","updated_at":"2025-01-24T13:17:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhangjinlong\">zhangjinlong</a>:</i>\n<p><a href=\"https://github.com/apache/storm/pull/433\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/433</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612510244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467308","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467308","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467308,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T09:03:58Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24738502\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24738502</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Total number of connection attempts.<br/>\n    +     */<br/>\n    +    private final AtomicInteger totalConnectionAttempts = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of connection attempts since the last disconnect.<br/>\n    +     */<br/>\n    +    private final AtomicInteger connectionAttempts = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages successfully sent to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicInteger messagesSent = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages that could not be sent to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicInteger messagesLost = new AtomicInteger(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Number of messages buffered in memory.<br/>\n    +     */<br/>\n    +    private final AtomicLong pendingMessages = new AtomicLong(0);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * This flag is set to true if and only if a client instance is being closed.<br/>\n    +     */<br/>\n    +    private volatile boolean closing = false;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * When set to true, then the background flusher thread will flush any pending messages on its next run.<br/>\n    +     */<br/>\n    +    private final AtomicBoolean backgroundFlushingEnabled = new AtomicBoolean(false);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The absolute time (in ms) when the next background flush should be performed.<br/>\n    +     *<br/>\n    +     * Note: The flush operation will only be performed if backgroundFlushingEnabled is true, too.<br/>\n    +     */<br/>\n    +    private final AtomicLong nextBackgroundFlushTimeMs = new AtomicLong(DISTANT_FUTURE_TIME_MS);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The time interval (in ms) at which the background flusher thread will be run to check for any pending messages<br/>\n    +     * to be flushed.<br/>\n    +     */<br/>\n    +    private final int flushCheckIntervalMs;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * How many messages should be batched together before sending them to the remote destination.<br/>\n    +     *<br/>\n    +     * Messages are batched to optimize network throughput at the expense of latency.<br/>\n    +     */<br/>\n    +    private final int messageBatchSize;</li>\n</ul>\n\n\n<p> private MessageBatch messageBatch = null;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private AtomicLong flushCheckTimer;</li>\n\t<li>private int flushCheckInterval;</li>\n\t<li>private ScheduledExecutorService scheduler;<br/>\n    +    private final ListeningScheduledExecutorService scheduler;<br/>\n    +    protected final Map stormConf;</li>\n</ul>\n\n\n<p> @SuppressWarnings(\"rawtypes\")</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Client(Map storm_conf, ChannelFactory factory,</li>\n\t<li>ScheduledExecutorService scheduler, String host, int port) {</li>\n\t<li>this.storm_conf = storm_conf;</li>\n\t<li>this.factory = factory;</li>\n\t<li>this.scheduler = scheduler;</li>\n\t<li>channelRef = new AtomicReference<Channel>(null);<br/>\n    +    Client(Map stormConf, ChannelFactory factory, ScheduledExecutorService scheduler, String host, int port) {<br/>\n     closing = false;</li>\n\t<li>pendings = new AtomicLong(0);</li>\n\t<li>flushCheckTimer = new AtomicLong(Long.MAX_VALUE);</li>\n\t<li>totalReconnects = new AtomicInteger(0);</li>\n\t<li>messagesSent = new AtomicInteger(0);</li>\n\t<li>messagesLostReconnect = new AtomicInteger(0);<br/>\n    -</li>\n\t<li>// Configure</li>\n\t<li>buffer_size = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));</li>\n\t<li>max_retries = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_RETRIES));</li>\n\t<li>base_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MIN_SLEEP_MS));</li>\n\t<li>max_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_SLEEP_MS));</li>\n\t<li>retryPolicy = new StormBoundedExponentialBackoffRetry(base_sleep_ms, max_sleep_ms, max_retries);<br/>\n    -</li>\n\t<li>this.messageBatchSize = Utils.getInt(storm_conf.get(Config.STORM_NETTY_MESSAGE_BATCH_SIZE), 262144);</li>\n\t<li></li>\n\t<li>flushCheckInterval = Utils.getInt(storm_conf.get(Config.STORM_NETTY_FLUSH_CHECK_INTERVAL_MS), 10); // default 10 ms<br/>\n    -</li>\n\t<li>LOG.info(\"New Netty Client, connect to \" + host + \", \" + port</li>\n\t<li>+ \", config: \" + \", buffer_size: \" + buffer_size);<br/>\n    -</li>\n\t<li>bootstrap = new ClientBootstrap(factory);<br/>\n    +this.stormConf = stormConf;<br/>\n    +this.scheduler =  MoreExecutors.listeningDecorator(scheduler);<br/>\n    +int bufferSize = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));<br/>\n    +LOG.info(\"creating Netty Client, connecting to {}:{}, bufferSize: {}\", host, port, bufferSize);<br/>\n    +messageBatchSize = Utils.getInt(stormConf.get(Config.STORM_NETTY_MESSAGE_BATCH_SIZE), 262144);<br/>\n    +flushCheckIntervalMs = Utils.getInt(stormConf.get(Config.STORM_NETTY_FLUSH_CHECK_INTERVAL_MS), 10);<br/>\n    +<br/>\n    +maxReconnectionAttempts = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MAX_RETRIES));<br/>\n    +int minWaitMs = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MIN_SLEEP_MS));<br/>\n    +int maxWaitMs = Utils.getInt(stormConf.get(Config.STORM_MESSAGING_NETTY_MAX_SLEEP_MS));<br/>\n    +retryPolicy = new StormBoundedExponentialBackoffRetry(minWaitMs, maxWaitMs, maxReconnectionAttempts);<br/>\n    +<br/>\n    +// Initiate connection to remote destination<br/>\n    +bootstrap = createClientBootstrap(factory, bufferSize);<br/>\n    +dstAddress = new InetSocketAddress(host, port);<br/>\n    +dstAddressPrefixedName = prefixedName(dstAddress);<br/>\n    +connect(NO_DELAY_MS);<br/>\n    +<br/>\n    +// Launch background flushing thread<br/>\n    +pauseBackgroundFlushing();<br/>\n    +long initialDelayMs = Math.min(MINIMUM_INITIAL_DELAY_MS, maxWaitMs * maxReconnectionAttempts);<br/>\n    +scheduler.scheduleWithFixedDelay(createBackgroundFlusher(), initialDelayMs, flushCheckIntervalMs,<br/>\n    +    TimeUnit.MILLISECONDS);<br/>\n    +    }<br/>\n    +<br/>\n    +    private ClientBootstrap createClientBootstrap(ChannelFactory factory, int bufferSize) \n{\n    +ClientBootstrap bootstrap = new ClientBootstrap(factory);\n     bootstrap.setOption(\"tcpNoDelay\", true);\n    -bootstrap.setOption(\"sendBufferSize\", buffer_size);\n    +bootstrap.setOption(\"sendBufferSize\", bufferSize);\n     bootstrap.setOption(\"keepAlive\", true);\n    -\n    -// Set up the pipeline factory.\n     bootstrap.setPipelineFactory(new StormClientPipelineFactory(this));\n    +return bootstrap;\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>// Start the connection attempt.</li>\n\t<li>remote_addr = new InetSocketAddress(host, port);</li>\n\t<li></li>\n\t<li>// setup the connection asyncly now</li>\n\t<li>scheduler.execute(new Runnable() {</li>\n\t<li>@Override</li>\n\t<li>public void run() \n{   \n    -connect();\n    -    }</li>\n\t<li>});</li>\n\t<li></li>\n\t<li>Runnable flusher = new Runnable() {<br/>\n    +    private String prefixedName(InetSocketAddress dstAddress) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (null != dstAddress) {\n    +    return PREFIX + dstAddress.toString();\n    +}    +return \"\";    +    }</span> </div>\n<p>    +<br/>\n    +    private Runnable createBackgroundFlusher() {<br/>\n    +return new Runnable() {<br/>\n @Override<br/>\n public void run() {<br/>\n    -</p></li>\n\t<li>if(!closing) {</li>\n\t<li>long flushCheckTime = flushCheckTimer.get();</li>\n\t<li>long now = System.currentTimeMillis();</li>\n\t<li>if (now > flushCheckTime) {</li>\n\t<li>Channel channel = channelRef.get();</li>\n\t<li>if (null != channel && channel.isWritable()) \n{\n    -    flush(channel);\n    -}</li>\n\t<li>}<br/>\n    +if(!closing && backgroundFlushingEnabled.get() && nowMillis() > nextBackgroundFlushTimeMs.get()) {<br/>\n    +    LOG.debug(\"flushing {} pending messages to {} in background\", messageBatch.size(),<br/>\n    +dstAddressPrefixedName);<br/>\n    +    flushPendingMessages();<br/>\n     }</li>\n\t<li><p> }<br/>\n     };</p></li>\n\t<li></li>\n\t<li>long initialDelay = Math.min(30L * 1000, max_sleep_ms * max_retries); //max wait for 30s</li>\n\t<li>scheduler.scheduleWithFixedDelay(flusher, initialDelay, flushCheckInterval, TimeUnit.MILLISECONDS);<br/>\n    +    }<br/>\n    +<br/>\n    +    private void pauseBackgroundFlushing() \n{\n    +backgroundFlushingEnabled.set(false);\n    +    }\n<p>    +<br/>\n    +    private void resumeBackgroundFlushing() </p>\n{\n    +backgroundFlushingEnabled.set(true);\n    +    }\n<p>    +<br/>\n    +    private synchronized void flushPendingMessages() {<br/>\n    +Channel channel = channelRef.get();<br/>\n    +if (containsMessages(messageBatch)) {<br/>\n    +    if (connectionEstablished(channel)) </p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (channel.isWritable()) {\n    +    pauseBackgroundFlushing();\n    +    MessageBatch toBeFlushed = messageBatch;\n    +    flushMessages(channel, toBeFlushed);\n    +    messageBatch = null;\n    +}    +else if (closing) {\n    +    // Ensure background flushing is enabled so that we definitely have a chance to re-try the flush\n    +    // operation in case the client is being gracefully closed (where we have a brief time window where\n    +    // the client will wait for pending messages to be sent).\n    +    resumeBackgroundFlushing();\n    +}    +    }</span> </div>\n<p>    +    else </p>\n{\n    +closeChannelAndReconnect(channel);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private long nowMillis() </p>\n{\n    +return System.currentTimeMillis();\n }</li>\n</ul>\n\n\n<p> /**</p>\n<ul>\n\t<li>We will retry connection with exponential back-off policy<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private synchronized void connect() {<br/>\n    +    private synchronized void connect(long delayMs) {<br/>\n     try {<br/>\n    +    if (closing) \n{\n    +return;\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>Channel channel = channelRef.get();</li>\n\t<li>if (channel != null && channel.isConnected()) {<br/>\n    +    if (connectionEstablished(channelRef.get())) \n{\n     return;\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>int tried = 0;</li>\n\t<li>//setting channel to null to make sure we throw an exception when reconnection fails</li>\n\t<li>channel = null;</li>\n\t<li>while (tried <= max_retries) {<br/>\n    -</li>\n\t<li>LOG.info(\"Reconnect started for {}... <span class=\"error\">&#91;{}&#93;</span>\", name(), tried);</li>\n\t<li>LOG.debug(\"connection started...\");<br/>\n    -</li>\n\t<li>totalReconnects.getAndIncrement();</li>\n\t<li>ChannelFuture future = bootstrap.connect(remote_addr);</li>\n\t<li>future.awaitUninterruptibly();</li>\n\t<li>Channel current = future.getChannel();</li>\n\t<li>if (!future.isSuccess()) {</li>\n\t<li>if (null != current) {</li>\n\t<li>current.close();<br/>\n    +    connectionAttempts.getAndIncrement();<br/>\n    +    if (reconnectingAllowed()) {<br/>\n    +totalConnectionAttempts.getAndIncrement();<br/>\n    +LOG.info(\"connection attempt {} to {} scheduled to run in {} ms\", connectionAttempts.get(),<br/>\n    +    dstAddressPrefixedName, delayMs);<br/>\n    +ListenableFuture<Channel> channelFuture = scheduler.schedule(<br/>\n    +    new Connector(dstAddress, connectionAttempts.get()), delayMs, TimeUnit.MILLISECONDS);<br/>\n    +Futures.addCallback(channelFuture, new FutureCallback<Channel>() {<br/>\n    +    @Override public void onSuccess(Channel result) {<br/>\n    +if (connectionEstablished(result)) {<br/>\n    +    setChannel(result);<br/>\n    +    LOG.info(\"connection established to {}\", dstAddressPrefixedName);<br/>\n    +    connectionAttempts.set(0);<br/>\n    +}<br/>\n    +else \n{\n    +    reconnectAgain(new RuntimeException(\"Returned channel was actually not established\"));\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override public void onFailure(Throwable t) </p>\n{\n    +reconnectAgain(t);\n }</li>\n\t<li>} else \n{\n    -    channel = current;\n    -    break;\n    -}</li>\n\t<li>Thread.sleep(retryPolicy.getSleepTimeMs(tried, 0));</li>\n\t<li>tried++;<br/>\n    +<br/>\n    +    private void reconnectAgain(Throwable t) \n{\n    +String baseMsg = String.format(\"connection attempt %s to %s failed\", connectionAttempts,\n    +    dstAddressPrefixedName);\n    +String failureMsg = (t == null)? baseMsg : baseMsg + \": \" + t.toString();\n    +LOG.error(failureMsg);\n    +long nextDelayMs = retryPolicy.getSleepTimeMs(connectionAttempts.get(), 0);\n    +connect(nextDelayMs);\n    +    }\n<p>    +});<br/>\n }</p></li>\n\t<li>if (null != channel) \n{\n    -LOG.info(\"connection established to a remote host \" + name() + \", \" + channel.toString());\n    -channelRef.set(channel);\n    -    }\n<p> else {<br/>\n    +    else </p>\n{\n     close();\n    -throw new RuntimeException(\"Remote address is not reachable. We will close this client \" + name());\n    +throw new RuntimeException(\"Giving up to connect to \" + dstAddressPrefixedName + \" after \" +\n    +    connectionAttempts + \" failed attempts\");\n }</li>\n\t<li>} catch (InterruptedException e) \n{\n    -    throw new RuntimeException(\"connection failed \" + name(), e);\n     }\n<p>    +catch (Exception e) </p>\n{\n    +    throw new RuntimeException(\"Failed to connect to \" + dstAddressPrefixedName, e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private void setChannel(Channel channel) </p>\n{\n    +channelRef.set(channel);\n    +    }\n<p>    +<br/>\n    +    private boolean reconnectingAllowed() </p>\n{\n    +return !closing && connectionAttempts.get() <= (maxReconnectionAttempts + 1);\n    +    }\n<p>    +<br/>\n    +    private boolean connectionEstablished(Channel channel) </p>\n{\n    +// Because we are using TCP (which is a connection-oriented transport unlike UDP), a connection is only fully\n    +// established iff the channel is connected.  That is, a TCP-based channel must be in the CONNECTED state before\n    +// anything can be read or written to the channel.\n    +//\n    +// See:\n    +// - http://netty.io/3.9/api/org/jboss/netty/channel/ChannelEvent.html\n    +// - http://stackoverflow.com/questions/13356622/what-are-the-netty-channel-state-transitions\n    +return channel != null && channel.isConnected();\n }</li>\n</ul>\n\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Enqueue task messages to be sent to server<br/>\n    +     * Note:  Storm will check via this method whether a worker can be activated safely during the initial startup of a<br/>\n    +     * topology.  The worker will only be activated once all of the its connections are ready.<br/>\n  */</li>\n\t<li>synchronized public void send(Iterator<TaskMessage> msgs) {<br/>\n    +    @Override<br/>\n    +    public Status status() \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (closing) {\n    +    return Status.Closed;\n    +}    +else if (!connectionEstablished(channelRef.get())) {\n    +    return Status.Connecting;\n    +}    +else {\n    +    return Status.Ready;\n    +}    +    }</span> </div>\n<p>    +<br/>\n    +    /**<br/>\n    +     * Receiving messages is not supported by a client.<br/>\n    +     *<br/>\n    +     * @throws java.lang.UnsupportedOperationException whenever this method is being called.<br/>\n    +     */<br/>\n    +    @Override<br/>\n    +    public Iterator<TaskMessage> recv(int flags, int clientId) </p>\n{\n    +throw new UnsupportedOperationException(\"Client connection should not receive any messages\");\n    +    }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>// throw exception if the client is being closed<br/>\n    +    @Override<br/>\n    +    public void send(int taskId, byte[] payload) \n{\n    +TaskMessage msg = new TaskMessage(taskId, payload);\n    +List<TaskMessage> wrapper = new ArrayList<TaskMessage>(1);\n    +wrapper.add(msg);\n    +send(wrapper.iterator());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Enqueue task messages to be sent to the remote destination (cf. `host` and `port`).<br/>\n    +     */<br/>\n    +    @Override<br/>\n    +    public synchronized void send(Iterator<TaskMessage> msgs) {<br/>\n     if (closing) {</p></li>\n\t<li>throw new RuntimeException(\"Client is being closed, and does not take requests any more\");<br/>\n    +    int numMessages = iteratorSize(msgs);<br/>\n    +    LOG.warn(\"discarding {} messages because the Netty client to {} is being closed\", numMessages,<br/>\n    +dstAddressPrefixedName);<br/>\n    +    return;<br/>\n     }</li>\n\t<li></li>\n\t<li>if (null == msgs || !msgs.hasNext()) {<br/>\n    +<br/>\n    +if (!hasMessages(msgs)) \n{\n return;\n     }</li>\n</ul>\n\n\n<p>     Channel channel = channelRef.get();</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (null == channel) {</li>\n\t<li>connect();</li>\n\t<li>channel = channelRef.get();<br/>\n    +if (!connectionEstablished(channel)) \n{\n    +    // Closing the channel and reconnecting should be done before handling the messages.\n    +    closeChannelAndReconnect(channel);\n    +    handleMessagesWhenConnectionIsUnavailable(msgs);\n    +    return;\n     }</li>\n</ul>\n\n\n<p>    +// Collect messages into batches (to optimize network throughput), then flush them.<br/>\n     while (msgs.hasNext()) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (!channel.isConnected()) \n{\n    -connect();\n    -channel = channelRef.get();\n    -    }\n<p> TaskMessage message = msgs.next();</p></li>\n\t<li>if (null == messageBatch) {<br/>\n    +    if (messageBatch == null) \n{\n     messageBatch = new MessageBatch(messageBatchSize);\n }</li>\n</ul>\n\n\n<p> messageBatch.add(message);<br/>\n if (messageBatch.isFull()) </p>\n{\n     MessageBatch toBeFlushed = messageBatch;\n    -flushRequest(channel, toBeFlushed);\n    +flushMessages(channel, toBeFlushed);\n     messageBatch = null;\n }\n<p>     }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>if (null != messageBatch && !messageBatch.isEmpty()) {</li>\n\t<li>if (channel.isWritable()) {</li>\n\t<li>flushCheckTimer.set(Long.MAX_VALUE);</li>\n\t<li></li>\n\t<li>// Flush as fast as we can to reduce the latency<br/>\n    +// Handle any remaining messages in case the \"last\" batch was not full.<br/>\n    +if (containsMessages(messageBatch)) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    if (connectionEstablished(channel) && channel.isWritable()) {\n    +// We can write to the channel, so we flush the remaining messages immediately to minimize latency.\n    +pauseBackgroundFlushing();\n     MessageBatch toBeFlushed = messageBatch;\n     messageBatch = null;\n    -flushRequest(channel, toBeFlushed);\n    -\n    -    } else {\n    -// when channel is NOT writable, it means the internal netty buffer is full. \n    -// In this case, we can try to buffer up more incoming messages.\n    -flushCheckTimer.set(System.currentTimeMillis() + flushCheckInterval);\n    +flushMessages(channel, toBeFlushed);\n    +    }    +    else {\n    +// We cannot write to the channel, which means Netty's internal write buffer is full.\n    +// In this case, we buffer the remaining messages and wait for the next messages to arrive.\n    +//\n    +// Background:\n    +// Netty 3.x maintains an internal write buffer with a high water mark for each channel (default: 64K).\n    +// This represents the amount of data waiting to be flushed to operating system buffers.  If the\n    +// outstanding data exceeds this value then the channel is set to non-writable.  When this happens, a\n    +// INTEREST_CHANGED channel event is triggered.  Netty sets the channel to writable again once the data\n    +// has been flushed to the system buffers.\n    +//\n    +// See http://stackoverflow.com/questions/14049260\n    +resumeBackgroundFlushing();\n    +nextBackgroundFlushTimeMs.set(nowMillis() + flushCheckIntervalMs);\n }     }</span> </div></li>\n</ul>\n\n\n<p> }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public String name() {</li>\n\t<li>if (null != remote_addr) \n{\n    -    return PREFIX + remote_addr.toString();\n    -}</li>\n\t<li>return \"\";<br/>\n    +    private boolean hasMessages(Iterator<TaskMessage> msgs) \n{\n    +return msgs != null && msgs.hasNext();\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private synchronized void flush(Channel channel) {</li>\n\t<li>if (!closing) {</li>\n\t<li>if (null != messageBatch && !messageBatch.isEmpty()) {</li>\n\t<li>MessageBatch toBeFlushed = messageBatch;</li>\n\t<li>flushCheckTimer.set(Long.MAX_VALUE);</li>\n\t<li>flushRequest(channel, toBeFlushed);</li>\n\t<li>messageBatch = null;<br/>\n    +    /**<br/>\n    +     * We will drop pending messages and let at-least-once message replay kick in.<br/>\n    +     *<br/>\n    +     * Another option would be to buffer the messages in memory.  But this option has the risk of causing OOM errors,<br/>\n    +     * especially for topologies that disable message acking because we don't know whether the connection recovery will<br/>\n    +     * succeed  or not, and how long the recovery will take.<br/>\n    +     */<br/>\n    +    private void handleMessagesWhenConnectionIsUnavailable(Iterator<TaskMessage> msgs) {<br/>\n    +LOG.error(\"connection to {} is unavailable\", dstAddressPrefixedName);<br/>\n    +dropPendingMessages(msgs);<br/>\n    +    }<br/>\n    +<br/>\n    +    private void dropPendingMessages(Iterator<TaskMessage> msgs) {<br/>\n    +// We consume the iterator by traversing and thus \"emptying\" it.<br/>\n    +int msgCount = iteratorSize(msgs);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Fixed.  Good catch, Bobby!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467311","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467311","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467311,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T10:30:04Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24742354\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24742354</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I see your point, Bobby, and I also can confirm the behavior you described.</p>\n\n<p>    Right now the behavior is as follows.  If the maximum number of reconnection attempts is reached, we enable the flag `closing`.  One effect of this is that any subsequent `send()`ing of messages will result in those messages being discarded.</p>\n\n<p>    Example log message:</p>\n\n<p>    ```<br/>\n    2015-02-16 10:06:29 b.s.m.n.Client <span class=\"error\">&#91;ERROR&#93;</span> discarding 1 messages because the Netty client to Netty-Client-supervisor4/10.0.0.104:6701 is being closed<br/>\n    ```</p>\n\n<p>    A second effect is that the Netty client will never attempt to reconnect again (by design).  But this has a negative effect, too, and I think this is what Bobby is alluding to.  If a Netty client's `closing` is true (= because max reconnects was reached), then a Storm task using this Netty client will never be able again to send a message to the target remote destination of the Netty client.  Only if the Storm task itself were to die will such a reconnect be possible because we would then also start a new Netty client.  The current code will not, as Bobby is pointing out, cause the parent Storm task (or even the Netty client) to die &#8211; instead the client will stay forever in the `closing` state, and the parent Storm task will continue to call the client's `send()` method for new messages, which in turn will forever drop any such messages.</p>\n\n<p>    Off the hip I'd say there are at least three approaches for addressing this:</p>\n\n<p>    1. Let the Netty client die if max retries is reached, so that the Storm task has the chance to re-create a client and thus break out of the client's discard-messages-forever state.<br/>\n    2. Let the Storm task that uses the Netty client die if (one of its possibly many) Netty clients dies, so that by restarting the task we'll also get a new Netty client.<br/>\n    3. Remove the max retries semantics as well as the corresponding setting from Storm's configuration.  Here, a Netty client will continue to reconnect to a remote destination forever.  The possible negative impact of these reconnects (e.g. number of TCP connection attempts in a cluster) are kept in check by our exponential backoff policy for such connection retries.</p>\n\n<p>    My personal comments to these three approaches:</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>I do not like (1) because I feel it introduces potentially confusing semantics: We keep having a max retries setting, but it is not really a hard limit anymore.  It rather becomes a \"max retries until we recreate a Netty client\", and would also reset any exponential backoff strategy of the \"previous\" Netty client instance (cf. `StormBoundedExponentialBackoffRetry`).  If we do want such resets (but I don't think we do at this point), then a cleaner approach would be to implement such resetting inside the retry policy (again, cf. `StormBoundedExponentialBackoffRetry`).</li>\n\t<li>I do not like (2) because a single \"bad\" Netty client would be able to take down a Storm task, which among other things would also impact any other, working Netty clients of the Storm task.</li>\n\t<li>Option (3) seems a reasonable approach, although it breaks backwards compatibility with regard to Storm's configuration (because we'd now ignore `storm.messaging.netty.max_retries`).</li>\n</ul>\n\n\n<p>    Personally, I am fine with either a separate JIRA or, if consensus is reached quickly here, to address this directly in this pull request.</p>\n\n<p>    If we want to address this directly in the pull request, we only need to change a single line in `Client.java` (apart from follow-up changes such as updating `conf/defaults.yaml` to remove `storm.messaging.netty.max_retries`):</p>\n\n<p>    ```java<br/>\nprivate boolean reconnectingAllowed() </p>\n{\n    // BEFORE:\n    // return !closing && connectionAttempts.get() <= (maxReconnectionAttempts + 1);\n    return !closing;\n}\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74532426","html_url":"https://github.com/apache/storm/pull/432#issuecomment-74532426","issue_url":"https://api.github.com/repos/apache/storm/issues/432","id":74532426,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NTMyNDI2","user":{"login":"lazyval","id":235297,"node_id":"MDQ6VXNlcjIzNTI5Nw==","avatar_url":"https://avatars.githubusercontent.com/u/235297?v=4","gravatar_id":"","url":"https://api.github.com/users/lazyval","html_url":"https://github.com/lazyval","followers_url":"https://api.github.com/users/lazyval/followers","following_url":"https://api.github.com/users/lazyval/following{/other_user}","gists_url":"https://api.github.com/users/lazyval/gists{/gist_id}","starred_url":"https://api.github.com/users/lazyval/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazyval/subscriptions","organizations_url":"https://api.github.com/users/lazyval/orgs","repos_url":"https://api.github.com/users/lazyval/repos","events_url":"https://api.github.com/users/lazyval/events{/privacy}","received_events_url":"https://api.github.com/users/lazyval/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T16:14:18Z","updated_at":"2015-02-16T16:14:18Z","author_association":"CONTRIBUTOR","body":"For those who wanders what exhibitor is -- [it's a zookeeper supervisor used for monitoring, back up and visualization](https://github.com/Netflix/exhibitor). \n\n@atdixon are you sure this properties should be kept in `storm.yaml`? Why should storm be aware of them? Is there a ticket backing this change (as it's not clear what are benefits of such support)?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74532426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74537246","html_url":"https://github.com/apache/storm/pull/432#issuecomment-74537246","issue_url":"https://api.github.com/repos/apache/storm/issues/432","id":74537246,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NTM3MjQ2","user":{"login":"atdixon","id":340950,"node_id":"MDQ6VXNlcjM0MDk1MA==","avatar_url":"https://avatars.githubusercontent.com/u/340950?v=4","gravatar_id":"","url":"https://api.github.com/users/atdixon","html_url":"https://github.com/atdixon","followers_url":"https://api.github.com/users/atdixon/followers","following_url":"https://api.github.com/users/atdixon/following{/other_user}","gists_url":"https://api.github.com/users/atdixon/gists{/gist_id}","starred_url":"https://api.github.com/users/atdixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atdixon/subscriptions","organizations_url":"https://api.github.com/users/atdixon/orgs","repos_url":"https://api.github.com/users/atdixon/repos","events_url":"https://api.github.com/users/atdixon/events{/privacy}","received_events_url":"https://api.github.com/users/atdixon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T16:45:34Z","updated_at":"2015-02-17T21:40:15Z","author_association":"CONTRIBUTOR","body":"@lazyval Just to answer your questions and explain further...\n\nZookeeper and its clients require static list of hosts in its configuration [1]. Exhibitor (in addition to supervision, backup, etc.) can provide the Zookeeper server list to Curator clients (via Curator's Exhibitor support [2]), so that the client can dynamically update its Zookeeper servers list.\n\nThis provides a more robust connection to our Zookeeper ensemble from Storm (supporting zookeeper cluster scale-up/down, whole node replacements, rolling upgrades, outages, etc. all w/o restarting Storm.) It also allows Storm to discover our Zookeeper cluster through curator-exhibitor instead of requiring the full Zookeeper ensemble to be hard-listed into the Storm configuration.\n\nWith this patch, you can (optionally) provide Exhibitor servers _in place of_ Zookeeper servers in the storm config and Storm will discover your Zookeeper ensemble. This is why it should go into storm.yaml.\n\n[1] http://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperProgrammers.html#ch_gotchas\n[2] http://curator.apache.org/exhibitor.html\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74537246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612500925","html_url":"https://github.com/apache/storm/issues/4345#issuecomment-2612500925","issue_url":"https://api.github.com/repos/apache/storm/issues/4345","id":2612500925,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MDA5MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-16T17:56:51Z","updated_at":"2025-01-24T13:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eruel\">eruel</a>:</i>\n<p>it seems that storm still use an old version of disruptor, the project has moved from google to gitub, and the artefactId changed since.</p>\n\n<p>I expect that if we use the last version of disruptor, it will benefits of this commit<br/>\n<a href=\"https://github.com/LMAX-Exchange/disruptor/commit/8870a417bff5aed07825fc366b8f470d3561c838#diff-3a4074986e8b9e9f3a9cd82470d357ea\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/LMAX-Exchange/disruptor/commit/8870a417bff5aed07825fc366b8f470d3561c838#diff-3a4074986e8b9e9f3a9cd82470d357ea</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612500925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74614469","html_url":"https://github.com/apache/storm/pull/318#issuecomment-74614469","issue_url":"https://api.github.com/repos/apache/storm/issues/318","id":74614469,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NjE0NDY5","user":{"login":"NareshKosgi","id":2354168,"node_id":"MDQ6VXNlcjIzNTQxNjg=","avatar_url":"https://avatars.githubusercontent.com/u/2354168?v=4","gravatar_id":"","url":"https://api.github.com/users/NareshKosgi","html_url":"https://github.com/NareshKosgi","followers_url":"https://api.github.com/users/NareshKosgi/followers","following_url":"https://api.github.com/users/NareshKosgi/following{/other_user}","gists_url":"https://api.github.com/users/NareshKosgi/gists{/gist_id}","starred_url":"https://api.github.com/users/NareshKosgi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NareshKosgi/subscriptions","organizations_url":"https://api.github.com/users/NareshKosgi/orgs","repos_url":"https://api.github.com/users/NareshKosgi/repos","events_url":"https://api.github.com/users/NareshKosgi/events{/privacy}","received_events_url":"https://api.github.com/users/NareshKosgi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T04:07:53Z","updated_at":"2015-02-17T04:07:53Z","author_association":"CONTRIBUTOR","body":"@Parth-Brahmbhatt I tried to build the lastest storm but i'm having the following issue:\n\n[ERROR] Error resolving version for plugin 'org.apache.storm:storm-maven-plugins' from the repositories [local (/Users/nareshkosgi/.m2/repository), central (http://repo.maven.apache.org/maven2)]: Plugin not found in any plugin repository \n\nI spent sometime trying to see if its something local to mine but haven't had success.  am I missing something new that was added to storm that I need in order to build the latest master?  I installed node which was the only new thing I saw.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74614469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74683011","html_url":"https://github.com/apache/storm/pull/318#issuecomment-74683011","issue_url":"https://api.github.com/repos/apache/storm/issues/318","id":74683011,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NjgzMDEx","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T15:14:10Z","updated_at":"2015-02-17T15:14:10Z","author_association":"CONTRIBUTOR","body":"We put in some changes so the storm build now uses a plugin that is also built as part of the build.  This makes it so you cannot run `mvn compile` on its own any more, you need to run at least `mvn package` because needs a jar on the classpath.  If you plan on building in just storm-core you need to have installed the plugin  into your local repo first.  We are working on a way to fix this, but don't have a perfect solution yet https://issues.apache.org/jira/browse/STORM-639.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74683011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521800","html_url":"https://github.com/apache/storm/issues/4480#issuecomment-2612521800","issue_url":"https://api.github.com/repos/apache/storm/issues/4480","id":2612521800,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjE4MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T15:14:11Z","updated_at":"2025-01-24T13:22:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/318#issuecomment-74683011\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/318#issuecomment-74683011</a></p>\n\n<p>    We put in some changes so the storm build now uses a plugin that is also built as part of the build.  This makes it so you cannot run ```mvn compile``` on its own any more, you need to run at least ```mvn package``` because needs a jar on the classpath.  If you plan on building in just storm-core you need to have installed the plugin  into your local repo first.  We are working on a way to fix this, but don't have a perfect solution yet <a href=\"https://issues.apache.org/jira/browse/STORM-639\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-639</a>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521805","html_url":"https://github.com/apache/storm/issues/4480#issuecomment-2612521805","issue_url":"https://api.github.com/repos/apache/storm/issues/4480","id":2612521805,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjE4MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T15:27:28Z","updated_at":"2025-01-24T13:22:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Perhaps the best long term solution is to separate the plugin out into a stand alone plugin that is published/released separately from the rest of storm.  We could reach out to the maven community and see if they would be interested in making the plugin official, but in the short term, we create a new version number for the plugin, that is not the same as storm's and publish the artifact to the maven repo on its own.  We may also need to separate out the build for the plugin from the rest of storm so it does not try to pull it in and get confused.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467318","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467318","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467318,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T15:45:43Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24824540\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24824540</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I personally prefer option 3, no maximum number of reconnection attempts.  Having the client decide that it is done, before nimbus does feels like it is asking for trouble.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74696132","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74696132","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74696132,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Njk2MTMy","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:21:26Z","updated_at":"2015-02-17T16:21:26Z","author_association":"CONTRIBUTOR","body":"I am +1 for the code as is.  Perhaps a separate JIRA for the reconnection attempts would be best.  The issue has been in for quite a while now, and this code was not intended to fix it to begin with.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74696132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467322","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467322","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467322,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:21:27Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74696132\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74696132</a></p>\n\n<p>    I am +1 for the code as is.  Perhaps a separate JIRA for the reconnection attempts would be best.  The issue has been in for quite a while now, and this code was not intended to fix it to begin with.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74696542","html_url":"https://github.com/apache/storm/pull/275#issuecomment-74696542","issue_url":"https://api.github.com/repos/apache/storm/issues/275","id":74696542,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Njk2NTQy","user":{"login":"nielsbasjes","id":240096,"node_id":"MDQ6VXNlcjI0MDA5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/240096?v=4","gravatar_id":"","url":"https://api.github.com/users/nielsbasjes","html_url":"https://github.com/nielsbasjes","followers_url":"https://api.github.com/users/nielsbasjes/followers","following_url":"https://api.github.com/users/nielsbasjes/following{/other_user}","gists_url":"https://api.github.com/users/nielsbasjes/gists{/gist_id}","starred_url":"https://api.github.com/users/nielsbasjes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nielsbasjes/subscriptions","organizations_url":"https://api.github.com/users/nielsbasjes/orgs","repos_url":"https://api.github.com/users/nielsbasjes/repos","events_url":"https://api.github.com/users/nielsbasjes/events{/privacy}","received_events_url":"https://api.github.com/users/nielsbasjes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:23:43Z","updated_at":"2015-02-17T16:23:43Z","author_association":"CONTRIBUTOR","body":"@nathanmarz / @revans2 What must I do/change to get this solution committed? \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74696542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612502088","html_url":"https://github.com/apache/storm/issues/4354#issuecomment-2612502088","issue_url":"https://api.github.com/repos/apache/storm/issues/4354","id":2612502088,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MDIwODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:23:44Z","updated_at":"2025-01-24T13:12:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nielsbasjes commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/275#issuecomment-74696542\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/275#issuecomment-74696542</a></p>\n\n<p>    @nathanmarz / @revans2 What must I do/change to get this solution committed? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612502088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700449","html_url":"https://github.com/apache/storm/pull/410#issuecomment-74700449","issue_url":"https://api.github.com/repos/apache/storm/issues/410","id":74700449,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAwNDQ5","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:42:12Z","updated_at":"2015-02-17T16:42:12Z","author_association":"CONTRIBUTOR","body":"@darionyaphet, Thrift 0.9.2 includes python hash function. [https://issues.apache.org/jira/browse/THRIFT-2621]. Without this change, we were using @nathanmarz 's storm specific thrift branch. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477040","html_url":"https://github.com/apache/storm/issues/4242#issuecomment-2612477040","issue_url":"https://api.github.com/repos/apache/storm/issues/4242","id":2612477040,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzcwNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:42:13Z","updated_at":"2025-01-24T12:59:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/410#issuecomment-74700449\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/410#issuecomment-74700449</a></p>\n\n<p>    @darionyaphet, Thrift 0.9.2 includes python hash function. <a href=\"https://issues.apache.org/jira/browse/THRIFT-2621\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/THRIFT-2621</a>. Without this change, we were using @nathanmarz 's storm specific thrift branch. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700594","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74700594","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74700594,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAwNTk0","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:42:52Z","updated_at":"2015-02-17T16:42:52Z","author_association":"CONTRIBUTOR","body":"I am seeing a lot of tests timing out with this change.  Has anyone else seen this?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467327","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467327","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467327,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:42:52Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74700594\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74700594</a></p>\n\n<p>    I am seeing a lot of tests timing out with this change.  Has anyone else seen this?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700609","html_url":"https://github.com/apache/storm/pull/341#issuecomment-74700609","issue_url":"https://api.github.com/repos/apache/storm/issues/341","id":74700609,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAwNjA5","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:42:55Z","updated_at":"2015-02-17T16:42:55Z","author_association":"NONE","body":"Hi @anyatch, is there an issue in JIRA for this pull request?\n\nAlso, I noticed there are various differences in the three storm.js files that are changed in this pull request.  Should all three of these files be exactly the same?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74700609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74701138","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74701138","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74701138,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAxMTM4","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:45:24Z","updated_at":"2015-02-17T16:45:24Z","author_association":"CONTRIBUTOR","body":"> I am seeing a lot of tests timing out with this change. Has anyone else seen this?\n\nHmm.  All the tests are passing for me (and they have been since a while).\n\nDo you have any pointers?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74701138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467332","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467332","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467332,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:45:25Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74701138\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74701138</a></p>\n\n<p>    > I am seeing a lot of tests timing out with this change. Has anyone else seen this?</p>\n\n<p>    Hmm.  All the tests are passing for me (and they have been since a while).</p>\n\n<p>    Do you have any pointers?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702215","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74702215","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74702215,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAyMjE1","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:50:23Z","updated_at":"2015-02-17T16:50:23Z","author_association":"CONTRIBUTOR","body":"And FWIW, with the code in this PR the total test suite takes about 5mins to complete.\n\n```\n$ mvn clean install\n...\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO]\n[INFO] Storm .............................................. SUCCESS [  1.696 s]\n[INFO] maven-shade-clojure-transformer .................... SUCCESS [  1.930 s]\n[INFO] storm-maven-plugins ................................ SUCCESS [  2.033 s]\n[INFO] Storm Core ......................................... SUCCESS [03:56 min]\n[INFO] storm-starter ...................................... SUCCESS [  6.616 s]\n[INFO] storm-kafka ........................................ SUCCESS [ 48.469 s]\n[INFO] storm-hdfs ......................................... SUCCESS [  1.875 s]\n[INFO] storm-hbase ........................................ SUCCESS [  2.271 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 05:02 min\n[INFO] Finished at: 2015-02-17T17:49:19+01:00\n[INFO] Final Memory: 67M/282M\n[INFO] ------------------------------------------------------------------------\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467333","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467333","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467333,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:50:24Z","updated_at":"2025-01-24T12:54:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74702215\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74702215</a></p>\n\n<p>    And FWIW, with the code in this PR the total test suite takes about 5mins to complete.</p>\n\n<p>    ```<br/>\n    $ mvn clean install<br/>\n    ...</p>\n\n<p>    <span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Reactor Summary:<br/>\n    <span class=\"error\">&#91;INFO&#93;</span><br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Storm .............................................. SUCCESS [  1.696 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> maven-shade-clojure-transformer .................... SUCCESS [  1.930 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> storm-maven-plugins ................................ SUCCESS [  2.033 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Storm Core ......................................... SUCCESS <span class=\"error\">&#91;03:56 min&#93;</span><br/>\n    <span class=\"error\">&#91;INFO&#93;</span> storm-starter ...................................... SUCCESS [  6.616 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> storm-kafka ........................................ SUCCESS [ 48.469 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> storm-hdfs ......................................... SUCCESS [  1.875 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> storm-hbase ........................................ SUCCESS [  2.271 s]<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> BUILD SUCCESS<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Total time: 05:02 min<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Finished at: 2015-02-17T17:49:19+01:00<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> Final Memory: 67M/282M<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> ------------------------------------------------------------------------<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702594","html_url":"https://github.com/apache/storm/pull/399#issuecomment-74702594","issue_url":"https://api.github.com/repos/apache/storm/issues/399","id":74702594,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAyNTk0","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:52:12Z","updated_at":"2015-02-17T16:52:12Z","author_association":"NONE","body":"Filed [STORM-672](https://issues.apache.org/jira/browse/STORM-672).\n+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526069","html_url":"https://github.com/apache/storm/issues/4513#issuecomment-2612526069","issue_url":"https://api.github.com/repos/apache/storm/issues/4513","id":2612526069,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjYwNjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:52:13Z","updated_at":"2025-01-24T13:25:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/399#issuecomment-74702594\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/399#issuecomment-74702594</a></p>\n\n<p>    Filed <a href=\"https://issues.apache.org/jira/browse/STORM-672\" title=\"Typo in Trident documentation example\" class=\"issue-link\" data-issue-key=\"STORM-672\"><del>STORM-672</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-672\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-672</a>).<br/>\n    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702976","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74702976","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74702976,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzAyOTc2","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:54:04Z","updated_at":"2015-02-17T16:54:04Z","author_association":"CONTRIBUTOR","body":"I don't it could just be my mac acting funny.  I'll dig into it, but don't block the pull request on me.  I saw similar things on a different pull request that corrected themselves spontaneously.  My guess right now is that it could have something to do with being on battery power vs being plugged into the wall.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74702976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467337","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467337","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467337,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T16:54:05Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74702976\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74702976</a></p>\n\n<p>    I don't it could just be my mac acting funny.  I'll dig into it, but don't block the pull request on me.  I saw similar things on a different pull request that corrected themselves spontaneously.  My guess right now is that it could have something to do with being on battery power vs being plugged into the wall.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74704890","html_url":"https://github.com/apache/storm/pull/399#issuecomment-74704890","issue_url":"https://api.github.com/repos/apache/storm/issues/399","id":74704890,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzA0ODkw","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:03:48Z","updated_at":"2015-02-17T17:03:48Z","author_association":"NONE","body":"Thanks @onlychoice, I merged this to master. If you would like proper attribution in JIRA, please post your jira user name.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74704890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477042","html_url":"https://github.com/apache/storm/issues/4242#issuecomment-2612477042","issue_url":"https://api.github.com/repos/apache/storm/issues/4242","id":2612477042,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzcwNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:11:24Z","updated_at":"2025-01-24T12:59:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/410\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/410</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74707233","html_url":"https://github.com/apache/storm/pull/397#issuecomment-74707233","issue_url":"https://api.github.com/repos/apache/storm/issues/397","id":74707233,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzA3MjMz","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:13:42Z","updated_at":"2015-02-17T17:13:42Z","author_association":"NONE","body":"Created [STORM-673](https://issues.apache.org/jira/browse/STORM-673)\n+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74707233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526179","html_url":"https://github.com/apache/storm/issues/4514#issuecomment-2612526179","issue_url":"https://api.github.com/repos/apache/storm/issues/4514","id":2612526179,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjYxNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:13:43Z","updated_at":"2025-01-24T13:25:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/397#issuecomment-74707233\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/397#issuecomment-74707233</a></p>\n\n<p>    Created <a href=\"https://issues.apache.org/jira/browse/STORM-673\" title=\"Typo &#39;deamon&#39; in security documentation\" class=\"issue-link\" data-issue-key=\"STORM-673\"><del>STORM-673</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-673\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-673</a>)<br/>\n    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74707726","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74707726","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74707726,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzA3NzI2","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:15:37Z","updated_at":"2015-02-17T17:15:37Z","author_association":"CONTRIBUTOR","body":"OK It is something odd with my mac. It looks like the difference is wired vs wireless networking :), or possibly even switching between the two.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74707726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467339","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467339","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467339,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:15:38Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74707726\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74707726</a></p>\n\n<p>    OK It is something odd with my mac. It looks like the difference is wired vs wireless networking <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/>, or possibly even switching between the two.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74708590","html_url":"https://github.com/apache/storm/pull/397#issuecomment-74708590","issue_url":"https://api.github.com/repos/apache/storm/issues/397","id":74708590,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzA4NTkw","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:18:55Z","updated_at":"2015-02-17T17:18:55Z","author_association":"NONE","body":"Thanks @harisekhon, I merged this to master.\nIf you want attribution in JIRA, please post your Apache JIRA user name.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74708590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74711484","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74711484","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74711484,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzExNDg0","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:32:32Z","updated_at":"2015-02-17T17:32:32Z","author_association":"CONTRIBUTOR","body":"Glad to hear it was only a temporary issue. :-)\n\nTo summarize the current status of this pull request:\n- We have two +1 already.\n- The max-reconnection-attempts issue that Bobby brought up would be addressed in a separate JIRA ticket (which I can create if no one else wants to).  And we already have an initial idea how to solve the issue.\n\nLet me know if I forgot something.\n\n@nathanmarz Are you ok, too?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74711484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467345","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467345","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467345,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T17:32:33Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74711484\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74711484</a></p>\n\n<p>    Glad to hear it was only a temporary issue. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>\n\n<p>    To summarize the current status of this pull request:</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>We have two +1 already.</li>\n\t<li>The max-reconnection-attempts issue that Bobby brought up would be addressed in a separate JIRA ticket (which I can create if no one else wants to).  And we already have an initial idea how to solve the issue.</li>\n</ul>\n\n\n<p>    Let me know if I forgot something.</p>\n\n<p>    @nathanmarz Are you ok, too?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74728302","html_url":"https://github.com/apache/storm/pull/414#issuecomment-74728302","issue_url":"https://api.github.com/repos/apache/storm/issues/414","id":74728302,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzI4MzAy","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T19:01:03Z","updated_at":"2015-02-17T19:01:03Z","author_association":"CONTRIBUTOR","body":"@revans2 I have changed the code to use java serialization , no delegate for all places where we expect only java serialization. I still have both the ThriftDelegate(which should now work in standalone mode) and  ThrftDelegateBridge but I don't have a strong preference to keep both of them around.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74728302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521196","html_url":"https://github.com/apache/storm/issues/4475#issuecomment-2612521196","issue_url":"https://api.github.com/repos/apache/storm/issues/4475","id":2612521196,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjExOTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-17T19:01:05Z","updated_at":"2025-01-24T13:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/414#issuecomment-74728302\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/414#issuecomment-74728302</a></p>\n\n<p>    @revans2 I have changed the code to use java serialization , no delegate for all places where we expect only java serialization. I still have both the ThriftDelegate(which should now work in standalone mode) and  ThrftDelegateBridge but I don't have a strong preference to keep both of them around.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526411","html_url":"https://github.com/apache/storm/issues/4516#issuecomment-2612526411","issue_url":"https://api.github.com/repos/apache/storm/issues/4516","id":2612526411,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY0MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T01:12:40Z","updated_at":"2025-01-24T13:25:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user harshach opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/434\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/434</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-675\" title=\"Allow users to have storm-env.sh under config dir to set custom JAVA_HOME and other env variables\" class=\"issue-link\" data-issue-key=\"STORM-675\"><del>STORM-675</del></a>. Allow users to have storm-env.sh under config dir to set custom JAVA_HOME and other env variables.</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/harshach/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/harshach/incubator-storm</a> STORM-BIN</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/434.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/434.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #434</p>\n\n<hr />\n<p>commit a4a8f7d22bf79a04d4cddd067f2a63766084ebfe<br/>\nAuthor: Sriharsha Chintalapani <mail@harsha.io><br/>\nDate:   2015-02-18T01:11:50Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-675\" title=\"Allow users to have storm-env.sh under config dir to set custom JAVA_HOME and other env variables\" class=\"issue-link\" data-issue-key=\"STORM-675\"><del>STORM-675</del></a>. Allow users to have storm-env.sh under config dir to set custom JAVA_HOME and other env variables.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74791899","html_url":"https://github.com/apache/storm/pull/280#issuecomment-74791899","issue_url":"https://api.github.com/repos/apache/storm/issues/280","id":74791899,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzkxODk5","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T01:13:34Z","updated_at":"2015-02-18T01:13:34Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR  @dashengju  I took care of it as part of this PR https://github.com/apache/storm/pull/434 . Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74791899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612488773","html_url":"https://github.com/apache/storm/issues/4329#issuecomment-2612488773","issue_url":"https://api.github.com/repos/apache/storm/issues/4329","id":2612488773,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODg3NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T01:13:35Z","updated_at":"2025-01-24T13:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/280#issuecomment-74791899\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/280#issuecomment-74791899</a></p>\n\n<p>    @HeartSaVioR  @dashengju  I took care of it as part of this PR <a href=\"https://github.com/apache/storm/pull/434\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/434</a> . Thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612488773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526413","html_url":"https://github.com/apache/storm/issues/4516#issuecomment-2612526413","issue_url":"https://api.github.com/repos/apache/storm/issues/4516","id":2612526413,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY0MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T01:14:13Z","updated_at":"2025-01-24T13:25:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sriharsha\">sriharsha</a>:</i>\n<p>This PR also fixes the execv issue thats noted here <a href=\"https://github.com/apache/storm/pull/280\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/280</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74867621","html_url":"https://github.com/apache/storm/pull/374#issuecomment-74867621","issue_url":"https://api.github.com/repos/apache/storm/issues/374","id":74867621,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODY3NjIx","user":{"login":"Crystark","id":259699,"node_id":"MDQ6VXNlcjI1OTY5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/259699?v=4","gravatar_id":"","url":"https://api.github.com/users/Crystark","html_url":"https://github.com/Crystark","followers_url":"https://api.github.com/users/Crystark/followers","following_url":"https://api.github.com/users/Crystark/following{/other_user}","gists_url":"https://api.github.com/users/Crystark/gists{/gist_id}","starred_url":"https://api.github.com/users/Crystark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Crystark/subscriptions","organizations_url":"https://api.github.com/users/Crystark/orgs","repos_url":"https://api.github.com/users/Crystark/repos","events_url":"https://api.github.com/users/Crystark/events{/privacy}","received_events_url":"https://api.github.com/users/Crystark/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T14:00:34Z","updated_at":"2015-02-18T14:00:34Z","author_association":"NONE","body":"This would indeed be nice but after trying it out it seems that if a batch has more than one tuple to insert, then only the last tuple is inserted.\n\nIn [JdbcClient#insert](https://github.com/Parth-Brahmbhatt/incubator-storm/blob/STORM-616/external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/JdbcClient.java#L48) we can see that there's only one set of `VALUES` (line 61-64) but then it loops on all the columns and each one overrides the previous values that were set as SQL parameters leading to only the last one beeing used.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74867621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612519052","html_url":"https://github.com/apache/storm/issues/4457#issuecomment-2612519052","issue_url":"https://api.github.com/repos/apache/storm/issues/4457","id":2612519052,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTkwNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T14:00:35Z","updated_at":"2025-01-24T13:21:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Crystark commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/374#issuecomment-74867621\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/374#issuecomment-74867621</a></p>\n\n<p>    This would indeed be nice but after trying it out it seems that if a batch has more than one tuple to insert, then only the last tuple is inserted.</p>\n\n<p>    In <a href=\"#insert\" target=\"_blank\" rel=\"noopener\">JdbcClient#insert</a>(<a href=\"https://github.com/Parth-Brahmbhatt/incubator-storm/blob/STORM-616/external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/JdbcClient.java#L48\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/Parth-Brahmbhatt/incubator-storm/blob/STORM-616/external/storm-jdbc/src/main/java/org/apache/storm/jdbc/common/JdbcClient.java#L48</a>) we can see that there's only one set of `VALUES` (line 61-64) but then it loops on all the columns and each one overrides the previous values that were set as SQL parameters leading to only the last one beeing used.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612519052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467349","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467349","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467349,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T15:36:22Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#discussion_r24909769\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#discussion_r24909769</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -42,344 +42,577 @@<br/>\n     import org.slf4j.LoggerFactory;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    +import backtype.storm.messaging.ConnectionWithStatus;<br/>\n     import backtype.storm.metric.api.IStatefulObject;<br/>\n    -import backtype.storm.messaging.IConnection;<br/>\n     import backtype.storm.messaging.TaskMessage;<br/>\n     import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n     import backtype.storm.utils.Utils;</p>\n\n<p>    -public class Client implements IConnection, IStatefulObject{<br/>\n    +/**<br/>\n    + * A Netty client for sending task messages to a remote destination (Netty server).<br/>\n    + *<br/>\n    + * Implementation details:<br/>\n    + *<br/>\n    + * - Sending messages, i.e. writing to the channel, is performed asynchronously.<br/>\n    + * - Messages are sent in batches to optimize for network throughput at the expense of network latency.  The message<br/>\n    + *   batch size is configurable.<br/>\n    + * - Connecting and reconnecting are performed asynchronously.<br/>\n    + *     - Note: The current implementation drops any messages that are being enqueued for sending if the connection to<br/>\n    + *       the remote destination is currently unavailable.<br/>\n    + * - A background flusher thread is run in the background.  It will, at fixed intervals, check for any pending messages<br/>\n    + *   (i.e. messages buffered in memory) and flush them to the remote destination iff background flushing is currently<br/>\n    + *   enabled.<br/>\n    + */<br/>\n    +public class Client extends ConnectionWithStatus implements IStatefulObject {<br/>\n    +<br/>\n private static final Logger LOG = LoggerFactory.getLogger(Client.class);<br/>\n private static final String PREFIX = \"Netty-Client-\";</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>private final int max_retries;</li>\n\t<li>private final int base_sleep_ms;</li>\n\t<li>private final int max_sleep_ms;<br/>\n    +    private static final long NO_DELAY_MS = 0L;<br/>\n    +    private static final long MINIMUM_INITIAL_DELAY_MS = 30000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_TIMEOUT_MS = 600000L;<br/>\n    +    private static final long PENDING_MESSAGES_FLUSH_INTERVAL_MS = 1000L;<br/>\n    +    private static final long DISTANT_FUTURE_TIME_MS = Long.MAX_VALUE;<br/>\n    +<br/>\n private final StormBoundedExponentialBackoffRetry retryPolicy;</li>\n\t<li>private AtomicReference<Channel> channelRef;<br/>\n private final ClientBootstrap bootstrap;</li>\n\t<li>private InetSocketAddress remote_addr;</li>\n\t<li></li>\n\t<li>private AtomicInteger totalReconnects;</li>\n\t<li>private AtomicInteger messagesSent;</li>\n\t<li>private AtomicInteger messagesLostReconnect;</li>\n\t<li>private final Random random = new Random();</li>\n\t<li>private final ChannelFactory factory;</li>\n\t<li>private final int buffer_size;</li>\n\t<li>private boolean closing;<br/>\n    -</li>\n\t<li>private int messageBatchSize;</li>\n\t<li></li>\n\t<li>private AtomicLong pendings;</li>\n\t<li></li>\n\t<li>Map storm_conf;<br/>\n    +    private final InetSocketAddress dstAddress;<br/>\n    +    protected final String dstAddressPrefixedName;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The channel used for all write operations from this client to the remote destination.<br/>\n    +     */<br/>\n    +    private final AtomicReference<Channel> channelRef = new AtomicReference<Channel>(null);<br/>\n    +<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Maximum number of reconnection attempts we will perform after a disconnect before giving up.<br/>\n    +     */<br/>\n    +    private final int maxReconnectionAttempts;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I'm in favor of option 3 as well. I'm not that concerned about `storm.messaging.netty.max_retries` being ignored. We could probably just log a warning that that configuration option is deprecated and will be ignored if the value is set.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74885134","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74885134","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74885134,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODg1MTM0","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T15:39:13Z","updated_at":"2015-02-18T15:39:13Z","author_association":"MEMBER","body":"+1 I was able to verify the fix, and am in favor of merging. I'd also like to apply it to the 0.9.x branch as I feel it's an important fix.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74885134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467352","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467352","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467352,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T15:39:14Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74885134\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74885134</a></p>\n\n<p>    +1 I was able to verify the fix, and am in favor of merging. I'd also like to apply it to the 0.9.x branch as I feel it's an important fix.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467355","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467355","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467355,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T15:41:41Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xiang.zhong@intel.com\">xiang.zhong@intel.com</a>:</i>\n<p>I am out of office for Chinese new year from 2.18 - 2.25</p>\n\n<p>The internet connection is limitted, the email reply will be delayed. For anything emergency, please call +86-159-2176-3980.</p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74894542","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74894542","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74894542,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODk0NTQy","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:25:32Z","updated_at":"2015-02-18T16:25:32Z","author_association":"CONTRIBUTOR","body":"FYI: I created [STORM-677: Maximum retries strategy may cause data loss](https://issues.apache.org/jira/browse/STORM-677) to address the issue that Bobby brought up in this discussion.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74894542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467358","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467358","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467358,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:25:33Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74894542\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74894542</a></p>\n\n<p>    FYI: I created <span class=\"error\">&#91;STORM-677: Maximum retries strategy may cause data loss&#93;</span>(<a href=\"https://issues.apache.org/jira/browse/STORM-677\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-677</a>) to address the issue that Bobby brought up in this discussion.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74894825","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74894825","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74894825,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODk0ODI1","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:26:48Z","updated_at":"2015-02-18T16:26:48Z","author_association":"CONTRIBUTOR","body":"> I'd also like to apply it to the 0.9.x branch as I feel it's an important fix.\n\nThat's a good idea, Taylor.  Would you also like volunteer to merge this PR in general? (otherwise let me know and I'll take care of it)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74894825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467361","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467361","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467361,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:26:49Z","updated_at":"2025-01-24T12:54:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74894825\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74894825</a></p>\n\n<p>    > I'd also like to apply it to the 0.9.x branch as I feel it's an important fix.</p>\n\n<p>    That's a good idea, Taylor.  Would you also like volunteer to merge this PR in general? (otherwise let me know and I'll take care of it)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74895041","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74895041","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74895041,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODk1MDQx","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:27:52Z","updated_at":"2015-02-18T16:27:52Z","author_association":"CONTRIBUTOR","body":"PS: We may also want to update the original [STORM-329](https://issues.apache.org/jira/browse/STORM-329) ticket description to reflect the changes in this PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74895041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467365","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467365","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467365,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:27:53Z","updated_at":"2025-01-24T12:54:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74895041\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74895041</a></p>\n\n<p>    PS: We may also want to update the original <a href=\"https://issues.apache.org/jira/browse/STORM-329\" title=\"Fix cascading Storm failure by improving reconnection strategy and buffering messages\" class=\"issue-link\" data-issue-key=\"STORM-329\"><del>STORM-329</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-329\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-329</a>) ticket description to reflect the changes in this PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477575","html_url":"https://github.com/apache/storm/issues/4246#issuecomment-2612477575","issue_url":"https://api.github.com/repos/apache/storm/issues/4246","id":2612477575,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzc1NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:39:04Z","updated_at":"2025-01-24T13:00:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=miguno\">miguno</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=danielschonfeld\" class=\"user-hover\" rel=\"danielschonfeld\">Daniel Schonfeld</a> As Sean said, please take a look at the patch for <a href=\"https://issues.apache.org/jira/browse/STORM-329\" title=\"Fix cascading Storm failure by improving reconnection strategy and buffering messages\" class=\"issue-link\" data-issue-key=\"STORM-329\"><del>STORM-329</del></a>, notably the associated (new) pull request at <a href=\"https://github.com/apache/storm/pull/429\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429</a>.  I know you already commented on the pull request itself, but for completeness I also wanted to reply to you in JIRA.</p>\n\n<p>Also, feel free to let us know whether the patch in <a href=\"https://issues.apache.org/jira/browse/STORM-329\" title=\"Fix cascading Storm failure by improving reconnection strategy and buffering messages\" class=\"issue-link\" data-issue-key=\"STORM-329\"><del>STORM-329</del></a> actually solves the worker crash (aka <a href=\"https://issues.apache.org/jira/browse/STORM-404\" title=\"Worker on one machine crashes due to a failure of another worker on another machine\" class=\"issue-link\" data-issue-key=\"STORM-404\"><del>STORM-404</del></a>), too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612477575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74897829","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74897829","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74897829,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODk3ODI5","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:41:59Z","updated_at":"2015-02-18T16:41:59Z","author_association":"MEMBER","body":"@miguno No problem, I can do the merge to master. I've done a test merge to the 0.9.3 branch, and it didn't seem too bad, but I'm still debugging some test failures.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74897829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467370","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467370","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467370,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:42:00Z","updated_at":"2025-01-24T12:54:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74897829\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74897829</a></p>\n\n<p>    @miguno No problem, I can do the merge to master. I've done a test merge to the 0.9.3 branch, and it didn't seem too bad, but I'm still debugging some test failures.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74898690","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74898690","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74898690,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODk4Njkw","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:46:07Z","updated_at":"2015-02-18T16:46:07Z","author_association":"CONTRIBUTOR","body":"Thanks, Taylor!  Let me know if I can help with sorting out the test failures.\n\nAlso regarding JIRA: I forgot to mention that it looks like we need to update STORM-404 and STORM-510 as well as STORM-329 has been said to cover those issues, too.  It looks to me like this is actually the case, but I'd prefer another pair of eyes to be sure we're not mistakenly closing two related tickets.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74898690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467374","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467374","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467374,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T16:46:09Z","updated_at":"2025-01-24T12:54:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user miguno commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74898690\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74898690</a></p>\n\n<p>    Thanks, Taylor!  Let me know if I can help with sorting out the test failures.</p>\n\n<p>    Also regarding JIRA: I forgot to mention that it looks like we need to update <a href=\"https://issues.apache.org/jira/browse/STORM-404\" title=\"Worker on one machine crashes due to a failure of another worker on another machine\" class=\"issue-link\" data-issue-key=\"STORM-404\"><del>STORM-404</del></a> and <a href=\"https://issues.apache.org/jira/browse/STORM-510\" title=\"Netty messaging client blocks transfer thread on reconnect\" class=\"issue-link\" data-issue-key=\"STORM-510\"><del>STORM-510</del></a> as well as <a href=\"https://issues.apache.org/jira/browse/STORM-329\" title=\"Fix cascading Storm failure by improving reconnection strategy and buffering messages\" class=\"issue-link\" data-issue-key=\"STORM-329\"><del>STORM-329</del></a> has been said to cover those issues, too.  It looks to me like this is actually the case, but I'd prefer another pair of eyes to be sure we're not mistakenly closing two related tickets.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74914806","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74914806","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74914806,"node_id":"MDEyOklzc3VlQ29tbWVudDc0OTE0ODA2","user":{"login":"nathanmarz","id":131416,"node_id":"MDQ6VXNlcjEzMTQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/131416?v=4","gravatar_id":"","url":"https://api.github.com/users/nathanmarz","html_url":"https://github.com/nathanmarz","followers_url":"https://api.github.com/users/nathanmarz/followers","following_url":"https://api.github.com/users/nathanmarz/following{/other_user}","gists_url":"https://api.github.com/users/nathanmarz/gists{/gist_id}","starred_url":"https://api.github.com/users/nathanmarz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nathanmarz/subscriptions","organizations_url":"https://api.github.com/users/nathanmarz/orgs","repos_url":"https://api.github.com/users/nathanmarz/repos","events_url":"https://api.github.com/users/nathanmarz/events{/privacy}","received_events_url":"https://api.github.com/users/nathanmarz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T18:06:51Z","updated_at":"2015-02-18T18:06:51Z","author_association":"CONTRIBUTOR","body":"Nimbus only knows a worker is having trouble when it stops sending heartbeats. If a worker gets into a bad state, the worst thing to do is have it continue trying to limp along in that bad state. It should instead suicide as quickly as possible. It seems counterintuitive, but this aggressive suiciding behavior actually makes things more robust as it prevents processes from getting into weird, potentially undefined states. This has been a crucial design principle in Storm from the beginning. One consequence of it is that any crucial system thread that receives an unrecoverable exception must suicide the process rather than die quietly. \n\nFor the connection retry problem, it's a tricky situation since it may not be able to connect because the other worker is still getting set up. So the retry policy should be somehow related to the launch timeouts for worker processes specified in the configuration. Not being able to connect after the launch timeout + a certain number of attempts + a buffer period would certainly qualify as a weird state, so the process should suicide in that case. _Suiciding and restarting gets the worker back to a known state_. \n\nSo in this case, I am heavily in favor of Option 2. I don't care about killing the other tasks in the worker because this is a rare situation. It is infinitely more important to get the worker back to a known, robust state than risk leaving it in a weird state permanently.\n\nI would like to see these issues addressed as part of this patch.\n\n@miguno Thanks for the explanation on this patch's relation to backpressure – we'll handle that in a future patch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74914806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467376","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467376","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467376,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczNzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T18:06:52Z","updated_at":"2025-01-24T12:54:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user nathanmarz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74914806\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74914806</a></p>\n\n<p>    Nimbus only knows a worker is having trouble when it stops sending heartbeats. If a worker gets into a bad state, the worst thing to do is have it continue trying to limp along in that bad state. It should instead suicide as quickly as possible. It seems counterintuitive, but this aggressive suiciding behavior actually makes things more robust as it prevents processes from getting into weird, potentially undefined states. This has been a crucial design principle in Storm from the beginning. One consequence of it is that any crucial system thread that receives an unrecoverable exception must suicide the process rather than die quietly. </p>\n\n<p>    For the connection retry problem, it's a tricky situation since it may not be able to connect because the other worker is still getting set up. So the retry policy should be somehow related to the launch timeouts for worker processes specified in the configuration. Not being able to connect after the launch timeout + a certain number of attempts + a buffer period would certainly qualify as a weird state, so the process should suicide in that case. <b>Suiciding and restarting gets the worker back to a known state</b>. </p>\n\n<p>    So in this case, I am heavily in favor of Option 2. I don't care about killing the other tasks in the worker because this is a rare situation. It is infinitely more important to get the worker back to a known, robust state than risk leaving it in a weird state permanently.</p>\n\n<p>    I would like to see these issues addressed as part of this patch.</p>\n\n<p>    @miguno Thanks for the explanation on this patch's relation to backpressure – we'll handle that in a future patch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74917930","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74917930","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74917930,"node_id":"MDEyOklzc3VlQ29tbWVudDc0OTE3OTMw","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T18:23:31Z","updated_at":"2015-02-18T18:23:31Z","author_association":"CONTRIBUTOR","body":"@nathanmarz I'd like to move the conversation over to https://issues.apache.org/jira/browse/STORM-677.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74917930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467380","html_url":"https://github.com/apache/storm/issues/4171#issuecomment-2612467380","issue_url":"https://api.github.com/repos/apache/storm/issues/4171","id":2612467380,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NjczODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T18:23:32Z","updated_at":"2025-01-24T12:54:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/429#issuecomment-74917930\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429#issuecomment-74917930</a></p>\n\n<p>    @nathanmarz I'd like to move the conversation over to <a href=\"https://issues.apache.org/jira/browse/STORM-677\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-677</a>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612467380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612527019","html_url":"https://github.com/apache/storm/issues/4518#issuecomment-2612527019","issue_url":"https://api.github.com/repos/apache/storm/issues/4518","id":2612527019,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjcwMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T18:52:35Z","updated_at":"2025-01-24T13:25:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>on <a href=\"https://github.com/apache/storm/pull/429\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/429</a> <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=marz\" class=\"user-hover\" rel=\"marz\">Nathan Marz</a> said</p>\n\n<blockquote><p>Nimbus only knows a worker is having trouble when it stops sending heartbeats. If a worker gets into a bad state, the worst thing to do is have it continue trying to limp along in that bad state. It should instead suicide as quickly as possible. It seems counterintuitive, but this aggressive suiciding behavior actually makes things more robust as it prevents processes from getting into weird, potentially undefined states. This has been a crucial design principle in Storm from the beginning. One consequence of it is that any crucial system thread that receives an unrecoverable exception must suicide the process rather than die quietly.</p></blockquote>\n\n<blockquote><p>For the connection retry problem, it's a tricky situation since it may not be able to connect because the other worker is still getting set up. So the retry policy should be somehow related to the launch timeouts for worker processes specified in the configuration. Not being able to connect after the launch timeout + a certain number of attempts + a buffer period would certainly qualify as a weird state, so the process should suicide in that case. Suiciding and restarting gets the worker back to a known state.</p></blockquote>\n\n<blockquote><p>So in this case, I am heavily in favor of Option 2. I don't care about killing the other tasks in the worker because this is a rare situation. It is infinitely more important to get the worker back to a known, robust state than risk leaving it in a weird state permanently.</p></blockquote>\n\n<blockquote><p>I would like to see these issues addressed as part of this patch.</p></blockquote>\n\n<p>I see your point and think option 2 is preferable long term as it sends a signal to nimbus that something is potentially wrong so it can take appropriate steps.  Ultimately all the options end up looking very similar. The connection is not being established so we do some things in between and try to establish the connection again.  The issue for me is the things that we do in between giving up on making a connection and trying to establish the connection again.  If that itself can cause other workers to give up on a connection it could result in the topology never reaching a stable state.  I don't see this happening in practice without the system being over loaded, which at least for us is more common then I like.     </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612527019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/74927415","html_url":"https://github.com/apache/storm/pull/429#issuecomment-74927415","issue_url":"https://api.github.com/repos/apache/storm/issues/429","id":74927415,"node_id":"MDEyOklzc3VlQ29tbWVudDc0OTI3NDE1","user":{"login":"miguno","id":294849,"node_id":"MDQ6VXNlcjI5NDg0OQ==","avatar_url":"https://avatars.githubusercontent.com/u/294849?v=4","gravatar_id":"","url":"https://api.github.com/users/miguno","html_url":"https://github.com/miguno","followers_url":"https://api.github.com/users/miguno/followers","following_url":"https://api.github.com/users/miguno/following{/other_user}","gists_url":"https://api.github.com/users/miguno/gists{/gist_id}","starred_url":"https://api.github.com/users/miguno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miguno/subscriptions","organizations_url":"https://api.github.com/users/miguno/orgs","repos_url":"https://api.github.com/users/miguno/repos","events_url":"https://api.github.com/users/miguno/events{/privacy}","received_events_url":"https://api.github.com/users/miguno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-02-18T19:13:00Z","updated_at":"2015-02-18T19:13:00Z","author_association":"CONTRIBUTOR","body":"@nathanmarz Thanks for the detailed feedback on the max-retries issue.  As Bobby suggested, would you mind if we decouple the work on max-retries (tracked at STORM-677) from this pull request / STORM-329?  The max-retries issue has been a problem in Storm for a while, since before this pull request.  Decoupling would also help us with backtracking any future issues to either ticket.  Right now, I feel there's almost too much meat in this pull request already (as we kinda covered STORM-329, STORM-404, and STORM-510 in one big swing).\n\nWould that be ok for you?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/74927415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]